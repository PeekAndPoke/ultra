{"version":3,"file":"fomanticui.js","mappings":"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W7SrB1F,EV4Md,ED8GmC,KWzTpD,KAAY,GAAF,GAAc,KAAxB,EAA4B,GAAE,MV2MN,O9EpI7B,E+CmaqC,WyCxe/B,QxFmFP,IACC,SwFxFK,EAIa,QAAD,eANuB,eACb,eADtC,eAkEyD,YAAZ,MAAa,eA8CD,YAAZ,MAAa,eAuGC,YAAb,MAAc,eAKH,YAAZ,MAAa,eACC,YAAb,MAAc,wBA9JqD,OACF,OACD,OAC/E,OAAY,IACuE,OACkB,OACf,OACI,OACI,OACV,OACQ,OACE,OACT,OACE,OACF,OACQ,OACZ,OACwB,OACZ,SACR,OACA,OACY,OACE,OACF,OACZ,OACI,OACF,OACe,OACC,OACV,OACI,OACJ,OACZ,OACI,OACM,OACI,OACH,OACN,OACM,OACI,OACH,OACN,OACH,OACe,OACC,OACV,OACI,OACH,OACL,OACtF,OAAY,IACuE,OACI,OACP,OACL,OACI,OACJ,OACc,OACV,OACY,OACA,OACP,OACe,OACtB,OACM,SACJ,OACF,OACM,OACQ,OACZ,OACE,OACA,OACN,OACM,OACS,SACF,OACH,OACF,OACE,OACF,OACF,OACc,OACN,OACA,OACJ,OACM,OACI,OAChB,OACM,OACI,OACA,OACU,OACI,OACN,OACX,OACP,OACW,OACP,OACU,OACJ,OACF,OACH,OACS,OACR,OACc,OACR,OACC,OACF,OACC,OACF,SACA,OACD,OACC,OACD,OACL,OACE,OACP,OACH,OACI,OACG,OACW,OACJ,OACG,SACX,OACY,OACJ,OACP,SACA,OACmB,OACR,OACF,OACC,OACF,OACC,OACV,OACJ,OACQ,OACC,OACO,OACK,OACF,OACC,OACF,OACI,OACF,OACC,OACF,OACtB,OACa,OACT,OACK,OACU,OACJ,OACxF,OAAY,IAC8E,OACV,OACE,OACI,OACvF,OAAY,IACX,OAAY,IACuE,OACG,OACE,OACM,OACV,OACM,OACN,OACA,OACA,OACJ,OACE,OACQ,OACV,SACP,6BCzLtF,iBADf,+BADe,aAAqB,KAAxC,sBC9BmB,iBADf,+BADe,aAAqB,KAAxC,sBCVmB,iBADf,+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+BmC,OzBjE9B,QAAS,IACpB,GAAU,EqKkCA,IAAE,WAAS,SAAX,YrKjCZ,QAAS,IAAS,EqKmCd,qBKnBaA,GACTolD,GAAU,2BAEV,KAAG,MAAM,UAAQ,GAKrB,sBCKaplD,GACTolD,GAAU,kBAEV,KAAG,MAAM,UAAQ,KA2BrB,sBCpCaplD,GACTolD,GAAU,qBAEV,KAAG,MAAM,UAAQ,MA2BrB,sBCrCaplD,GACTolD,GAAU,kBAEV,KAAG,MAAM,UAAQ,IAKrB,sBCCaplD,GACTolD,GAAU,kBAEV,KAAG,MAAM,UAAQ,MA6BrB,sBC7BaplD,GACTolD,GAAU,uBAEV,KAAG,MAAM,UAAQ,MAwBrB,2CnEjCiB1zD,SAASi0D,eAAe,OAAzCC,EAAAA,aAAAA,YAAiB,EAAjBA,OAEA,IAAiBA,EAAjB,EAA6B,IAI7B,KAAO,KACX,kgBchBkB,WAAA3jB,EACF,eACA,gBACA,UACA,UACA,iBACA,UACA,SACA,WACA,UACA,YACA,UACA,QACA,YACA,UACA,aACA,UACA,UACA,aACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,UACA,SACA,WACA,gBACA,SACA,yBACA,SACA,WACA,eACA,QACA,UACA,iBACA,WACA,WACA,SACA,aACA,iBACA,2BACA,OACA,QACA,QACA,mBACA,gBACA,WACA,UACA,oBACA,QACA,eACA,aACA,eACA,UACA,OACA,SACA,iBACA,UACA,WACA,WACA,qBACA,UACA,QACA,cACA,UACA,oBACA,UACA,UACA,WACA,iBACA,mBACA,gBACA,OACA,UACA,SACA,gBACA,mBACA,qBACA,QACA,SACA,UACA,UACA,QACA,YACA,SACA,YACA,UACA,aACA,OACA,YACA,SACA,gBACA,SACA,QACA,eACA,WACA,YACA,UACA,UACA,QACA,yBACA,YACA,OACA,OACA,UACA,SACA,QACA,UACA,YACA,QACA,SACA,aACA,QACA,WACA,SACA,aACA,OACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,QACA,YACA,aACA,SACA,WACA,WACA,OACA,QACA,mBACA,aAC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,uBACA,iBACA,kBACA,mBACA,mBACA,mBACA,sBACA,mBACA,sBACA,qBACA,oBACA,oBACA,kBACA,oBACA,qBACA,kBACA,qBACA,oBACA,oBACA,iBACA,kBACA,iBACA,qBACA,+BACA,uBACA,0BACA,6BACA,4BACA,wBACA,4BACA,0BACA,uBACA,iBACA,kBACA,kBACA,gBACA,iBACA,8BACA,8BACA,kBACA,qBACA,iBACA,eACA,sBACA,qBACA,wBACA,iBACA,kBACA,iBACA,kBACA,qBACA,oBACA,mBACA,kBACA,oBACA,iBACA,qBACA,sBACA,mBACA,kBACA,oBACA,qBACA,mBACA,qBACA,iBACA,mBACA,kBACA,eACA,kBACA,8BACA,8BACA,iCACA,eACA,kBACA,iBACA,sBACA,qBACA,kBACA,yBACA,wBACA,qBACA,sBACA,sBACA,uBACA,sBACA,uBACA,iBACA,iBACA,mBACA,qBACA,kBACA,uBACA,mBACA,mBACA,wBACA,oBACA,uBACA,mBACA,gBACA,wBACA,mBACA,mBACA,mBACA,oBACA,qBACA,wBACA,sBACA,gBACA,sBACA,kBACA,kBACA,kBACA,oBACA,iBACA,qBACA,mBACA,kBACA,sBACA,mBACA,mBACA,4BACA,uBACA,oBACA,qBACA,oBACA,qBACA,wBACA,mBACA,mBACA,oBACA,sBACA,YACA,cACA,aACA,cACA,aACA,cACA,gBACA,iBACA,cACA,eACA,eACA,YACA,eACA,eACA,cACA,eACA,cACA,gBACA,aACA,kBACA,iBACA,iBACA,eACA,aACA,gBACA,aACA,YACA,aACA,gBACA,iBACA,YACA,cACA,cACA,mBACA,iBACA,YACA,eACA,gBACA,eACA,gBACA,iBACA,aACA,iBACA,eACA,eACA,iBACA,gBACA,gBACA,eACA,mBACA,oBACA,eACA,cACA,aACA,aACA,eACA,gBACA,cACA,cACA,eACA,oBACA,mBACA,YACA,YACA,kBACA,iBACA,iBACA,aACA,gBACA,iBACA,eACA,cACA,cACA,gBACA,iBACA,aACA,gBACA,iBACA,qBACA,cACA,gBACA,eACA,cACA,gBACA,cACA,eACA,aACA,aACA,qBACA,mBACA,kBACA,cACA,gBACA,iBACA,mBACA,eACA,cACA,qBACA,eACA,kBACA,mBACA,kBACA,sBACA,kBACA,iBACA,qBACA,mBACA,qBACA,yBACA,qBACA,mBACA,gBACA,qBACA,qBACA,wBACA,qBACA,mBACA,mBACA,kBACA,mBACA,gBACA,qBACA,sBACA,sBACA,gBACA,kBACA,kBACA,uBACA,kBACA,mBACA,qBACA,qBACA,iBACA,uBACA,cACA,mBACA,cACA,cACA,MACA,UACA,kBACA,iBACA,iBACA,kBACA,sBACA,iBACA,sBACA,eACA,oBACA,qBACA,OACA,MACA,UACA,QACA,OACA,UACA,YACA,YACA,aACA,aACA,aACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,aACA,aACA,aACA,aACA,aACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,gBACA,UACA,gBACA,WACA,mBACA,iBACA,mBACA,gBACA,iBACA,kBACA,gBACA,oBACA,kBACA,mBACA,kBACA,kBACA,kBACA,oBACA,gBACA,mBACA,kBACA,kBACA,qBACA,kBACA,gBACA,qBACA,cACA,eACA,gBACA,mBACA,gBACA,oBACA,gBACA,eACA,mBACA,eACA,gBACA,gBACA,iBACA,cACA,eACA,mBACA,gBACA,cACA,cACA,gBACA,oBACA,kBACA,iBACA,oBACA,gBACA,eACA,mBACA,iBACA,gBACA,kBACA,mBACA,kBACA,eACA,iBACA,gBACA,iBACA,mBACA,gBACA,gBACA,oBACA,gBACA,KACA,UACA,MACA,OACA,YACA,WACA,UACA,sBACA,gBACA,mBACA,eACA,gBACA,mBACA,cACA,kBACA,mBACA,iBACA,iBACA,OACA,SACA,UACA,QACA,YACA,QACA,MACA,UACA,mBACA,iBACA,iBACA,KACA,UACA,SACA,MACA,UACA,eACA,mBACA,uBACA,kBACA,gBACA,iBACA,gBACA,oBACA,kBACA,eACA,mBACA,oBACA,kBACA,sBACA,eACA,mBACA,mBACA,qBACA,iBACA,oBACA,iBACA,oBACA,iBACA,gBACA,eACA,kBACA,iBACA,oBACA,gBACA,mBACA,kBACA,iBACA,uBACA,oBACA,iBACA,gBACA,iBACA,iBACA,oBACA,eACA,eACA,iBACA,cACA,SACA,WACA,MACA,YACA,SACA,MACA,YACA,cACA,aACA,aACA,kBACA,aACA,YACA,oBACA,cACA,cACA,aACA,WACA,MACA,YACA,OACA,MACA,OACA,KA1lBR,oDADsC76F,GAF1C,KAE0C,YAApB,aCsHdu6F,EAA0BJ,GACtB,OAAwB,SAAmBA,EAC/C,sBAKiD,gBAAR,MAAQ,QAAgB,MAKd,gBAAT,MAAS,QAAgB,KAtHvE,oDAyLQ5nD,EAAWlrD,GAAyC,OAAhByzG,GAAXh4G,EAAS,GAAWuE,EAAG,OAAG,aAAnDkrD,EAAWlrD,EAAAA,uBAAS,iBA7L5BmpG,EACAhb,GAJJ,KAGI,aACA,aA4H0C,WAAT,WAAS,IAAU,WA9H9B,sBCKJ,eAAAqkB,GAAA,KAAqC,MAArC,KAA8D,MALhF,aAHA3uG,EACAkiD,OAJJ,kBAGI,aACA,aA8D0B,cAlE9B,EAkEmC,gBAAW,cAAT,YAAK,SAAK,GAhEhB,aCgD3BmF,EAA0B7xC,GAC1B,gBAlDA6xC,GAEI,OAAO,cAAe,cAC1B,CA+CyB,UAfzBA,EAAoB7xC,GACpB,gBAtBA6xC,EAAkB7xC,GAClB,OAAO,KAAgBA,EAAQ,MACnC,CAoBmB,CAAR,QAAiBA,EAC5B,CAaW,GAASA,GACpB,sBCnDuB,WAAAq6F,GAAO,MAEA,q4BAYM,WAAA3iE,GAAN,03BAAY,MAhB1C,aCyOI4iE,EACA9oG,OAFJ,EACI,aACA,aAOc,cATlB,EASuB,gBAAgB,OAAdsiF,GAAO,SAAI,SAAI,GATf,aAzNrBwmB,EACA9oG,GACc,OAAd,IAAA+oG,GAAOD,EAAI9oG,EAAE,eCtBjB,0BCKwBgpG,+pBlBDU,OAAJ,UAAG,uBAgGuB,OAAlC,IAAAC,GAAuBx5B,IAAU,sBAyCS,OAAP4Q,EAAT,WAAe,uBAUW,OAAjC,IAAAqnB,GAAyBrnB,EAAT,YAAgB,qBAKhDr1E,SAEV,cAASA,GAAhB,wBAAO,EAAP,GACJ,qBAKqBA,EAAkB/Y,OAAvC,EAAqBi3G,EAAkBthC,IACnC,IAAQ,YADZ,EACsB,KADDshC,EACC,EADiBthC,EACjB,mBACd,UAAS,IAAO,EACpB,OA4D4uH,OAAS,GA5DrvH,IACJ,qBAqBiB58D,EAAkBm+F,GAE/B,SAAO,IAAQ,YAFnB,EAE6B,KAFZD,EAEY,EAFME,EAEN,mBAEfn3G,EAAY,MAAI,GAClB,kBAAQ,IACJ,MAAI,EtapGd,KACC,SsasGaA,EACX,QACL,QAXJ,EAAiBi3G,EAAkBE,CAYnC,4BA3MJ,uQCcgD,mDAmCievoD,oBAnCje,M5ZmC4C,M4Z9BxF,qBASmBwoD,EAAeC,GAC9B,OAAO,SACoB,SAAUD,EAAmB,GAC/B,SAAUC,EAAiB,GAExD,qBAEmBC,EAAuBC,GACtC,OAAOz4G,GAAO,EACH,WAAK,IAAOw4G,EAAU,YACxB,WAAG,IAAOC,EAAQ,YAE/B,qBCZkBl7E,GACV,OAAO,IAAAm7E,GAAWn7E,EACtB,uBAuDI,OAAO,IAAA85E,GAAU,WAAM,KAC3B,6BChCiC,gDAcjBvnD,oBAdiB,M9ZLmD,M8ZOxF,6BAIyB,iDAQLA,oBARK,M9ZX+D,M8ZW/B,qBAsBlCrrD,GACnB,OAAO,WAAY,IAAUA,EACjC,mBAxDwBA,qEA5B5B,4HAAAd,EAAAA,KAAAA,MAAAA,WAAA,wOCQI,iBAA0B,uBAC1B,iBAA2B,uBAC3B,iBAAyB,uBAgBzB,iBAAsB,uBACtB,iBAAwB,uBACxB,iBAAwB,uBACxB,iBAA6B,4BA7BjC,sHAAAA,EAAAA,KAAAA,MAAA,yPCUqBuzG,OAEb,EAA2BluG,GAAM,KAAAkuG,GAA5B3J,EAAAA,EAAAA,KAAUhb,EAAAA,EAAAA,KAEf,OAAOgb,EAAS,IAAUhb,EAC9B,qBAEuB2kB,OAEnB,EAA2BluG,GAAM,KAAAkuG,GAA5B3J,EAAAA,EAAAA,KAAUhb,EAAAA,EAAAA,KAEf,OAAOgb,EAAS,IAAOhb,EAC3B,qBCOwB7qF,GAEnB,OAF8C,IAAA2vG,GAC3B,QAAsB3vG,GAC1C,qBAYUwvG,GAAwE,OAAvB,SAAaA,EAAS,qBAoC9DzyG,GACnB,OAAO,WAAM,GAAUA,EAAM,MACjC,mBAnDyCA,qEAyDrC,MAAQ,aAAY,WAAc,GACtC,qBAYoB8tF,GAChB,OAAO,UQnFXjjC,ERmF6BijC,EQnFc,QAAG,cAA9CjjC,CRoFA,qBAKoBijC,GAChB,OAAuB,SACnB,IAAA6kB,GAAsB5xE,GAAN,WAAsB+sD,EAAS,QAC/CA,EAER,uBAcI,OAAO,aAAgB,MAAK,KAChC,uBAMI,OAAO,WAAM,IACjB,qBAkESrxF,EAAY2D,EAAoB0tF,GACjC,OAAS,IAATrxF,EACO1B,KAGJ,IAAA63G,GACgBrvG,GAAXxI,KAAK,MACD0B,EACD2D,EACI0tF,GAGvB,qBAWSrxF,EAAY2D,EAAoB0tF,GACrC,OAAO,SAAarxF,EAAc2D,EAAiB0tF,EAAS,MAChE,qBAQSomB,EAA0BpmB,OAE/Bh4B,EAASg4B,EAAS,MAElB,OAAO,SAAKomB,EAAO,MAAZ,IAAgC,KAAMp+C,GACxC,IAAKo+C,EAAO,MAAZ,IAAiC,KAAOp+C,GACxC,IAAKo+C,EAAO,MAAZ,IAA+B,KAAKp+C,GACpC,IAAKo+C,EAAO,MAAZ,IAAgC,KAAMp+C,GACtC,IAAKo+C,EAAO,MAAZ,IAAkC,KAAQp+C,GAC1C,IAAKo+C,EAAO,MAAZ,IAAkC,KAAQp+C,GAC1C,IAAKo+C,EAAO,MAAZ,IAAuC,KAAap+C,EAC7D,qBAgEmB91D,GACf,OAAOjF,KAAK,MAAL,GAAaiF,EAAM,MAC9B,4BAtTJ,8LC2CegkB,EAAW7R,EAAYgkB,GAM7B,OANsD,IAAA28E,GAC3C,GACG9uF,EACO7R,EACDgkB,GAErB,qBAKOnS,EAAW7R,EAAcgkB,GAI/B,OAJwD,SAC9CnS,EACO,GAAN7R,GACFgkB,EACV,qBAQUs8E,SACC,MACHI,GAAc,EAAAJ,kCAEd,MAAM,GAA0B,qCAAmCA,EAAS,IADvEnuG,WAFT,OAAO,CAKX,qBAOamuG,SACF,MACHI,GAAc,EAAAJ,+CAEd,KAHJ,OAAO,CAKX,sBAY4B,OAAV,WAAM,IAAG,sBAGe,OAAjB,WAAM,IAAU,sBAGT,OAAX,WAAM,IAAI,uBAGE,OAAhB,WAAM,IAAS,qBAgBbzyG,GACnB,OAAO,WAAM,GAAUA,EAAM,MACjC,mBA/FmCA,qEAqG/B,MAAQ,eAAc,WAAc,GACxC,qBAOWm0G,OACPC,EAAY,SAAY,UAAc,UAAmB,YAEzD,OAAa,GAANA,EAAaD,EACxB,uBAMI,OAAO,aAAsB,MAAK,KACtC,uBAyCI,OAAO,SAAU,UAAc,UAAa,EAChD,uBAaI,OAAO,WAAiB,IAAW,GAAG,IAAU,EACpD,qBAiCiBrmB,GACb,OAAO,SAAaA,EAAS,MACjC,qBAKiBA,GACb,OAAiD,IAA1C8kB,GAAgByB,GAAN,WAAqBvmB,IAAW,IAAOA,EAC5D,qBAKW3xE,GACP,OAAuB,SAAUphB,KAAaohB,EAClD,qBAKWA,EAAmB2xE,GAC1B,OAAO,SAAaA,GAAU,IAAO3xE,EACzC,qBAKWA,EAAmB2xE,GAC1B,OAAO,SAAO3xE,EAAM2xE,EAAS,MACjC,qBA0CkBn3D,GACd,OAAO,IAAA27E,GAA8Bv3G,KAAW47B,EACpD,qBA2BSv2B,GACL,OAAO,IAAA0yG,GACW,GAAN,WAAW,EAAG1yG,GAE9B,qBAcSiD,EAAajD,GAClB,OAAO,IAAA0yG,GACW,GAAN,WAAWzvG,EAAQjD,GAEnC,qBAiCS8zG,GACL,OAAO,SAAUA,EAAO,OACnB,IAAWA,EAAO,OAClB,IAASA,EAAO,MACzB,qBAaajyG,GACT,OAAO,SAAKA,EAAL,IAAwB,KACnC,qBAKcA,GACV,OAAO,YAAUA,EACrB,qBAmBe4O,GACX,OAAO,SAAKA,EAAL,IAA0B,KACrC,qBAYcyB,GACV,OAAO,SAAKA,EAAL,IAAyB,KACpC,4BAvcJ,sMCwDsC,iDAcP+4C,oBAdO,MnaPsD,MmasCxF,6BAEyB,iDAnBEA,oBAmBF,MnaxC+D,MmagDxF,6BAE2B,mDA7BAA,oBA6BA,MnalD6D,MmaoDxF,uBAUsC,OAAT,eAAO,YAAP,CAAQ,uBAEG,OAAP,UAAM,qBAchBrrD,GACnB,OAAO,WAAG,IAAU,WAAK,IAAKA,GAClC,mBArGKA,8DAuGgB8tF,GAIpB,OAJ4C,IAAAwmB,GAC9BxmB,EACJ,WACF,WAAG,IAAU,GACtB,4BAvIJ,sHAAA5uF,EAAAA,KAAAA,MAAAA,WAAA,sOCsBY8kB,EACA7R,EACAgkB,EACAC,EACA8I,EACAtJ,EACA2+E,GAWH,OAVoB,IAAA5B,GACjB,GACW3uF,EACO7R,EACDgkB,EACNC,EACE8I,EACAtJ,EACI,EAAA2+E,EAAc,MAEnC,qBAGIvwF,EACA7R,EACAgkB,EACAC,EACA8I,EACAtJ,EACA2+E,GASH,OARoB,SACVvwF,EACO,GAAN7R,GACFgkB,EACCC,EACE8I,EACAtJ,EACK2+E,EAClB,qBAfIvwF,EACA7R,EACAgkB,EACAC,EACA8I,EACAtJ,EACA2+E,EAAAA,kBAHY,YACE,YACA,YACK,qFAYhBr4F,EAAmBC,GAQzB,OAR+D,SACrDD,EAAK,KACJA,EAAK,KACPA,EAAK,MACJC,EAAK,KACHA,EAAK,KACLA,EAAK,KACAA,EAAK,MACvB,qBAQUs2F,SACC,MACH,KAAcA,kCAEd,MAAM,GAA0B,yCAAuCA,EAAS,IAD3EnuG,WAFT,OAAO,CAKX,qBAOamuG,SACF,MACH,KAAcA,+CAEd,KAHJ,OAAO,CAKX,sBAgB4B,OAAV,WAAM,IAAG,sBAGe,OAAjB,WAAM,IAAU,sBAGT,OAAX,WAAM,IAAI,sBAGS,OAAhB,WAAM,IAAS,sBAGX,OAAV,WAAM,IAAG,sBAGK,OAAZ,WAAM,IAAK,sBAGC,OAAZ,WAAM,IAAK,uBAGsB,OAA5B,WAAM,KAAa,IAAS,CAAD,qBASjCzyG,GACnB,OAAO,WAAM,GAAUA,EAAM,MACjC,mBAhHFA,qEAmHM,MAAQ,mBAAkB,WAAc,GAC5C,uBAEiD,OAArB,WAAQ,KAAY,uBAEG,OAAvB,IAAA8yG,GAAY,WAAM,KAAI,uBAOjD,OALuC,SAC7B,UACE,UACA,UACK,WAClB,qBAEchlB,GAEb,OAF8C,IAAA8kB,GAC7B/xE,GAAN,WAAgBitD,GAC5B,qBAEcA,GAA8D,OAA3B,SAAUA,EAAS,MAAO,qBAEhEA,GACP,OAAO,SAAUA,GAAU,IAAOA,EACtC,qBAEWA,GACP,OAAO,SAAOA,EAAS,MAC3B,uBAEmD,OAApB,aAAgB,KAAG,4BA9KtD,8LCkCkBzgC,OACN5c,EAAkBC,GAAN2c,EAAY,QAMpB5c,EAAM,IAAO,GAAKA,EAAM,IAAO,IAC/B,YAGgB,EAAA+jE,GAAT/jE,EAAA,EAAM,IAAN,EAAwB,aAAe,GAAvC,MAA0C,GAA1C,EhbgFmB,KgbhFnB,QAAkD,QAAlD,QAAXra,EAAAA,EAEsB,EAAAo+E,GAAT/jE,EAAA,EAAM,IAAN,EAAwB,aAAe,GAAvC,MAA0C,GAA1C,Ehb8EiB,Kgb9EjB,QAAkD,QAAlD,QAAbvR,EAAAA,EAEwCu1E,EAAqBC,GAANjkE,EAAgB,GACnE,aAAQkkE,GAAM,EAAG,cAEbjkE,EAAqBA,GAAT+jE,EAAe,OAEJ,EAAAD,GAAT,IAAM,IAAN,EAAwB,aAAe,GAAvC,MAA0C,GAA1C,EhbuEQ,KgbvER,QAAkD,QAAlD,QAAd/yG,EAAAA,EAEmBmzG,EAAuBF,GAAN,EAAgB,GAChD,aAAQ,aAEsB,EAAAF,GAAfK,GAAXD,EAAkB,EAAG,SAArB,EAAyC,aAAe,GAAxD,MAA2D,IAA3D,EhbkEc,KgblEd,QACO,QADP,QAKRD,GAAMlzG,EARNwB,OAPR,IAAKxB,EAAAA,EAAAA,KAAcwB,EAAAA,EAAAA,KAmBnB,OAAO,SACImzB,EACE8I,EACA,EACK,EAEtB,qBAKO9I,EAAW8I,EAAatJ,EAAiB2+E,SAEpB,IAAC,IAAAn+E,EAAO,IAAK,IAAK,EAAA8I,EAAS,IAA1B,GAA+BtJ,EAAhC,MAA0C,e1akqCjE,GAAW,G0alqC+D2+E,IAD3E,OAAO,SACiB,EAE5B,qBAJOn+E,EAAW8I,EAAatJ,EAAiB2+E,EAAAA,kBAAH,YAAsB,yEAShDO,GACf,OAAO,IAAAC,GACYD,EAAA,GAAoB,iBAE3C,sBA4BI,OAAS,cAAe,iBAAhB,GAAkC,gBAAiB,IAC/D,sBAKI,OAAS,cAAe,gBAAhB,GAAmC,eAAmB,IAClE,sBAKI,OAAS,cAAe,eAAhB,GAAqC,eAAmB,IACpE,uBAKI,OAAQ,cAAe,eAAmB,IAC9C,qBAKmB90G,GACnB,OAAO,WAAa,EAAUA,EAAM,MACxC,mBApHWA,qEA0HP,MAAQ,eAAc,WAAc,GACxC,uBAMI,OAAO,SAAO,eAClB,qBAOWwX,OACP48F,EAAY,SAAY,UAAe,UAAiB,UAAsB,YAE9E,OAAa,GAANA,EAAa58F,EACxB,4BA3KJ,6LCYec,GAGN,MAFG,MADmCA,EAC5B,WACC,IAAA08F,GAAgB18F,EAC5B,uBAGkD,OAAtB,IAAA08F,GAAgB,MAAK,uBAwlBR,OAAN,OAAG,WAAE,4BA1mBhD,iPCqCelM,EAA2Bhb,GAC9B,OAAO,IAAAmnB,GAA2BnM,EAAqBhb,EAC3D,qBA+DU2kB,SACC,MACH,KAAcA,kCAEd,MAAM,GAA0B,yCAAuCA,EAAS,IAD3EnuG,WAFT,OAAO,CAKX,qBASamuG,SACF,MACH,KAAcA,+CAEd,KAHJ,OAAO,CAKX,sBAoB+B,OAAb,WAAS,IAAG,sBAGe,OAApB,WAAS,IAAU,sBAGT,OAAd,WAAS,IAAI,sBAGS,OAAnB,WAAS,IAAS,sBAGX,OAAb,WAAS,IAAG,sBAGK,OAAf,WAAS,IAAK,sBAGC,OAAf,WAAS,IAAK,uBAGW,OAApB,WAAS,KAAU,qBAWzBzyG,GACnB,OAAO,WAAQ,IAAUA,EAAM,MACnC,mBAtJmCA,qEA4J/B,MAAQ,mBAAkB,WAAc,GAC5C,qBAOWm0G,OACPe,EAAS,cAA2BC,GAAT,WAAwB,aAEnDf,EAAqB,SAAec,GAEpC,OAAa19F,GAAN48F,EAAaD,EACxB,6BASmBiB,EAAW,WAAS,MAA1B,cACL,UAAO,MAAO,oBACL,IAAEA,EAAI,IAQnB,OAJI,UAAO,KAAS,IAAE,UACL,GAAL,UAAS,IAGL,IAAe,GAAZ,WAAkB,IAAc,GAAX,WAAiB,IACzC,GAAL,WAAW,IAAU,GAAP,WAAa,IAAU,GAAP,WAAa,IAClC,GAAZ,WAAgB,GAChBt/C,CACZ,uBAK6C,OAAP,UAAM,sBAKM,OAAjB,WAAS,KAAO,sBAKC,OAAjB,WAAS,KAAO,sBAKA,OAAR,UAAO,uBAKO,OAA3B,WAAY,KAAc,uBAiDrD,OAFsC,SACR,SAAG,UAAM,UAAO,UAAY,WAC3D,qBAgDW35C,GACP,OAAuB,SACZ,UACAA,GACT,IAAkB,WACxB,qBAiCS1f,EAAY2D,GACjB,OAAO,WAAY,IAAK3D,EAAO2D,EAAM,YAAU,IAAO,WAC1D,qBAQS8zG,GACL,OAAO,WAAY,IAAKA,EAAQ,YAAU,IAAO,WACrD,qBAwCmBl0G,GACf,OAAO,eAAcA,EAAM,MAC/B,0BAlbJ,uKAAAd,EAAAA,KAAAA,MAAAA,WAAA,8OC0E8B,6CAXsBmsD,4BAWtB,MxazB8D,OwayB9D,IAAiB,qBAoBXrrD,GAC5B,OAAO,WAAG,IAAU,WAAK,IAAKA,GAClC,mBAtEoBA,uEA1BxB,0HAAAd,EAAAA,KAAAA,MAAAA,WAAA,sOE2BwBm2G,GAA0B,OAAZ,SAAMA,EAAK,qBAEnCA,OAAoEC,MAArD,KAAID,GAA6D,OAAtDvlB,GAAa,EAAY,IAAzB,SAA0CwlB,EAAA,iBAAAC,UAJxD1pC,KAAtB2pC,KAAkC,QAAY3pC,EAAM,QAAY,IAA9B,OAAlC2pC,EAAsB3pC,CAIkE,+BAAC,sBC7B7F,gLAAA3sE,EAAAA,MAAAA,KAAAA,MAAAA,EAAAA,EAAAA,KAAAA,OAAA,yOCImCu2G,EAAWzjD,GAA4B,OAAPA,GAAM,uBfiLjE,OAAO,WAAa,QAAgB,MAAK,IAC7C,qBAuBqB87B,GACjB,OAAO,WAAa,IAAOA,EAC/B,qBAGqBA,GACjB,OAAO,SAAiBA,EAAS,MACrC,uDgB1MA,iBAJJ,CAKA,8BCkCQjjC,EAAcghB,EAAUzrB,SAAci+B,GAAc,GAAsC,OAA5B,KAAIxS,EAAKzrB,GAAWm6B,GzbsC/E,EybtCsF,mBCTtF1vB,GACP,OAAO6qD,mBAAmB,EAC9B,mBANW7qD,GACP,OAAO8qD,mBAAmB,EAC9B,kMCjCIC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBngG,IAAjBogG,EACH,OAAOA,EAAaj8G,QAGrB,IAAIC,EAAS67G,EAAyBE,GAAY,CAGjDh8G,QAAS,CAAC,GAOX,OAHAk8G,EAAoBF,GAAU/7G,EAAQA,EAAOD,QAAS+7G,GAG/C97G,EAAOD,OACf,QAGA+7G,EAAoBlxE,EAAIqxE,E7hBzBpB57G,EAAWkB,OAAO26G,eAAkBthG,GAASrZ,OAAO26G,eAAethG,GAASA,GAASA,EAAa,UAQtGkhG,EAAoBtqC,EAAI,SAAS9uE,EAAOo4D,GAEvC,GADU,EAAPA,IAAUp4D,EAAQ1B,KAAK0B,IAChB,EAAPo4D,EAAU,OAAOp4D,EACpB,GAAoB,iBAAVA,GAAsBA,EAAO,CACtC,GAAW,EAAPo4D,GAAap4D,EAAMy5G,WAAY,OAAOz5G,EAC1C,GAAW,GAAPo4D,GAAoC,mBAAfp4D,EAAMm/C,KAAqB,OAAOn/C,CAC5D,CACA,IAAI05G,EAAK76G,OAAOC,OAAO,MACvBs6G,EAAoBv4G,EAAE64G,GACtB,IAAI/uD,EAAM,CAAC,EACXjtD,EAAiBA,GAAkB,CAAC,KAAMC,EAAS,CAAC,GAAIA,EAAS,IAAKA,EAASA,IAC/E,IAAI,IAAI8jC,EAAiB,EAAP22B,GAAYp4D,EAAyB,iBAAXyhC,KAAyB/jC,EAAe2d,QAAQomB,GAAUA,EAAU9jC,EAAS8jC,GACxH5iC,OAAO86G,oBAAoBl4E,GAASz6B,SAAS+R,GAAS4xC,EAAI5xC,GAAO,IAAO/Y,EAAM+Y,KAI/E,OAFA4xC,EAAa,QAAI,IAAM,EACvByuD,EAAoBnqE,EAAEyqE,EAAI/uD,GACnB+uD,CACR,E8hBxBAN,EAAoBnqE,EAAI,CAAC5xC,EAASu8G,KACjC,IAAI,IAAI7gG,KAAO6gG,EACXR,EAAoBrmE,EAAE6mE,EAAY7gG,KAASqgG,EAAoBrmE,EAAE11C,EAAS0b,IAC5Ela,OAAOwkD,eAAehmD,EAAS0b,EAAK,CAAE8gG,YAAY,EAAMn2G,IAAKk2G,EAAW7gG,IAE1E,ECNDqgG,EAAoBj7E,EAAI,CAAC,EAGzBi7E,EAAoBvxG,EAAKiyG,GACjBz3D,QAAQwF,IAAIhpD,OAAOk7G,KAAKX,EAAoBj7E,GAAG67E,QAAO,CAACC,EAAUlhG,KACvEqgG,EAAoBj7E,EAAEplB,GAAK+gG,EAASG,GAC7BA,IACL,KCNJb,EAAoBc,EAAKJ,GAEZA,EAAU,MCHvBV,EAAoB7uD,EAAI,WACvB,GAA0B,iBAAf9sD,WAAyB,OAAOA,WAC3C,IACC,OAAOa,MAAQ,IAAI67G,SAAS,cAAb,EAChB,CAAE,MAAOtyG,GACR,GAAsB,iBAAXsiD,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBivD,EAAoBrmE,EAAI,CAAC76B,EAAK/H,IAAUtR,OAAOD,UAAUqa,eAAe9T,KAAK+S,EAAK/H,GjiBA9EvS,EAAa,CAAC,EACdC,EAAoB,cAExBu7G,EAAoBn/D,EAAI,CAAC+8C,EAAKzhD,EAAMx8B,EAAK+gG,KACxC,GAAGl8G,EAAWo5F,GAAQp5F,EAAWo5F,GAAKpzE,KAAK2xB,OAA3C,CACA,IAAIyU,EAAQowD,EACZ,QAAWlhG,IAARH,EAEF,IADA,IAAIorC,EAAUrE,SAASsE,qBAAqB,UACpC9tC,EAAI,EAAGA,EAAI6tC,EAAQvhD,OAAQ0T,IAAK,CACvC,IAAI6rC,EAAIgC,EAAQ7tC,GAChB,GAAG6rC,EAAEkK,aAAa,QAAU2qC,GAAO70C,EAAEkK,aAAa,iBAAmBxuD,EAAoBkb,EAAK,CAAEixC,EAAS7H,EAAG,KAAO,CACpH,CAEG6H,IACHowD,GAAa,GACbpwD,EAASlK,SAASlI,cAAc,WAEzByiE,QAAU,QACjBrwD,EAAOkuB,QAAU,IACbkhC,EAAoBkB,IACvBtwD,EAAOlN,aAAa,QAASs8D,EAAoBkB,IAElDtwD,EAAOlN,aAAa,eAAgBj/C,EAAoBkb,GAExDixC,EAAO9F,IAAM8yC,GAEdp5F,EAAWo5F,GAAO,CAACzhD,GACnB,IAAIglE,EAAmB,CAAChxD,EAAMrM,KAE7B8M,EAAOwwD,QAAUxwD,EAAOywD,OAAS,KACjC9uB,aAAazT,GACb,IAAIwiC,EAAU98G,EAAWo5F,GAIzB,UAHOp5F,EAAWo5F,GAClBhtC,EAAOtS,YAAcsS,EAAOtS,WAAWC,YAAYqS,GACnD0wD,GAAWA,EAAQ1zG,SAAS0qC,GAAQA,EAAGwL,KACpCqM,EAAM,OAAOA,EAAKrM,EAAM,EAExBg7B,EAAU31B,WAAWg4D,EAAiBj4D,KAAK,UAAMppC,EAAW,CAAEqJ,KAAM,UAAWk/C,OAAQzX,IAAW,MACtGA,EAAOwwD,QAAUD,EAAiBj4D,KAAK,KAAM0H,EAAOwwD,SACpDxwD,EAAOywD,OAASF,EAAiBj4D,KAAK,KAAM0H,EAAOywD,QACnDL,GAAct6D,SAAS0H,KAAK4E,YAAYpC,EApCkB,CAoCX,EkiBvChDovD,EAAoBv4G,EAAKxD,IACH,oBAAX2G,QAA0BA,OAAO22G,aAC1C97G,OAAOwkD,eAAehmD,EAAS2G,OAAO22G,YAAa,CAAE36G,MAAO,WAE7DnB,OAAOwkD,eAAehmD,EAAS,aAAc,CAAE2C,OAAO,GAAO,QCL9D,IAAI46G,EACAxB,EAAoB7uD,EAAEswD,gBAAeD,EAAYxB,EAAoB7uD,EAAEilC,SAAW,IACtF,IAAI1vC,EAAWs5D,EAAoB7uD,EAAEzK,SACrC,IAAK86D,GAAa96D,IACbA,EAASmE,eAAkE,WAAjDnE,EAASmE,cAAcwG,QAAQt2B,gBAC5DymF,EAAY96D,EAASmE,cAAcC,MAC/B02D,GAAW,CACf,IAAIz2D,EAAUrE,EAASsE,qBAAqB,UAC5C,GAAGD,EAAQvhD,OAEV,IADA,IAAI0T,EAAI6tC,EAAQvhD,OAAS,EAClB0T,GAAK,KAAOskG,IAAc,aAAat+D,KAAKs+D,KAAaA,EAAYz2D,EAAQ7tC,KAAK4tC,GAE3F,CAID,IAAK02D,EAAW,MAAM,IAAIx8G,MAAM,yDAChCw8G,EAAYA,EAAUlpF,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpF0nF,EAAoBlwD,EAAI0xD,YCbxB,IAAIE,EAAkB,CACrB,IAAK,GAGN1B,EAAoBj7E,EAAEsqB,EAAI,CAACqxD,EAASG,KAElC,IAAIc,EAAqB3B,EAAoBrmE,EAAE+nE,EAAiBhB,GAAWgB,EAAgBhB,QAAW5gG,EACtG,GAA0B,IAAvB6hG,EAGF,GAAGA,EACFd,EAASr2F,KAAKm3F,EAAmB,QAC3B,CAGL,IAAI9/B,EAAU,IAAI54B,SAAQ,CAACniC,EAAS86F,IAAYD,EAAqBD,EAAgBhB,GAAW,CAAC55F,EAAS86F,KAC1Gf,EAASr2F,KAAKm3F,EAAmB,GAAK9/B,GAGtC,IAAI+b,EAAMoiB,EAAoBlwD,EAAIkwD,EAAoBc,EAAEJ,GAEpDh6G,EAAQ,IAAI1B,MAgBhBg7G,EAAoBn/D,EAAE+8C,GAfF95C,IACnB,GAAGk8D,EAAoBrmE,EAAE+nE,EAAiBhB,KAEf,KAD1BiB,EAAqBD,EAAgBhB,MACRgB,EAAgBhB,QAAW5gG,GACrD6hG,GAAoB,CACtB,IAAIE,EAAY/9D,IAAyB,SAAfA,EAAM36B,KAAkB,UAAY26B,EAAM36B,MAChE24F,EAAUh+D,GAASA,EAAMukB,QAAUvkB,EAAMukB,OAAOvd,IACpDpkD,EAAM3B,QAAU,iBAAmB27G,EAAU,cAAgBmB,EAAY,KAAOC,EAAU,IAC1Fp7G,EAAM/B,KAAO,iBACb+B,EAAMyiB,KAAO04F,EACbn7G,EAAMq7G,QAAUD,EAChBH,EAAmB,GAAGj7G,EACvB,CACD,GAEwC,SAAWg6G,EAASA,EAE/D,CACD,EAcF,IAAIsB,EAAuB,CAACC,EAA4B7lE,KACvD,IAGI6jE,EAAUS,GAHTwB,EAAUC,EAAaC,GAAWhmE,EAGhBl/B,EAAI,EAC3B,GAAGglG,EAASl2E,MAAMvpB,GAAgC,IAAxBi/F,EAAgBj/F,KAAa,CACtD,IAAIw9F,KAAYkC,EACZnC,EAAoBrmE,EAAEwoE,EAAalC,KACrCD,EAAoBlxE,EAAEmxE,GAAYkC,EAAYlC,IAG7CmC,GAAsBA,EAAQpC,EAClC,CAEA,IADGiC,GAA4BA,EAA2B7lE,GACrDl/B,EAAIglG,EAAS14G,OAAQ0T,IACzBwjG,EAAUwB,EAAShlG,GAChB8iG,EAAoBrmE,EAAE+nE,EAAiBhB,IAAYgB,EAAgBhB,IACrEgB,EAAgBhB,GAAS,KAE1BgB,EAAgBhB,GAAW,CAC5B,EAIG2B,EAAqBh+G,WAAmC,uBAAIA,WAAmC,wBAAK,GACxGg+G,EAAmBz0G,QAAQo0G,EAAqB94D,KAAK,KAAM,IAC3Dm5D,EAAmB73F,KAAOw3F,EAAqB94D,KAAK,KAAMm5D,EAAmB73F,KAAK0+B,KAAKm5D,QClF7DrC,EAAoB","sources":["webpack://fomanticui/webpack/universalModuleDefinition","webpack://fomanticui/webpack/runtime/create fake namespace object","webpack://fomanticui/webpack/runtime/load script","webpack://fomanticui/../../node_modules/@js-joda/core/src/errors.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/assert.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/MathUtil.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/Enum.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/temporal/TemporalAmount.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/temporal/TemporalUnit.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/Duration.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/YearConstants.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/temporal/ChronoUnit.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/temporal/TemporalField.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/temporal/ValueRange.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/temporal/ChronoField.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/temporal/TemporalQueries.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/temporal/TemporalAccessor.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/temporal/TemporalQuery.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/DayOfWeek.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/Month.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/Period.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/format/ParsePosition.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/format/EnumMap.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/format/ResolverStyle.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/temporal/Temporal.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/chrono/ChronoLocalDate.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/StringUtil.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/ZoneId.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/zone/ZoneRules.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/ZoneOffset.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/format/DateTimeBuilder.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/format/DateTimeParseContext.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/format/DateTimePrintContext.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/temporal/IsoFields.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/format/DecimalStyle.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/format/SignStyle.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/format/TextStyle.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/format/parser/CharLiteralPrinterParser.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/format/parser/CompositePrinterParser.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/format/parser/FractionPrinterParser.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/format/parser/NumberPrinterParser.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/format/parser/OffsetIdPrinterParser.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/format/parser/PadPrinterParserDecorator.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/format/parser/SettingsParser.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/format/parser/StringLiteralPrinterParser.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/MonthDay.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/YearMonth.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/Year.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/zone/ZoneRulesProvider.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/ZoneRegion.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/format/parser/ZoneIdPrinterParser.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/format/DateTimeFormatterBuilder.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/format/StringBuilder.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/format/DateTimeFormatter.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/temporal/TemporalAdjuster.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/temporal/TemporalAdjusters.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/chrono/IsoChronology.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/OffsetTime.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/chrono/ChronoZonedDateTime.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/ZonedDateTime.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/OffsetDateTime.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/LocalDate.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/chrono/ChronoLocalDateTime.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/LocalDateTime.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/LocalTime.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/Instant.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/Clock.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/zone/ZoneOffsetTransition.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/zone/SystemDefaultZoneRules.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/zone/SystemDefaultZoneId.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/ZoneIdFactory.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/_init.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/temporal/TemporalQueriesFactory.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/convert.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/nativeJs.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/js-joda.js","webpack://fomanticui/../../node_modules/@js-joda/core/src/use.js","webpack://fomanticui/../../node_modules/@js-joda/timezone/src/MomentZoneRules.js","webpack://fomanticui/../../node_modules/@js-joda/timezone/src/MomentZoneRulesProvider.js","webpack://fomanticui/../../node_modules/@js-joda/timezone/src/unpack.js","webpack://fomanticui/../../node_modules/@js-joda/timezone/src/js-joda-timezone.js","webpack://fomanticui/../../node_modules/@js-joda/timezone/src/auto-plug.js","webpack://fomanticui/../../node_modules/@js-joda/timezone/src/plug.js","webpack://fomanticui/../../node_modules/@js-joda/timezone/src/system-default-zone.js","webpack://fomanticui/../../node_modules/preact/src/constants.js","webpack://fomanticui/../../node_modules/preact/src/util.js","webpack://fomanticui/../../node_modules/preact/src/options.js","webpack://fomanticui/../../node_modules/preact/src/create-element.js","webpack://fomanticui/../../node_modules/preact/src/component.js","webpack://fomanticui/../../node_modules/preact/src/diff/props.js","webpack://fomanticui/../../node_modules/preact/src/create-context.js","webpack://fomanticui/../../node_modules/preact/src/diff/children.js","webpack://fomanticui/../../node_modules/preact/src/diff/index.js","webpack://fomanticui/../../node_modules/preact/src/render.js","webpack://fomanticui/../../node_modules/preact/src/clone-element.js","webpack://fomanticui/../../node_modules/preact/src/diff/catch-error.js","webpack://fomanticui/../../node_modules/prismjs/prism.js","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/format/DateTimeFormatBuilder.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/common/src/generated/_Arrays.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/Standard.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/format/LocalDateFormat.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/format/LocalTimeFormat.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/Clock.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/DateTimeUnit.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/Preconditions.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/builtins/Primitives.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/DayOfWeek.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/Exceptions.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/Month.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/format/DateTimeFormat.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/Lazy.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/format/LocalDateTimeFormat.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/internal/format/Builder.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/Collections.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/internal/format/FieldFormatDirective.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/internal/format/FieldSpec.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/internal/format/FormatStructure.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collectionJs.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/common/src/generated/_Collections.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/internal/format/Predicate.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/internal/format/formatter/Formatter.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/internal/format/formatter/FormatterOperation.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/internal/format/parser/NumberConsumer.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/internal/format/parser/ParseResult.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/internal/format/parser/Parser.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/comparisons/Comparisons.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/internal/format/parser/ParserOperation.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/generated/_ComparisonsJs.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/text/Strings.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/internal/math.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/internal/util.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/commonJs/src/DayOfWeek.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/commonJs/src/Instant.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/commonJs/src/JSJodaExceptions.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/commonJs/src/LocalDate.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/commonJs/src/LocalDateTime.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/commonJs/src/LocalTime.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/commonJs/src/Month.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/commonJs/src/TimeZone.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/UtcOffset.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/commonJs/src/UtcOffset.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/commonJs/src/internal/mathJs.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/js/src/JSJodaExceptions.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/HashCode.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/common/src/generated/_Strings.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/stringJs.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/text/StringBuilder.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/FloorDivMod.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/time/Duration.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/LocalDate.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/8ebe0a8279b7bad8/core/common/src/LocalDateTime.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time-core/src/korlibs/time/DateException.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time-core/src/korlibs/time/DateTime.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time-core/src/korlibs/time/TimeSpan.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time-core/src/korlibs/time/core/internal/CoreTimeInternal.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/builtins/Library.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/math.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time/src/korlibs/time/ComputedTime.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time/src/korlibs/time/Date.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time/src/korlibs/time/DateTimeExt.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time/src/korlibs/time/DateComponents.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time/src/korlibs/time/DateComponentsFormat.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time/src/korlibs/time/DateFormat.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time/src/korlibs/time/DateTimeTz.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time/src/korlibs/time/DayOfWeek.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time/src/korlibs/time/KlockLocale.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time/src/korlibs/time/KlockLocaleContext.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time/src/korlibs/time/Month.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time/src/korlibs/time/PatternDateComponentsFormat.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time/src/korlibs/time/_Time.internal.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time/src/korlibs/time/PatternDateFormat.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time/src/korlibs/time/PatternTimeFormat.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time/src/korlibs/time/Time.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time/src/korlibs/time/TimeFormat.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time/src/korlibs/time/Timezone.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time/src/korlibs/time/TimezoneNames.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/Maps.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/common/src/generated/_Maps.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time/src/korlibs/time/TimezoneOffset.kt","webpack://fomanticui/../../../../../../../../home/runner/work/korlibs-time/korlibs-time/korlibs-time/src/korlibs/time/internal/KlockInternal.kt","webpack://fomanticui/../../../../../../../../Users/leonidkhachaturov/code/kotlin-wrappers/kotlin-css/src/commonMain/kotlin/kotlinx/css/Color.kt","webpack://fomanticui/../../../../../../../../Users/leonidkhachaturov/code/kotlin-wrappers/kotlin-css/src/commonMain/kotlin/kotlinx/css/CssBuilder.kt","webpack://fomanticui/../../../../../../../../Users/leonidkhachaturov/code/kotlin-wrappers/kotlin-css/src/commonMain/kotlin/kotlinx/css/Extensions.kt","webpack://fomanticui/../../../../../../../../Users/leonidkhachaturov/code/kotlin-wrappers/kotlin-css/src/commonMain/kotlin/kotlinx/css/Rule.kt","webpack://fomanticui/../../../../../../../../Users/leonidkhachaturov/code/kotlin-wrappers/kotlin-css/src/commonMain/kotlin/kotlinx/css/StyleDimensions.kt","webpack://fomanticui/../../../../../../../../Users/leonidkhachaturov/code/kotlin-wrappers/kotlin-css/src/commonMain/kotlin/kotlinx/css/StyleEnums.kt","webpack://fomanticui/../../../../../../../../Users/leonidkhachaturov/code/kotlin-wrappers/kotlin-css/src/commonMain/kotlin/kotlinx/css/StyleList.kt","webpack://fomanticui/../../../../../../../../Users/leonidkhachaturov/code/kotlin-wrappers/kotlin-css/src/commonMain/kotlin/kotlinx/css/StyledElement.kt","webpack://fomanticui/../../../../../../../../Users/leonidkhachaturov/code/kotlin-wrappers/kotlin-css/src/commonMain/kotlin/kotlinx/css/properties/Animation.kt","webpack://fomanticui/../../../../../../../../Users/leonidkhachaturov/code/kotlin-wrappers/kotlin-css/src/commonMain/kotlin/kotlinx/css/properties/BoxShadow.kt","webpack://fomanticui/../../../../../../../../Users/leonidkhachaturov/code/kotlin-wrappers/kotlin-css/src/commonMain/kotlin/kotlinx/css/properties/TextShadow.kt","webpack://fomanticui/../../../../../../../../Users/leonidkhachaturov/code/kotlin-wrappers/kotlin-css/src/commonMain/kotlin/kotlinx/css/properties/Transform.kt","webpack://fomanticui/../../../../../../../../Users/leonidkhachaturov/code/kotlin-wrappers/kotlin-css/src/commonMain/kotlin/kotlinx/css/properties/Transition.kt","webpack://fomanticui/../../../../../../../../Users/leonidkhachaturov/code/kotlin-wrappers/kotlin-css/src/commonMain/kotlin/kotlinx/css/RuleContainer.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/js/math.polyfills.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/globalThis.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/math.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/ArrayBuffer.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/js.arrays/fill.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/coroutines/CoroutineContext.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/js-builtin-sources/libraries/stdlib/jvm/builtins/Number.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/Sets.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/Sequences.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/common/src/generated/_Ranges.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/common/src/generated/_Sequences.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/builtins/Char.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/builtins/Enum.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/BitMask.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/arrays.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/noPackageHacks.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/bitUtils.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/charSequenceJs.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/CharCode.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/numberConversion.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/unsigned/src/kotlin/UShort.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/collectionsHacks.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/compareTo.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/coreRuntime.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/typeCheckUtils.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/hacks.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/longJs.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/metadataUtils.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/rangeTo.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/runtime/reflectRuntime.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/generated/_ArraysJs.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/generated/_DigitChars.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/NumbersJs.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/Unit.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/kotlin.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/HashMap.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/AbstractMutableCollection.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/AbstractMutableList.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/AbstractMutableMap.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/AbstractMutableSet.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/ArrayFunctions.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/ArrayList.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/ArraySorting.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/InternalHashMap.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/HashMapEntry.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/HashMapEntryDefault.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/HashSet.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/LinkedHashMap.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/LinkedHashSet.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/coroutines/CoroutineImpl.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/coroutines/InterceptedCoroutine.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/coroutines/cancellation/CancellationException.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/coroutines/intrinsics/IntrinsicsJs.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/exceptions.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/random/PlatformRandom.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/reflect/KClassImpl.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/reflect/KTypeImpl.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/reflect/primitives.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/reflect/reflection.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/StringBuilderJs.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/charJs.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/generated/_WhitespaceChars.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/numberConversions.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/regex.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/text/stringsCode.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/time/DurationUnitJs.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/AbstractCollection.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/AbstractList.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/AbstractMap.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/AbstractSet.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/ArrayDeque.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/Iterables.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/MutableCollections.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/collections/PrimitiveIterators.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/coroutines/ContinuationInterceptor.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/coroutines/CoroutineContextImpl.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/coroutines/intrinsics/Intrinsics.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/enums/EnumEntries.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/internal/progressionUtil.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/properties/ObservableProperty.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/random/Random.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/random/XorWowRandom.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/ranges/PrimitiveRanges.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/ranges/ProgressionIterators.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/ranges/Progressions.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/reflect/KTypeProjection.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/reflect/KVariance.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/text/Appendable.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/text/Char.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/text/Indent.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/text/StringNumberConversions.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/Result.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/util/Tuples.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/coroutines/Continuation.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/collections/InternalMap.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/reflect/KTypeHelpers.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/js/src/kotlin/throwableExtensions.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/libraries/stdlib/js/src/kotlinx/dom/Mutations.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/711ef0d9c7c28b00/atomicfu/src/commonMain/kotlin/kotlinx/atomicfu/Trace.common.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/711ef0d9c7c28b00/atomicfu/src/jsAndWasmSharedMain/kotlin/kotlinx/atomicfu/AtomicFU.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/AbstractCoroutine.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/Builders.common.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CancellableContinuation.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CancellableContinuationImpl.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/internal/DispatchedTask.kt","webpack://fomanticui/../../../../../../../../buildAgent/work/711ef0d9c7c28b00/atomicfu/src/commonMain/kotlin/kotlinx/atomicfu/AtomicFU.common.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CompletionState.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CoroutineDispatcher.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CoroutineExceptionHandler.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CoroutineStart.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/Delay.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/CoroutineContext.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/EventLoop.common.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/internal/ThreadLocal.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/Exceptions.common.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/Job.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/JobSupport.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/internal/Concurrent.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/internal/LinkedList.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/internal/Synchronized.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/MainCoroutineDispatcher.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/Supervisor.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/Unconfined.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/flow/Builders.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/flow/operators/Errors.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/internal/CoroutineExceptionHandlerImpl.common.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/internal/CoroutineExceptionHandlerImpl.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/internal/DispatchedContinuation.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/internal/ThreadContext.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/internal/Scopes.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/internal/Symbol.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/intrinsics/Cancellable.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/CoroutineContext.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/Debug.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/JSDispatcher.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/Window.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/js/src/internal/CoroutineExceptionHandlerImpl.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmJsShared/src/EventLoop.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmJsShared/src/internal/JSDispatcher.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/Dispatchers.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/Exceptions.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/SchedulerTask.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/jsAndWasmShared/src/internal/StackTraceRecovery.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/intrinsics/Undispatched.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/flow/internal/SafeCollector.common.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/44ec6e850d5c63f0/kotlinx-coroutines-core/common/src/CoroutineScope.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/api.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/attributes.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/delegating-map.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-attributes.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-enums.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-tags-a.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-tags-b.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-tags-c.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-tags-d.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-tags-h.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-tags-i.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-tags-l.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-tags-o.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-tags-p.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-tags-s.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-tags-t.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-tags-u.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/htmltag.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/d5055b015622163d/src/jsMain/kotlin/generated/gen-event-attrs-js.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-attr-traits.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/8d547b974a7be21f/ktor-client/ktor-client-core/js/src/io/ktor/client/engine/js/Js.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/8d547b974a7be21f/ktor-client/ktor-client-core/nonJvm/src/io/ktor/client/engine/Loader.kt","webpack://fomanticui/../../../../kraft/addons/prismjs/src/jsMain/kotlin/Prism.kt","webpack://fomanticui/../../../../kraft/addons/prismjs/src/jsMain/kotlin/PrismJsInternals.kt","webpack://fomanticui/../../../../kraft/addons/prismjs/src/jsMain/kotlin/PrismPlugin.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-tag-groups.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/generated/gen-tag-unions.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/libraries/stdlib/js/src/org.w3c/org.w3c.dom.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/components/helpers.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/forms/FieldOptionsBase.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/forms/FormField.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/semanticui/forms/settings.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/vdom/VDomElement.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/vdom/VDomEngine.kt","webpack://fomanticui/../../../../kraft/core/src/commonMain/kotlin/addons/routing/routes.kt","webpack://fomanticui/../../../../../kraft/examples/fomanticui/build/compileSync/js/main/productionExecutable/kotlin/src/kotlin/text/regex/RegexExtensions.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/dnd/Dnd.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/dnd/drag-handle.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/dnd/drop-target.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/forms/FormController.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/messages/messages.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/forms/FormFieldComponent.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/forms/GenericFormField.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/forms/collections/ListFieldComponent.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/utils/lists.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/forms/events.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/forms/validation/GenericRule.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/forms/validation/generic_rules.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/forms/validation/strings/string_rules.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/routing/ActiveRoute.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/routing/MountedRoute.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/routing/PageTitle.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/routing/Router.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/routing/RouterBuilder.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/routing/RouterComponent.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/streams/addons/distinct.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/streams/addons/map.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/routing/middleware.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/semanticui/forms/field_checkbox.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/semanticui/forms/field_input.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/utils/mapping.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/semanticui/forms/field_textarea.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/semanticui/forms/form_helpers.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/semanticui/forms/old/select/SelectFieldComponent.kt","webpack://fomanticui/../../../../kraft/semanticui/src/commonMain/kotlin/SemanticIcon.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/components/dom_events.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/streams/addons/debounce.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/semanticui/forms/old/select/SelectFieldController.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/semanticui/forms/old/select/select.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/components/Component.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/components/Ctx.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/components/PureComponent.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/components/functional_components.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/components/state/ComponentStateProperty.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/components/state/ComponentStreamProperty.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/components/state/FunctionalComponentStateProperty.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/components/state/FunctionalComponentStreamProperty.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/index-jsMain.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/messages/MessageBase.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/messages/MessagesHandler.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/streams/StreamMapper.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/streams/StreamSource.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/streams/StreamSourceImpl.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/streams/StreamWrapper.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/streams/StreamWrapperBase.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/streams/addons/ticker.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/utils/DebouncingTimer.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/utils/jsTimers.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/utils/ResponsiveController.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/utils/async.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/utils/dom.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/utils/geometry.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/utils/jsHelpers.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/vdom/VDom.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/vdom/preact/PreactElements.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/vdom/preact/PreactLLC.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/vdom/preact/PreactTagConsumer.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/vdom/preact/PreactVDomEngine.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/forms/validation/comparable/comparable_rules.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/forms/validation/numbers/number_rules.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/forms/forms.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/addons/routing/routing.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/App.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/AppMenu.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/helpers/ContentAndCode.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/helpers/blocks.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/helpers/common.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/helpers/state-and-draft-table.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/index.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/routes.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/NotFoundPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/collections/breadcrumb/BreadcrumbPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/collections/form/FormPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/collections/grid/GridPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/collections/menu/MenuPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/collections/message/MessagePage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/collections/table/TablePage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/elements/button/ButtonPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/elements/container/ContainerPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/elements/divider/DividerPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/elements/emoji/EmojiPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/elements/flag/FlagExamples.kt","webpack://fomanticui/../../../../kraft/semanticui/src/commonMain/kotlin/SemanticFlag.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/elements/flag/FlagPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/elements/flag/FlagSearch.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/elements/header/HeaderPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/elements/icon/IconExamples.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/elements/icon/IconPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/elements/icon/IconSearch.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/elements/image/ImagePage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/elements/input/InputPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/elements/label/LabelPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/elements/list/ListPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/elements/loader/LoaderPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/elements/placeholder/PlaceholderPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/elements/rail/RailPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/elements/reveal/RevealPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/elements/segment/SegmentPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/elements/step/StepPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/elements/text/TextPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/home/HomePage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/blocks/dnd/DragAndDropPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/blocks/dnd/DraggableNumberComponent.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/blocks/dnd/DropZoneComponent.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/blocks/listfield/ListFieldPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/forms/demo/FormDemosPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/forms/demo/FormWithPrimitives.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/forms/demo/FormWithNullablePrimitives.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/forms/demo/FormWithCheckboxes.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/forms/demo/FormWithTextArea.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/forms/demo/FormWithPasswords.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/forms/demo/FormWithDates.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/forms/demo/FormWithNullableDates.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/forms/demo/FormWithDateTimes.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/forms/demo/FormWithNullableDateTimes.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/forms/demo/FormWithTimes.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/forms/demo/FormWithColors.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/forms/demo/FormWithDisabledFields.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/kraft/KraftComponentBasicsPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/kraft/code/PureExampleComponent.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/kraft/code/PropsExampleComponent.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/kraft/code/FunctionalPureComponent.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/kraft/code/FunctionalPropsComponent.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/kraft/KraftComponentStatePage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/kraft/code/CounterComponent.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/kraft/code/TickerComponent.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/kraft/code/FunctionalCounterComponent.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/kraft/code/FunctionalTickerComponent.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/howto/kraft/KraftGettingStartedPage.kt","webpack://fomanticui/../../../../kraft/core/src/jsMain/kotlin/components/functional_state.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/views/advertisement/AdvertisementPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/views/card/CardPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/views/comment/CommentPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/views/feed/FeedPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/views/item/ItemPage.kt","webpack://fomanticui/../../../../kraft/examples/fomanticui/src/jsMain/kotlin/pages/views/statistic/StatisticPage.kt","webpack://fomanticui/../../../../kraft/semanticui/src/commonMain/kotlin/SemanticTag.kt","webpack://fomanticui/../../../../kraft/semanticui/src/commonMain/kotlin/internals.kt","webpack://fomanticui/../../../../../../../../mnt/agent/work/d5055b015622163d/src/commonMain/kotlin/visit.kt","webpack://fomanticui/../../../../kraft/semanticui/src/commonMain/kotlin/inline_style.kt","webpack://fomanticui/../../../../kraft/semanticui/src/commonMain/kotlin/index.kt","webpack://fomanticui/../../../../ultra/common/src/commonMain/kotlin/attributes.kt","webpack://fomanticui/../../../../ultra/common/src/commonMain/kotlin/datetime/DateTimeRangeConverter.kt","webpack://fomanticui/../../../../ultra/common/src/commonMain/kotlin/datetime/Kronos.kt","webpack://fomanticui/../../../../ultra/common/src/commonMain/kotlin/datetime/MpClosedLocalDateRange.kt","webpack://fomanticui/../../../../ultra/common/src/commonMain/kotlin/datetime/MpDatePeriod.kt","webpack://fomanticui/../../../../ultra/common/src/commonMain/kotlin/datetime/MpDateTimeParser.kt","webpack://fomanticui/../../../../ultra/common/src/commonMain/kotlin/datetime/MpInstant.kt","webpack://fomanticui/../../../../ultra/common/src/commonMain/kotlin/datetime/MpLocalDate.kt","webpack://fomanticui/../../../../ultra/common/src/commonMain/kotlin/datetime/MpLocalDateRange.kt","webpack://fomanticui/../../../../ultra/common/src/commonMain/kotlin/datetime/MpLocalDateTime.kt","webpack://fomanticui/../../../../ultra/common/src/commonMain/kotlin/datetime/MpLocalTime.kt","webpack://fomanticui/../../../../ultra/common/src/commonMain/kotlin/datetime/MpTimezone.kt","webpack://fomanticui/../../../../ultra/common/src/commonMain/kotlin/datetime/MpZonedDateTime.kt","webpack://fomanticui/../../../../ultra/common/src/commonMain/kotlin/datetime/MpZonedDateTimeRange.kt","webpack://fomanticui/../../../../ultra/common/src/commonMain/kotlin/datetime/extensions.kt","webpack://fomanticui/../../../../ultra/common/src/commonMain/kotlin/fixture/LoremIpsum.kt","webpack://fomanticui/../../../../ultra/common/src/commonMain/kotlin/model/tuple.kt","webpack://fomanticui/../../../../ultra/common/src/jsMain/kotlin/RunSync.kt","webpack://fomanticui/../../../../ultra/common/src/jsMain/kotlin/datetime/kotlinx/JsJodaTimeZoneModule.kt","webpack://fomanticui/../../../../ultra/common/src/commonMain/kotlin/lists.kt","webpack://fomanticui/../../../../ultra/common/src/jsMain/kotlin/strings_mp.kt","webpack://fomanticui/webpack/bootstrap","webpack://fomanticui/webpack/runtime/define property getters","webpack://fomanticui/webpack/runtime/ensure chunk","webpack://fomanticui/webpack/runtime/get javascript chunk filename","webpack://fomanticui/webpack/runtime/global","webpack://fomanticui/webpack/runtime/hasOwnProperty shorthand","webpack://fomanticui/webpack/runtime/make namespace object","webpack://fomanticui/webpack/runtime/publicPath","webpack://fomanticui/webpack/runtime/jsonp chunk loading","webpack://fomanticui/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fomanticui\"] = factory();\n\telse\n\t\troot[\"fomanticui\"] = factory();\n})(globalThis, () => {\nreturn ","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"fomanticui:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nfunction createErrorType(name, init, superErrorClass = Error) {\n    function JsJodaException(message) {\n        if (!Error.captureStackTrace) {\n            this.stack = (new Error()).stack;\n        } else {\n            Error.captureStackTrace(this, this.constructor);\n        }\n        this.message = message;\n        init && init.apply(this, arguments);\n        this.toString = function () {\n            return `${this.name}: ${this.message}`;\n        };\n    }\n    JsJodaException.prototype = Object.create(superErrorClass.prototype);\n    JsJodaException.prototype.name = name;\n    JsJodaException.prototype.constructor = JsJodaException;\n    return JsJodaException;\n}\n\nexport const DateTimeException = createErrorType('DateTimeException', messageWithCause);\nexport const DateTimeParseException = createErrorType('DateTimeParseException', messageForDateTimeParseException);\nexport const UnsupportedTemporalTypeException = createErrorType('UnsupportedTemporalTypeException', null, DateTimeException);\nexport const ArithmeticException = createErrorType('ArithmeticException');\nexport const IllegalArgumentException = createErrorType('IllegalArgumentException');\nexport const IllegalStateException = createErrorType('IllegalStateException');\nexport const NullPointerException = createErrorType('NullPointerException');\n\nfunction messageWithCause(message, cause = null) {\n    let msg = message || this.name;\n    if (cause !== null && cause instanceof Error) {\n        msg += `\\n-------\\nCaused by: ${cause.stack}\\n-------\\n`;\n    }\n    this.message = msg;\n}\n\nfunction messageForDateTimeParseException(message, text = '', index = 0, cause = null) {\n    let msg = message || this.name;\n    msg += `: ${text}, at index: ${index}`;\n    if (cause !== null && cause instanceof Error) {\n        msg += `\\n-------\\nCaused by: ${cause.stack}\\n-------\\n`;\n    }\n    this.message = msg;\n    this.parsedString = () => {\n        return text;\n    };\n    this.errorIndex = () => {\n        return index;\n    };\n}\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\nimport { NullPointerException, IllegalArgumentException } from './errors';\n\n/**\n * @private\n *\n * @param assertion\n * @param msg\n * @param error\n */\nexport function assert(assertion, msg, error) {\n    if(!assertion){\n        if (error) {\n            throw new error(msg);\n        } else {\n            throw new Error(msg);\n        }\n    }\n}\n\n/**\n * @private\n *\n * @param value\n * @param parameterName\n * @returns {*}\n */\nexport function requireNonNull(value, parameterName) {\n    if (value == null) {\n        throw new NullPointerException(`${parameterName} must not be null`);\n    }\n    return value;\n}\n\n/**\n * @private\n *\n * @param value\n * @param _class\n * @param parameterName\n * @returns {_class}\n */\nexport function requireInstance(value, _class, parameterName) {\n    if (!(value instanceof _class)) {\n        throw new IllegalArgumentException(`${parameterName} must be an instance of ${_class.name ? _class.name : _class}${value && value.constructor && value.constructor.name ? `, but is ${value.constructor.name}` : ''}`);\n    }\n    return value;\n}\n\n/**\n * @private\n *\n * @param methodName\n */\nexport function abstractMethodFail(methodName){\n    throw new TypeError(`abstract method \"${methodName}\" is not implemented`);\n}\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\nimport { ArithmeticException } from './errors';\n\nexport const MAX_SAFE_INTEGER = 9007199254740991;\nexport const MIN_SAFE_INTEGER = -9007199254740991;\n\n/**\n * Math helper with static function for integer operations\n */\nexport class MathUtil {\n    /**\n     *\n     * @param {number} x\n     * @param {number} y\n     * @returns {number}\n     */\n    static intDiv(x, y) {\n        let r = x/y;\n        r = MathUtil.roundDown(r);\n        return MathUtil.safeZero(r);\n    }\n\n    /**\n     *\n     * @param {number} x\n     * @param {number} y\n     * @returns {number}\n     */\n    static intMod(x, y) {\n        let r = x - MathUtil.intDiv(x, y) * y;\n        r = MathUtil.roundDown(r);\n        return MathUtil.safeZero(r);\n    }\n\n    /**\n     *\n     * @param {number} r\n     * @returns {number}\n     */\n    static roundDown(r){\n        if (r < 0) {\n            return Math.ceil(r);\n        } else {\n            return Math.floor(r);\n        }\n    }\n\n    /**\n     *\n     * @param {number} x\n     * @param {number} y\n     * @returns {number}\n     */\n    static floorDiv(x, y){\n        const r = Math.floor(x / y);\n        return MathUtil.safeZero(r);\n    }\n\n    /**\n     *\n     * @param {number} x\n     * @param {number} y\n     * @returns {number}\n     */\n    static floorMod(x, y){\n        const r = x - MathUtil.floorDiv(x, y) * y;\n        return MathUtil.safeZero(r);\n    }\n\n    /**\n     *\n     * @param {number} x\n     * @param {number} y\n     * @returns {number}\n     */\n    static safeAdd(x, y) {\n        MathUtil.verifyInt(x);\n        MathUtil.verifyInt(y);\n        if (x === 0) {\n            return MathUtil.safeZero(y);\n        }\n        if (y === 0) {\n            return MathUtil.safeZero(x);\n        }\n        const r = MathUtil.safeToInt(x + y);\n        if (r === x || r === y) {\n            throw new ArithmeticException('Invalid addition beyond MAX_SAFE_INTEGER!');\n        }\n        return r;\n    }\n\n    /**\n     *\n     * @param {number} x\n     * @param {number} y\n     * @returns {number}\n     */\n    static safeSubtract(x, y) {\n        MathUtil.verifyInt(x);\n        MathUtil.verifyInt(y);\n        if (x === 0 && y === 0) {\n            return 0;\n        } else if (x === 0) {\n            return MathUtil.safeZero(-1 * y);\n        } else if (y === 0) {\n            return MathUtil.safeZero(x);\n        }\n        return MathUtil.safeToInt(x - y);\n    }\n\n    /**\n     *\n     * @param {number} x\n     * @param {number} y\n     * @returns {number}\n     */\n    static safeMultiply(x, y) {\n        MathUtil.verifyInt(x);\n        MathUtil.verifyInt(y);\n        if (x === 1) {\n            return MathUtil.safeZero(y);\n        }\n        if (y === 1) {\n            return MathUtil.safeZero(x);\n        }\n        if (x === 0 || y === 0) {\n            return 0;\n        }\n        const r = MathUtil.safeToInt(x * y);\n        if (r / y !== x || (x === MIN_SAFE_INTEGER && y === -1) || (y === MIN_SAFE_INTEGER && x === -1)) {\n            throw new ArithmeticException(`Multiplication overflows: ${x} * ${y}`);\n        }\n        return r;\n    }\n\n    /**\n     *\n     * @param {number} value\n     * @returns {number}\n     */\n    static parseInt(value) {\n        const r = parseInt(value);\n        return MathUtil.safeToInt(r);\n    }\n\n    /**\n     *\n     * @param {number} value\n     * @returns {number}\n     */\n    static safeToInt(value) {\n        MathUtil.verifyInt(value);\n        return MathUtil.safeZero(value);\n    }\n\n    /**\n     *\n     * @param {number} value\n     */\n    static verifyInt(value){\n        if (value == null) {\n            throw new ArithmeticException(`Invalid value: '${value}', using null or undefined as argument`);\n        }\n        if (isNaN(value)) {\n            throw new ArithmeticException('Invalid int value, using NaN as argument');\n        }\n        if (Number.isInteger) {\n            if (!Number.isInteger(Number(value))) {\n                throw new ArithmeticException(`Invalid value: '${value}' is a float`);\n            }\n        } else if ((value % 1) !== 0) { // IE11 does not support Number.isInteger\n            throw new ArithmeticException(`Invalid value: '${value}' is a float`);\n        }\n        if (value > MAX_SAFE_INTEGER || value < MIN_SAFE_INTEGER) {\n            throw new ArithmeticException(`Calculation overflows an int: ${value}`);\n        }\n    }\n\n    /**\n     * convert -0 to 0 and int as string to a number ( '1' -> 1 )\n     *\n     * @param {number} value\n     * @returns {number}\n     */\n    static safeZero(value){\n        return value === 0 ? 0 : +value;\n    }\n\n    /**\n     * Compares two Numbers.\n     *\n     * @param {number} a  the first value\n     * @param {number} b  the second value\n     * @return {number} the result\n     */\n    static compareNumbers(a, b) {\n        if (a < b) {\n            return -1;\n        }\n        if (a > b) {\n            return 1;\n        }\n        return 0;\n    }\n\n    // convert to small integer for v8 optimisation\n    static smi(int) {\n        return ((int >>> 1) & 0x40000000) | (int & 0xBFFFFFFF);\n    }\n\n    // calculate 32 bit hash of a number and convert to SMI\n    static hash(number) {\n        if (number !== number || number === Infinity) {\n            return 0;\n        }\n        let result = number;\n        while (number > 0xFFFFFFFF) {\n            number /= 0xFFFFFFFF;\n            result ^= number;\n        }\n        return MathUtil.smi(result);\n    }\n\n    // default hashCode calculation for a number sequence as mentioned by Joshua Bloch\n    static hashCode(...numbers) {\n        let result = 17;\n        for (const n of numbers) {\n            result = (result << 5) - result + MathUtil.hash(n);\n        }\n        return MathUtil.hash(result);\n    }\n}\n\nMathUtil.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nMathUtil.MIN_SAFE_INTEGER = MIN_SAFE_INTEGER;\n\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n/***\n * Base class for a pseudo enum\n */\nexport class Enum {\n    constructor(name){\n        this._name = name;\n    }\n\n    equals(other){\n        return this === other;\n    }\n\n    toString() {\n        return this._name;\n    }\n\n    /**\n     * toJSON() use by JSON.stringify\n     * delegates to toString()\n     *\n     * @return {string}\n     */\n    toJSON() {\n        return this.toString();\n    }\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { abstractMethodFail } from '../assert';\n\n/**\n * Framework-level interface defining an amount of time, such as\n * \"6 hours\", \"8 days\" or \"2 years and 3 months\".\n *\n * This is the base interface type for amounts of time.\n * An amount is distinct from a date or time-of-day in that it is not tied\n * to any specific point on the time-line.\n *\n * The amount can be thought of as a {@link Map} of {@link TemporalUnit} to\n * `long`, exposed via {@link getUnits} and {@link get}.\n * A simple case might have a single unit-value pair, such as \"6 hours\".\n * A more complex case may have multiple unit-value pairs, such as\n * \"7 years, 3 months and 5 days\".\n *\n * There are two common implementations.\n * {@link Period} is a date-based implementation, storing years, months and days.\n * {@link Duration} is a time-based implementation, storing seconds and nanoseconds,\n * but providing some access using other duration based units such as minutes,\n * hours and fixed 24-hour days.\n *\n * This interface is a framework-level interface that should not be widely\n * used in application code. Instead, applications should create and pass\n * around instances of concrete types, such as {@link Period} and {@link Duration}.\n *\n * @interface\n */\nexport class TemporalAmount {\n    /**\n     * Returns the value of the requested unit.\n     * The units returned from {@link getUnits} uniquely define the\n     * value of the {@link TemporalAmount}.  A value must be returned\n     * for each unit listed in {@link getUnits}.\n     *\n     * @implSpec\n     * Implementations may declare support for units not listed by {@link getUnits}.\n     * Typically, the implementation would define additional units\n     * as conversions for the convenience of developers.\n     *\n     * @param {TemporalUnit} unit - the {@link TemporalUnit} for which to return the value\n     * @return {number} the long value of the unit\n     * @throws DateTimeException if a value for the unit cannot be obtained\n     * @throws UnsupportedTemporalTypeException if the {@link unit} is not supported\n     */\n    // eslint-disable-next-line no-unused-vars\n    get(unit) {\n        abstractMethodFail('get');\n    }\n    \n    /**\n     * Returns the list of units uniquely defining the value of this TemporalAmount.\n     * The list of {@link TemporalUnits} is defined by the implementation class.\n     * The list is a snapshot of the units at the time {@link getUnits}\n     * is called and is not mutable.\n     * The units are ordered from longest duration to the shortest duration\n     * of the unit.\n     *\n     * @implSpec\n     * The list of units completely and uniquely represents the\n     * state of the object without omissions, overlaps or duplication.\n     * The units are in order from longest duration to shortest.\n     *\n     * @return {TemporalUnit[]} the List of {@link TemporalUnits}; not null\n     */\n    units() {\n        abstractMethodFail('units');\n    }\n    \n    /**\n     * Adds to the specified temporal object.\n     *\n     * Adds the amount to the specified temporal object using the logic\n     * encapsulated in the implementing class.\n     *\n     * There are two equivalent ways of using this method.\n     * The first is to invoke this method directly.\n     * The second is to use {@link Temporal#plus}:\n     * <pre>\n     *   // These two lines are equivalent, but the second approach is recommended\n     *   dateTime = amount.addTo(dateTime);\n     *   dateTime = dateTime.plus(adder);\n     * </pre>\n     * It is recommended to use the second approach, {@link plus},\n     * as it is a lot clearer to read in code.\n     *\n     * @implSpec\n     * The implementation must take the input object and add to it.\n     * The implementation defines the logic of the addition and is responsible for\n     * documenting that logic. It may use any method on {@link Temporal} to\n     * query the temporal object and perform the addition.\n     * The returned object must have the same observable type as the input object\n     *\n     * The input object must not be altered.\n     * Instead, an adjusted copy of the original must be returned.\n     * This provides equivalent, safe behavior for immutable and mutable temporal objects.\n     *\n     * The input temporal object may be in a calendar system other than ISO.\n     * Implementations may choose to document compatibility with other calendar systems,\n     * or reject non-ISO temporal objects by querying the chronology (see {@link TemporalQueries#chronology}).\n     *\n     * This method may be called from multiple threads in parallel.\n     * It must be thread-safe when invoked.\n     *\n     * @param {Temporal} temporal - the temporal object to add the amount to, not null\n     * @return {Temporal} an object of the same observable type with the addition made, not null\n     * @throws DateTimeException if unable to add\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    // eslint-disable-next-line no-unused-vars\n    addTo(temporal) {\n        abstractMethodFail('addTo');\n    }\n    \n    /**\n     * Subtracts this object from the specified temporal object.\n     *\n     * Subtracts the amount from the specified temporal object using the logic\n     * encapsulated in the implementing class.\n     *\n     * There are two equivalent ways of using this method.\n     * The first is to invoke this method directly.\n     * The second is to use {@link Temporal#minus}:\n     * <pre>\n     *   // these two lines are equivalent, but the second approach is recommended\n     *   dateTime = amount.subtractFrom(dateTime);\n     *   dateTime = dateTime.minus(amount);\n     * </pre>\n     * It is recommended to use the second approach, {@link minus},\n     * as it is a lot clearer to read in code.\n     *\n     * @implSpec\n     * The implementation must take the input object and subtract from it.\n     * The implementation defines the logic of the subtraction and is responsible for\n     * documenting that logic. It may use any method on {@link Temporal} to\n     * query the temporal object and perform the subtraction.\n     * The returned object must have the same observable type as the input object\n     *\n     * The input object must not be altered.\n     * Instead, an adjusted copy of the original must be returned.\n     * This provides equivalent, safe behavior for immutable and mutable temporal objects.\n     *\n     * The input temporal object may be in a calendar system other than ISO.\n     * Implementations may choose to document compatibility with other calendar systems,\n     * or reject non-ISO temporal objects by querying the chronology (see {@link TemporalQueries#chronology}).\n     *\n     * This method may be called from multiple threads in parallel.\n     * It must be thread-safe when invoked.\n     *\n     * @param {Temporal} temporal - the temporal object to subtract the amount from, not null\n     * @return {Temporal} an object of the same observable type with the subtraction made, not null\n     * @throws DateTimeException if unable to subtract\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    // eslint-disable-next-line no-unused-vars\n    subtractFrom(temporal) {\n        abstractMethodFail('subtractFrom');\n    }\n    \n}\n\nif (typeof Symbol !== 'undefined' && Symbol.toPrimitive) {\n    TemporalAmount.prototype[Symbol.toPrimitive] = function (hint) {\n        // hint could be 'number', 'string' or 'default'. Only 'number'\n        // should throw and 'default' is treated as 'string'.\n        if (hint !== 'number') {\n            return this.toString();\n        }\n\n        throw new TypeError(\n            'A conversion from TemporalAmount to a number is not allowed. ' +\n            'To compare use the methods .equals(), .compareTo(), .isBefore() ' +\n            'or one that is more suitable to your use case.'\n        );\n    };\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { abstractMethodFail } from '../assert';\n\n/**\n * A unit of date-time, such as Days or Hours.\n *\n * Measurement of time is built on units, such as years, months, days, hours, minutes and seconds.\n * Implementations of this interface represent those units.\n *\n * An instance of this interface represents the unit itself, rather than an amount of the unit.\n * See {@link Period} for a class that represents an amount in terms of the common units.\n *\n * The most commonly used units are defined in {@link ChronoUnit}.\n * Further units are supplied in {@link IsoFields}.\n * Units can also be written by application code by implementing this interface.\n *\n * The unit works using double dispatch. Client code calls methods on a date-time like\n * {@link LocalDateTime} which check if the unit is a {@link ChronoUnit}.\n * If it is, then the date-time must handle it.\n * Otherwise, the method call is re-dispatched to the matching method in this interface.\n *\n * @interface\n */\nexport class TemporalUnit {\n    /**\n     * Gets the duration of this unit, which may be an estimate.\n     *\n     * All units return a duration measured in standard nanoseconds from this method.\n     * The duration will be positive and non-zero.\n     * For example, an hour has a duration of `60 * 60 * 1,000,000,000 ns`.\n     *\n     * Some units may return an accurate duration while others return an estimate.\n     * For example, days have an estimated duration due to the possibility of\n     * daylight saving time changes.\n     * To determine if the duration is an estimate, use {@link isDurationEstimated}.\n     *\n     * @return {Duration} the duration of this unit, which may be an estimate.\n     */\n    duration() {\n        abstractMethodFail('duration');\n    }\n\n    /**\n     * Checks if the duration of the unit is an estimate.\n     *\n     * All units have a duration, however the duration is not always accurate.\n     * For example, days have an estimated duration due to the possibility of\n     * daylight saving time changes.\n     * This method returns true if the duration is an estimate and false if it is\n     * accurate. Note that accurate/estimated ignores leap seconds.\n     *\n     * @return {boolean} `true` if the duration is estimated, `false` if accurate.\n     */\n    isDurationEstimated() {\n        abstractMethodFail('isDurationEstimated');\n    }\n\n    /**\n     * Checks if this unit is date-based.\n     *\n     * @return {boolean} `true` if date unit, `false` if a time unit.\n     */\n    isDateBased() {\n        abstractMethodFail('isDateBased');\n    }\n\n    /**\n     * Checks if this unit is time-based.\n     *\n     * @return {boolean} `true` if time unit, `false` if a date unit.\n     */\n    isTimeBased() {\n        abstractMethodFail('isTimeBased');\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Checks if this unit is supported by the specified temporal object.\n     *\n     * This checks that the implementing date-time can add/subtract this unit.\n     * This can be used to avoid throwing an exception.\n     *\n     * @param {!Temporal} temporal the temporal object to check.\n     * @return {boolean} `true` if the unit is supported.\n     */\n    // eslint-disable-next-line no-unused-vars\n    isSupportedBy(temporal) {\n        abstractMethodFail('isSupportedBy');\n    }\n\n    /**\n     * Returns a copy of the specified temporal object with the specified period added.\n     *\n     * The period added is a multiple of this unit. For example, this method\n     * could be used to add \"3 days\" to a date by calling this method on the\n     * instance representing \"days\", passing the date and the period \"3\".\n     * The period to be added may be negative, which is equivalent to subtraction.\n     *\n     * There are two equivalent ways of using this method.\n     * The first is to invoke this method directly.\n     * The second is to use {@link Temporal#plus}:\n     * <pre>\n     *   // these two lines are equivalent, but the second approach is recommended\n     *   temporal = thisUnit.doPlus(temporal);\n     *   temporal = temporal.plus(thisUnit);\n     * </pre>\n     * It is recommended to use the second approach, {@link plus},\n     * as it is a lot clearer to read in code.\n     *\n     * Implementations should perform any queries or calculations using the units\n     * available in {@link ChronoUnit} or the fields available in {@link ChronoField}.\n     * If the field is not supported a {@link DateTimeException} must be thrown.\n     *\n     * Implementations must not alter the specified temporal object.\n     * Instead, an adjusted copy of the original must be returned.\n     * This provides equivalent, safe behavior for immutable and mutable implementations.\n     *\n     * @param {!Temporal} dateTime the temporal object to adjust.\n     * @param {number} periodToAdd the period of this unit to add, positive or negative.\n     * @return {Temporal} the adjusted temporal object.\n     * @throws DateTimeException if the period cannot be added.\n     */\n    // eslint-disable-next-line no-unused-vars\n    addTo(dateTime, periodToAdd) {\n        abstractMethodFail('addTo');\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Calculates the period in terms of this unit between two temporal objects of the same type.\n     *\n     * This calculates the period between two temporals in terms of this unit.\n     * The start and end points are supplied as temporal objects and must be of the same type.\n     * The result will be negative if the end is before the start.\n     * For example, the period in hours between two temporal objects can be calculated\n     * using {@link HOURS.between}.\n     *\n     * The calculation returns a whole number, representing the number of complete units between the two temporals.\n     * For example, the period in hours between the times 11:30 and 13:29 will only be\n     * one hour as it is one minute short of two hours.\n     *\n     * There are two equivalent ways of using this method.\n     * The first is to invoke this method directly.\n     * The second is to use {@link Temporal#until}:\n     * <pre>\n     *   // these two lines are equivalent\n     *   between = thisUnit.between(start, end);\n     *   between = start.until(end, thisUnit);\n     * </pre>\n     * The choice should be made based on which makes the code more readable.\n     *\n     * For example, this method allows the number of days between two dates to be calculated:\n     * <pre>\n     *   long daysBetween = DAYS.between(start, end);\n     *   // or alternatively\n     *   long daysBetween = start.until(end, DAYS);\n     * </pre>\n     * Implementations should perform any queries or calculations using the units available in\n     * {@link ChronoUnit} or the fields available in {@link ChronoField}.\n     * If the unit is not supported a {@link DateTimeException} must be thrown.\n     * Implementations must not alter the specified temporal objects.\n     *\n     * @param {!Temporal} temporal1 the base temporal object.\n     * @param {!Temporal} temporal2 the other temporal object.\n     * @return {number} the period between temporal1 and temporal2 in terms of this unit;\n     *  positive if temporal2 is later than temporal1, negative if earlier.\n     * @throws DateTimeException if the period cannot be calculated.\n     * @throws ArithmeticException if numeric overflow occurs.\n     */\n    // eslint-disable-next-line no-unused-vars\n    between(temporal1, temporal2) {\n        abstractMethodFail('between');\n    }\n}\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\nimport { requireNonNull, requireInstance } from './assert';\nimport { ArithmeticException, DateTimeParseException, UnsupportedTemporalTypeException } from './errors';\nimport { MathUtil, MAX_SAFE_INTEGER, MIN_SAFE_INTEGER } from './MathUtil';\n\nimport { ChronoField } from './temporal/ChronoField';\nimport { ChronoUnit } from './temporal/ChronoUnit';\nimport { TemporalAmount } from './temporal/TemporalAmount';\nimport { TemporalUnit } from './temporal/TemporalUnit';\n\nimport { LocalTime } from './LocalTime';\n\n/**\n * A time-based amount of time, such as '34.5 seconds'.\n *\n * This class models a quantity or amount of time in terms of seconds and nanoseconds.\n * It can be accessed using other duration-based units, such as minutes and hours.\n * In addition, the {@link ChronoUnit#DAYS} unit can be used and is treated as\n * exactly equal to 24 hours, thus ignoring daylight savings effects.\n * See {@link Period} for the date-based equivalent to this class.\n *\n * A physical duration could be of infinite length.\n * For practicality, the duration is stored with constraints similar to {@link Instant}.\n * The duration uses nanosecond resolution with a maximum value of the seconds that can\n * be held in a `long`. This is greater than the current estimated age of the universe.\n *\n * The range of a duration requires the storage of a number larger than a `long`.\n * To achieve this, the class stores a `long` representing seconds and an `int`\n * representing nanosecond-of-second, which will always be between 0 and 999,999,999.\n *\n * The duration is measured in \"seconds\", but these are not necessarily identical to\n * the scientific \"SI second\" definition based on atomic clocks.\n * This difference only impacts durations measured near a leap-second and should not affect\n * most applications.\n * See {@link Instant} for a discussion as to the meaning of the second and time-scales.\n *\n * ### Static properties of Class {@link Duration}\n *\n * Duration.ZERO\n *\n * Constant for a duration of zero.\n *\n */\nexport class Duration extends TemporalAmount /*implements TemporalAmount, Comparable<Duration>, Serializable */ {\n\n    /**\n     * Constructs an instance of {@link Duration} using seconds and nanoseconds.\n     *\n     * @param {Number} seconds - the length of the duration in seconds, positive or negative\n     * @param {Number} nanos - the nanoseconds within the second, from 0 to 999,999,999\n     * @private\n     */\n    constructor(seconds, nanos) {\n        super();\n        this._seconds = MathUtil.safeToInt(seconds);\n        this._nanos = MathUtil.safeToInt(nanos);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains an instance of {@link Duration} from a number of standard 24 hour days.\n     *\n     * The seconds are calculated based on the standard definition of a day,\n     * where each day is 86400 seconds which implies a 24 hour day.\n     * The nanosecond in second field is set to zero.\n     *\n     * @param {Number} days - the number of days, positive or negative\n     * @return {!Duration}\n     * @throws ArithmeticException if the input days exceeds the capacity of {@link Duration}\n     */\n    static ofDays(days) {\n        return Duration._create(MathUtil.safeMultiply(days, LocalTime.SECONDS_PER_DAY), 0);\n    }\n\n    /**\n     * Obtains an instance of {@link Duration} from a number of standard hours.\n     *\n     * The seconds are calculated based on the standard definition of an hour,\n     * where each hour is 3600 seconds.\n     * The nanosecond in second field is set to zero.\n     *\n     * @param {Number} hours - the number of hours, positive or negative\n     * @return {!Duration}\n     * @throws ArithmeticException if the input hours exceeds the capacity of {@link Duration}\n     */\n    static ofHours(hours) {\n        return Duration._create(MathUtil.safeMultiply(hours, LocalTime.SECONDS_PER_HOUR), 0);\n    }\n\n    /**\n     * Obtains an instance of {@link Duration} from a number of standard minutes.\n     *\n     * The seconds are calculated based on the standard definition of a minute,\n     * where each minute is 60 seconds.\n     * The nanosecond in second field is set to zero.\n     *\n     * @param {Number} minutes - the number of minutes, positive or negative\n     * @return {!Duration}\n     * @throws ArithmeticException if the input minutes exceeds the capacity of {@link Duration}\n     */\n    static ofMinutes(minutes) {\n        return Duration._create(MathUtil.safeMultiply(minutes, LocalTime.SECONDS_PER_MINUTE), 0);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains an instance of {@link Duration} from a number of seconds\n     * and an adjustment in nanoseconds.\n     *\n     * This method allows an arbitrary number of nanoseconds to be passed in.\n     * The factory will alter the values of the second and nanosecond in order\n     * to ensure that the stored nanosecond is in the range 0 to 999,999,999.\n     * For example, the following will result in the exactly the same duration:\n     * <pre>\n     *  Duration.ofSeconds(3, 1);\n     *  Duration.ofSeconds(4, -999_999_999);\n     *  Duration.ofSeconds(2, 1000_000_001);\n     * </pre>\n     *\n     * @param {Number} seconds - the number of seconds, positive or negative\n     * @param {Number} nanoAdjustment  the nanosecond adjustment to the number of seconds, positive or negative\n     * @return {!Duration}\n     * @throws ArithmeticException if the adjustment causes the seconds to exceed the capacity of {@link Duration}\n     */\n    static ofSeconds(seconds, nanoAdjustment = 0) {\n        const secs = MathUtil.safeAdd(seconds, MathUtil.floorDiv(nanoAdjustment, LocalTime.NANOS_PER_SECOND));\n        const nos = MathUtil.floorMod(nanoAdjustment, LocalTime.NANOS_PER_SECOND);\n        return Duration._create(secs, nos);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains an instance of {@link Duration} from a number of milliseconds.\n     *\n     * The seconds and nanoseconds are extracted from the specified milliseconds.\n     *\n     * @param {Number} millis - the number of milliseconds, positive or negative\n     * @return {!Duration}\n     */\n    static ofMillis(millis) {\n        let secs = MathUtil.intDiv(millis, 1000);\n        let mos = MathUtil.intMod(millis, 1000);\n        if (mos < 0) {\n            mos += 1000;\n            secs--;\n        }\n        return Duration._create(secs, mos * 1000000);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains an instance of {@link Duration} from a number of nanoseconds.\n     *\n     * The seconds and nanoseconds are extracted from the specified nanoseconds.\n     *\n     * @param {Number} nanos - the number of nanoseconds, positive or negative\n     * @return {!Duration}\n     */\n    static ofNanos(nanos) {\n        let secs = MathUtil.intDiv(nanos, LocalTime.NANOS_PER_SECOND);\n        let nos = MathUtil.intMod(nanos, LocalTime.NANOS_PER_SECOND);\n        if (nos < 0) {\n            nos += LocalTime.NANOS_PER_SECOND;\n            secs--;\n        }\n        return this._create(secs, nos);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains an instance of {@link Duration} from a duration in the specified unit.\n     *\n     * The parameters represent the two parts of a phrase like '6 Hours'. For example:\n     * <pre>\n     *  Duration.of(3, SECONDS);\n     *  Duration.of(465, HOURS);\n     * </pre>\n     * Only a subset of units are accepted by this method.\n     * The unit must either have an exact duration (see {@link TemporalUnit#isDurationEstimated}) or\n     * be {@link ChronoUnit#DAYS} which is treated as 24 hours. Other units throw an exception.\n     *\n     * @param {Number} amount - the amount of the duration, measured in terms of the unit, positive or negative\n     * @param {TemporalUnit} unit - the unit that the duration is measured in, must have an exact duration, not null\n     * @return {!Duration}\n     * @throws DateTimeException if the period unit has an estimated duration\n     * @throws ArithmeticException if a numeric overflow occurs\n     */\n    static of(amount, unit) {\n        return Duration.ZERO.plus(amount, unit);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains an instance of {@link Duration} from an amount.\n     *\n     * This obtains a duration based on the specified amount.\n     * A TemporalAmount represents an amount of time, which may be date-based\n     * or time-based, which this factory extracts to a duration.\n     *\n     * The conversion loops around the set of units from the amount and uses\n     * the duration of the unit to calculate the total Duration.\n     * Only a subset of units are accepted by this method.\n     * The unit must either have an exact duration or be ChronoUnit.DAYS which\n     * is treated as 24 hours. If any other units are found then an exception is thrown.\n     *\n     * @param {TemporalAmount} amount - the temporal amount to convert, not null\n     * @return {Duration} the resulting duration, not null\n     * @throws DateTimeException if the amount cannot be converted\n     * @throws ArithmeticException if a numeric overflow occurs\n     */\n    static from(amount) {\n        requireNonNull(amount, 'amount');\n        requireInstance(amount, TemporalAmount);\n        let duration = Duration.ZERO;\n        amount.units().forEach((unit) => {\n            duration = duration.plus(amount.get(unit), unit);\n        });\n        return duration;\n    }\n\n    /**\n     * Obtains an instance of {@link Duration} representing the duration between two instants.\n     *\n     * Obtains a {@link Duration} representing the duration between two instants.\n     * This calculates the duration between two temporal objects of the same type.\n     * The difference in seconds is calculated using {@link Temporal#until}.\n     * The difference in nanoseconds is calculated using by querying the\n     * {@link ChronoField#NANO_OF_SECOND} field.\n     *\n     * The result of this method can be a negative period if the end is before the start.\n     * To guarantee to obtain a positive duration call abs() on the result.\n     *\n     * @param {Temporal} startInclusive - the start instant, inclusive, not null\n     * @param {Temporal} endExclusive - the end instant, exclusive, not null\n     * @return {!Duration}\n     * @throws DateTimeException if the seconds between the temporals cannot be obtained\n     * @throws ArithmeticException if the calculation exceeds the capacity of {@link Duration}\n     */\n    static between(startInclusive, endExclusive) {\n        requireNonNull(startInclusive, 'startInclusive');\n        requireNonNull(endExclusive, 'endExclusive');\n        let secs = startInclusive.until(endExclusive, ChronoUnit.SECONDS);\n        let nanos = 0;\n        if (startInclusive.isSupported(ChronoField.NANO_OF_SECOND) && endExclusive.isSupported(ChronoField.NANO_OF_SECOND)) {\n            try {\n                const startNos = startInclusive.getLong(ChronoField.NANO_OF_SECOND);\n                nanos = endExclusive.getLong(ChronoField.NANO_OF_SECOND) - startNos;\n                if (secs > 0 && nanos < 0) {\n                    nanos += LocalTime.NANOS_PER_SECOND;\n                } else if (secs < 0 && nanos > 0) {\n                    nanos -= LocalTime.NANOS_PER_SECOND;\n                } else if (secs === 0 && nanos !== 0) {\n                    // two possible meanings for result, so recalculate secs\n                    const adjustedEnd = endExclusive.with(ChronoField.NANO_OF_SECOND, startNos);\n                    secs = startInclusive.until(adjustedEnd, ChronoUnit.SECONDS);\n                }\n            } catch (e) {\n                // ignore and only use seconds\n            }\n        }\n        return this.ofSeconds(secs, nanos);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains a {@link Duration} from a text string such as {@link PnDTnHnMn.nS}.\n     *\n     * This will parse a textual representation of a duration, including the\n     * string produced by {@link toString}. The formats accepted are based\n     * on the ISO-8601 duration format {@link PnDTnHnMn.nS} with days\n     * considered to be exactly 24 hours.\n     *\n     * The string starts with an optional sign, denoted by the ASCII negative\n     * or positive symbol. If negative, the whole period is negated.\n     * The ASCII letter \"P\" is next in upper or lower case.\n     * There are then four sections, each consisting of a number and a suffix.\n     * The sections have suffixes in ASCII of \"D\", \"H\", \"M\" and \"S\" for\n     * days, hours, minutes and seconds, accepted in upper or lower case.\n     * The suffixes must occur in order. The ASCII letter \"T\" must occur before\n     * the first occurrence, if any, of an hour, minute or second section.\n     * At least one of the four sections must be present, and if \"T\" is present\n     * there must be at least one section after the \"T\".\n     * The number part of each section must consist of one or more ASCII digits.\n     * The number may be prefixed by the ASCII negative or positive symbol.\n     * The number of days, hours and minutes must parse to a `long`.\n     * The number of seconds must parse to a `long` with optional fraction.\n     * The decimal point may be either a dot or a comma.\n     * The fractional part may have from zero to 9 digits.\n     *\n     * The leading plus/minus sign, and negative values for other units are\n     * not part of the ISO-8601 standard.\n     *\n     * Examples:\n     * <pre>\n     *    \"PT20.345S\" -> parses as \"20.345 seconds\"\n     *    \"PT15M\"     -> parses as \"15 minutes\" (where a minute is 60 seconds)\n     *    \"PT10H\"     -> parses as \"10 hours\" (where an hour is 3600 seconds)\n     *    \"P2D\"       -> parses as \"2 days\" (where a day is 24 hours or 86400 seconds)\n     *    \"P2DT3H4M\"  -> parses as \"2 days, 3 hours and 4 minutes\"\n     *    \"P-6H3M\"    -> parses as \"-6 hours and +3 minutes\"\n     *    \"-P6H3M\"    -> parses as \"-6 hours and -3 minutes\"\n     *    \"-P-6H+3M\"  -> parses as \"+6 hours and -3 minutes\"\n     * </pre>\n     *\n     * @param {String} text - the text to parse, not null\n     * @return {Duration} the parsed duration, not null\n     * @throws DateTimeParseException if the text cannot be parsed to a duration\n     */\n    static parse(text) {\n        requireNonNull(text, 'text');\n        /**\n         * The pattern for parsing.\n         */\n        const PATTERN = new RegExp('([-+]?)P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?', 'i');\n        const matches = PATTERN.exec(text);\n        if (matches !== null) {\n            // check for letter T but no time sections\n            if ('T' === matches[3] === false) {\n                const negate = '-' === matches[1];\n                const dayMatch = matches[2];\n                const hourMatch = matches[4];\n                const minuteMatch = matches[5];\n                const secondMatch = matches[6];\n                const fractionMatch = matches[7];\n                if (dayMatch != null || hourMatch != null || minuteMatch != null || secondMatch != null) {\n                    const daysAsSecs = Duration._parseNumber(text, dayMatch, LocalTime.SECONDS_PER_DAY, 'days');\n                    const hoursAsSecs = Duration._parseNumber(text, hourMatch, LocalTime.SECONDS_PER_HOUR, 'hours');\n                    const minsAsSecs = Duration._parseNumber(text, minuteMatch, LocalTime.SECONDS_PER_MINUTE, 'minutes');\n                    const seconds = Duration._parseNumber(text, secondMatch, 1, 'seconds');\n                    const negativeSecs = secondMatch != null && secondMatch.charAt(0) === '-';\n                    const nanos = Duration._parseFraction(text,  fractionMatch, negativeSecs ? -1 : 1);\n                    try {\n                        return Duration._create(negate, daysAsSecs, hoursAsSecs, minsAsSecs, seconds, nanos);\n                    } catch (ex) {\n                        throw new DateTimeParseException('Text cannot be parsed to a Duration: overflow', text, 0, ex);\n                    }\n                }\n            }\n        }\n        throw new DateTimeParseException('Text cannot be parsed to a Duration', text, 0);\n    }\n\n    static _parseNumber(text, parsed, multiplier, errorText) {\n        // regex limits to [-+]?[0-9]+\n        if (parsed == null) {\n            return 0;\n        }\n        try {\n            if (parsed[0] === '+') {\n                parsed = parsed.substring(1);\n            }\n            return MathUtil.safeMultiply(parseFloat(parsed), multiplier);\n        } catch (ex) {\n            throw new DateTimeParseException(`Text cannot be parsed to a Duration: ${errorText}`, text, 0, ex);\n        }\n    }\n\n    static _parseFraction(text, parsed, negate) {\n        // regex limits to [0-9]{0,9}\n        if (parsed == null || parsed.length === 0) {\n            return 0;\n        }\n        parsed = (`${parsed}000000000`).substring(0, 9);\n        return parseFloat(parsed) * negate;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * to handle function overriding this function accepts any number of arguments, checks their type and delegates to the appropriate\n     * function\n     *\n     * @return {Duration}\n     */\n    static _create() {\n        if (arguments.length <= 2) {\n            return Duration._createSecondsNanos(arguments[0], arguments[1]);\n        } else {\n            return Duration._createNegateDaysHoursMinutesSecondsNanos(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n        }\n    }\n\n    static _createNegateDaysHoursMinutesSecondsNanos(negate, daysAsSecs, hoursAsSecs, minsAsSecs, secs, nanos) {\n        const seconds = MathUtil.safeAdd(daysAsSecs, MathUtil.safeAdd(hoursAsSecs, MathUtil.safeAdd(minsAsSecs, secs)));\n        if (negate) {\n            return Duration.ofSeconds(seconds, nanos).negated();\n        }\n        return Duration.ofSeconds(seconds, nanos);\n    }\n\n    /**\n     * Obtains an instance of {@link Duration} using seconds and nanoseconds.\n     *\n     * @param {Number} seconds - the length of the duration in seconds, positive or negative\n     * @param {Number} nanoAdjustment - the nanosecond adjustment within the second, from 0 to 999,999,999\n     */\n    static _createSecondsNanos(seconds = 0, nanoAdjustment = 0) {\n        if (seconds === 0 && nanoAdjustment === 0) {\n            return Duration.ZERO;\n        }\n        return new Duration(seconds, nanoAdjustment);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the value of the requested unit.\n     *\n     * This returns a value for each of the two supported units,\n     * {@link ChronoUnit#SECONDS} and {@link ChronoUnit#NANOS}.\n     * All other units throw an exception.\n     *\n     * @param {TemporalUnit} unit the {@link TemporalUnit} for which to return the value\n     * @return {number} the const value of the unit\n     * @throws DateTimeException if the unit is not supported\n     * @throws UnsupportedTemporalTypeException if the unit is not supported\n     */\n    get(unit) {\n        if (unit === ChronoUnit.SECONDS) {\n            return this._seconds;\n        } else if (unit === ChronoUnit.NANOS) {\n            return this._nanos;\n        } else {\n            throw new UnsupportedTemporalTypeException(`Unsupported unit: ${unit}`);\n        }\n    }\n\n    units() {\n        return [ChronoUnit.SECONDS, ChronoUnit.NANOS];\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Checks if this duration is zero length.\n     *\n     * A {@link Duration} represents a directed distance between two points on\n     * the time-line and can therefore be positive, zero or negative.\n     * This method checks whether the length is zero.\n     *\n     * @return {boolean} true if this duration has a total length equal to zero\n     */\n    isZero() {\n        return this._seconds === 0 && this._nanos === 0;\n    }\n\n    /**\n     * Checks if this duration is negative, excluding zero.\n     *\n     * A {@link Duration} represents a directed distance between two points on\n     * the time-line and can therefore be positive, zero or negative.\n     * This method checks whether the length is less than zero.\n     *\n     * @return {boolean} true if this duration has a total length less than zero\n     */\n    isNegative() {\n        return this._seconds < 0;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the number of seconds in this duration.\n     *\n     * The length of the duration is stored using two fields - seconds and nanoseconds.\n     * The nanoseconds part is a value from 0 to 999,999,999 that is an adjustment to\n     * the length in seconds.\n     * The total duration is defined by calling this method and {@link getNano}.\n     *\n     * A {@link Duration} represents a directed distance between two points on the time-line.\n     * A negative duration is expressed by the negative sign of the seconds part.\n     * A duration of -1 nanosecond is stored as -1 seconds plus 999,999,999 nanoseconds.\n     *\n     * @return {number} the whole seconds part of the length of the duration, positive or negative\n     */\n    seconds() {\n        return this._seconds;\n    }\n\n    /**\n     * Gets the number of nanoseconds within the second in this duration.\n     *\n     * The length of the duration is stored using two fields - seconds and nanoseconds.\n     * The nanoseconds part is a value from 0 to 999,999,999 that is an adjustment to\n     * the length in seconds.\n     * The total duration is defined by calling this method and {@link getSeconds}.\n     *\n     * A {@link Duration} represents a directed distance between two points on the time-line.\n     * A negative duration is expressed by the negative sign of the seconds part.\n     * A duration of -1 nanosecond is stored as -1 seconds plus 999,999,999 nanoseconds.\n     *\n     * @return {number} the nanoseconds within the second part of the length of the duration, from 0 to 999,999,999\n     */\n    nano() {\n        return this._nanos;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this duration with the specified amount of seconds.\n     *\n     * This returns a duration with the specified seconds, retaining the\n     * nano-of-second part of this duration.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Number} seconds - the seconds to represent, may be negative\n     * @return {Duration} based on this period with the requested seconds, not null\n     */\n    withSeconds(seconds) {\n        return Duration._create(seconds, this._nanos);\n    }\n\n    /**\n     * Returns a copy of this duration with the specified nano-of-second.\n     *\n     * This returns a duration with the specified nano-of-second, retaining the\n     * seconds part of this duration.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Number} nanoOfSecond - the nano-of-second to represent, from 0 to 999,999,999\n     * @return {Duration} based on this period with the requested nano-of-second, not null\n     * @throws DateTimeException if the nano-of-second is invalid\n     */\n    withNanos(nanoOfSecond) {\n        ChronoField.NANO_OF_SECOND.checkValidIntValue(nanoOfSecond);\n        return Duration._create(this._seconds, nanoOfSecond);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this duration with the specified duration added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Duration} duration - the duration to add, positive or negative, not null\n     * @return {Duration} based on this duration with the specified duration added, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    plusDuration(duration) {\n        requireNonNull(duration, 'duration');\n        return this.plus(duration.seconds(), duration.nano());\n    }\n\n\n    /**\n     * function overloading for {@link Duration.plus}\n     *\n     * if called with 1 arguments, then {@link Duration.plusDuration} is executed.\n     *\n     * if called with 2 arguments and second argument is an instance of TemporalUnit, then {@link Duration.plusAmountUnit} is executed.\n     *\n     * Otherwise {@link Duration.plusSecondsNanos} is executed.\n     *\n     * @param {!(Duration|number)} durationOrNumber\n     * @param {!TemporalUnit|number} unitOrNumber\n     * @returns {Duration}\n     */\n    plus(durationOrNumber, unitOrNumber) {\n        if (arguments.length === 1) {\n            return this.plusDuration(durationOrNumber);\n        }\n        else if (arguments.length === 2 && unitOrNumber instanceof TemporalUnit) {\n            return this.plusAmountUnit(durationOrNumber, unitOrNumber);\n        } else {\n            return this.plusSecondsNanos(durationOrNumber, unitOrNumber);\n        }\n    }\n\n    /**\n     * Returns a copy of this duration with the specified duration added.\n     *\n     * The duration amount is measured in terms of the specified unit.\n     * Only a subset of units are accepted by this method.\n     * The unit must either have an exact duration (see {@link TemporalUnit#isDurationEstimated}) or\n     * be {@link ChronoUnit#DAYS} which is treated as 24 hours. Other units throw an exception.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Number} amountToAdd - the amount to add, measured in terms of the unit, positive or negative\n     * @param {TemporalUnit} unit - the unit that the amount is measured in, must have an exact duration, not null\n     * @return {Duration} based on this duration with the specified duration added, not null\n     * @throws UnsupportedTemporalTypeException if the unit is not supported\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    plusAmountUnit(amountToAdd, unit) {\n        requireNonNull(amountToAdd, 'amountToAdd');\n        requireNonNull(unit, 'unit');\n        if (unit === ChronoUnit.DAYS) {\n            return this.plusSecondsNanos(MathUtil.safeMultiply(amountToAdd, LocalTime.SECONDS_PER_DAY), 0);\n        }\n        if (unit.isDurationEstimated()) {\n            throw new UnsupportedTemporalTypeException('Unit must not have an estimated duration');\n        }\n        if (amountToAdd === 0) {\n            return this;\n        }\n        if (unit instanceof ChronoUnit) {\n            switch (unit) {\n                case ChronoUnit.NANOS: return this.plusNanos(amountToAdd);\n                case ChronoUnit.MICROS: return this.plusSecondsNanos(MathUtil.intDiv(amountToAdd, (1000000 * 1000)) * 1000, MathUtil.intMod(amountToAdd, (1000000 * 1000)) * 1000);\n                case ChronoUnit.MILLIS: return this.plusMillis(amountToAdd);\n                case ChronoUnit.SECONDS: return this.plusSeconds(amountToAdd);\n            }\n            return this.plusSecondsNanos(MathUtil.safeMultiply(unit.duration().seconds(), amountToAdd), 0);\n        }\n        const duration = unit.duration().multipliedBy(amountToAdd);\n        return this.plusSecondsNanos(duration.seconds(), duration.nano());\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this duration with the specified duration in 24 hour days added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Number} daysToAdd - the days to add, positive or negative\n     * @return {Duration} based on this duration with the specified days added, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    plusDays(daysToAdd) {\n        return this.plusSecondsNanos(MathUtil.safeMultiply(daysToAdd, LocalTime.SECONDS_PER_DAY), 0);\n    }\n\n    /**\n     * Returns a copy of this duration with the specified duration in hours added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Number} hoursToAdd - the hours to add, positive or negative\n     * @return {Duration} based on this duration with the specified hours added, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    plusHours(hoursToAdd) {\n        return this.plusSecondsNanos(MathUtil.safeMultiply(hoursToAdd, LocalTime.SECONDS_PER_HOUR), 0);\n    }\n\n    /**\n     * Returns a copy of this duration with the specified duration in minutes added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Number} minutesToAdd - the minutes to add, positive or negative\n     * @return {Duration} based on this duration with the specified minutes added, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    plusMinutes(minutesToAdd) {\n        return this.plusSecondsNanos(MathUtil.safeMultiply(minutesToAdd, LocalTime.SECONDS_PER_MINUTE), 0);\n    }\n\n    /**\n     * Returns a copy of this duration with the specified duration in seconds added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Number} secondsToAdd - the seconds to add, positive or negative\n     * @return {Duration} based on this duration with the specified seconds added, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    plusSeconds(secondsToAdd) {\n        return this.plusSecondsNanos(secondsToAdd, 0);\n    }\n\n    /**\n     * Returns a copy of this duration with the specified duration in milliseconds added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Number} millisToAdd - the milliseconds to add, positive or negative\n     * @return {Duration} based on this duration with the specified milliseconds added, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    plusMillis(millisToAdd) {\n        return this.plusSecondsNanos(MathUtil.intDiv(millisToAdd, 1000), MathUtil.intMod(millisToAdd, 1000) * 1000000);\n    }\n\n    /**\n     * Returns a copy of this duration with the specified duration in nanoseconds added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Number} nanosToAdd - the nanoseconds to add, positive or negative\n     * @return {Duration} based on this duration with the specified nanoseconds added, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    plusNanos(nanosToAdd) {\n        return this.plusSecondsNanos(0, nanosToAdd);\n    }\n\n    /**\n     * Returns a copy of this duration with the specified duration added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Number} secondsToAdd - the seconds to add, positive or negative\n     * @param {Number} nanosToAdd - the nanos to add, positive or negative\n     * @return {Duration} based on this duration with the specified seconds added, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    plusSecondsNanos(secondsToAdd, nanosToAdd) {\n        requireNonNull(secondsToAdd, 'secondsToAdd');\n        requireNonNull(nanosToAdd, 'nanosToAdd');\n        if (secondsToAdd === 0 && nanosToAdd === 0) {\n            return this;\n        }\n        let epochSec = MathUtil.safeAdd(this._seconds, secondsToAdd);\n        epochSec = MathUtil.safeAdd(epochSec, MathUtil.intDiv(nanosToAdd, LocalTime.NANOS_PER_SECOND));\n        nanosToAdd = MathUtil.intMod(nanosToAdd, LocalTime.NANOS_PER_SECOND);\n        const nanoAdjustment = MathUtil.safeAdd(this._nanos, nanosToAdd);  // safe int+LocalTime.NANOS_PER_SECOND\n        return Duration.ofSeconds(epochSec, nanoAdjustment);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * function overloading for {@link Duration.minus}\n     *\n     * if called with 1 arguments and first argument is an instance of Duration, then {@link Duration.minusDuration} is executed.\n     *\n     * Otherwise {@link Duration.minusAmountUnit} is executed.\n     *\n     * @param {!(Duration|number)} durationOrNumber\n     * @param {?TemporalUnit} unit\n     * @return {Duration}\n     */\n    minus(durationOrNumber, unit) {\n        if (arguments.length === 1) {\n            return this.minusDuration(durationOrNumber);\n        } else {\n            return this.minusAmountUnit(durationOrNumber, unit);\n        }\n    }\n\n    /**\n     * Returns a copy of this duration with the specified duration subtracted.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Duration} duration - the duration to subtract, positive or negative, not null\n     * @return {Duration} based on this duration with the specified duration subtracted, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    minusDuration(duration) {\n        requireNonNull(duration, 'duration');\n        const secsToSubtract = duration.seconds();\n        const nanosToSubtract = duration.nano();\n        if (secsToSubtract === MIN_SAFE_INTEGER) {\n            return this.plus(MAX_SAFE_INTEGER, -nanosToSubtract);\n        }\n        return this.plus(-secsToSubtract, -nanosToSubtract);\n    }\n\n    /**\n     * Returns a copy of this duration with the specified duration subtracted.\n     *\n     * The duration amount is measured in terms of the specified unit.\n     * Only a subset of units are accepted by this method.\n     * The unit must either have an exact duration (see {@link TemporalUnit#isDurationEstimated}) or\n     * be {@link ChronoUnit#DAYS} which is treated as 24 hours. Other units throw an exception.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Number} amountToSubtract - the amount to subtract, measured in terms of the unit, positive or negative\n     * @param {TemporalUnit} unit - the unit that the amount is measured in, must have an exact duration, not null\n     * @return {Duration} based on this duration with the specified duration subtracted, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    minusAmountUnit(amountToSubtract, unit) {\n        requireNonNull(amountToSubtract, 'amountToSubtract');\n        requireNonNull(unit, 'unit');\n        return (amountToSubtract === MIN_SAFE_INTEGER ? this.plusAmountUnit(MAX_SAFE_INTEGER, unit) : this.plusAmountUnit(-amountToSubtract, unit));\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this duration with the specified duration in 24 hour days subtracted.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Number} daysToSubtract - the days to subtract, positive or negative\n     * @return {Duration} based on this duration with the specified days subtracted, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    minusDays(daysToSubtract) {\n        return (daysToSubtract === MIN_SAFE_INTEGER ? this.plusDays(MAX_SAFE_INTEGER) : this.plusDays(-daysToSubtract));\n    }\n\n    /**\n     * Returns a copy of this duration with the specified duration in hours subtracted.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Number} hoursToSubtract - the hours to subtract, positive or negative\n     * @return {Duration} based on this duration with the specified hours subtracted, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    minusHours(hoursToSubtract) {\n        return (hoursToSubtract === MIN_SAFE_INTEGER ? this.plusHours(MAX_SAFE_INTEGER) : this.plusHours(-hoursToSubtract));\n    }\n\n    /**\n     * Returns a copy of this duration with the specified duration in minutes subtracted.\n     *\n     * The number of hours is multiplied by 60 to obtain the number of seconds to subtract.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Number} minutesToSubtract - the minutes to subtract, positive or negative\n     * @return {Duration} based on this duration with the specified minutes subtracted, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    minusMinutes(minutesToSubtract) {\n        return (minutesToSubtract === MIN_SAFE_INTEGER ? this.plusMinutes(MAX_SAFE_INTEGER) : this.plusMinutes(-minutesToSubtract));\n    }\n\n    /**\n     * Returns a copy of this duration with the specified duration in seconds subtracted.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Number} secondsToSubtract - the seconds to subtract, positive or negative\n     * @return {Duration} based on this duration with the specified seconds subtracted, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    minusSeconds(secondsToSubtract) {\n        return (secondsToSubtract === MIN_SAFE_INTEGER ? this.plusSeconds(MAX_SAFE_INTEGER) : this.plusSeconds(-secondsToSubtract));\n    }\n\n    /**\n     * Returns a copy of this duration with the specified duration in milliseconds subtracted.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Number} millisToSubtract - the milliseconds to subtract, positive or negative\n     * @return {Duration} based on this duration with the specified milliseconds subtracted, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    minusMillis(millisToSubtract) {\n        return (millisToSubtract === MIN_SAFE_INTEGER ? this.plusMillis(MAX_SAFE_INTEGER) : this.plusMillis(-millisToSubtract));\n    }\n\n    /**\n     * Returns a copy of this duration with the specified duration in nanoseconds subtracted.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Number} nanosToSubtract - the nanoseconds to subtract, positive or negative\n     * @return {Duration} based on this duration with the specified nanoseconds subtracted, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    minusNanos(nanosToSubtract) {\n        return (nanosToSubtract === MIN_SAFE_INTEGER ? this.plusNanos(MAX_SAFE_INTEGER) : this.plusNanos(-nanosToSubtract));\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this duration multiplied by the scalar.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Number} multiplicand - the value to multiply the duration by, positive or negative\n     * @return {Duration} based on this duration multiplied by the specified scalar, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    multipliedBy(multiplicand) {\n        if (multiplicand === 0) {\n            return Duration.ZERO;\n        }\n        if (multiplicand === 1) {\n            return this;\n        }\n        let secs = MathUtil.safeMultiply(this._seconds, multiplicand);\n        let nos = MathUtil.safeMultiply(this._nanos, multiplicand);\n        secs = secs + MathUtil.intDiv(nos, LocalTime.NANOS_PER_SECOND);\n        nos = MathUtil.intMod(nos, LocalTime.NANOS_PER_SECOND);\n        return Duration.ofSeconds(secs, nos);\n    }\n\n    /**\n     * Returns a copy of this duration divided by the specified value.\n     *\n     * In opposite to the threeten implementation the division is realized by floating point not by\n     * fixed point arithmetic. Expect floating point rounding errors for {@link Duration.dividedBy}.\n     *\n     * @param {Number} divisor - the value to divide the duration by, positive or negative, not zero\n     * @return {Duration} based on this duration divided by the specified divisor, not null\n     * @throws ArithmeticException if the divisor is zero or if numeric overflow occurs\n     */\n    dividedBy(divisor) {\n        if (divisor === 0) {\n            throw new ArithmeticException('Cannot divide by zero');\n        }\n        if (divisor === 1) {\n            return this;\n        }\n        const secs = MathUtil.intDiv(this._seconds, divisor);\n        const secsMod = MathUtil.roundDown(((this._seconds/ divisor) - secs) * LocalTime.NANOS_PER_SECOND);\n        let nos = MathUtil.intDiv(this._nanos, divisor);\n        nos = secsMod + nos;\n        return Duration.ofSeconds(secs, nos);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this duration with the length negated.\n     *\n     * This method swaps the sign of the total length of this duration.\n     * For example, {@link PT1.3S} will be returned as {@link PT-1.3S}.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @return {Duration} based on this duration with the amount negated, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    negated() {\n        return this.multipliedBy(-1);\n    }\n\n    /**\n     * Returns a copy of this duration with a positive length.\n     *\n     * This method returns a positive duration by effectively removing the sign from any negative total length.\n     * For example, {@link PT-1.3S} will be returned as {@link PT1.3S}.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @return {Duration} based on this duration with an absolute length, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    abs() {\n        return this.isNegative() ? this.negated() : this;\n    }\n\n    //-------------------------------------------------------------------------\n    /**\n     * Adds this duration to the specified temporal object.\n     *\n     * This returns a temporal object of the same observable type as the input\n     * with this duration added.\n     *\n     * In most cases, it is clearer to reverse the calling pattern by using\n     * {@link Temporal#plus}.\n     * <pre>\n     *   // these two lines are equivalent, but the second approach is recommended\n     *   dateTime = thisDuration.addTo(dateTime);\n     *   dateTime = dateTime.plus(thisDuration);\n     * </pre>\n     *\n     * The calculation will add the seconds, then nanos.\n     * Only non-zero amounts will be added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Temporal} temporal - the temporal object to adjust, not null\n     * @return {Temporal} an object of the same type with the adjustment made, not null\n     * @throws DateTimeException if unable to add\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    addTo(temporal) {\n        requireNonNull(temporal, 'temporal');\n        if (this._seconds !== 0) {\n            temporal = temporal.plus(this._seconds, ChronoUnit.SECONDS);\n        }\n        if (this._nanos !== 0) {\n            temporal = temporal.plus(this._nanos, ChronoUnit.NANOS);\n        }\n        return temporal;\n    }\n\n    /**\n     * Subtracts this duration from the specified temporal object.\n     *\n     * This returns a temporal object of the same observable type as the input\n     * with this duration subtracted.\n     *\n     * In most cases, it is clearer to reverse the calling pattern by using\n     * {@link Temporal#minus}.\n     * <pre>\n     *   // these two lines are equivalent, but the second approach is recommended\n     *   dateTime = thisDuration.subtractFrom(dateTime);\n     *   dateTime = dateTime.minus(thisDuration);\n     * </pre>\n     *\n     * The calculation will subtract the seconds, then nanos.\n     * Only non-zero amounts will be added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Temporal} temporal - the temporal object to adjust, not null\n     * @return {Temporal} an object of the same type with the adjustment made, not null\n     * @throws DateTimeException if unable to subtract\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    subtractFrom(temporal) {\n        requireNonNull(temporal, 'temporal');\n        if (this._seconds !== 0) {\n            temporal = temporal.minus(this._seconds, ChronoUnit.SECONDS);\n        }\n        if (this._nanos !== 0) {\n            temporal = temporal.minus(this._nanos, ChronoUnit.NANOS);\n        }\n        return temporal;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the number of days in this duration.\n     *\n     * This returns the total number of days in the duration by dividing the\n     * number of seconds by 86400.\n     * This is based on the standard definition of a day as 24 hours.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @return {number} the number of days in the duration, may be negative\n     */\n    toDays() {\n        return MathUtil.intDiv(this._seconds, LocalTime.SECONDS_PER_DAY);\n    }\n\n    /**\n     * Gets the number of hours in this duration.\n     *\n     * This returns the total number of hours in the duration by dividing the\n     * number of seconds by 3600.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @return {number} the number of hours in the duration, may be negative\n     */\n    toHours() {\n        return MathUtil.intDiv(this._seconds, LocalTime.SECONDS_PER_HOUR);\n    }\n\n    /**\n     * Gets the number of minutes in this duration.\n     *\n     * This returns the total number of minutes in the duration by dividing the\n     * number of seconds by 60.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @return {number} the number of minutes in the duration, may be negative\n     */\n    toMinutes() {\n        return MathUtil.intDiv(this._seconds, LocalTime.SECONDS_PER_MINUTE);\n    }\n\n    /**\n     * Converts this duration to the total length in milliseconds.\n     *\n     * If this duration is too large to fit in a `long` milliseconds, then an\n     * exception is thrown.\n     *\n     * If this duration has greater than millisecond precision, then the conversion\n     * will drop any excess precision information as though the amount in nanoseconds\n     * was subject to integer division by one million.\n     *\n     * @return {number} the total length of the duration in milliseconds\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    toMillis() {\n        let millis = Math.round(MathUtil.safeMultiply(this._seconds, 1000));\n        millis = MathUtil.safeAdd(millis, MathUtil.intDiv(this._nanos, 1000000));\n        return millis;\n    }\n\n    /**\n     * Converts this duration to the total length in nanoseconds expressed as a `long`.\n     *\n     * If this duration is too large to fit in a `long` nanoseconds, then an\n     * exception is thrown.\n     *\n     * @return {number} the total length of the duration in nanoseconds\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    toNanos() {\n        let totalNanos = MathUtil.safeMultiply(this._seconds, LocalTime.NANOS_PER_SECOND);\n        totalNanos = MathUtil.safeAdd(totalNanos, this._nanos);\n        return totalNanos;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Compares this duration to the specified {@link Duration}.\n     *\n     * The comparison is based on the total length of the durations.\n     *\n     * @param {Duration} otherDuration - the other duration to compare to, not null\n     * @return {number} the comparator value, negative if less, positive if greater\n     */\n    compareTo(otherDuration) {\n        requireNonNull(otherDuration, 'otherDuration');\n        requireInstance(otherDuration, Duration, 'otherDuration');\n        const cmp = MathUtil.compareNumbers(this._seconds, otherDuration.seconds());\n        if (cmp !== 0) {\n            return cmp;\n        }\n        return this._nanos - otherDuration.nano();\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Checks if this duration is equal to the specified {@link Duration}.\n     *\n     * The comparison is based on the total length of the durations.\n     *\n     * @param {*} otherDuration - the other duration, null returns false\n     * @return {boolean} true if the other duration is equal to this one\n     */\n    equals(otherDuration) {\n        if (this === otherDuration) {\n            return true;\n        }\n        if (otherDuration instanceof Duration) {\n            return this.seconds() === otherDuration.seconds() &&\n                   this.nano() === otherDuration.nano();\n        }\n        return false;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * A string representation of this duration using ISO-8601 seconds\n     * based representation, such as {@link PT8H6M12.345S}.\n     *\n     * The format of the returned string will be {@link PTnHnMnS}, where n is\n     * the relevant hours, minutes or seconds part of the duration.\n     * Any fractional seconds are placed after a decimal point in the seconds section.\n     * If a section has a zero value, it is omitted.\n     * The hours, minutes and seconds will all have the same sign.\n     *\n     * Examples:\n     * <pre>\n     *    \"20.345 seconds\"                 -> \"PT20.345S\n     *    \"15 minutes\" (15 * 60 seconds)   -> \"PT15M\"\n     *    \"10 hours\" (10 * 3600 seconds)   -> \"PT10H\"\n     *    \"2 days\" (2 * 86400 seconds)     -> \"PT48H\"\n     * </pre>\n     * Note that multiples of 24 hours are not output as days to avoid confusion\n     * with {@link Period}.\n     *\n     * @return {string} an ISO-8601 representation of this duration, not null\n     */\n    toString() {\n        if (this === Duration.ZERO) {\n            return 'PT0S';\n        }\n        const hours = MathUtil.intDiv(this._seconds, LocalTime.SECONDS_PER_HOUR);\n        const minutes = MathUtil.intDiv(MathUtil.intMod(this._seconds, LocalTime.SECONDS_PER_HOUR), LocalTime.SECONDS_PER_MINUTE);\n        const secs = MathUtil.intMod(this._seconds, LocalTime.SECONDS_PER_MINUTE);\n        let rval = 'PT';\n        if (hours !== 0) {\n            rval += `${hours}H`;\n        }\n        if (minutes !== 0) {\n            rval += `${minutes}M`;\n        }\n        if (secs === 0 && this._nanos === 0 && rval.length > 2) {\n            return rval;\n        }\n        if (secs < 0 && this._nanos > 0) {\n            if (secs === -1) {\n                rval += '-0';\n            } else {\n                rval += secs + 1;\n            }\n        } else {\n            rval += secs;\n        }\n        if (this._nanos > 0) {\n            rval += '.';\n            let nanoString;\n            if (secs < 0) {\n                nanoString = `${2 * LocalTime.NANOS_PER_SECOND - this._nanos}`;\n            } else {\n                nanoString = `${LocalTime.NANOS_PER_SECOND + this._nanos}`;\n            }\n            // remove the leading '1'\n            nanoString = nanoString.slice(1, nanoString.length);\n            rval += nanoString;\n            while (rval.charAt(rval.length - 1) === '0') {\n                rval = rval.slice(0, rval.length - 1);\n            }\n        }\n        rval += 'S';\n        return rval;\n    }\n\n    /**\n     *\n     * @return {string} same as {@link Duration.toString}\n     */\n    toJSON() {\n        return this.toString();\n    }\n\n}\n\nexport function _init() {\n    /**\n     * Constant for a duration of zero.\n     */\n    Duration.ZERO = new Duration(0, 0);\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @license BSD-3-Clause (see LICENSE.md in the root directory of this source tree)\n */\n\n/**\n * attempt to avoid dependency cycles... define all constants here and they could be used\n * so instead of using e.g. Year.MAX_VALUE we could use YearConstants.MAX_VALUE to avoid the cycle\n */\nexport class YearConstants {}\n\nexport function _init() {\n    /**\n     * The minimum supported year\n     */\n    YearConstants.MIN_VALUE = -999999;\n    /**\n     * The maximum supported year\n     */\n    YearConstants.MAX_VALUE = 999999;\n}\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { MathUtil } from '../MathUtil';\n\nimport { Duration } from '../Duration';\nimport { YearConstants } from '../YearConstants';\nimport { TemporalUnit } from './TemporalUnit';\n\n/**\n * A standard set of date periods units.\n *\n * This set of units provide unit-based access to manipulate a date, time or date-time.\n * The standard set of units can be extended by implementing {@link TemporalUnit}.\n *\n * These units are intended to be applicable in multiple calendar systems.\n * For example, most non-ISO calendar systems define units of years, months and days,\n * just with slightly different rules.\n * The documentation of each unit explains how it operates.\n *\n * ### Static properties:\n * \n * - `ChronoUnit.CENTURIES`: Unit that represents the concept of a century. For the ISO calendar\n * system, it is equal to 100 years.\n * \n * - `ChronoUnit.DAYS`: Unit that represents the concept of a day. For the ISO calendar system, it\n * is the standard day from midnight to midnight. The estimated duration of a day is 24 Hours.\n * \n * - `ChronoUnit.DECADES`: Unit that represents the concept of a decade. For the ISO calendar system,\n * it is equal to 10 years.\n * \n * - `ChronoUnit.ERAS`: Unit that represents the concept of an era. The ISO calendar system doesn't\n * have eras thus it is impossible to add an era to a date or date-time. The estimated duration of the\n * era is artificially defined as 1,000,000,000 Years.\n * \n * - `ChronoUnit.FOREVER`: Artificial unit that represents the concept of forever. This is primarily\n * used with {@link TemporalField} to represent unbounded fields such as the year or era. The\n * estimated duration of the era is artificially defined as the largest duration supported by\n * {@link Duration}.\n * \n * - `ChronoUnit.HALF_DAYS`: Unit that represents the concept of half a day, as used in AM/PM. For\n * the ISO calendar system, it is equal to 12 hours.\n *\n * - `ChronoUnit.HOURS`: Unit that represents the concept of an hour. For the ISO calendar system,\n * it is equal to 60 minutes.\n * \n * - `ChronoUnit.MICROS`: Unit that represents the concept of a microsecond. For the ISO calendar\n * system, it is equal to the 1,000,000th part of the second unit.\n * \n * - `ChronoUnit.MILLENNIA`: Unit that represents the concept of a millennium. For the ISO calendar\n * system, it is equal to 1,000 years.\n * \n * - `ChronoUnit.MILLIS`: Unit that represents the concept of a millisecond. For the ISO calendar\n * system, it is equal to the 1000th part of the second unit.\n * \n * - `ChronoUnit.MINUTES`: Unit that represents the concept of a minute. For the ISO calendar system,\n * it is equal to 60 seconds.\n * \n * - `ChronoUnit.MONTHS`: Unit that represents the concept of a month. For the ISO calendar system,\n * the length of the month varies by month-of-year. The estimated duration of a month is one twelfth\n * of 365.2425 Days.\n * \n * - `ChronoUnit.NANOS`: Unit that represents the concept of a nanosecond, the smallest supported unit\n * of time. For the ISO calendar system, it is equal to the 1,000,000,000th part of the second unit.\n * \n * - `ChronoUnit.SECONDS`: Unit that represents the concept of a second. For the ISO calendar system,\n * it is equal to the second in the SI system of units, except around a leap-second.\n * \n * - `ChronoUnit.WEEKS`: Unit that represents the concept of a week. For the ISO calendar system,\n * it is equal to 7 Days.\n * \n * - `ChronoUnit.YEARS`: Unit that represents the concept of a year. For the ISO calendar system, it\n * is equal to 12 months. The estimated duration of a year is 365.2425 Days.\n */\nexport class ChronoUnit extends TemporalUnit {\n\n    /**\n     *\n     * @param {String} name\n     * @param {Duration} estimatedDuration\n     * @private\n     */\n    constructor (name, estimatedDuration) {\n        super();\n        this._name = name;\n        this._duration = estimatedDuration;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * @return {Duration} the duration of this unit, which may be an estimate.\n     */\n    duration() {\n        return this._duration;\n    }\n\n    /**\n     * @return {boolean} `true` if the duration is estimated, `false` if accurate.\n     */\n    isDurationEstimated() {\n        return this.isDateBased() || this === ChronoUnit.FOREVER;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * @return {boolean} `true` if date unit, `false` if a time unit.\n     */\n    isDateBased() {\n        return this.compareTo(ChronoUnit.DAYS) >= 0 && this !== ChronoUnit.FOREVER;\n    }\n\n    /**\n     * Checks if this unit is a time unit.\n     *\n     * @return {boolean} `true` if time unit, `false` if a date unit.\n     */\n    isTimeBased() {\n        return this.compareTo(ChronoUnit.DAYS) < 0;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * @param {!Temporal} temporal the temporal object to check.\n     * @return {boolean} `true` if the unit is supported.\n     */\n    isSupportedBy(temporal) {\n        if (this === ChronoUnit.FOREVER) {\n            return false;\n        }\n        /* TODO: classes not implemented yet */\n        /*\n        if (temporal instanceof ChronoLocalDate) {\n            return isDateBased();\n        }\n        if (temporal instanceof ChronoLocalDateTime || temporal instanceof ChronoZonedDateTime) {\n            return true;\n        }\n*/\n        try {\n            temporal.plus(1, this);\n            return true;\n        } catch (e) {\n            try {\n                temporal.plus(-1, this);\n                return true;\n            } catch (e2) {\n                return false;\n            }\n        }\n    }\n\n    /**\n     * @param {!Temporal} temporal the temporal object to adjust.\n     * @param {number} amount the period of this unit to add, positive or negative.\n     * @return {Temporal} the adjusted temporal object.\n     * @throws DateTimeException if the period cannot be added.\n     */\n    addTo(temporal, amount) {\n        return temporal.plus(amount, this);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * @param {!Temporal} temporal1 the base temporal object.\n     * @param {!Temporal} temporal2 the other temporal object.\n     * @return {number} the period between temporal1 and temporal2 in terms of this unit;\n     *  positive if temporal2 is later than temporal1, negative if earlier.\n     * @throws DateTimeException if the period cannot be calculated.\n     * @throws ArithmeticException if numeric overflow occurs.\n     */\n    between(temporal1, temporal2) {\n        return temporal1.until(temporal2, this);\n    }\n\n    //-----------------------------------------------------------------------\n    toString() {\n        return this._name;\n    }\n\n    /**\n     * Compares this ChronoUnit to the specified {@link TemporalUnit}.\n     *\n     * The comparison is based on the total length of the durations.\n     *\n     * @param {!TemporalUnit} other the other unit to compare to.\n     * @return the comparator value, negative if less, positive if greater.\n     */\n    compareTo(other) {\n        return this.duration().compareTo(other.duration());\n    }\n\n}\n\nexport function _init() {\n    /**\n     * Unit that represents the concept of a nanosecond, the smallest supported unit of time.\n     * For the ISO calendar system, it is equal to the 1,000,000,000th part of the second unit.\n     */\n    ChronoUnit.NANOS = new ChronoUnit('Nanos', Duration.ofNanos(1));\n    /**\n     * Unit that represents the concept of a microsecond.\n     * For the ISO calendar system, it is equal to the 1,000,000th part of the second unit.\n     */\n    ChronoUnit.MICROS = new ChronoUnit('Micros', Duration.ofNanos(1000));\n    /**\n     * Unit that represents the concept of a millisecond.\n     * For the ISO calendar system, it is equal to the 1000th part of the second unit.\n     */\n    ChronoUnit.MILLIS = new ChronoUnit('Millis', Duration.ofNanos(1000000));\n    /**\n     * Unit that represents the concept of a second.\n     * For the ISO calendar system, it is equal to the second in the SI system\n     * of units, except around a leap-second.\n     */\n    ChronoUnit.SECONDS = new ChronoUnit('Seconds', Duration.ofSeconds(1));\n    /**\n     * Unit that represents the concept of a minute.\n     * For the ISO calendar system, it is equal to 60 seconds.\n     */\n    ChronoUnit.MINUTES = new ChronoUnit('Minutes', Duration.ofSeconds(60));\n    /**\n     * Unit that represents the concept of an hour.\n     * For the ISO calendar system, it is equal to 60 minutes.\n     */\n    ChronoUnit.HOURS = new ChronoUnit('Hours', Duration.ofSeconds(3600));\n    /**\n     * Unit that represents the concept of half a day, as used in AM/PM.\n     * For the ISO calendar system, it is equal to 12 hours.\n     */\n    ChronoUnit.HALF_DAYS = new ChronoUnit('HalfDays', Duration.ofSeconds(43200));\n    /**\n     * Unit that represents the concept of a day.\n     * For the ISO calendar system, it is the standard day from midnight to midnight.\n     * The estimated duration of a day is 24 hours.\n     *\n     * When used with other calendar systems it must correspond to the day defined by\n     * the rising and setting of the Sun on Earth. It is not required that days begin\n     * at midnight - when converting between calendar systems, the date should be\n     * equivalent at midday.\n     */\n    ChronoUnit.DAYS = new ChronoUnit('Days', Duration.ofSeconds(86400));\n    /**\n     * Unit that represents the concept of a week.\n     * For the ISO calendar system, it is equal to 7 days.\n     *\n     * When used with other calendar systems it must correspond to an integral number of days.\n     */\n    ChronoUnit.WEEKS = new ChronoUnit('Weeks', Duration.ofSeconds(7 * 86400));\n    /**\n     * Unit that represents the concept of a month.\n     * For the ISO calendar system, the length of the month varies by month-of-year.\n     * The estimated duration of a month is one twelfth of 365.2425 days.\n     *\n     * When used with other calendar systems it must correspond to an integral number of days.\n     */\n    ChronoUnit.MONTHS = new ChronoUnit('Months', Duration.ofSeconds(31556952 / 12));\n    /**\n     * Unit that represents the concept of a year.\n     * For the ISO calendar system, it is equal to 12 months.\n     * The estimated duration of a year is 365.2425 days.\n     *\n     * When used with other calendar systems it must correspond to an integral number of days\n     * or months roughly equal to a year defined by the passage of the Earth around the Sun.\n     */\n    ChronoUnit.YEARS = new ChronoUnit('Years', Duration.ofSeconds(31556952));\n    /**\n     * Unit that represents the concept of a decade.\n     * For the ISO calendar system, it is equal to 10 years.\n     *\n     * When used with other calendar systems it must correspond to an integral number of days\n     * and is normally an integral number of years.\n     */\n    ChronoUnit.DECADES = new ChronoUnit('Decades', Duration.ofSeconds(31556952 * 10));\n    /**\n     * Unit that represents the concept of a century.\n     * For the ISO calendar system, it is equal to 100 years.\n     *\n     * When used with other calendar systems it must correspond to an integral number of days\n     * and is normally an integral number of years.\n     */\n    ChronoUnit.CENTURIES = new ChronoUnit('Centuries', Duration.ofSeconds(31556952 * 100));\n    /**\n     * Unit that represents the concept of a millennium.\n     * For the ISO calendar system, it is equal to 1000 years.\n     *\n     * When used with other calendar systems it must correspond to an integral number of days\n     * and is normally an integral number of years.\n     */\n    ChronoUnit.MILLENNIA = new ChronoUnit('Millennia', Duration.ofSeconds(31556952 * 1000));\n    /**\n     * Unit that represents the concept of an era.\n     * The ISO calendar system doesn't have eras thus it is impossible to add\n     * an era to a date or date-time.\n     * The estimated duration of the era is artificially defined as {Year.MAX_VALUE} + 1.\n     *\n     * When used with other calendar systems there are no restrictions on the unit.\n     */\n    ChronoUnit.ERAS = new ChronoUnit('Eras', Duration.ofSeconds(31556952 * (YearConstants.MAX_VALUE + 1)));\n    /**\n     * Artificial unit that represents the concept of forever.\n     * This is primarily used with {@link TemporalField} to represent unbounded fields\n     * such as the year or era.\n     * The estimated duration of the era is artificially defined as the largest duration\n     * supported by {@link Duration}.\n     */\n    ChronoUnit.FOREVER = new ChronoUnit('Forever', Duration.ofSeconds(MathUtil.MAX_SAFE_INTEGER, 999999999));\n}\n","import { abstractMethodFail } from '../assert';\n\n/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\n/**\n * A field of date-time, such as month-of-year or hour-of-minute.\n *\n * Date and time is expressed using fields which partition the time-line into something\n * meaningful for humans. Implementations of this interface represent those fields.\n *\n * The most commonly used units are defined in {@link ChronoField}.\n * Further fields are supplied in {@link IsoFields}, {@link WeekFields} and {@link JulianFields}.\n * Fields can also be written by application code by implementing this interface.\n *\n * The field works using double dispatch. Client code calls methods on a date-time like\n * {@link LocalDateTime} which check if the field is a {@link ChronoField}.\n * If it is, then the date-time must handle it.\n * Otherwise, the method call is re-dispatched to the matching method in this interface.\n *\n * @interface\n */\nexport class TemporalField {\n    /**\n     * Checks if this field represents a component of a date.\n     *\n     * @return {boolean} `true` if it is a component of a date, `false` otherwise.\n     */\n    isDateBased() {\n        abstractMethodFail('isDateBased');\n    }\n\n    /**\n     * Checks if this field represents a component of a time.\n     *\n     * @return {boolean} `true` if it is a component of a time, `false` otherwise.\n     */\n    isTimeBased() {\n        abstractMethodFail('isTimeBased');\n    }\n\n    /**\n     * Gets the unit that the field is measured in.\n     *\n     * The unit of the field is the period that varies within the range.\n     * For example, in the field 'MonthOfYear', the unit is 'Months'.\n     * See also {@link rangeUnit}.\n     *\n     * @return {TemporalUnit} the period unit defining the base unit of the field.\n     */\n    baseUnit() {\n        abstractMethodFail('baseUnit');\n    }\n\n    /**\n     * Gets the range that the field is bound by.\n     * \n     * The range of the field is the period that the field varies within.\n     * For example, in the field 'MonthOfYear', the range is 'Years'.\n     * See also {@link baseUnit}.\n     * \n     * The range is never null. For example, the 'Year' field is shorthand for\n     * 'YearOfForever'. It therefore has a unit of 'Years' and a range of 'Forever'.\n     *\n     * @return {TemporalUnit} the period unit defining the range of the field.\n     */\n    rangeUnit() {\n        abstractMethodFail('rangeUnit');\n    }\n\n    /**\n     * Gets the range of valid values for the field.\n     *\n     * All fields can be expressed as an integer.\n     * This method returns an object that describes the valid range for that value.\n     * This method is generally only applicable to the ISO-8601 calendar system.\n     *\n     * Note that the result only describes the minimum and maximum valid values\n     * and it is important not to read too much into them. For example, there\n     * could be values within the range that are invalid for the field.\n     *\n     * @return {ValueRange} the range of valid values for the field.\n     */\n    range() {\n        abstractMethodFail('range');\n    }\n\n    /**\n     * Get the range of valid values for this field using the temporal object to\n     * refine the result.\n     *\n     * This uses the temporal object to find the range of valid values for the field.\n     * This is similar to {@link range}, however this method refines the result\n     * using the temporal. For example, if the field is {@link DAY_OF_MONTH} the\n     * {@link range} method is not accurate as there are four possible month lengths,\n     * 28, 29, 30 and 31 days. Using this method with a date allows the range to be\n     * accurate, returning just one of those four options.\n     *\n     * There are two equivalent ways of using this method.\n     * The first is to invoke this method directly.\n     * The second is to use {@link TemporalAccessor#range}:\n     * <pre>\n     *   // these two lines are equivalent, but the second approach is recommended\n     *   temporal = thisField.rangeRefinedBy(temporal);\n     *   temporal = temporal.range(thisField);\n     * </pre>\n     * It is recommended to use the second approach, {@link range},\n     * as it is a lot clearer to read in code.\n     *\n     * Implementations should perform any queries or calculations using the fields\n     * available in {@link ChronoField}.\n     * If the field is not supported a {@link DateTimeException} must be thrown.\n     *\n     * @param {!TemporalAccessor} temporal the temporal object used to refine the result.\n     * @return {ValueRange} the range of valid values for this field.\n     * @throws {DateTimeException} if the range for the field cannot be obtained.\n     * \n     */\n    // eslint-disable-next-line no-unused-vars\n    rangeRefinedBy(temporal) {\n        abstractMethodFail('rangeRefinedBy');\n    }\n\n    /**\n     * Gets the value of this field from the specified temporal object.\n     *\n     * This queries the temporal object for the value of this field.\n     *\n     * There are two equivalent ways of using this method.\n     * The first is to invoke this method directly.\n     * The second is to use {@link TemporalAccessor#get}:\n     * <pre>\n     *   // these two lines are equivalent, but the second approach is recommended\n     *   temporal = thisField.getFrom(temporal);\n     *   temporal = temporal.get(thisField);\n     * </pre>\n     * It is recommended to use the second approach, as it is a lot clearer to read in code.\n     *\n     * Implementations should perform any queries or calculations using the fields\n     * available in {@link ChronoField}.\n     * If the field is not supported a {@link DateTimeException} must be thrown.\n     *\n     * @param {!TemporalAccesor} temporal the temporal object to query.\n     * @return {number} the value of this field.\n     * @throws {DateTimeException} if a value for the field cannot be obtained.\n     */\n    // eslint-disable-next-line no-unused-vars\n    getFrom(temporal) {\n        abstractMethodFail('getFrom');\n    }\n\n    /**\n     * Returns a copy of the specified temporal object with the value of this field set.\n     *\n     * This returns a new temporal object based on the specified one with the value for\n     * this field changed. For example, on a {@link LocalDate}, this could be used to\n     * set the year, month or day-of-month.\n     * The returned object has the same observable type as the specified object.\n     *\n     * In some cases, changing a field is not fully defined. For example, if the target object is\n     * a date representing the 31st January, then changing the month to February would be unclear.\n     * In cases like this, the implementation is responsible for resolving the result.\n     * Typically it will choose the previous valid date, which would be the last valid\n     * day of February in this example.\n     *\n     * There are two equivalent ways of using this method.\n     * The first is to invoke this method directly.\n     * The second is to use {@link Temporal#with}:\n     * <pre>\n     *   // these two lines are equivalent, but the second approach is recommended\n     *   temporal = thisField.adjustInto(temporal);\n     *   temporal = temporal.with(thisField);\n     * </pre>\n     * It is recommended to use the second approach, `with(temporal)`,\n     * as it is a lot clearer to read in code.\n     *\n     * Implementations should perform any queries or calculations using the fields\n     * available in {@link ChronoField}.\n     * If the field is not supported a {@link DateTimeException} must be thrown.\n     *\n     * Implementations must not alter the specified temporal object.\n     * Instead, an adjusted copy of the original must be returned.\n     * This provides equivalent, safe behavior for immutable and mutable implementations.\n     *\n     * @param {!Temporal} temporal the temporal object to adjust.\n     * @param {!number} newValue the new value of the field.\n     * @return {Temporal} the adjusted temporal object.\n     * @throws {DateTimeException} if the field cannot be set.\n     */\n    // eslint-disable-next-line no-unused-vars\n    adjustInto(temporal, newValue) {\n        abstractMethodFail('adjustInto');\n    }\n\n    /**\n     * Checks if this field is supported by the temporal object.\n     *\n     * This determines whether the temporal accessor supports this field.\n     * If this returns false, the the temporal cannot be queried for this field.\n     *\n     * There are two equivalent ways of using this method.\n     * The first is to invoke this method directly.\n     * The second is to use {@link TemporalAccessor#isSupported}:\n     * <pre>\n     *   // these two lines are equivalent, but the second approach is recommended\n     *   temporal = thisField.isSupportedBy(temporal);\n     *   temporal = temporal.isSupported(thisField);\n     * </pre>\n     * It is recommended to use the second approach, `isSupported(temporal)`,\n     * as it is a lot clearer to read in code.\n     *\n     * Implementations should determine whether they are supported using the fields\n     * available in {@link ChronoField}.\n     *\n     * @param {!TemporalAccesor} temporal the temporal object to query.\n     * @return {boolean} `true` if the date-time can be queried for this field, `false` if not.\n     */\n    // eslint-disable-next-line no-unused-vars\n    isSupportedBy(temporal) {\n        abstractMethodFail('isSupportedBy');\n    }\n\n    /**\n     * @return {string}\n     */\n    displayName(/* TODO: locale */) {\n        abstractMethodFail('displayName');\n    }\n\n    /**\n    * @param {*} other\n    * @returns {boolean}\n    */\n    // eslint-disable-next-line no-unused-vars\n    equals(other) {\n        abstractMethodFail('equals');\n    }\n\n    /**\n     * @returns {string}\n     */\n    name() {\n        abstractMethodFail('name');\n    }\n}\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { assert } from '../assert';\nimport { DateTimeException, IllegalArgumentException } from '../errors';\nimport { MathUtil } from '../MathUtil';\n\n/**\n * The range of valid values for a date-time field.\n *\n * All TemporalField instances have a valid range of values.\n * For example, the ISO day-of-month runs from 1 to somewhere between 28 and 31.\n * This class captures that valid range.\n *\n * It is important to be aware of the limitations of this class.\n * Only the minimum and maximum values are provided.\n * It is possible for there to be invalid values within the outer range.\n * For example, a weird field may have valid values of 1, 2, 4, 6, 7, thus\n * have a range of '1 - 7', despite that fact that values 3 and 5 are invalid.\n *\n * Instances of this class are not tied to a specific field.\n */\nexport class ValueRange {\n\n    /**\n     *\n     * @param {!number} minSmallest\n     * @param {!number} minLargest\n     * @param {!number} maxSmallest\n     * @param {!number} maxLargest\n     * @private\n     */\n    constructor(minSmallest, minLargest, maxSmallest, maxLargest) {\n        assert(!(minSmallest > minLargest), `Smallest minimum value '${minSmallest \n        }' must be less than largest minimum value '${minLargest}'`, IllegalArgumentException);\n        assert(!(maxSmallest > maxLargest), `Smallest maximum value '${maxSmallest \n        }' must be less than largest maximum value '${maxLargest}'`, IllegalArgumentException);\n        assert(!(minLargest > maxLargest), `Minimum value '${minLargest \n        }' must be less than maximum value '${maxLargest}'`, IllegalArgumentException);\n\n        this._minSmallest = minSmallest;\n        this._minLargest = minLargest;\n        this._maxLargest = maxLargest;\n        this._maxSmallest = maxSmallest;\n    }\n\n    /**\n     * Is the value range fixed and fully known.\n     *\n     * For example, the ISO day-of-month runs from 1 to between 28 and 31.\n     * Since there is uncertainty about the maximum value, the range is not fixed.\n     * However, for the month of January, the range is always 1 to 31, thus it is fixed.\n     *\n     * @return {boolean} true if the set of values is fixed\n     */\n    isFixed() {\n        return this._minSmallest === this._minLargest && this._maxSmallest === this._maxLargest;\n    }\n\n    /**\n     *\n     * @returns {number}\n     */\n    minimum(){\n        return this._minSmallest;\n    }\n\n    /**\n     *\n     * @returns {number}\n     */\n    largestMinimum(){\n        return this._minLargest;\n    }\n\n    /**\n     *\n     * @returns {number}\n     */\n    maximum(){\n        return this._maxLargest;\n    }\n\n    /**\n     *\n     * @returns {number}\n     */\n    smallestMaximum(){\n        return this._maxSmallest;\n    }\n\n    /**\n     *\n     * @returns {boolean}\n     */\n    isValidValue(value) {\n        return (this.minimum() <= value && value <= this.maximum());\n    }\n\n    /**\n     *\n     * @param {number} value\n     * @param {TemporalField} field\n     */\n    checkValidValue(value, field) {\n        let msg;\n        if (!this.isValidValue(value)) {\n            if (field != null) {\n                msg = `Invalid value for ${field} (valid values ${this.toString()}): ${value}`;\n            } else {\n                msg = `Invalid value (valid values ${this.toString()}): ${value}`;\n            }\n            return assert(false, msg, DateTimeException);\n        }\n        return value;\n    }\n\n    /**\n     * Checks that the specified value is valid and fits in an `int`.\n     *\n     * This validates that the value is within the valid range of values and that\n     * all valid values are within the bounds of an `int`.\n     * The field is only used to improve the error message.\n     *\n     * @param {number} value - the value to check\n     * @param {TemporalField} field - the field being checked, may be null\n     * @return {number} the value that was passed in\n     * @see #isValidIntValue(long)\n     */\n    checkValidIntValue(value, field) {\n        if (this.isValidIntValue(value) === false) {\n            throw new DateTimeException(`Invalid int value for ${field}: ${value}`);\n        }\n        return value;\n    }\n\n    /**\n     * Checks if the value is within the valid range and that all values\n     * in the range fit in an `int`.\n     *\n     * This method combines {@link isIntValue} and {@link isValidValue}.\n     *\n     * @param {number} value - the value to check\n     * @return true if the value is valid and fits in an `int`\n     */\n    isValidIntValue(value) {\n        return this.isIntValue() && this.isValidValue(value);\n    }\n\n    /**\n     * Checks if all values in the range fit in an `int`.\n     *\n     * This checks that all valid values are within the bounds of an `int`.\n     *\n     * For example, the ISO month-of-year has values from 1 to 12, which fits in an `int`.\n     * By comparison, ISO nano-of-day runs from 1 to 86,400,000,000,000 which does not fit in an `int`.\n     *\n     * This implementation uses {@link getMinimum} and {@link getMaximum}.\n     *\n     * @return boolean if a valid value always fits in an `int`\n     */\n    isIntValue() { // should be isSafeIntegerValue\n        return this.minimum() >= MathUtil.MIN_SAFE_INTEGER && this.maximum() <= MathUtil.MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if this range is equal to another range.\n     *\n     * The comparison is based on the four values, minimum, largest minimum,\n     * smallest maximum and maximum.\n     * Only objects of type {@link ValueRange} are compared, other types return false.\n     *\n     * @param {*} other - the object to check, null returns false\n     * @return {boolean} true if this is equal to the other range\n     */\n    equals(other) {\n        if (other === this) {\n            return true;\n        }\n        if (other instanceof ValueRange) {\n            return this._minSmallest === other._minSmallest && this._minLargest === other._minLargest &&\n                this._maxSmallest === other._maxSmallest && this._maxLargest === other._maxLargest;\n        }\n        return false;\n    }\n\n    /**\n     * A hash code for this range.\n     *\n     * @return {number} a suitable hash code\n     */\n    hashCode() {\n        return MathUtil.hashCode(this._minSmallest, this._minLargest, this._maxSmallest, this._maxLargest);\n    }\n\n    /*\n     * Outputs this range as a String.\n     *\n     * The format will be '{min}/{largestMin} - {smallestMax}/{max}',\n     * where the largestMin or smallestMax sections may be omitted, together\n     * with associated slash, if they are the same as the min or max.\n     *\n     * @return {string} a string representation of this range, not null\n     */\n    toString() {\n        let str = this.minimum() + (this.minimum() !== this.largestMinimum() ? `/${this.largestMinimum()}` : '');\n        str += ' - ';\n        str += this.smallestMaximum() + (this.smallestMaximum() !== this.maximum() ? `/${this.maximum()}` : '');\n        return str;\n    }\n\n    /*\n     * called with 2 params: Obtains a fixed value range.\n     *\n     * This factory obtains a range where the minimum and maximum values are fixed.\n     * For example, the ISO month-of-year always runs from 1 to 12.\n     *\n     * @param min  the minimum value\n     * @param max  the maximum value\n     * @return the ValueRange for min, max, not null\n\n     * called with 3 params: Obtains a variable value range.\n     *\n     * This factory obtains a range where the minimum value is fixed and the maximum value may vary.\n     * For example, the ISO day-of-month always starts at 1, but ends between 28 and 31.\n     *\n     * @param min  the minimum value\n     * @param maxSmallest  the smallest maximum value\n     * @param maxLargest  the largest maximum value\n     * @return the ValueRange for min, smallest max, largest max, not null\n\n     * called with 4 params: Obtains a fully variable value range.\n     *\n     * This factory obtains a range where both the minimum and maximum value may vary.\n     *\n     * @param minSmallest  the smallest minimum value\n     * @param minLargest  the largest minimum value\n     * @param maxSmallest  the smallest maximum value\n     * @param maxLargest  the largest maximum value\n     *\n     * @return {ValueRange} the ValueRange for smallest min, largest min, smallest max, largest max, not null\n     */\n    static of() {\n        if (arguments.length === 2) {\n            return new ValueRange(arguments[0], arguments[0], arguments[1], arguments[1]);\n        } else if (arguments.length === 3) {\n            return new ValueRange(arguments[0], arguments[0], arguments[1], arguments[2]);\n        } else if (arguments.length === 4) {\n            return new ValueRange(arguments[0], arguments[1], arguments[2], arguments[3]);\n        } else {\n            return assert(false, `Invalid number of arguments ${arguments.length}`, IllegalArgumentException);\n        }\n    }\n}\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { MAX_SAFE_INTEGER, MIN_SAFE_INTEGER } from '../MathUtil';\n\nimport { ChronoUnit } from './ChronoUnit';\nimport { TemporalField } from './TemporalField';\nimport { ValueRange } from './ValueRange';\nimport { YearConstants } from '../YearConstants';\n\n/**\n * A standard set of fields.\n *\n * This set of fields provide field-based access to manipulate a date, time or date-time.\n * The standard set of fields can be extended by implementing {@link TemporalField}.\n *\n * These fields are intended to be applicable in multiple calendar systems.\n * For example, most non-ISO calendar systems define dates as a year, month and day,\n * just with slightly different rules.\n * The documentation of each field explains how it operates.\n *\n * ### Static properties:\n *\n * - `ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH`: This represents concept of the count of\n * days within the period of a week where the weeks are aligned to the start of the month.\n * This field is typically used with `ALIGNED_WEEK_OF_MONTH`.\n * \n * - `ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR`: This represents concept of the count of days\n * within the period of a week where the weeks are aligned to the start of the year.\n * This field is typically used with `ALIGNED_WEEK_OF_YEAR`.\n * \n * - `ChronoField.ALIGNED_WEEK_OF_MONTH`: This represents concept of the count of weeks within\n * the period of a month where the weeks are aligned to the start of the month. This field\n * is typically used with `ALIGNED_DAY_OF_WEEK_IN_MONTH`.\n * \n * - `ChronoField.ALIGNED_WEEK_OF_YEAR`: This represents concept of the count of weeks within\n * the period of a year where the weeks are aligned to the start of the year. This field\n * is typically used with `ALIGNED_DAY_OF_WEEK_IN_YEAR`.\n * \n * - `ChronoField.AMPM_OF_DAY`: This counts the AM/PM within the day, from 0 (AM) to 1 (PM).\n * \n * - `ChronoField.CLOCK_HOUR_OF_AMPM`: This counts the hour within the AM/PM, from 1 to 12.\n * This is the hour that would be observed on a standard 12-hour analog wall clock.\n * \n * - `ChronoField.CLOCK_HOUR_OF_DAY`: This counts the hour within the AM/PM, from 1 to 24.\n * This is the hour that would be observed on a 24-hour analog wall clock.\n * \n * - `ChronoField.DAY_OF_MONTH`: This represents the concept of the day within the month.\n * In the default ISO calendar system, this has values from 1 to 31 in most months.\n * April, June, September, November have days from 1 to 30, while February has days from\n * 1 to 28, or 29 in a leap year.\n * \n * - `ChronoField.DAY_OF_WEEK`: This represents the standard concept of the day of the week.\n * In the default ISO calendar system, this has values from Monday (1) to Sunday (7).\n * The {@link DayOfWeek} class can be used to interpret the result.\n * \n * - `ChronoField.DAY_OF_YEAR`: This represents the concept of the day within the year.\n * In the default ISO calendar system, this has values from 1 to 365 in standard years and\n * 1 to 366 in leap years.\n * \n * - `ChronoField.EPOCH_DAY`: This field is the sequential count of days where\n * 1970-01-01 (ISO) is zero. Note that this uses the local time-line, ignoring offset and\n * time-zone.\n * \n * - `ChronoField.ERA`: This represents the concept of the era, which is the largest\n * division of the time-line. This field is typically used with `YEAR_OF_ERA`.\n * \n *     In the default ISO calendar system, there are two eras defined, 'BCE' and 'CE'. The era\n * 'CE' is the one currently in use and year-of-era runs from 1 to the maximum value.\n * The era 'BCE' is the previous era, and the year-of-era runs backwards.\n * \n * - `ChronoField.HOUR_OF_AMPM`: This counts the hour within the AM/PM, from 0 to 11.\n * This is the hour that would be observed on a standard 12-hour digital clock.\n * \n * - `ChronoField.HOUR_OF_DAY`: This counts the hour within the day, from 0 to 23. This is\n * the hour that would be observed on a standard 24-hour digital clock.\n * \n * - `ChronoField.INSTANT_SECONDS`: This represents the concept of the sequential count of\n * seconds where 1970-01-01T00:00Z (ISO) is zero. This field may be used with `NANO_OF_DAY`\n * to represent the fraction of the day.\n * \n *     An Instant represents an instantaneous point on the time-line. On their own they have\n * no elements which allow a local date-time to be obtained. Only when paired with an offset\n * or time-zone can the local date or time be found. This field allows the seconds part of\n * the instant to be queried.\n * \n * - `ChronoField.MICRO_OF_DAY`: This counts the microsecond within the day, from 0 to\n * (24 * 60 * 60 * 1,000,000) - 1.\n * \n *     This field is used to represent the micro-of-day handling any fraction of the second.\n * Implementations of {@link TemporalAccessor} should provide a value for this field if they\n * can return a value for `SECOND_OF_DAY` filling unknown precision with zero.\n * \n *     When this field is used for setting a value, it should behave in the same way as\n * setting `NANO_OF_DAY` with the value multiplied by 1,000.\n * \n * - `ChronoField.MICRO_OF_SECOND`: This counts the microsecond within the second, from 0\n * to 999,999.\n * \n *     This field is used to represent the micro-of-second handling any fraction of the second.\n * Implementations of {@link TemporalAccessor} should provide a value for this field if they\n * can return a value for `SECOND_OF_MINUTE`, `SECOND_OF_DAY` or `INSTANT_SECONDS` filling\n * unknown precision with zero.\n * \n * - `ChronoField.MILLI_OF_DAY`: This counts the millisecond within the day, from 0 to\n * (24 * 60 * 60 * 1,000) - 1.\n * \n *     This field is used to represent the milli-of-day handling any fraction of the second.\n * Implementations of {@link TemporalAccessor} should provide a value for this field if they\n * can return a value for `SECOND_OF_DAY` filling unknown precision with zero.\n * \n *     When this field is used for setting a value, it should behave in the same way as\n * setting `NANO_OF_DAY` with the value multiplied by 1,000,000.\n * \n * - `ChronoField.MILLI_OF_SECOND`: This counts the millisecond within the second, from 0 to\n * 999.\n * \n *     This field is used to represent the milli-of-second handling any fraction of the second.\n * Implementations of {@link TemporalAccessor} should provide a value for this field if they can\n * return a value for `SECOND_OF_MINUTE`, `SECOND_OF_DAY` or `INSTANT_SECONDS` filling unknown\n * precision with zero.\n * \n *     When this field is used for setting a value, it should behave in the same way as\n * setting `NANO_OF_SECOND` with the value multiplied by 1,000,000.\n * \n * - `ChronoField.MINUTE_OF_DAY`: This counts the minute within the day, from 0 to (24 * 60) - 1.\n * \n * - `ChronoField.MINUTE_OF_HOUR`: This counts the minute within the hour, from 0 to 59.\n * \n * - `ChronoField.MONTH_OF_YEAR`: The month-of-year, such as March. This represents the concept\n * of the month within the year. In the default ISO calendar system, this has values from\n * January (1) to December (12).\n * \n * - `ChronoField.NANO_OF_DAY`: This counts the nanosecond within the day, from 0 to\n * (24 * 60 * 60 * 1,000,000,000) - 1.\n * \n *     This field is used to represent the nano-of-day handling any fraction of the second.\n * Implementations of {@link TemporalAccessor} should provide a value for this field if they\n * can return a value for `SECOND_OF_DAY` filling unknown precision with zero.\n * \n * - `ChronoField.NANO_OF_SECOND`: This counts the nanosecond within the second, from 0\n * to 999,999,999.\n * \n *     This field is used to represent the nano-of-second handling any fraction of the second.\n * Implementations of {@link TemporalAccessor} should provide a value for this field if they\n * can return a value for `SECOND_OF_MINUTE`, `SECOND_OF_DAY` or `INSTANT_SECONDS` filling\n * unknown precision with zero.\n * \n *     When this field is used for setting a value, it should set as much precision as the\n * object stores, using integer division to remove excess precision. For example, if the\n * {@link TemporalAccessor} stores time to millisecond precision, then the nano-of-second must\n * be divided by 1,000,000 before replacing the milli-of-second.\n * \n * - `ChronoField.OFFSET_SECONDS`: This represents the concept of the offset in seconds of\n * local time from UTC/Greenwich.\n * \n *     A {@link ZoneOffset} represents the period of time that local time differs from\n * UTC/Greenwich. This is usually a fixed number of hours and minutes. It is equivalent to\n * the total amount of the offset in seconds. For example, during the winter Paris has an\n * offset of +01:00, which is 3600 seconds.\n * \n * - `ChronoField.PROLEPTIC_MONTH`: The proleptic-month, which counts months sequentially\n * from year 0.\n * \n *     The first month in year zero has the value zero. The value increase for later months\n * and decrease for earlier ones. Note that this uses the local time-line, ignoring offset\n * and time-zone.\n * \n * - `ChronoField.SECOND_OF_DAY`: This counts the second within the day, from 0 to\n * (24 * 60 * 60) - 1.\n * \n * - `ChronoField.SECOND_OF_MINUTE`: This counts the second within the minute, from 0 to 59.\n * \n * - `ChronoField.YEAR`: The proleptic year, such as 2012. This represents the concept of\n * the year, counting sequentially and using negative numbers. The proleptic year is not\n * interpreted in terms of the era.\n * \n *     The standard mental model for a date is based on three concepts - year, month and day.\n * These map onto the `YEAR`, `MONTH_OF_YEAR` and `DAY_OF_MONTH` fields. Note that there is no\n * reference to eras. The full model for a date requires four concepts - era, year, month and\n * day. These map onto the `ERA`, `YEAR_OF_ERA`, `MONTH_OF_YEAR` and `DAY_OF_MONTH` fields.\n * Whether this field or `YEAR_OF_ERA` is used depends on which mental model is being used.\n * \n * - `ChronoField.YEAR_OF_ERA`: This represents the concept of the year within the era. This\n * field is typically used with `ERA`. The standard mental model for a date is based on three\n * concepts - year, month and day. These map onto the `YEAR`, `MONTH_OF_YEAR` and\n * `DAY_OF_MONTH` fields. Note that there is no reference to eras. The full model for a date\n * requires four concepts - era, year, month and day. These map onto the `ERA`, `YEAR_OF_ERA`,\n * `MONTH_OF_YEAR` and `DAY_OF_MONTH` fields. Whether this field or `YEAR` is used depends on\n * which mental model is being used.\n * \n *     In the default ISO calendar system, there are two eras defined, 'BCE' and 'CE'.\n * The era 'CE' is the one currently in use and year-of-era runs from 1 to the maximum value.\n * The era 'BCE' is the previous era, and the year-of-era runs backwards.\n * \n *     For example, subtracting a year each time yield the following:\n *    - year-proleptic 2 = 'CE' year-of-era 2\n *    - year-proleptic 1 = 'CE' year-of-era 1\n *    - year-proleptic 0 = 'BCE' year-of-era 1\n *    - year-proleptic -1 = 'BCE' year-of-era 2\n * \n *     Note that the ISO-8601 standard does not actually define eras. Note also that the\n * ISO eras do not align with the well-known AD/BC eras due to the change between the Julian\n * and Gregorian calendar systems.\n */\nexport class ChronoField extends TemporalField {\n\n    /**\n     * helper function to get one of the static ChronoField defines by name, needed to resolve ChronoField from EnumMap\n     *\n     * @param {String} fieldName\n     * @return {ChronoField | null}\n     * @private\n     */\n    static byName(fieldName) {\n        for (const prop in ChronoField) {\n            if (ChronoField[prop]) {\n                if ((ChronoField[prop] instanceof ChronoField) && ChronoField[prop].name() === fieldName) {\n                    return ChronoField[prop];\n                }\n            }\n        }\n    }\n\n    /**\n     *\n     * @param {!string} name\n     * @param {!TemporalUnit} baseUnit\n     * @param {!TemporalUnit} rangeUnit\n     * @param {!ValueRange} range\n     * @private\n     */\n    constructor(name, baseUnit, rangeUnit, range) {\n        super();\n        this._name = name;\n        this._baseUnit = baseUnit;\n        this._rangeUnit = rangeUnit;\n        this._range = range;\n    }\n\n    /**\n     * @return {string}\n     */\n    name(){\n        return this._name;\n    }\n\n    /**\n     * @return {TemporalUnit} the period unit defining the base unit of the field.\n     */\n    baseUnit(){\n        return this._baseUnit;\n    }\n\n    /**\n     * @return {TemporalUnit} the period unit defining the range of the field.\n     */\n    rangeUnit(){\n        return this._rangeUnit;\n    }\n\n    /**\n     * @return {ValueRange} the range of valid values for the field.\n     */\n    range(){\n        return this._range;\n    }\n\n    /**\n     * @returns {string}\n     */\n    displayName(){\n        return this.toString();\n    }\n\n    /**\n     * Checks that the specified value is valid for this field.\n     *\n     * This validates that the value is within the outer range of valid values\n     * returned by {@link range}.\n     *\n     * This method checks against the range of the field in the ISO-8601 calendar system.\n     *\n     * @param {!number} value the value to check.\n     * @returns {number} the value that was passed in.\n     */\n    checkValidValue(value) {\n        return this.range().checkValidValue(value, this);\n    }\n\n    /**\n     * Checks that the specified value is valid and fits in an `int`.\n     *\n     * This validates that the value is within the outer range of valid values\n     * returned by {@link range}.\n     * It also checks that all valid values are within the bounds of an `int`.\n     *\n     * This method checks against the range of the field in the ISO-8601 calendar system.\n     *\n     * @param {number} value the value to check.\n     * @return {number} the value that was passed in.\n     */\n    checkValidIntValue(value) {\n        return this.range().checkValidIntValue(value, this);\n    }\n\n    /**\n     * @return {boolean} `true` if it is a component of a date, `false` otherwise.\n     */\n    isDateBased() {\n        const dateBased =\n            this === ChronoField.DAY_OF_WEEK ||\n            this === ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH ||\n            this === ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR ||\n            this === ChronoField.DAY_OF_MONTH ||\n            this === ChronoField.DAY_OF_YEAR ||\n            this === ChronoField.EPOCH_DAY ||\n            this === ChronoField.ALIGNED_WEEK_OF_MONTH ||\n            this === ChronoField.ALIGNED_WEEK_OF_YEAR ||\n            this === ChronoField.MONTH_OF_YEAR ||\n            this === ChronoField.PROLEPTIC_MONTH ||\n            this === ChronoField.YEAR_OF_ERA ||\n            this === ChronoField.YEAR ||\n            this === ChronoField.ERA;\n        return dateBased;\n    }\n\n    /**\n     * @return {boolean} `true` if it is a component of a time, `false` otherwise.\n     */\n    isTimeBased() {\n        const timeBased =\n            this === ChronoField.NANO_OF_SECOND     ||\n            this === ChronoField.NANO_OF_DAY        ||\n            this === ChronoField.MICRO_OF_SECOND    ||\n            this === ChronoField.MICRO_OF_DAY       ||\n            this === ChronoField.MILLI_OF_SECOND    ||\n            this === ChronoField.MILLI_OF_DAY       ||\n            this === ChronoField.SECOND_OF_MINUTE   ||\n            this === ChronoField.SECOND_OF_DAY      ||\n            this === ChronoField.MINUTE_OF_HOUR     ||\n            this === ChronoField.MINUTE_OF_DAY      ||\n            this === ChronoField.HOUR_OF_AMPM       ||\n            this === ChronoField.CLOCK_HOUR_OF_AMPM ||\n            this === ChronoField.HOUR_OF_DAY        ||\n            this === ChronoField.CLOCK_HOUR_OF_DAY  ||\n            this === ChronoField.AMPM_OF_DAY;\n        return timeBased;\n    }\n\n    /**\n     * @param {!TemporalAccessor} temporal the temporal object used to refine the result.\n     * @return {ValueRange} the range of valid values for this field.\n     * @throws {DateTimeException} if the range for the field cannot be obtained.\n     */\n    rangeRefinedBy(temporal) {\n        return temporal.range(this);\n    }\n\n    \n\n    /**\n     * @param {!TemporalAccesor} temporal the temporal object to query.\n     * @return {number} the value of this field.\n     * @throws {DateTimeException} if a value for the field cannot be obtained.\n     */\n    getFrom(temporal) {\n        return temporal.getLong(this);\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString(){\n        return this.name();\n    }\n\n    /**\n     * @param {*} other\n     * @returns {boolean}\n     */\n    equals(other){\n        return this === other;\n    }\n\n    /**\n     * @param {!Temporal} temporal the temporal object to adjust.\n     * @param {!number} newValue the new value of the field.\n     * @return {Temporal} the adjusted temporal object.\n     * @throws {DateTimeException} if the field cannot be set.\n     */\n    adjustInto(temporal, newValue) {\n        return temporal.with(this, newValue);\n    }\n\n    /**\n     * @param {!TemporalAccesor} temporal the temporal object to query.\n     * @return {boolean} `true` if the date-time can be queried for this field, `false` if not.\n     */\n    isSupportedBy(temporal) {\n        return temporal.isSupported(this);\n    }\n}\n\nexport function _init() {\n\n    ChronoField.NANO_OF_SECOND = new ChronoField('NanoOfSecond', ChronoUnit.NANOS, ChronoUnit.SECONDS, ValueRange.of(0, 999999999));\n\n    ChronoField.NANO_OF_DAY = new ChronoField('NanoOfDay', ChronoUnit.NANOS, ChronoUnit.DAYS, ValueRange.of(0, 86400 * 1000000000 - 1));\n\n    ChronoField.MICRO_OF_SECOND = new ChronoField('MicroOfSecond', ChronoUnit.MICROS, ChronoUnit.SECONDS, ValueRange.of(0, 999999));\n\n    ChronoField.MICRO_OF_DAY = new ChronoField('MicroOfDay', ChronoUnit.MICROS, ChronoUnit.DAYS, ValueRange.of(0, 86400 * 1000000 - 1));\n\n    ChronoField.MILLI_OF_SECOND = new ChronoField('MilliOfSecond', ChronoUnit.MILLIS, ChronoUnit.SECONDS, ValueRange.of(0, 999));\n\n    ChronoField.MILLI_OF_DAY = new ChronoField('MilliOfDay', ChronoUnit.MILLIS, ChronoUnit.DAYS, ValueRange.of(0, 86400 * 1000 - 1));\n\n    ChronoField.SECOND_OF_MINUTE = new ChronoField('SecondOfMinute', ChronoUnit.SECONDS, ChronoUnit.MINUTES, ValueRange.of(0, 59));\n\n    ChronoField.SECOND_OF_DAY = new ChronoField('SecondOfDay', ChronoUnit.SECONDS, ChronoUnit.DAYS, ValueRange.of(0, 86400 - 1));\n\n    ChronoField.MINUTE_OF_HOUR = new ChronoField('MinuteOfHour', ChronoUnit.MINUTES, ChronoUnit.HOURS, ValueRange.of(0, 59));\n\n    ChronoField.MINUTE_OF_DAY = new ChronoField('MinuteOfDay', ChronoUnit.MINUTES, ChronoUnit.DAYS, ValueRange.of(0, (24 * 60) - 1));\n\n    ChronoField.HOUR_OF_AMPM = new ChronoField('HourOfAmPm', ChronoUnit.HOURS, ChronoUnit.HALF_DAYS, ValueRange.of(0, 11));\n\n    ChronoField.CLOCK_HOUR_OF_AMPM = new ChronoField('ClockHourOfAmPm', ChronoUnit.HOURS, ChronoUnit.HALF_DAYS, ValueRange.of(1, 12));\n\n    ChronoField.HOUR_OF_DAY = new ChronoField('HourOfDay', ChronoUnit.HOURS, ChronoUnit.DAYS, ValueRange.of(0, 23));\n\n    ChronoField.CLOCK_HOUR_OF_DAY = new ChronoField('ClockHourOfDay', ChronoUnit.HOURS, ChronoUnit.DAYS, ValueRange.of(1, 24));\n\n    ChronoField.AMPM_OF_DAY = new ChronoField('AmPmOfDay', ChronoUnit.HALF_DAYS, ChronoUnit.DAYS, ValueRange.of(0, 1));\n\n    ChronoField.DAY_OF_WEEK = new ChronoField('DayOfWeek', ChronoUnit.DAYS, ChronoUnit.WEEKS, ValueRange.of(1, 7));\n\n    ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH = new ChronoField('AlignedDayOfWeekInMonth', ChronoUnit.DAYS, ChronoUnit.WEEKS, ValueRange.of(1, 7));\n\n    ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR = new ChronoField('AlignedDayOfWeekInYear', ChronoUnit.DAYS, ChronoUnit.WEEKS, ValueRange.of(1, 7));\n\n    ChronoField.DAY_OF_MONTH = new ChronoField('DayOfMonth', ChronoUnit.DAYS, ChronoUnit.MONTHS, ValueRange.of(1, 28, 31), 'day');\n\n    ChronoField.DAY_OF_YEAR = new ChronoField('DayOfYear', ChronoUnit.DAYS, ChronoUnit.YEARS, ValueRange.of(1, 365, 366));\n\n    ChronoField.EPOCH_DAY = new ChronoField('EpochDay', ChronoUnit.DAYS, ChronoUnit.FOREVER, ValueRange.of(-365961662, 364522971)); // [LocalDate.MIN.toEpochDay() .. LocalDate.MAX.toEpochDay()]\n\n    ChronoField.ALIGNED_WEEK_OF_MONTH = new ChronoField('AlignedWeekOfMonth', ChronoUnit.WEEKS, ChronoUnit.MONTHS, ValueRange.of(1, 4, 5));\n\n    ChronoField.ALIGNED_WEEK_OF_YEAR = new ChronoField('AlignedWeekOfYear', ChronoUnit.WEEKS, ChronoUnit.YEARS, ValueRange.of(1, 53));\n\n    ChronoField.MONTH_OF_YEAR = new ChronoField('MonthOfYear', ChronoUnit.MONTHS, ChronoUnit.YEARS, ValueRange.of(1, 12), 'month');\n\n    ChronoField.PROLEPTIC_MONTH = new ChronoField('ProlepticMonth', ChronoUnit.MONTHS, ChronoUnit.FOREVER, ValueRange.of(YearConstants.MIN_VALUE * 12, YearConstants.MAX_VALUE * 12 + 11));\n\n    ChronoField.YEAR_OF_ERA = new ChronoField('YearOfEra', ChronoUnit.YEARS, ChronoUnit.FOREVER, ValueRange.of(1, YearConstants.MAX_VALUE, YearConstants.MAX_VALUE + 1));\n\n    ChronoField.YEAR = new ChronoField('Year', ChronoUnit.YEARS, ChronoUnit.FOREVER, ValueRange.of(YearConstants.MIN_VALUE, YearConstants.MAX_VALUE), 'year');\n\n    ChronoField.ERA = new ChronoField('Era', ChronoUnit.ERAS, ChronoUnit.FOREVER, ValueRange.of(0, 1));\n\n    ChronoField.INSTANT_SECONDS = new ChronoField('InstantSeconds', ChronoUnit.SECONDS, ChronoUnit.FOREVER, ValueRange.of(MIN_SAFE_INTEGER, MAX_SAFE_INTEGER));\n\n    ChronoField.OFFSET_SECONDS = new ChronoField('OffsetSeconds', ChronoUnit.SECONDS, ChronoUnit.FOREVER, ValueRange.of(-18 * 3600, 18 * 3600));\n\n}\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\n/**\n * Common implementations of {@link TemporalQuery}.\n *\n * This class provides common implementations of {@link TemporalQuery}.\n * These queries are primarily used as optimizations, allowing the internals\n * of other objects to be extracted effectively. Note that application code\n * can also use the {@link from} method on most temporal\n * objects as a method reference matching the query interface, such as\n * {@link LocalDate::from} and {@link ZoneId::from}.\n *\n * There are two equivalent ways of using a {@link TemporalQuery}.\n * The first is to invoke the method on the interface directly.\n * The second is to use {@link TemporalAccessor#query}:\n * <pre>\n *   // these two lines are equivalent, but the second approach is recommended\n *   dateTime = query.queryFrom(dateTime);\n *   dateTime = dateTime.query(query);\n * </pre>\n * It is recommended to use the second approach, {@link query},\n * as it is a lot clearer to read in code.\n *\n */\nexport class TemporalQueries {\n\n    /**\n     * A strict query for the {@link ZoneId}.\n     *\n     * This queries a {@link TemporalAccessor} for the zone.\n     * The zone is only returned if the date-time conceptually contains a {@link ZoneId}.\n     * It will not be returned if the date-time only conceptually has an {@link ZoneOffset}.\n     * Thus a {@link ZonedDateTime} will return the result of\n     * {@link getZone}, but an {@link OffsetDateTime} will\n     * return null.\n     *\n     * In most cases, applications should use {@link ZONE} as this query is too strict.\n     *\n     * The result from JDK classes implementing {@link TemporalAccessor} is as follows:\n     * * * {@link LocalDate} returns null\n     * * {@link LocalTime} returns null\n     * * {@link LocalDateTime} returns null\n     * * {@link ZonedDateTime} returns the associated zone\n     * * {@link OffsetTime} returns null\n     * * {@link OffsetDateTime} returns null\n     * * {@link ChronoLocalDate} returns null\n     * * {@link ChronoLocalDateTime} returns null\n     * * {@link ChronoZonedDateTime} returns the associated zone\n     * * {@link Era} returns null\n     * * {@link DayOfWeek} returns null\n     * * {@link Month} returns null\n     * * {@link Year} returns null\n     * * {@link YearMonth} returns null\n     * * {@link MonthDay} returns null\n     * * {@link ZoneOffset} returns null\n     * * {@link Instant} returns null\n     *\n     * @return a query that can obtain the zone ID of a temporal, not null\n     */\n    static zoneId() {\n        return TemporalQueries.ZONE_ID;\n    }\n\n    /**\n     * A query for the {@link Chronology}.\n     *\n     * This queries a {@link TemporalAccessor} for the chronology.\n     * If the target {@link TemporalAccessor} represents a date, or part of a date,\n     * then it should return the chronology that the date is expressed in.\n     * As a result of this definition, objects only representing time, such as\n     * {@link LocalTime}, will return null.\n     *\n     * The result from js-joda classes implementing {@link TemporalAccessor} is as follows:\n     *\n     * * {@link LocalDate} returns * {@link IsoChronology.INSTANCE}\n     * * {@link LocalTime} returns null (does not represent a date)\n     * * {@link LocalDateTime} returns * {@link IsoChronology.INSTANCE}\n     * * {@link ZonedDateTime} returns * {@link IsoChronology.INSTANCE}\n     * * {@link OffsetTime} returns null (does not represent a date)\n     * * {@link OffsetDateTime} returns * {@link IsoChronology.INSTANCE}\n     * * {@link ChronoLocalDate} returns the associated chronology\n     * * {@link ChronoLocalDateTime} returns the associated chronology\n     * * {@link ChronoZonedDateTime} returns the associated chronology\n     * * {@link Era} returns the associated chronology\n     * * {@link DayOfWeek} returns null (shared across chronologies)\n     * * {@link Month} returns * {@link IsoChronology.INSTANCE}\n     * * {@link Year} returns * {@link IsoChronology.INSTANCE}\n     * * {@link YearMonth} returns * {@link IsoChronology.INSTANCE}\n     * * {@link MonthDay} returns null * {@link IsoChronology.INSTANCE}\n     * * {@link ZoneOffset} returns null (does not represent a date)\n     * * {@link Instant} returns null (does not represent a date)\n     *\n     * The method {@link Chronology#from} can be used as a\n     * {@link TemporalQuery}\n     * That method is equivalent to this query, except that it throws an\n     * exception if a chronology cannot be obtained.\n     *\n     * @return {TemporalQuery} a query that can obtain the chronology of a temporal, not null\n     */\n    static chronology() {\n        return TemporalQueries.CHRONO;\n    }\n\n    /**\n     * A query for the smallest supported unit.\n     *\n     * This queries a {@link TemporalAccessor} for the time precision.\n     * If the target {@link TemporalAccessor} represents a consistent or complete date-time,\n     * date or time then this must return the smallest precision actually supported.\n     * Note that fields such as {@link NANO_OF_DAY} and {@link NANO_OF_SECOND}\n     * are defined to always return ignoring the precision, thus this is the only\n     * way to find the actual smallest supported unit.\n     * For example, were {@link GregorianCalendar} to implement {@link TemporalAccessor}\n     * it would return a precision of {@link MILLIS}.\n     *\n     * The result from js-joda classes implementing {@link TemporalAccessor} is as follows:\n     *\n     * {@link LocalDate} returns {@link DAYS}\n     * {@link LocalTime} returns {@link NANOS}\n     * {@link LocalDateTime} returns {@link NANOS}\n     * {@link ZonedDateTime} returns {@link NANOS}\n     * {@link OffsetTime} returns {@link NANOS}\n     * {@link OffsetDateTime} returns {@link NANOS}\n     * {@link ChronoLocalDate} returns {@link DAYS}\n     * {@link ChronoLocalDateTime} returns {@link NANOS}\n     * {@link ChronoZonedDateTime} returns {@link NANOS}\n     * {@link Era} returns {@link ERAS}\n     * {@link DayOfWeek} returns {@link DAYS}\n     * {@link Month} returns {@link MONTHS}\n     * {@link Year} returns {@link YEARS}\n     * {@link YearMonth} returns {@link MONTHS}\n     * {@link MonthDay} returns null (does not represent a complete date or time)\n     * {@link ZoneOffset} returns null (does not represent a date or time)\n     * {@link Instant} returns {@link NANOS}\n     *\n     * @return a query that can obtain the precision of a temporal, not null\n     */\n    static precision() {\n        return TemporalQueries.PRECISION;\n    }\n\n    /**\n     * A lenient query for the {@link ZoneId}, falling back to the {@link ZoneOffset}.\n     *\n     * This queries a {@link TemporalAccessor} for the zone.\n     * It first tries to obtain the zone, using {@link zoneId}.\n     * If that is not found it tries to obtain the {@link offset}.\n     *\n     * In most cases, applications should use this query rather than {@link zoneId}.\n     *\n     * This query examines the {@link ChronoField#OFFSET_SECONDS}\n     * field and uses it to create a {@link ZoneOffset}.\n     *\n     * The method {@link ZoneId#from} can be used as a\n     * {@link TemporalQuery} via a method reference, {@link ZoneId::from}.\n     * That method is equivalent to this query, except that it throws an\n     * exception if a zone cannot be obtained.\n     *\n     * @return a query that can obtain the zone ID or offset of a temporal, not null\n     */\n    static zone() {\n        return TemporalQueries.ZONE;\n    }\n\n    /**\n     * A query for {@link ZoneOffset} returning null if not found.\n     *\n     * This returns a {@link TemporalQuery} that can be used to query a temporal\n     * object for the offset. The query will return null if the temporal\n     * object cannot supply an offset.\n     *\n     * The query implementation examines the {@link ChronoField#OFFSET_SECONDS}\n     * field and uses it to create a {@link ZoneOffset}.\n     *\n     * The method {@link java.time.ZoneOffset#from} can be used as a\n     * {@link TemporalQuery} via a method reference, {@link ZoneOffset::from}.\n     * This query and {@link ZoneOffset::from} will return the same result if the\n     * temporal object contains an offset. If the temporal object does not contain\n     * an offset, then the method reference will throw an exception, whereas this\n     * query will return null.\n     *\n     * @return a query that can obtain the offset of a temporal, not null\n     */\n    static offset() {\n        return TemporalQueries.OFFSET;\n    }\n\n    /**\n     * A query for {@link LocalDate} returning null if not found.\n     *\n     * This returns a {@link TemporalQuery} that can be used to query a temporal\n     * object for the local date. The query will return null if the temporal\n     * object cannot supply a local date.\n     *\n     * The query implementation examines the {@link ChronoField#EPOCH_DAY}\n     * field and uses it to create a {@link LocalDate}.\n     *\n     * @return a query that can obtain the date of a temporal, not null\n     */\n    static localDate() {\n        return TemporalQueries.LOCAL_DATE;\n    }\n\n    /**\n     * A query for {@link LocalTime} returning null if not found.\n     *\n     * This returns a {@link TemporalQuery} that can be used to query a temporal\n     * object for the local time. The query will return null if the temporal\n     * object cannot supply a local time.\n     *\n     * The query implementation examines the {@link ChronoField#NANO_OF_DAY}\n     * field and uses it to create a {@link LocalTime}.\n     *\n     * @return a query that can obtain the time of a temporal, not null\n     */\n    static localTime() {\n        return TemporalQueries.LOCAL_TIME;\n    }\n}\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { UnsupportedTemporalTypeException } from '../errors';\nimport { abstractMethodFail } from '../assert';\n\nimport { ChronoField } from './ChronoField';\nimport { TemporalQueries } from './TemporalQueries';\n\nexport class TemporalAccessor {\n    /**\n     * Queries this date-time.\n     *\n     * This queries this date-time using the specified query strategy object.\n     *\n     * Queries are a key tool for extracting information from date-times.\n     * They exists to externalize the process of querying, permitting different\n     * approaches, as per the strategy design pattern.\n     * Examples might be a query that checks if the date is the day before February 29th\n     * in a leap year, or calculates the number of days to your next birthday.\n     *\n     * The most common query implementations are method references, such as\n     * {@link LocalDate::from} and {@link ZoneId::from}.\n     * Further implementations are on {@link TemporalQueries}.\n     * Queries may also be defined by applications.\n     *\n     * @implSpec\n     * Implementations of this method must behave as follows:\n     * <pre>\n        if (query == TemporalQueries.zoneId()\n            || query == TemporalQueries.chronology()\n            || query == TemporalQueries.precision()) {\n                return null;\n        }\n        return query.queryFrom(this);\n     * </pre>\n     *\n     * @param {TemporalQuery} query  the query to invoke, not null\n     * @return the query result, null may be returned (defined by the query)\n     * @throws DateTimeException if unable to query\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    query(query) {\n        if (query === TemporalQueries.zoneId()\n                || query === TemporalQueries.chronology()\n                || query === TemporalQueries.precision()) {\n            return null;\n        }\n        return query.queryFrom(this);\n    }\n\n    /**\n     * Gets the value of the specified field as an `int`.\n     *\n     * This queries the date-time for the value for the specified field.\n     * The returned value will always be within the valid range of values for the field.\n     * If the date-time cannot return the value, because the field is unsupported or for\n     * some other reason, an exception will be thrown.\n     *\n     * ### Specification for implementors\n     *\n     * Implementations must check and handle all fields defined in {@link ChronoField}.\n     * If the field is supported and has an `int` range, then the value of\n     * the field must be returned.\n     * If unsupported, then a {@link DateTimeException} must be thrown.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.getFrom}\n     * passing `this` as the argument.\n     *\n     * Implementations must not alter either this object.\n     *\n     * @param {TemporalField} field - the field to get, not null\n     * @return {number} the value for the field, within the valid range of values\n     * @throws DateTimeException if a value for the field cannot be obtained\n     * @throws DateTimeException if the range of valid values for the field exceeds an `int`\n     * @throws DateTimeException if the value is outside the range of valid values for the field\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    get(field) {\n        return this.range(field).checkValidIntValue(this.getLong(field), field);\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    getLong(field) {\n        abstractMethodFail('getLong');\n    }\n\n    /**\n     * Gets the range of valid values for the specified field.\n     *\n     * All fields can be expressed as a `long` integer.\n     * This method returns an object that describes the valid range for that value.\n     * The value of this temporal object is used to enhance the accuracy of the returned range.\n     * If the date-time cannot return the range, because the field is unsupported or for\n     * some other reason, an exception will be thrown.\n     *\n     * Note that the result only describes the minimum and maximum valid values\n     * and it is important not to read too much into them. For example, there\n     * could be values within the range that are invalid for the field.\n     *\n     * ### Specification for implementors\n     *\n     * Implementations must check and handle all fields defined in {@link ChronoField}.\n     * If the field is supported, then the range of the field must be returned.\n     * If unsupported, then a {@link DateTimeException} must be thrown.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.rangeRefinedBy}\n     * passing `this` as the argument.\n     *\n     * Implementations must not alter either this object.\n     *\n     * @param {TemporalField} field  the field to query the range for, not null\n     * @return {ValueRange} the range of valid values for the field, not null\n     * @throws DateTimeException if the range for the field cannot be obtained\n     */\n    range(field) {\n        if (field instanceof ChronoField) {\n            if (this.isSupported(field)) {\n                return field.range();\n            }\n            throw new UnsupportedTemporalTypeException(`Unsupported field: ${field}`);\n        }\n        return field.rangeRefinedBy(this);\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    isSupported(field) {\n        abstractMethodFail('isSupported');\n    }\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { abstractMethodFail } from '../assert';\nimport { Enum } from '../Enum';\n\n\n/**\n * Strategy for querying a temporal object.\n *\n * Queries are a key tool for extracting information from temporal objects.\n * They exist to externalize the process of querying, permitting different\n * approaches, as per the strategy design pattern.\n * Examples might be a query that checks if the date is the day before February 29th\n * in a leap year, or calculates the number of days to your next birthday.\n *\n * The {@link TemporalField} interface provides another mechanism for querying\n * temporal objects. That interface is limited to returning a `long`.\n * By contrast, queries can return any type.\n *\n * There are two equivalent ways of using a {@link TemporalQuery}.\n * The first is to invoke the method on this interface directly.\n * The second is to use {@link TemporalAccessor#query}:\n * <pre>\n *   // these two lines are equivalent, but the second approach is recommended\n *   temporal = thisQuery.queryFrom(temporal);\n *   temporal = temporal.query(thisQuery);\n * </pre>\n * It is recommended to use the second approach, {@link query},\n * as it is a lot clearer to read in code.\n *\n * The most common implementations are method references, such as\n * {@link LocalDate::from} and {@link ZoneId::from}.\n * Further implementations are on {@link TemporalQueries}.\n * Queries may also be defined by applications.\n *\n * ### Specification for implementors\n *\n * This interface places no restrictions on the mutability of implementations,\n * however immutability is strongly recommended.\n *\n * @interface\n */\nexport class TemporalQuery  extends Enum {\n    /**\n     * Queries the specified temporal object.\n     *\n     * This queries the specified temporal object to return an object using the logic\n     * encapsulated in the implementing class.\n     * Examples might be a query that checks if the date is the day before February 29th\n     * in a leap year, or calculates the number of days to your next birthday.\n     *\n     * There are two equivalent ways of using this method.\n     * The first is to invoke this method directly.\n     * The second is to use {@link TemporalAccessor#query}:\n     * <pre>\n     *   // these two lines are equivalent, but the second approach is recommended\n     *   temporal = thisQuery.queryFrom(temporal);\n     *   temporal = temporal.query(thisQuery);\n     * </pre>\n     * It is recommended to use the second approach, {@link query},\n     * as it is a lot clearer to read in code.\n     *\n     * ### Specification for implementors\n     *\n     * The implementation must take the input object and query it.\n     * The implementation defines the logic of the query and is responsible for\n     * documenting that logic.\n     * It may use any method on {@link TemporalAccessor} to determine the result.\n     * The input object must not be altered.\n     *\n     * The input temporal object may be in a calendar system other than ISO.\n     * Implementations may choose to document compatibility with other calendar systems,\n     * or reject non-ISO temporal objects by querying the chronology (see {@link TemporalQueries#chronology}).\n     *\n     * This method may be called from multiple threads in parallel.\n     * It must be thread-safe when invoked.\n     *\n     * @param {TemporalAccessor} temporal  the temporal object to query, not null\n     * @return the queried value, may return null to indicate not found\n     * @throws DateTimeException if unable to query\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    // eslint-disable-next-line no-unused-vars\n    queryFrom(temporal){\n        abstractMethodFail('queryFrom');\n    }\n\n}\n\n/**\n * @private\n *\n * Factory to create something similar to the JSR-310 {TemporalQuery} interface, takes a function and returns a new TemporalQuery object that presents that function\n * as the queryFrom() function.\n * @param name for the underlying Enum\n * @param queryFromFunction\n */\nexport function createTemporalQuery(name, queryFromFunction) {\n    class ExtendedTemporalQuery extends TemporalQuery {\n\n    }\n\n    ExtendedTemporalQuery.prototype.queryFrom = queryFromFunction;\n    return new ExtendedTemporalQuery(name);\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { DateTimeException, UnsupportedTemporalTypeException, NullPointerException } from './errors';\nimport { MathUtil } from './MathUtil';\nimport { assert, requireNonNull, requireInstance } from './assert';\n\nimport { ChronoField } from './temporal/ChronoField';\nimport { ChronoUnit } from './temporal/ChronoUnit';\nimport { IllegalArgumentException } from './errors';\nimport { TemporalAccessor } from './temporal/TemporalAccessor';\nimport { TemporalQueries } from './temporal/TemporalQueries';\nimport { createTemporalQuery } from './temporal/TemporalQuery';\n\n/**\n * ### Static properties of Class {@link DayOfWeek}\n *\n * DayOfWeek.MONDAY,\n * DayOfWeek.TUESDAY,\n * DayOfWeek.WEDNESDAY,\n * DayOfWeek.THURSDAY,\n * DayOfWeek.FRIDAY,\n * DayOfWeek.SATURDAY,\n * DayOfWeek.SUNDAY\n *\n */\nexport class DayOfWeek extends TemporalAccessor {\n\n    /**\n     *\n     * @param {number} ordinal\n     * @param {string} name\n     * @private\n     */\n    constructor(ordinal, name){\n        super();\n        this._ordinal = ordinal;\n        this._name = name;\n    }\n\n    /**\n     *\n     * @returns {number}\n     */\n    ordinal(){\n        return this._ordinal;\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    name(){\n        return this._name;\n    }\n\n    /**\n     *\n     * @returns {DayOfWeek[]}\n     */\n    static values() {\n        return ENUMS.slice();\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @returns {DayOfWeek}\n     */\n    static valueOf(name) {\n        let ordinal = 0;\n        for(ordinal; ordinal < ENUMS.length; ordinal++){\n            if(ENUMS[ordinal].name() === name){\n                break;\n            }\n        }\n        return DayOfWeek.of(ordinal+1);\n    }\n\n    /**\n     * Obtains an instance of {@link DayOfWeek} from an `int` value.\n     *\n     * {@link DayOfWeek} is an enum representing the 7 days of the week.\n     * This factory allows the enum to be obtained from the `int` value.\n     * The `int` value follows the ISO-8601 standard, from 1 (Monday) to 7 (Sunday).\n     *\n     * @param {!number} dayOfWeek  the day-of-week to represent, from 1 (Monday) to 7 (Sunday)\n     * @return {DayOfWeek} the day-of-week singleton, not null\n     * @throws DateTimeException if the day-of-week is invalid\n     */\n    static of(dayOfWeek) {\n        if (dayOfWeek < 1 || dayOfWeek > 7) {\n            throw new DateTimeException(`Invalid value for DayOfWeek: ${dayOfWeek}`);\n        }\n        return ENUMS[dayOfWeek - 1];\n    }\n\n    /**\n     * Obtains an instance of {@link DayOfWeek} from a temporal object.\n     *\n     * A {@link TemporalAccessor} represents some form of date and time information.\n     * This factory converts the arbitrary temporal object to an instance of {@link DayOfWeek}.\n     *\n     * The conversion extracts the {@link ChronoField#DAY_OF_WEEK} field.\n     *\n     * This method matches the signature of the functional interface {@link TemporalQuery}\n     * allowing it to be used as a query via method reference, {@link DayOfWeek::from}.\n     *\n     * @param {TemporalAccessor} temporal - the temporal object to convert, not null\n     * @return {DayOfWeek} the day-of-week, not null\n     * @throws DateTimeException if unable to convert to a {@link DayOfWeek}\n     */\n    static from(temporal) {\n        assert(temporal != null, 'temporal', NullPointerException);\n        if (temporal instanceof DayOfWeek) {\n            return temporal;\n        }\n        try {\n            return DayOfWeek.of(temporal.get(ChronoField.DAY_OF_WEEK));\n        } catch (ex) {\n            if(ex instanceof DateTimeException) {\n                throw new DateTimeException(`Unable to obtain DayOfWeek from TemporalAccessor: ${ \n                    temporal}, type ${temporal.constructor != null ? temporal.constructor.name : ''}`, ex);\n            } else {\n                throw ex;\n            }\n        }\n    }\n\n    /**\n     * Gets the day-of-week `int` value.\n     *\n     * The values are numbered following the ISO-8601 standard, from 1 (Monday) to 7 (Sunday).\n     * See {@link WeekFields#dayOfWeek} for localized week-numbering.\n     *\n     * @return {number} the day-of-week, from 1 (Monday) to 7 (Sunday)\n     */\n    value() {\n        return this._ordinal + 1;\n    }\n\n    /**\n     * Gets the textual representation, such as 'Mon' or 'Friday'.\n     *\n     * This returns the textual name used to identify the day-of-week.\n     * The parameters control the length of the returned text and the locale.\n     *\n     * If no textual mapping is found then the numeric value (see {@link getValue}) is returned.\n     *\n     * @param {TextStyle} style - the length of the text required, not null\n     * @param {Locale} locale - the locale to use, not null\n     * @return {string} the text value of the day-of-week, not null\n     */\n    // eslint-disable-next-line no-unused-vars\n    displayName(style, locale) {\n        throw new IllegalArgumentException('Pattern using (localized) text not implemented yet!');\n        // return new DateTimeFormatterBuilder().appendText(ChronoField.DAY_OF_WEEK, style).toFormatter(locale).format(this);\n    }\n\n    /**\n     * Checks if the specified field is supported.\n     *\n     * This checks if this day-of-week can be queried for the specified field.\n     * If false, then calling the {@link range} and\n     * {@link get} methods will throw an exception.\n     *\n     * If the field is {@link ChronoField#DAY_OF_WEEK} then\n     * this method returns true.\n     * All other {@link ChronoField} instances will return false.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking `TemporalField.isSupportedBy(TemporalAccessor)`\n     * passing `this` as the argument.\n     * Whether the field is supported is determined by the field.\n     *\n     * @param {TemporalField} field - the field to check, null returns false\n     * @return {boolean} true if the field is supported on this day-of-week, false if not\n     */\n    isSupported(field) {\n        if (field instanceof ChronoField) {\n            return field === ChronoField.DAY_OF_WEEK;\n        }\n        return field != null && field.isSupportedBy(this);\n    }\n\n    /**\n     * Gets the range of valid values for the specified field.\n     *\n     * The range object expresses the minimum and maximum valid values for a field.\n     * This day-of-week is used to enhance the accuracy of the returned range.\n     * If it is not possible to return the range, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is {@link ChronoField#DAY_OF_WEEK} then the\n     * range of the day-of-week, from 1 to 7, will be returned.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking `TemporalField.rangeRefinedBy(TemporalAccessor)`\n     * passing `this` as the argument.\n     * Whether the range can be obtained is determined by the field.\n     *\n     * @param {TemporalField} field - the field to query the range for, not null\n     * @return {ValueRange} the range of valid values for the field, not null\n     * @throws DateTimeException if the range for the field cannot be obtained\n     */\n    range(field) {\n        if (field === ChronoField.DAY_OF_WEEK) {\n            return field.range();\n        } else if (field instanceof ChronoField) {\n            throw new UnsupportedTemporalTypeException(`Unsupported field: ${field}`);\n        }\n        return field.rangeRefinedBy(this);\n    }\n\n    /**\n     * Gets the value of the specified field from this day-of-week as an `int`.\n     *\n     * This queries this day-of-week for the value for the specified field.\n     * The returned value will always be within the valid range of values for the field.\n     * If it is not possible to return the value, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is {@link ChronoField#DAY_OF_WEEK} then the\n     * value of the day-of-week, from 1 to 7, will be returned.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.getFrom}\n     * passing `this` as the argument. Whether the value can be obtained,\n     * and what the value represents, is determined by the field.\n     *\n     * @param {TemporalField} field - the field to get, not null\n     * @return {number} the value for the field, within the valid range of values\n     * @throws DateTimeException if a value for the field cannot be obtained\n     * @throws DateTimeException if the range of valid values for the field exceeds an `int`\n     * @throws DateTimeException if the value is outside the range of valid values for the field\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    get(field) {\n        if (field === ChronoField.DAY_OF_WEEK) {\n            return this.value();\n        }\n        return this.range(field).checkValidIntValue(this.getLong(field), field);\n    }\n\n    /**\n     * Gets the value of the specified field from this day-of-week as a `long`.\n     *\n     * This queries this day-of-week for the value for the specified field.\n     * If it is not possible to return the value, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is {@link ChronoField#DAY_OF_WEEK} then the\n     * value of the day-of-week, from 1 to 7, will be returned.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.getFrom}\n     * passing `this` as the argument. Whether the value can be obtained,\n     * and what the value represents, is determined by the field.\n     *\n     * @param {TemporalField} field - the field to get, not null\n     * @return {number} the value for the field\n     * @throws DateTimeException if a value for the field cannot be obtained\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    getLong(field) {\n        if (field === ChronoField.DAY_OF_WEEK) {\n            return this.value();\n        } else if (field instanceof ChronoField) {\n            throw new UnsupportedTemporalTypeException(`Unsupported field: ${field}`);\n        }\n        return field.getFrom(this);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns the day-of-week that is the specified number of days after this one.\n     *\n     * The calculation rolls around the end of the week from Sunday to Monday.\n     * The specified period may be negative.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} days - the days to add, positive or negative\n     * @return {DayOfWeek} the resulting day-of-week, not null\n     */\n    plus(days) {\n        const amount = MathUtil.floorMod(days, 7);\n        return ENUMS[MathUtil.floorMod(this._ordinal + (amount + 7), 7)];\n    }\n\n    /**\n     * Returns the day-of-week that is the specified number of days before this one.\n     *\n     * The calculation rolls around the start of the year from Monday to Sunday.\n     * The specified period may be negative.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} days - the days to subtract, positive or negative\n     * @return {DayOfWeek} the resulting day-of-week, not null\n     */\n    minus(days) {\n        return this.plus(-1 * MathUtil.floorMod(days, 7));\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Queries this day-of-week using the specified query.\n     *\n     * This queries this day-of-week using the specified query strategy object.\n     * The {@link TemporalQuery} object defines the logic to be used to\n     * obtain the result. Read the documentation of the query to understand\n     * what the result of this method will be.\n     *\n     * The result of this method is obtained by invoking the\n     * {@link TemporalQuery#queryFrom} method on the\n     * specified query passing `this` as the argument.\n     *\n     * @param {TemporalQuery} query  the query to invoke, not null\n     * @return {*} the query result, null may be returned (defined by the query)\n     * @throws DateTimeException if unable to query (defined by the query)\n     * @throws ArithmeticException if numeric overflow occurs (defined by the query)\n     */\n    query(query) {\n        if (query === TemporalQueries.precision()) {\n            return ChronoUnit.DAYS;\n        } else if (query === TemporalQueries.localDate() || query === TemporalQueries.localTime() || query === TemporalQueries.chronology() ||\n                query === TemporalQueries.zone() || query === TemporalQueries.zoneId() || query === TemporalQueries.offset()) {\n            return null;\n        }\n        assert(query != null, 'query', NullPointerException);\n        return query.queryFrom(this);\n    }\n\n    /**\n     * Adjusts the specified temporal object to have this day-of-week.\n     *\n     * This returns a temporal object of the same observable type as the input\n     * with the day-of-week changed to be the same as this.\n     *\n     * The adjustment is equivalent to using {@link Temporal#with}\n     * passing {@link ChronoField#DAY_OF_WEEK} as the field.\n     * Note that this adjusts forwards or backwards within a Monday to Sunday week.\n     * See {@link WeekFields#dayOfWeek} for localized week start days.\n     * See {@link TemporalAdjusters} for other adjusters\n     * with more control, such as `next(MONDAY)`.\n     *\n     * In most cases, it is clearer to reverse the calling pattern by using\n     * {@link Temporal#with}:\n     * <pre>\n     *   // these two lines are equivalent, but the second approach is recommended\n     *   temporal = thisDayOfWeek.adjustInto(temporal);\n     *   temporal = temporal.with(thisDayOfWeek);\n     * </pre>\n     *\n     * For example, given a date that is a Wednesday, the following are output:\n     * <pre>\n     *   dateOnWed.with(MONDAY);     // two days earlier\n     *   dateOnWed.with(TUESDAY);    // one day earlier\n     *   dateOnWed.with(WEDNESDAY);  // same date\n     *   dateOnWed.with(THURSDAY);   // one day later\n     *   dateOnWed.with(FRIDAY);     // two days later\n     *   dateOnWed.with(SATURDAY);   // three days later\n     *   dateOnWed.with(SUNDAY);     // four days later\n     * </pre>\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {TemporalAdjusters} temporal  the target object to be adjusted, not null\n     * @return {Temporal} the adjusted object, not null\n     * @throws DateTimeException if unable to make the adjustment\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    adjustInto(temporal) {\n        requireNonNull(temporal, 'temporal');\n        return temporal.with(ChronoField.DAY_OF_WEEK, this.value());\n    }\n\n    /**\n     *\n     * @returns {boolean}\n     */\n    equals(other){ \n        return this === other;\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    toString(){\n        return this._name;\n    }\n\n    /**\n     * Compares this DayOfWeek to another DayOfWeek.\n     *\n     * The comparison is based on the value of the DayOfWeek.\n     * It is \"consistent with equals\", as defined by {@link Comparable}.\n     *\n     * @param {DayOfWeek} other  the other year to compare to, not null\n     * @return {number} the comparator value, negative if less, positive if greater\n     */    \n    compareTo(other) {\n        requireNonNull(other, 'other');\n        requireInstance(other, DayOfWeek, 'other');\n        return this._ordinal - other._ordinal;\n    }\n\n    /**\n     * toJSON() use by JSON.stringify\n     * delegates to toString()\n     *\n     * @return {string}\n     */\n    toJSON() {\n        return this.toString();\n    }\n}\n\nlet ENUMS;\n\nexport function _init() {\n    DayOfWeek.MONDAY = new DayOfWeek(0, 'MONDAY');\n    DayOfWeek.TUESDAY = new DayOfWeek(1, 'TUESDAY');\n    DayOfWeek.WEDNESDAY = new DayOfWeek(2, 'WEDNESDAY');\n    DayOfWeek.THURSDAY = new DayOfWeek(3, 'THURSDAY');\n    DayOfWeek.FRIDAY = new DayOfWeek(4, 'FRIDAY');\n    DayOfWeek.SATURDAY = new DayOfWeek(5, 'SATURDAY');\n    DayOfWeek.SUNDAY = new DayOfWeek(6, 'SUNDAY');\n\n    DayOfWeek.FROM = createTemporalQuery('DayOfWeek.FROM', (temporal) => {\n        return DayOfWeek.from(temporal);\n    });\n\n    ENUMS = [\n        DayOfWeek.MONDAY,\n        DayOfWeek.TUESDAY,\n        DayOfWeek.WEDNESDAY,\n        DayOfWeek.THURSDAY,\n        DayOfWeek.FRIDAY,\n        DayOfWeek.SATURDAY,\n        DayOfWeek.SUNDAY\n    ];\n}\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { assert, requireNonNull, requireInstance } from './assert';\nimport { MathUtil } from './MathUtil';\n\nimport { ChronoField } from './temporal/ChronoField';\nimport { ChronoUnit } from './temporal/ChronoUnit';\nimport { DateTimeException, IllegalArgumentException, UnsupportedTemporalTypeException } from './errors';\nimport { IsoChronology } from './chrono/IsoChronology';\nimport { TemporalAccessor } from './temporal/TemporalAccessor';\nimport { TemporalQueries } from './temporal/TemporalQueries';\n\n/**\n * A month-of-year, such as 'July'.\n *\n * {@link Month} is representing the 12 months of the year -\n * January, February, March, April, May, June, July, August, September, October,\n * November and December.\n *\n * In addition to the textual name, each month-of-year has an `int` value.\n * The `int` value follows normal usage and the ISO-8601 standard,\n * from 1 (January) to 12 (December). It is recommended that applications use the static values defined by this class\n * rather than the `int` value to ensure code clarity.\n *\n * This class represents a common concept that is found in many calendar systems.\n * As such, this class may be used by any calendar system that has the month-of-year\n * concept defined exactly equivalent to the ISO-8601 calendar system.\n *\n * ### Static properties of Class {@link Month}\n *\n * Month.JANUARY, Month.FEBRUARY, Month.MARCH, Month.APRIL, Month.MAY, Month.JUNE,\n * Month.JULY, Month.AUGUST, Month.SEPTEMBER, Month.OCTOBER, Month.NOVEMBER, Month.DECEMBER\n *\n */\nexport class Month extends TemporalAccessor {\n\n    /**\n     *\n     * @param {number} ordinal\n     * @param {string} name\n     * @private\n     */\n    constructor(value, name){\n        super();\n        this._value = MathUtil.safeToInt(value);\n        this._name = name;\n    }    \n\n    /**\n     *\n     * @return {number} gets the value\n     */\n    value() {\n        return this._value;\n    }\n    \n    /**\n     *\n     * @returns {number}\n     */\n    ordinal(){\n        return this._value - 1;\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    name(){\n        return this._name;\n    }  \n\n    /**\n     * Gets the textual representation, such as 'Jan' or 'December'.\n     *\n     * This returns the textual name used to identify the month-of-year.\n     * The parameters control the length of the returned text and the locale.\n     *\n     * If no textual mapping is found then the numeric value (see {@link getValue}) is returned.\n     *\n     * @param {TextStyle} style - the length of the text required, not null\n     * @param {Locale} locale - the locale to use, not null\n     * @return {string} the text value of the day-of-week, not null\n     */\n    // eslint-disable-next-line no-unused-vars\n    displayName(style, locale) {\n        // TODO:\n        throw new IllegalArgumentException('Pattern using (localized) text not implemented yet!');\n    }\n\n    /**\n     * Checks if the specified field is supported.\n     *\n     * This checks if this month-of-year can be queried for the specified field.\n     * If false, then calling the range (see {@link range}) and\n     * get (see {@link get}) methods will throw an exception.\n     *\n     * If the field is MONTH_OF_YEAR (see {@link ChronoField#MONTH_OF_YEAR}) then\n     * this method returns true.\n     * All other {@link ChronoField} instances will return false.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.isSupportedBy}\n     * passing `this` as the argument.\n     * Whether the field is supported is determined by the field.\n     *\n     * @param {TemporalField} field - the field to check, null returns false\n     * @return {boolean} true if the field is supported on this month-of-year, false if not\n     */\n    isSupported(field) {\n        if (null === field) {\n            return false;\n        }\n        if (field instanceof ChronoField) {\n            return field === ChronoField.MONTH_OF_YEAR;\n        }\n        return field != null && field.isSupportedBy(this);\n    }\n\n    /**\n     * Gets the value of the specified field from this month-of-year as an `int`.\n     *\n     * This queries this month for the value of the specified field.\n     * The returned value will always be within the valid range of values for the field.\n     * If it is not possible to return the value, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is MONTH_OF_YEAR (see {@link ChronoField#MONTH_OF_YEAR}) then the\n     * value of the month-of-year, from 1 to 12, will be returned.\n     * All other {@link ChronoField} instances will throw an {@link UnsupportedTemporalTypeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.getFrom}\n     * passing `this` as the argument. Whether the value can be obtained,\n     * and what the value represents, is determined by the field.\n     *\n     * @param {TemporalField} field - the field to get, not null\n     * @return {Number} the value for the field, within the valid range of values\n     * @throws DateTimeException if a value for the field cannot be obtained or\n     *         the value is outside the range of valid values for the field\n     * @throws UnsupportedTemporalTypeException if the field is not supported or\n     *         the range of values exceeds an `int`\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    get(field) {\n        if (field === ChronoField.MONTH_OF_YEAR) {\n            return this.value();\n        }\n        return this.range(field).checkValidIntValue(this.getLong(field), field);\n    }\n\n    /**\n     * Gets the value of the specified field from this month-of-year as a `long`.\n     *\n     * This queries this month for the value of the specified field.\n     * If it is not possible to return the value, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is MONTH_OF_YEAR (see {@link ChronoField#MONTH_OF_YEAR}) then the\n     * value of the month-of-year, from 1 to 12, will be returned.\n     * All other {@link ChronoField} instances will throw an {@link UnsupportedTemporalTypeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.getFrom}\n     * passing `this` as the argument. Whether the value can be obtained,\n     * and what the value represents, is determined by the field.\n     *\n     * @param {TemporalField} field - the field to get, not null\n     * @return {Number} the value for the field\n     * @throws DateTimeException if a value for the field cannot be obtained\n     * @throws UnsupportedTemporalTypeException if the field is not supported\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    getLong(field) {\n        if (field === ChronoField.MONTH_OF_YEAR) {\n            return this.value();\n        } else if (field instanceof ChronoField) {\n            throw new UnsupportedTemporalTypeException(`Unsupported field: ${field}`);\n        }\n        return field.getFrom(this);\n    }\n\n    /**\n     * Returns the month-of-year that is the specified number of months after this one.\n     *\n     * The calculation rolls around the end of the year from December to January.\n     * The specified period may be negative.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} months - the months to add, positive or negative\n     * @return {Month} the resulting month, not null\n     */\n    plus(months) {\n        const amount = MathUtil.intMod(months, 12) + 12; // + 12 to make sure negative arguments are positive, the total is \"corrected\" by the next % 12\n        let newMonthVal = MathUtil.intMod((this.value() + amount), 12);\n        /* December is 12, not 0, but 12 % 12 = 0 */\n        newMonthVal = newMonthVal === 0 ? 12 : newMonthVal;\n        return Month.of(newMonthVal);\n    }\n\n    /**\n     * Returns the month-of-year that is the specified number of months before this one.\n     *\n     * The calculation rolls around the start of the year from January to December.\n     * The specified period may be negative.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} months - the months to subtract, positive or negative\n     * @return {Month} the resulting month, not null\n     */\n    minus(months) {\n        return this.plus(-1 * MathUtil.intMod(months, 12));\n    }\n\n    /**\n     * Gets the length of this month in days.\n     *\n     * This takes a flag to determine whether to return the length for a leap year or not.\n     *\n     * February has 28 days in a standard year and 29 days in a leap year.\n     * April, June, September and November have 30 days.\n     * All other months have 31 days.\n     *\n     * @param {boolean} leapYear - true if the length is required for a leap year\n     * @return {number} the length of this month in days, from 28 to 31\n     */\n    length(leapYear) {\n        switch (this) {\n            case Month.FEBRUARY:\n                return (leapYear ? 29 : 28);\n            case Month.APRIL:\n            case Month.JUNE:\n            case Month.SEPTEMBER:\n            case Month.NOVEMBER:\n                return 30;\n            default:\n                return 31;\n        }\n    }\n\n    /**\n     * Gets the minimum length of this month in days.\n     *\n     * February has a minimum length of 28 days.\n     * April, June, September and November have 30 days.\n     * All other months have 31 days.\n     *\n     * @return {number} the minimum length of this month in days, from 28 to 31\n     */\n    minLength() {\n        switch (this) {\n            case Month.FEBRUARY:\n                return 28;\n            case Month.APRIL:\n            case Month.JUNE:\n            case Month.SEPTEMBER:\n            case Month.NOVEMBER:\n                return 30;\n            default:\n                return 31;\n        }\n    }\n\n    /**\n     * Gets the maximum length of this month in days.\n     *\n     * February has a maximum length of 29 days.\n     * April, June, September and November have 30 days.\n     * All other months have 31 days.\n     *\n     * @return {number} the maximum length of this month in days, from 29 to 31\n     */\n    maxLength() {\n        switch (this) {\n            case Month.FEBRUARY:\n                return 29;\n            case Month.APRIL:\n            case Month.JUNE:\n            case Month.SEPTEMBER:\n            case Month.NOVEMBER:\n                return 30;\n            default:\n                return 31;\n        }\n    }\n\n    /**\n     * Gets the day-of-year corresponding to the first day of this month.\n     *\n     * This returns the day-of-year that this month begins on, using the leap\n     * year flag to determine the length of February.\n     *\n     * @param {boolean} leapYear - true if the length is required for a leap year\n     * @return {number} the day of year corresponding to the first day of this month, from 1 to 336\n     */\n    firstDayOfYear(leapYear) {\n        const leap = leapYear ? 1 : 0;\n        switch (this) {\n            case Month.JANUARY:\n                return 1;\n            case Month.FEBRUARY:\n                return 32;\n            case Month.MARCH:\n                return 60 + leap;\n            case Month.APRIL:\n                return 91 + leap;\n            case Month.MAY:\n                return 121 + leap;\n            case Month.JUNE:\n                return 152 + leap;\n            case Month.JULY:\n                return 182 + leap;\n            case Month.AUGUST:\n                return 213 + leap;\n            case Month.SEPTEMBER:\n                return 244 + leap;\n            case Month.OCTOBER:\n                return 274 + leap;\n            case Month.NOVEMBER:\n                return 305 + leap;\n            case Month.DECEMBER:\n            default:\n                return 335 + leap;\n        }\n    }\n\n    /**\n     * Gets the month corresponding to the first month of this quarter.\n     *\n     * The year can be divided into four quarters.\n     * This method returns the first month of the quarter for the base month.\n     * January, February and March return January.\n     * April, May and June return April.\n     * July, August and September return July.\n     * October, November and December return October.\n     *\n     * @return {Month} the first month of the quarter corresponding to this month, not null\n     */\n    firstMonthOfQuarter() {\n        switch (this) {\n            case Month.JANUARY:\n            case Month.FEBRUARY:\n            case Month.MARCH:\n                return Month.JANUARY;\n            case Month.APRIL:\n            case Month.MAY:\n            case Month.JUNE:\n                return Month.APRIL;\n            case Month.JULY:\n            case Month.AUGUST:\n            case Month.SEPTEMBER:\n                return Month.JULY;\n            case Month.OCTOBER:\n            case Month.NOVEMBER:\n            case Month.DECEMBER:\n            default:\n                return Month.OCTOBER;\n        }\n    }\n\n    /**\n     * Queries this month-of-year using the specified query.\n     *\n     * This queries this month-of-year using the specified query strategy object.\n     * The {@link TemporalQuery} object defines the logic to be used to\n     * obtain the result. Read the documentation of the query to understand\n     * what the result of this method will be.\n     *\n     * The result of this method is obtained by invoking the\n     * {@link TemporalQuery#queryFrom} method on the\n     * specified query passing `this` as the argument.\n     *\n     * @param {TemporalQuery} query - the query to invoke, not null\n     * @return {*} the query result, null may be returned (defined by the query)\n     * @throws DateTimeException if unable to query (defined by the query)\n     * @throws ArithmeticException if numeric overflow occurs (defined by the query)\n     */\n    query(query) {\n        assert(query != null, 'query() parameter must not be null', DateTimeException);\n        if (query === TemporalQueries.chronology()) {\n            return IsoChronology.INSTANCE;\n        } else if (query === TemporalQueries.precision()) {\n            return ChronoUnit.MONTHS;\n        }\n        return super.query(query);\n    }\n\n\n\n    /**\n     * toString implementation... in JDK this is inherited from the Enum class\n     *\n     * @return {String}\n     */\n    toString() {\n        switch (this) {\n            case Month.JANUARY:\n                return 'JANUARY';\n            case Month.FEBRUARY:\n                return 'FEBRUARY';\n            case Month.MARCH:\n                return 'MARCH';\n            case Month.APRIL:\n                return 'APRIL';\n            case Month.MAY:\n                return 'MAY';\n            case Month.JUNE:\n                return 'JUNE';\n            case Month.JULY:\n                return 'JULY';\n            case Month.AUGUST:\n                return 'AUGUST';\n            case Month.SEPTEMBER:\n                return 'SEPTEMBER';\n            case Month.OCTOBER:\n                return 'OCTOBER';\n            case Month.NOVEMBER:\n                return 'NOVEMBER';\n            case Month.DECEMBER:\n                return 'DECEMBER';\n            default:\n                return `unknown Month, value: ${this.value()}`;\n        }\n    }\n\n    /**\n     * toJSON() use by JSON.stringify\n     * delegates to toString()\n     *\n     * @return {string}\n     */\n    toJSON() {\n        return this.toString();\n    }\n\n    /**\n     * Adjusts the specified temporal object to have this month-of-year.\n     *\n     * This returns a temporal object of the same observable type as the input\n     * with the month-of-year changed to be the same as this.\n     *\n     * The adjustment is equivalent to using {@link Temporal#with}\n     * passing {@link ChronoField#MONTH_OF_YEAR} as the field.\n     * If the specified temporal object does not use the ISO calendar system then\n     * a {@link DateTimeException} is thrown.\n     *\n     * In most cases, it is clearer to reverse the calling pattern by using\n     * {@link Temporal#with}:\n     * <pre>\n     *   // these two lines are equivalent, but the second approach is recommended\n     *   temporal = thisMonth.adjustInto(temporal);\n     *   temporal = temporal.with(thisMonth);\n     * </pre>\n     *\n     * For example, given a date in May, the following are output:\n     * <pre>\n     *   dateInMay.with(JANUARY);    // four months earlier\n     *   dateInMay.with(APRIL);      // one months earlier\n     *   dateInMay.with(MAY);        // same date\n     *   dateInMay.with(JUNE);       // one month later\n     *   dateInMay.with(DECEMBER);   // seven months later\n     * </pre>\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Temporal} temporal - the target object to be adjusted, not null\n     * @return {Temporal} the adjusted object, not null\n     * @throws DateTimeException if unable to make the adjustment\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    adjustInto(temporal) {\n        /* we support only ISO for now\n            if (Chronology.from(temporal).equals(IsoChronology.INSTANCE) === false) {\n                throw new DateTimeException('Adjustment only supported on ISO date-time');\n            }\n        */\n        return temporal.with(ChronoField.MONTH_OF_YEAR, this.value());\n    }\n    \n    /**\n     * Compares this Month to another Month.\n     *\n     * The comparison is based on the value of the Month.\n     * It is \"consistent with equals\", as defined by {@link Comparable}.\n     *\n     * @param {Month} other  the other year to compare to, not null\n     * @return {number} the comparator value, negative if less, positive if greater\n     */    \n    compareTo(other) {\n        requireNonNull(other, 'other');\n        requireInstance(other, Month, 'other');\n        return this._value - other._value;\n    }    \n    \n    /**\n     *\n     * @returns {boolean}\n     */\n    equals(other){    \n        return this === other;\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @returns {Month}\n     */\n    static valueOf(name) {\n        let ordinal = 0;\n        for(ordinal; ordinal < MONTHS.length; ordinal++){\n            if(MONTHS[ordinal].name() === name){\n                break;\n            }\n        }\n        return Month.of(ordinal+1);\n    }\n    \n\n    /**\n     * replacement for enum values\n     * @return {Month[]}\n     */\n    static values(){\n        return MONTHS.slice();\n    }\n\n    /**\n     *\n     * @param {number} month\n     * @return {Month} not null\n     **/\n    static of(month) {\n        if (month < 1 || month > 12) {\n            assert(false, `Invalid value for MonthOfYear: ${month}`, DateTimeException);\n        }\n        return MONTHS[month-1];\n    }\n\n    /**\n     * Obtains an instance of {@link Month} from a temporal object.\n     *\n     * This obtains a month based on the specified temporal.\n     * A {@link TemporalAccessor} represents an arbitrary set of date and time information,\n     * which this factory converts to an instance of {@link Month}.\n     *\n     * The conversion extracts the MONTH_OF_YEAR (see {@link ChronoField#MONTH_OF_YEAR}) field.\n     * The extraction is only permitted if the temporal object has an ISO\n     * chronology, or can be converted to a {@link LocalDate}.\n     *\n     * This method matches the signature of the functional interface {@link TemporalQuery}\n     * allowing it to be used in queries via method reference, {@link Month::from}.\n     *\n     * @param {TemporalAccessor} temporal  the temporal object to convert, not null\n     * @return {Month} the month-of-year, not null\n     * @throws DateTimeException if unable to convert to a {@link Month}\n     */\n    static from(temporal) {\n        if (temporal instanceof Month) {\n            return temporal;\n        }\n        try {\n            /* only ISO for now\n            if (IsoChronology.INSTANCE.equals(Chronology.from(temporal)) == false) {\n                temporal = LocalDate.from(temporal);\n            }*/\n            return Month.of(temporal.get(ChronoField.MONTH_OF_YEAR));\n        } catch (ex) {\n            throw new DateTimeException(`Unable to obtain Month from TemporalAccessor: ${ \n                temporal} of type ${temporal && temporal.constructor != null ? temporal.constructor.name : ''}`, ex);\n        }\n    }\n}\n\nlet MONTHS;\n\nexport function _init() {\n    Month.JANUARY = new Month(1, 'JANUARY');\n    Month.FEBRUARY = new Month(2, 'FEBRUARY');\n    Month.MARCH = new Month(3, 'MARCH');\n    Month.APRIL = new Month(4, 'APRIL');\n    Month.MAY = new Month(5, 'MAY');\n    Month.JUNE = new Month(6, 'JUNE');\n    Month.JULY = new Month(7, 'JULY');\n    Month.AUGUST = new Month(8, 'AUGUST');\n    Month.SEPTEMBER = new Month(9, 'SEPTEMBER');\n    Month.OCTOBER = new Month(10, 'OCTOBER');\n    Month.NOVEMBER = new Month(11, 'NOVEMBER');\n    Month.DECEMBER = new Month(12, 'DECEMBER');\n\n    MONTHS = [\n        Month.JANUARY, Month.FEBRUARY, Month.MARCH, Month.APRIL, Month.MAY, Month.JUNE,\n        Month.JULY, Month.AUGUST, Month.SEPTEMBER, Month.OCTOBER, Month.NOVEMBER, Month.DECEMBER\n    ];\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { MathUtil } from './MathUtil';\nimport { requireNonNull, requireInstance } from './assert';\nimport { DateTimeException, UnsupportedTemporalTypeException, ArithmeticException, DateTimeParseException } from './errors';\n\nimport { IsoChronology } from './chrono/IsoChronology';\n\nimport { ChronoUnit } from './temporal/ChronoUnit';\nimport { TemporalAmount } from './temporal/TemporalAmount';\n\nimport { LocalDate } from './LocalDate';\n\n/**\n * The pattern for parsing.\n */\nconst PATTERN = /([-+]?)P(?:([-+]?[0-9]+)Y)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)W)?(?:([-+]?[0-9]+)D)?/;\n\n/**\n * A date-based amount of time, such as '2 years, 3 months and 4 days'.\n *\n * This class models a quantity or amount of time in terms of years, months and days.\n * See {@link Duration} for the time-based equivalent to this class.\n *\n * Durations and period differ in their treatment of daylight savings time\n * when added to {@link ZonedDateTime}. A {@link Duration} will add an exact\n * number of seconds, thus a duration of one day is always exactly 24 hours.\n * By contrast, a {@link Period} will add a conceptual day, trying to maintain\n * the local time.\n *\n * For example, consider adding a period of one day and a duration of one day to\n * 18:00 on the evening before a daylight savings gap. The {@link Period} will add\n * the conceptual day and result in a {@link ZonedDateTime} at 18:00 the following day.\n * By contrast, the {@link Duration} will add exactly 24 hours, resulting in a\n * {@link ZonedDateTime} at 19:00 the following day (assuming a one hour DST gap).\n *\n * The supported units of a period are {@link ChronoUnit#YEARS},\n * {@link ChronoUnit#MONTHS} and {@link ChronoUnit#DAYS}.\n * All three fields are always present, but may be set to zero.\n *\n * The period may be used with any calendar system.\n * The meaning of a 'year' or 'month' is only applied when the object is added to a date.\n *\n * The period is modeled as a directed amount of time, meaning that individual parts of the\n * period may be negative.\n *\n * The months and years fields may be normalized (see {@link normalized}).\n * The normalization assumes a 12 month year, so is not appropriate for all calendar systems.\n *\n * ### Static properties of Class {@link Period}\n *\n * Period.ZERO\n *\n * A constant for a period of zero.\n *\n */\nexport class Period extends TemporalAmount /* extends ChronoPeriod */ {\n\n    /**\n     * do not call the constructor directly\n     * use a factory method instead\n     *\n     * @param {number} years\n     * @param {number} months\n     * @param {number} days\n     * @private\n     */\n    constructor(years, months, days){\n        super();\n        \n        const _years = MathUtil.safeToInt(years);\n        const _months =  MathUtil.safeToInt(months);\n        const _days = MathUtil.safeToInt(days);\n\n        if( _years === 0 && _months === 0 && _days === 0 ){\n            if (!Period.ZERO) {\n                this._years = _years;\n                this._months =  _months;\n                this._days = _days;\n                Period.ZERO = this;\n            }\n            return Period.ZERO;\n        }\n        \n        /**\n         * The number of years.\n         */\n        this._years = _years;\n        /**\n         * The number of months.\n         */\n        this._months =  _months;\n        /**\n         * The number of days.\n         */\n        this._days = _days;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains a {@link Period} representing a number of years.\n     *\n     * The resulting period will have the specified years.\n     * The months and days units will be zero.\n     *\n     * @param {number} years - the number of years, positive or negative\n     * @return {Period} the period of years, not null\n     */\n    static ofYears(years) {\n        return Period.create(years, 0, 0);\n    }\n\n    /**\n     * Obtains a {@link Period} representing a number of months.\n     *\n     * The resulting period will have the specified months.\n     * The years and days units will be zero.\n     *\n     * @param {number} months - the number of months, positive or negative\n     * @return {Period} the period of months, not null\n     */\n    static ofMonths(months) {\n        return Period.create(0, months, 0);\n    }\n\n    /**\n     * Obtains a {@link Period} representing a number of weeks.\n     *\n     * The resulting period will have days equal to the weeks multiplied by seven.\n     * The years and months units will be zero.\n     *\n     * @param {number} weeks - the number of weeks, positive or negative\n     * @return {Period} the period of days, not null\n     */\n    static ofWeeks(weeks) {\n        return Period.create(0, 0, MathUtil.safeMultiply(weeks, 7));\n    }\n\n    /**\n     * Obtains a {@link Period} representing a number of days.\n     *\n     * The resulting period will have the specified days.\n     * The years and months units will be zero.\n     *\n     * @param {number} days - the number of days, positive or negative\n     * @return {Period} the period of days, not null\n     */\n    static ofDays(days) {\n        return Period.create(0, 0, days);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains a {@link Period} representing a number of years, months and days.\n     *\n     * This creates an instance based on years, months and days.\n     *\n     * @param {!number} years - the amount of years, may be negative\n     * @param {!number} months - the amount of months, may be negative\n     * @param {!number} days - the amount of days, may be negative\n     * @return {Period} the period of years, months and days, not null\n     */\n    static of(years, months, days) {\n        return Period.create(years, months, days);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains an instance of {@link Period} from a temporal amount.\n     *\n     * This obtains a period based on the specified amount.\n     * A {@link TemporalAmount} represents an - amount of time, which may be\n     * date-based or time-based, which this factory extracts to a {@link Period}.\n     *\n     * The conversion loops around the set of units from the amount and uses\n     * the {@link ChronoUnit#YEARS}, {@link ChronoUnit#MONTHS}\n     * and {@link ChronoUnit#DAYS} units to create a period.\n     * If any other units are found then an exception is thrown.\n     *\n     * If the amount is a {@link ChronoPeriod} then it must use the ISO chronology.\n     *\n     * @param {TemporalAmount} amount - the temporal amount to convert, not null\n     * @return {Period} the equivalent period, not null\n     * @throws DateTimeException if unable to convert to a {@link Period}\n     * @throws ArithmeticException if the amount of years, months or days exceeds an int\n     */\n    static from(amount) {\n        if (amount instanceof Period) {\n            return amount;\n        }\n        /*\n        if (amount instanceof ChronoPeriod) {\n            if (IsoChronology.INSTANCE !== amount.chronology()) {\n                throw new DateTimeException('Period requires ISO chronology: ' + amount);\n            }\n        }\n*/\n        requireNonNull(amount, 'amount');\n        let years = 0;\n        let months = 0;\n        let days = 0;\n        const units = amount.units();\n        for (let i=0; i<units.length; i++) {\n            const unit = units[i];\n            const unitAmount = amount.get(unit);\n            if (unit === ChronoUnit.YEARS) {\n                years = MathUtil.safeToInt(unitAmount);\n            } else if (unit === ChronoUnit.MONTHS) {\n                months = MathUtil.safeToInt(unitAmount);\n            } else if (unit === ChronoUnit.DAYS) {\n                days = MathUtil.safeToInt(unitAmount);\n            } else {\n                throw new DateTimeException(`Unit must be Years, Months or Days, but was ${unit}`);\n            }\n        }\n        return Period.create(years, months, days);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains a {@link Period} consisting of the number of years, months,\n     * and days between two dates.\n     *\n     * The start date is included, but the end date is not.\n     * The period is calculated by removing complete months, then calculating\n     * the remaining number of days, adjusting to ensure that both have the same sign.\n     * The number of months is then split into years and months based on a 12 month year.\n     * A month is considered if the end day-of-month is greater than or equal to the start day-of-month.\n     * For example, from `2010-01-15` to `2011-03-18` is one year, two months and three days.\n     *\n     * The result of this method can be a negative period if the end is before the start.\n     * The negative sign will be the same in each of year, month and day.\n\n     * see {@link ChronoLocalDate.until}\n     *\n     * @param {LocalDate} startDate - the start date, inclusive, not null\n     * @param {LocalDate} endDate - the end date, exclusive, not null\n     * @return {Period} the period between this date and the end date, not null\n     */\n    static between(startDate, endDate) {\n        requireNonNull(startDate, 'startDate');\n        requireNonNull(endDate, 'endDate');\n        requireInstance(startDate, LocalDate, 'startDate');\n        requireInstance(endDate, LocalDate, 'endDate');\n        return startDate.until(endDate);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains a {@link Period} from a text string such as {@link PnYnMnD}.\n     *\n     * This will parse the string produced by {@link toString} which is\n     * based on the ISO-8601 period formats {@link PnYnMnD} and {@link PnW}.\n     *\n     * The string starts with an optional sign, denoted by the ASCII negative\n     * or positive symbol. If negative, the whole period is negated.\n     * The ASCII letter 'P' is next in upper or lower case.\n     * There are then four sections, each consisting of a number and a suffix.\n     * At least one of the four sections must be present.\n     * The sections have suffixes in ASCII of 'Y', 'M', 'W' and 'D' for\n     * years, months, weeks and days, accepted in upper or lower case.\n     * The suffixes must occur in order.\n     * The number part of each section must consist of ASCII digits.\n     * The number may be prefixed by the ASCII negative or positive symbol.\n     * The number must parse to an `int`.\n     *\n     * The leading plus/minus sign, and negative values for other units are\n     * not part of the ISO-8601 standard. In addition, ISO-8601 does not\n     * permit mixing between the {@link PnYnMnD} and {@link PnW} formats.\n     * Any week-based input is multiplied by 7 and treated as a number of days.\n     *\n     * For example, the following are valid inputs:\n     * <pre>\n     *   'P2Y'             -- Period.ofYears(2)\n     *   'P3M'             -- Period.ofMonths(3)\n     *   'P4W'             -- Period.ofWeeks(4)\n     *   'P5D'             -- Period.ofDays(5)\n     *   'P1Y2M3D'         -- Period.of(1, 2, 3)\n     *   'P1Y2M3W4D'       -- Period.of(1, 2, 25)\n     *   'P-1Y2M'          -- Period.of(-1, 2, 0)\n     *   '-P1Y2M'          -- Period.of(-1, -2, 0)\n     * </pre>\n     *\n     * @param {string} text - the text to parse, not null\n     * @return {Period} the parsed period, not null\n     * @throws DateTimeParseException if the text cannot be parsed to a period\n     */\n    static parse(text) {\n        requireNonNull(text, 'text');\n        try {\n            return Period._parse(text);\n        } catch (ex){\n            if(ex instanceof ArithmeticException){\n                throw new DateTimeParseException('Text cannot be parsed to a Period', text, 0, ex);\n            } else {\n                throw ex;\n            }\n        }\n    }\n\n    /**\n     * because functions that containing a try/ catch block cant be optimized,\n     * we put the code in a sub function.\n     */\n    static _parse(text){\n        const matches = PATTERN.exec(text);\n        if (matches != null) {\n            const negate = '-' === matches[1] ? -1 : 1;\n            const yearMatch = matches[2];\n            const monthMatch = matches[3];\n            const weekMatch = matches[4];\n            const dayMatch = matches[5];\n            if (yearMatch != null || monthMatch != null || weekMatch != null || dayMatch != null) {\n                const years = Period._parseNumber(text, yearMatch, negate);\n                const months = Period._parseNumber(text, monthMatch, negate);\n                const weeks = Period._parseNumber(text, weekMatch, negate);\n                let days = Period._parseNumber(text, dayMatch, negate);\n                days = MathUtil.safeAdd(days, MathUtil.safeMultiply(weeks, 7));\n                return Period.create(years, months, days);\n            }\n        }\n        throw new DateTimeParseException('Text cannot be parsed to a Period', text, 0);\n    }\n\n    static _parseNumber(text, str, negate) {\n        if (str == null) {\n            return 0;\n        }\n        const val = MathUtil.parseInt(str);\n        return MathUtil.safeMultiply(val, negate);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Creates an instance.\n     *\n     * @param {number} years - the amount\n     * @param {number} months - the amount\n     * @param {number} days - the amount\n     * @return {Duration}\n     */\n    static create(years, months, days) {\n        return new Period(years, months, days);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the list of units, from largest to smallest, that fully define this amount.\n     *\n     * @returns {ChronoUnit[]} list of units\n     */\n    units() {\n        return [ChronoUnit.YEARS, ChronoUnit.MONTHS, ChronoUnit.DAYS];\n    }\n\n    /**\n     * Gets the chronology that defines the meaning of the supported units.\n     *\n     * The period is defined by the chronology.\n     * It controls the supported units and restricts addition/subtraction\n     * to {@link ChronoLocalDate} instances of the same chronology.\n     *\n     * @return {IsoChronology} the chronology defining the period, not null\n     */\n    chronology() {\n        return IsoChronology.INSTANCE;\n    }\n\n    /**\n     * Gets the value of the requested unit.\n     *\n     * The supported units are chronology specific.\n     * They will typically be {@link ChronoUnit#YEARS},\n     * {@link ChronoUnit#MONTHS} and {@link ChronoUnit#DAYS}.\n     * Requesting an unsupported unit will throw an exception.\n     *\n     * @param {TemporalUnit} unit the {@link TemporalUnit} for which to return the value\n     * @return {number} the long value of the unit\n     * @throws DateTimeException if the unit is not supported\n     * @throws UnsupportedTemporalTypeException if the unit is not supported\n     */\n    get(unit) {\n        if (unit === ChronoUnit.YEARS) {\n            return this._years;\n        }\n        if (unit === ChronoUnit.MONTHS) {\n            return this._months;\n        }\n        if (unit === ChronoUnit.DAYS) {\n            return this._days;\n        }\n        throw new UnsupportedTemporalTypeException(`Unsupported unit: ${unit}`);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Checks if all three units of this period are zero.\n     *\n     * A zero period has the value zero for the years, months and days units.\n     *\n     * @return {boolean} true if this period is zero-length\n     */\n    isZero() {\n        return (this === Period.ZERO);\n    }\n\n    /**\n     * Checks if any of the three units of this period are negative.\n     *\n     * This checks whether the years, months or days units are less than zero.\n     *\n     * @return {boolean} true if any unit of this period is negative\n     */\n    isNegative() {\n        return this._years < 0 || this._months < 0 || this._days < 0;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the amount of years of this period.\n     *\n     * This returns the years unit.\n     *\n     * The months unit is not normalized with the years unit.\n     * This means that a period of '15 months' is different to a period\n     * of '1 year and 3 months'.\n     *\n     * @return {number} the amount of years of this period, may be negative\n     */\n    years() {\n        return this._years;\n    }\n\n    /**\n     * Gets the amount of months of this period.\n     *\n     * This returns the months unit.\n     *\n     * The months unit is not normalized with the years unit.\n     * This means that a period of '15 months' is different to a period\n     * of '1 year and 3 months'.\n     *\n     * @return {number} the amount of months of this period, may be negative\n     */\n    months() {\n        return this._months;\n    }\n\n    /**\n     * Gets the amount of days of this period.\n     *\n     * This returns the days unit.\n     *\n     * @return {number} the amount of days of this period, may be negative\n     */\n    days() {\n        return this._days;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this period with the specified amount of years.\n     *\n     * This sets the amount of the years unit in a copy of this period.\n     * The months and days units are unaffected.\n     *\n     * The months unit is not normalized with the years unit.\n     * This means that a period of '15 months' is different to a period\n     * of '1 year and 3 months'.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} years - the years to represent, may be negative\n     * @return {Period} a {@link Period} based on this period with the requested years, not null\n     */\n    withYears(years) {\n        if (years === this._years) {\n            return this;\n        }\n        return Period.create(years, this._months, this._days);\n    }\n\n    /**\n     * Returns a copy of this period with the specified amount of months.\n     *\n     * This sets the amount of the months unit in a copy of this period.\n     * The years and days units are unaffected.\n     *\n     * The months unit is not normalized with the years unit.\n     * This means that a period of '15 months' is different to a period\n     * of '1 year and 3 months'.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} months - the months to represent, may be negative\n     * @return {Period} a {@link Period} based on this period with the requested months, not null\n     */\n    withMonths(months) {\n        if (months === this._months) {\n            return this;\n        }\n        return Period.create(this._years, months, this._days);\n    }\n\n    /**\n     * Returns a copy of this period with the specified amount of days.\n     *\n     * This sets the amount of the days unit in a copy of this period.\n     * The years and months units are unaffected.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} days - the days to represent, may be negative\n     * @return {Period} a {@link Period} based on this period with the requested days, not null\n     */\n    withDays(days) {\n        if (days === this._days) {\n            return this;\n        }\n        return Period.create(this._years, this._months, days);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this period with the specified amount added.\n     *\n     * This input amount is converted to a {@link Period} using {@link from}.\n     * This operates separately on the years, months and days.\n     *\n     * For example, '1 year, 6 months and 3 days' plus '2 years, 2 months and 2 days'\n     * returns '3 years, 8 months and 5 days'.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {TemporalAmount} amountToAdd - the period to add, not null\n     * @return {Period} a {@link Period} based on this period with the requested period added, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    plus(amountToAdd) {\n        const amount = Period.from(amountToAdd);\n        return Period.create(\n            MathUtil.safeAdd(this._years, amount._years),\n            MathUtil.safeAdd(this._months, amount._months),\n            MathUtil.safeAdd(this._days, amount._days));\n    }\n\n    /**\n     * Returns a copy of this period with the specified years added.\n     *\n     * This adds the amount to the years unit in a copy of this period.\n     * The months and days units are unaffected.\n     * For example, '1 year, 6 months and 3 days' plus 2 years returns '3 years, 6 months and 3 days'.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} yearsToAdd - the years to add, positive or negative\n     * @return {Period} a {@link Period} based on this period with the specified years added, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    plusYears(yearsToAdd) {\n        if (yearsToAdd === 0) {\n            return this;\n        }\n        return Period.create(MathUtil.safeToInt(MathUtil.safeAdd(this._years, yearsToAdd)), this._months, this._days);\n    }\n\n    /**\n     * Returns a copy of this period with the specified months added.\n     *\n     * This adds the amount to the months unit in a copy of this period.\n     * The years and days units are unaffected.\n     * For example, '1 year, 6 months and 3 days' plus 2 months returns '1 year, 8 months and 3 days'.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} monthsToAdd - the months to add, positive or negative\n     * @return {Period} a {@link Period} based on this period with the specified months added, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    plusMonths(monthsToAdd) {\n        if (monthsToAdd === 0) {\n            return this;\n        }\n        return Period.create(this._years, MathUtil.safeToInt(MathUtil.safeAdd(this._months, monthsToAdd)), this._days);\n    }\n\n    /**\n     * Returns a copy of this period with the specified days added.\n     *\n     * This adds the amount to the days unit in a copy of this period.\n     * The years and months units are unaffected.\n     * For example, '1 year, 6 months and 3 days' plus 2 days returns '1 year, 6 months and 5 days'.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} daysToAdd - the days to add, positive or negative\n     * @return {Period} a {@link Period} based on this period with the specified days added, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    plusDays(daysToAdd) {\n        if (daysToAdd === 0) {\n            return this;\n        }\n        return Period.create(this._years, this._months, MathUtil.safeToInt(MathUtil.safeAdd(this._days, daysToAdd)));\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this period with the specified amount subtracted.\n     *\n     * This input amount is converted to a {@link Period} using {@link from}.\n     * This operates separately on the years, months and days.\n     *\n     * For example, '1 year, 6 months and 3 days' minus '2 years, 2 months and 2 days'\n     * returns '-1 years, 4 months and 1 day'.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {TemporalAmount} amountToSubtract - the period to subtract, not null\n     * @return {Period} a {@link Period} based on this period with the requested period subtracted, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    minus(amountToSubtract) {\n        const amount = Period.from(amountToSubtract);\n        return Period.create(\n            MathUtil.safeSubtract(this._years, amount._years),\n            MathUtil.safeSubtract(this._months, amount._months),\n            MathUtil.safeSubtract(this._days, amount._days));\n    }\n\n    /**\n     * Returns a copy of this period with the specified years subtracted.\n     *\n     * This subtracts the amount from the years unit in a copy of this period.\n     * The months and days units are unaffected.\n     * For example, '1 year, 6 months and 3 days' minus 2 years returns '-1 years, 6 months and 3 days'.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} yearsToSubtract - the years to subtract, positive or negative\n     * @return {Period} a {@link Period} based on this period with the specified years subtracted, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    minusYears(yearsToSubtract) {\n        return this.plusYears(-1 * yearsToSubtract);\n    }\n\n    /**\n     * Returns a copy of this period with the specified months subtracted.\n     *\n     * This subtracts the amount from the months unit in a copy of this period.\n     * The years and days units are unaffected.\n     * For example, '1 year, 6 months and 3 days' minus 2 months returns '1 year, 4 months and 3 days'.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} monthsToSubtract - the years to subtract, positive or negative\n     * @return {Period} a {@link Period} based on this period with the specified months subtracted, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    minusMonths(monthsToSubtract) {\n        return this.plusMonths(-1 * monthsToSubtract);\n    }\n\n    /**\n     * Returns a copy of this period with the specified days subtracted.\n     *\n     * This subtracts the amount from the days unit in a copy of this period.\n     * The years and months units are unaffected.\n     * For example, '1 year, 6 months and 3 days' minus 2 days returns '1 year, 6 months and 1 day'.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} daysToSubtract - the months to subtract, positive or negative\n     * @return {Period} a {@link Period} based on this period with the specified days subtracted, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    minusDays(daysToSubtract) {\n        return this.plusDays(-1 * daysToSubtract);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a new instance with each element in this period multiplied\n     * by the specified scalar.\n     *\n     * This simply multiplies each field, years, months, days and normalized time,\n     * by the scalar. No normalization is performed.\n     *\n     * @param {number} scalar - the scalar to multiply by, not null\n     * @return {Period} a {@link Period} based on this period with the amounts multiplied by the scalar, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    multipliedBy(scalar) {\n        if (this === Period.ZERO || scalar === 1) {\n            return this;\n        }\n        return Period.create(\n            MathUtil.safeMultiply(this._years, scalar),\n            MathUtil.safeMultiply(this._months, scalar),\n            MathUtil.safeMultiply(this._days, scalar));\n    }\n\n    /**\n     * Returns a new instance with each amount in this period negated.\n     *\n     * @return {Period} a {@link Period} based on this period with the amounts negated, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    negated() {\n        return this.multipliedBy(-1);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this period with the years and months normalized\n     * using a 12 month year.\n     *\n     * This normalizes the years and months units, leaving the days unit unchanged.\n     * The months unit is adjusted to have an absolute value less than 11,\n     * with the years unit being adjusted to compensate. For example, a period of\n     * '1 Year and 15 months' will be normalized to '2 years and 3 months'.\n     *\n     * The sign of the years and months units will be the same after normalization.\n     * For example, a period of '1 year and -25 months' will be normalized to\n     * '-1 year and -1 month'.\n     *\n     * This normalization uses a 12 month year which is not valid for all calendar systems.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @return {Period} a {@link Period} based on this period with excess months normalized to years, not null\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    normalized() {\n        const totalMonths = this.toTotalMonths();\n        const splitYears = MathUtil.intDiv(totalMonths, 12);\n        const splitMonths = MathUtil.intMod(totalMonths, 12);  // no overflow\n        if (splitYears === this._years && splitMonths === this._months) {\n            return this;\n        }\n        return Period.create(MathUtil.safeToInt(splitYears), splitMonths, this._days);\n    }\n\n    /**\n     * Gets the total number of months in this period using a 12 month year.\n     *\n     * This returns the total number of months in the period by multiplying the\n     * number of years by 12 and adding the number of months.\n     *\n     * This uses a 12 month year which is not valid for all calendar systems.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @return {number} the total number of months in the period, may be negative\n     */\n    toTotalMonths() {\n        return this._years * 12 + this._months;  // no overflow\n    }\n\n    //-------------------------------------------------------------------------\n    /**\n     * Adds this period to the specified temporal object.\n     *\n     * This returns a temporal object of the same observable type as the input\n     * with this period added.\n     *\n     * In most cases, it is clearer to reverse the calling pattern by using\n     * {@link Temporal#plus}.\n     * <pre>\n     *   // these two lines are equivalent, but the second approach is recommended\n     *   dateTime = thisPeriod.addTo(dateTime);\n     *   dateTime = dateTime.plus(thisPeriod);\n     * </pre>\n     *\n     * The calculation will add the years, then months, then days.\n     * Only non-zero amounts will be added.\n     * If the date-time has a calendar system with a fixed number of months in a\n     * year, then the years and months will be combined before being added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Temporal} temporal - the temporal object to adjust, not null\n     * @return {Temporal} an object of the same type with the adjustment made, not null\n     * @throws DateTimeException if unable to add\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    addTo(temporal) {\n        requireNonNull(temporal, 'temporal');\n        if (this._years !== 0) {\n            if (this._months !== 0) {\n                temporal = temporal.plus(this.toTotalMonths(), ChronoUnit.MONTHS);\n            } else {\n                temporal = temporal.plus(this._years, ChronoUnit.YEARS);\n            }\n        } else if (this._months !== 0) {\n            temporal = temporal.plus(this._months, ChronoUnit.MONTHS);\n        }\n        if (this._days !== 0) {\n            temporal = temporal.plus(this._days, ChronoUnit.DAYS);\n        }\n        return temporal;\n    }\n\n    /**\n     * Subtracts this period from the specified temporal object.\n     *\n     * This returns a temporal object of the same observable type as the input\n     * with this period subtracted.\n     *\n     * In most cases, it is clearer to reverse the calling pattern by using\n     * {@link Temporal#minus}.\n     * <pre>\n     *   // these two lines are equivalent, but the second approach is recommended\n     *   dateTime = thisPeriod.subtractFrom(dateTime);\n     *   dateTime = dateTime.minus(thisPeriod);\n     * </pre>\n     *\n     * The calculation operates as follows.\n     * First, the chronology of the temporal is checked to ensure it is ISO chronology or null.\n     * Second, if the months are zero, the years are added if non-zero, otherwise\n     * the combination of years and months is added if non-zero.\n     * Finally, any days are added.\n     *\n     * The calculation will subtract the years, then months, then days.\n     * Only non-zero amounts will be subtracted.\n     * If the date-time has a calendar system with a fixed number of months in a\n     * year, then the years and months will be combined before being subtracted.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Temporal} temporal - the temporal object to adjust, not null\n     * @return {Temporal} an object of the same type with the adjustment made, not null\n     * @throws DateTimeException if unable to subtract\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    subtractFrom(temporal) {\n        requireNonNull(temporal, 'temporal');\n        if (this._years !== 0) {\n            if (this._months !== 0) {\n                temporal = temporal.minus(this.toTotalMonths(), ChronoUnit.MONTHS);\n            } else {\n                temporal = temporal.minus(this._years, ChronoUnit.YEARS);\n            }\n        } else if (this._months !== 0) {\n            temporal = temporal.minus(this._months, ChronoUnit.MONTHS);\n        }\n        if (this._days !== 0) {\n            temporal = temporal.minus(this._days, ChronoUnit.DAYS);\n        }\n        return temporal;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Checks if this period is equal to another period.\n     *\n     * The comparison is based on the amounts held in the period.\n     * To be equal, the years, months and days units must be individually equal.\n     * Note that this means that a period of '15 Months' is not equal to a period\n     * of '1 Year and 3 Months'.\n     *\n     * @param {*} obj - the object to check, null returns false\n     * @return {boolean} true if this is equal to the other period\n     */\n    equals(obj) {\n        if (this === obj) {\n            return true;\n        }\n        if (obj instanceof Period) {\n            const other = obj;\n            return this._years === other._years &&\n                this._months === other._months &&\n                this._days === other._days;\n        }\n        return false;\n    }\n\n    /**\n     * A hash code for this period.\n     *\n     * @return {number} a suitable hash code\n     */\n    hashCode() {\n        return MathUtil.hashCode(this._years, this._months, this._days);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Outputs this period as a string, such as {@link P6Y3M1D}.\n     *\n     * The output will be in the ISO-8601 period format.\n     * A zero period will be represented as zero days, 'P0D'.\n     *\n     * @return {string} a string representation of this period, not null\n     */\n    toString() {\n        if (this === Period.ZERO) {\n            return 'P0D';\n        } else {\n            let buf = 'P';\n            if (this._years !== 0) {\n                buf += `${this._years}Y`;\n            }\n            if (this._months !== 0) {\n                buf += `${this._months}M`;\n            }\n            if (this._days !== 0) {\n                buf += `${this._days}D`;\n            }\n            return buf;\n        }\n    }\n\n    /**\n     *\n     * @return {string} same as {@link Period.toString}\n     */\n    toJSON() {\n        return this.toString();\n    }\n}\n\nexport function _init() {\n    /**\n     * A constant for a period of zero.\n     */\n    Period.ofDays(0);\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\n/**\n * @private\n */\nexport class ParsePosition {\n    constructor(index) {\n        this._index = index;\n        this._errorIndex = -1;\n    }\n\n    getIndex(){\n        return this._index;\n    }\n\n    setIndex(index){\n        this._index = index;\n    }\n\n    getErrorIndex(){\n        return this._errorIndex;\n    }\n\n    setErrorIndex(errorIndex){\n        this._errorIndex = errorIndex;\n    }\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\n/**\n * @private\n */\nexport class EnumMap {\n    constructor(){\n        this._map = {};\n    }\n\n    putAll(otherMap){\n        for(const key in otherMap._map){\n            this._map[key] = otherMap._map[key];\n        }\n        return this;\n    }\n\n    containsKey(key){\n        // eslint-disable-next-line no-prototype-builtins\n        return (this._map.hasOwnProperty(key.name())) && (this.get(key) !== undefined);\n    }\n\n    get(key) {\n        return this._map[key.name()];\n    }\n\n    put(key, val) {\n        return this.set(key, val);\n    }\n\n    set(key, val) {\n        this._map[key.name()] = val;\n        return this;\n    }\n\n    retainAll(keyList){\n        const map = {};\n        for(let i=0; i<keyList.length; i++){\n            const key = keyList[i].name();\n            map[key] = this._map[key];\n        }\n        this._map = map;\n        return this;\n    }\n\n    /**\n     * due to the bad performance of delete we just set the key entry to undefined.\n     *\n     * this might lead to issues with \"null\" entries. Calling clear in the end might solve the issue\n     * @param key\n     * @returns {*}\n     */\n    remove(key){\n        const keyName = key.name();\n        const val = this._map[keyName];\n        this._map[keyName] = undefined;\n        return val;\n    }\n\n    keySet(){\n        return this._map;\n    }\n\n    clear(){\n        this._map = {};\n    }\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { Enum } from '../Enum';\n\n/**\n * Enumeration of different ways to resolve dates and times.\n * \n * Parsing a text string occurs in two phases.\n * Phase 1 is a basic text parse according to the fields added to the builder.\n * Phase 2 resolves the parsed field-value pairs into date and/or time objects.\n * This style is used to control how phase 2, resolving, happens.\n *\n * ### Static properties of Class {@link DateTimeFormatter}\n *\n * ResolverStyle.STRICT = new ResolverStyle('STRICT');\n *\n * Style to resolve dates and times strictly.\n *\n * Using strict resolution will ensure that all parsed values are within\n * the outer range of valid values for the field. Individual fields may\n * be further processed for strictness.\n *\n * For example, resolving year-month and day-of-month in the ISO calendar\n * system using strict mode will ensure that the day-of-month is valid\n * for the year-month, rejecting invalid values.\n *\n * ResolverStyle.SMART = new ResolverStyle('SMART');\n *\n * Style to resolve dates and times in a smart, or intelligent, manner.\n *\n * Using smart resolution will perform the sensible default for each\n * field, which may be the same as strict, the same as lenient, or a third\n * behavior. Individual fields will interpret this differently.\n *\n * For example, resolving year-month and day-of-month in the ISO calendar\n * system using smart mode will ensure that the day-of-month is from\n * 1 to 31, converting any value beyond the last valid day-of-month to be\n * the last valid day-of-month.\n *\n * ResolverStyle.LENIENT = new ResolverStyle('LENIENT');\n *\n * Style to resolve dates and times leniently.\n *\n * Using lenient resolution will resolve the values in an appropriate\n * lenient manner. Individual fields will interpret this differently.\n *\n * For example, lenient mode allows the month in the ISO calendar system\n * to be outside the range 1 to 12.\n * For example, month 15 is treated as being 3 months after month 12.\n *\n */\nexport class ResolverStyle extends Enum {}\n\n/**\n * Style to resolve dates and times strictly.\n * \n * Using strict resolution will ensure that all parsed values are within\n * the outer range of valid values for the field. Individual fields may\n * be further processed for strictness.\n * \n * For example, resolving year-month and day-of-month in the ISO calendar\n * system using strict mode will ensure that the day-of-month is valid\n * for the year-month, rejecting invalid values.\n */\nResolverStyle.STRICT = new ResolverStyle('STRICT');\n/**\n * Style to resolve dates and times in a smart, or intelligent, manner.\n * \n * Using smart resolution will perform the sensible default for each\n * field, which may be the same as strict, the same as lenient, or a third\n * behavior. Individual fields will interpret this differently.\n * \n * For example, resolving year-month and day-of-month in the ISO calendar\n * system using smart mode will ensure that the day-of-month is from\n * 1 to 31, converting any value beyond the last valid day-of-month to be\n * the last valid day-of-month.\n */\nResolverStyle.SMART = new ResolverStyle('SMART');\n/**\n * Style to resolve dates and times leniently.\n * \n * Using lenient resolution will resolve the values in an appropriate\n * lenient manner. Individual fields will interpret this differently.\n * \n * For example, lenient mode allows the month in the ISO calendar system\n * to be outside the range 1 to 12.\n * For example, month 15 is treated as being 3 months after month 12.\n */\nResolverStyle.LENIENT = new ResolverStyle('LENIENT');\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { assert, abstractMethodFail, requireInstance, requireNonNull } from '../assert';\nimport { IllegalArgumentException } from '../errors';\nimport { TemporalAccessor } from './TemporalAccessor';\nimport { TemporalAmount } from './TemporalAmount';\nimport { TemporalUnit } from './TemporalUnit';\n\n/**\n * Framework-level interface defining read-write access to a temporal object,\n * such as a date, time, offset or some combination of these.\n *\n * This is the base interface type for date, time and offset objects that\n * are complete enough to be manipulated using plus and minus.\n * It is implemented by those classes that can provide and manipulate information\n * as fields (see {@link TemporalField}) or queries (see {@link TemporalQuery}).\n * See {@link TemporalAccessor} for the read-only version of this interface.\n *\n * Most date and time information can be represented as a number.\n * These are modeled using {@link TemporalField} with the number held using\n * a `long` to handle large values. Year, month and day-of-month are\n * simple examples of fields, but they also include instant and offsets.\n * See {@link ChronoField} for the standard set of fields.\n *\n * Two pieces of date/time information cannot be represented by numbers,\n * the {@link Chronology} and the {@link ZoneId}.\n * These can be accessed using the static methods defined on {@link TemporalQueries}.\n *\n * This interface is a framework-level interface that should not be widely\n * used in application code. Instead, applications should create and pass\n * around instances of concrete types, such as {@link LocalDate}.\n * There are many reasons for this, part of which is that implementations\n * of this interface may be in calendar systems other than ISO.\n * See {@link ChronoLocalDate} for a fuller discussion of the issues.\n *\n * ### When to implement\n *\n * A class should implement this interface if it meets three criteria:\n *\n * * it provides access to date/time/offset information, as per {@link TemporalAccessor}\n * * the set of fields are contiguous from the largest to the smallest\n * * the set of fields are complete, such that no other field is needed to define the\n *   valid range of values for the fields that are represented\n *\n * Four examples make this clear:\n *\n * * {@link LocalDate} implements this interface as it represents a set of fields\n *   that are contiguous from days to forever and require no external information to determine\n *   the validity of each date. It is therefore able to implement plus/minus correctly.\n * * {@link LocalTime} implements this interface as it represents a set of fields\n *   that are contiguous from nanos to within days and require no external information to determine\n *   validity. It is able to implement plus/minus correctly, by wrapping around the day.\n * * {@link MonthDay}, the combination of month-of-year and day-of-month, does not implement\n *   this interface.  While the combination is contiguous, from days to months within years,\n *   the combination does not have sufficient information to define the valid range of values\n *   for day-of-month.  As such, it is unable to implement plus/minus correctly.\n * * The combination day-of-week and day-of-month (\"Friday the 13th\") should not implement\n *   this interface. It does not represent a contiguous set of fields, as days to weeks overlaps\n *   days to months.\n *\n * @interface\n */\nexport class Temporal extends TemporalAccessor {\n    /**\n     * Checks if the specified unit is supported.\n     * This checks if the date-time can be queried for the specified unit. If false, then calling the plus and minus methods will throw an exception.\n\n     * ### Specification for implementors\n     * Implementations must check and handle all fields defined in {@link ChronoUnit}. If the field is supported, then true is returned, otherwise false\n     * If the field is not a {@link ChronoUnit}, then the result of this method is obtained by invoking `TemporalUnit.isSupportedBy(Temporal)` passing this as the argument.\n\n     * Implementations must not alter this object.\n\n     * @param {TemporalUnit} fieldOrUnit - the unit to check, null returns false\n     * @return {boolean} true if this date-time can be queried for the unit, false if not\n     */\n    // eslint-disable-next-line no-unused-vars\n    isSupported(fieldOrUnit) {\n        abstractMethodFail('isSupported');\n    }\n\n    /**\n     * function overloading for {@link Temporal.plus}\n     *\n     * Called with 1 (or less) arguments, p1 is expected to be a {@link TemporalAmount} and {@link Temporal.minusAmount} is called.\n     *\n     * Otherwise {@link Temporal.minusAmountUnit} is called.\n     *\n     * @param {!(TemporalAmount|number)} amount\n     * @param {TemporalUnit} unit\n     * @return {Temporal}\n     */\n    minus(amount, unit) {\n        if (arguments.length < 2) {\n            return this._minusAmount(amount);\n        } else {\n            return this._minusUnit(amount, unit);\n        }\n    }\n\n    /**\n     * Returns an object of the same type as this object with an amount subtracted.\n     * This adjusts this temporal, subtracting according to the rules of the specified amount. The\n     * amount is typically a {@link Period} but may be any other type implementing the {@link TemporalAmount} interface, such as Duration.\n     *\n     * Some example code indicating how and why this method is used:\n     *\n     * <pre>\n     *   date = date.minus(period);                  // subtract a Period instance\n     *   date = date.minus(duration);                // subtract a Duration instance\n     *   date = date.minus(workingDays(6));          // example user-written workingDays method\n     * </pre>\n     *\n     * Note that calling plus followed by minus is not guaranteed to return the same date-time.\n     *\n     * ### Specification for implementors\n     * Implementations must not alter either this object. Instead, an adjusted copy of the original\n     * must be returned. This provides equivalent, safe behavior for immutable and mutable\n     * implementations.\n     *\n     * @param {TemporalAmount} amount - the amount to subtract, not null\n     * @return {Temporal} an object of the same type with the specified adjustment made, not null\n     * @throws DateTimeException - if the subtraction cannot be made\n     * @throws ArithmeticException - if numeric overflow occurs\n     */\n    _minusAmount(amount) {\n        requireNonNull(amount, 'amount');\n        requireInstance(amount, TemporalAmount, 'amount');\n        return amount.subtractFrom(this);\n    }\n\n    /**\n     * Returns an object of the same type as this object with the specified period subtracted.\n     * This method returns a new object based on this one with the specified period subtracted. For example, on a {@link LocalDate}, this could be used to subtract a number of years, months or days. The returned object will have the same observable type as this object.\n     *\n     * In some cases, changing a field is not fully defined. For example, if the target object is a date representing the 31st March, then subtracting one month would be unclear. In cases like this, the field is responsible for resolving the result. Typically it will choose the previous valid date, which would be the last valid day of February in this example.\n     *\n     * If the implementation represents a date-time that has boundaries, such {@link as} LocalTime, then the permitted units must include the boundary unit, but no multiples of the boundary unit. For example, {@link LocalTime} must accept `DAYS` but not `WEEKS` or `MONTHS`.\n     *\n     * ### Specification for implementors\n     * Implementations must behave in a manor equivalent to the default method behavior.\n     * Implementations must not alter either this object or the specified temporal object. Instead, an adjusted copy of the original must be returned. This provides equivalent, safe behavior for immutable and mutable implementations.\n     *\n     * @param {number} amountToSubtract - the amount of the specified unit to subtract, may be negative\n     * @param {TemporalUnit} unit - the unit of the period to subtract, not null\n     * @return {Temporal} an object of the same type with the specified period subtracted, not null\n     * @throws DateTimeException - if the unit cannot be subtracted\n     * @throws ArithmeticException - if numeric overflow occurs\n     */\n    _minusUnit(amountToSubtract, unit) {\n        requireNonNull(amountToSubtract, 'amountToSubtract');\n        requireNonNull(unit, 'unit');\n        requireInstance(unit, TemporalUnit, 'unit');\n        return this._plusUnit(-amountToSubtract, unit);\n    }\n\n    /**\n     * function overloading for {@link Temporal.plus}\n     *\n     * Called with 1 (or less) arguments, p1 is expected to be a {@link TemporalAmount} and {@link Temporal.plusAmount} is called.\n     *\n     * Otherwise {@link Temporal.plusAmountUnit} is called.\n     *\n     * @param {!(TemporalAmount|number)} amount\n     * @param {TemporalUnit} unit\n     * @return {Temporal}\n     */\n    plus(amount, unit) {\n        if (arguments.length < 2) {\n            return this._plusAmount(amount);\n        } else {\n            return this._plusUnit(amount, unit);\n        }\n    }\n\n    /**\n     * Returns an object of the same type as this object with an amount added.\n     * This adjusts this temporal, adding according to the rules of the specified amount. The amount is typically a {@link Period} but may be any other type implementing the {@link TemporalAmount} interface, such as {@link Duration}.\n     *\n     * Some example code indicating how and why this method is used:\n     *\n     * <pre>\n     *   date = date.plus(period);                  // add a Period instance\n     *   date = date.plus(duration);                // add a Duration instance\n     *   date = date.plus(workingDays(6));          // example user-written workingDays method\n     * </pre>\n     *\n     * Note that calling plus followed by minus is not guaranteed to return the same date-time.\n     *\n     * ### Specification for implementors\n     * Implementations must not alter either this object. Instead, an adjusted copy of the original must be returned. This provides equivalent, safe behavior for immutable and mutable implementations.\n     *\n     * @param {TemporalAmount} amount - the amount to add, not null\n     * @return {Temporal} an object of the same type with the specified adjustment made, not null\n     * @throws DateTimeException - if the addition cannot be made\n     * @throws ArithmeticException - if numeric overflow occurs\n     */\n    _plusAmount(amount) {\n        requireNonNull(amount, 'amount');\n        requireInstance(amount, TemporalAmount, 'amount');\n        return amount.addTo(this);\n    }\n\n    /**\n     * Returns an object of the same type as this object with the specified period added.\n     * This method returns a new object based on this one with the specified period added. For example, on a {@link LocalDate}, this could be used to add a number of years, months or days. The returned object will have the same observable type as this object.\n     *\n     * In some cases, changing a field is not fully defined. For example, if the target object is a date representing the 31st January, then adding one month would be unclear. In cases like this, the field is responsible for resolving the result. Typically it will choose the previous valid date, which would be the last valid day of February in this example.\n     *\n     * If the implementation represents a date-time that has boundaries, such as {@link LocalTime}, then the permitted units must include the boundary unit, but no multiples of the boundary unit. For example, {@link LocalTime} must accept `DAYS` but not `WEEKS` or `MONTHS`.\n     *\n     * ### Specification for implementors\n     * Implementations must check and handle all units defined in {@link ChronoUnit}. If the unit is supported, then the addition must be performed. If unsupported, then a {@link DateTimeException} must be thrown.\n     * If the unit is not a {@link ChronoUnit}, then the result of this method is obtained by invoking `TemporalUnit.addTo(Temporal, long)` passing this as the first argument.\n     *\n     * Implementations must not alter either this object or the specified temporal object. Instead, an adjusted copy of the original must be returned. This provides equivalent, safe behavior for immutable and mutable implementations.\n     *\n     * @param {number} amountToAdd - the amount of the specified unit to add, may be negative\n     * @param {TemporalUnit} unit - the unit of the period to add, not null\n     * @return {Temporal} an object of the same type with the specified period added, not null\n     * @throws DateTimeException - if the unit cannot be added\n     * @throws ArithmeticException - if numeric overflow occurs\n     */\n    // eslint-disable-next-line no-unused-vars\n    _plusUnit(amountToAdd, unit) {\n        abstractMethodFail('_plusUnit');\n    }\n\n    /**\n     * Calculates the period between this temporal and another temporal in terms of the specified unit.\n     * This calculates the period between two temporals in terms of a single unit. The start and end points are this and the specified temporal. The result will be negative if the end is before the start. For example, the period in hours between two temporal objects can be calculated using `startTime.until(endTime, HOURS)`.\n     *\n     * The calculation returns a whole number, representing the number of complete units between the two temporals. For example, the period in hours between the times 11:30 and 13:29 will only be one hour as it is one minute short of two hours.\n     *\n     * There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use `TemporalUnit.between(Temporal, Temporal)`:\n     *\n     * <pre>\n     *    // these two lines are equivalent\n     *    between = thisUnit.between(start, end);\n     *    between = start.until(end, thisUnit);\n     * </pre>\n     *\n     * The choice should be made based on which makes the code more readable.\n     * For example, this method allows the number of days between two dates to be calculated:\n     *\n     * <pre>\n     *    long daysBetween = DAYS.between(start, end);\n     *    // or alternatively\n     *    long daysBetween = start.until(end, DAYS);\n     * </pre>\n     *\n     * ### Specification for implementors\n     * Implementations must begin by checking to ensure that the input temporal object is of the same observable type as the implementation. They must then perform the calculation for all instances of {@link ChronoUnit}. A {@link DateTimeException} must be thrown for {@link ChronoUnit} instances that are unsupported.\n     * If the unit is not a {@link ChronoUnit}, then the result of this method is obtained by invoking `TemporalUnit.between(Temporal, Temporal)` passing this as the first argument and the input temporal as the second argument.\n     *\n     * In summary, implementations must behave in a manner equivalent to this code:\n     *\n     * <pre>\n     *   // check input temporal is the same type as this class\n     *   if (unit instanceof ChronoUnit) {\n     *     // if unit is supported, then calculate and return result\n     *     // else throw DateTimeException for unsupported units\n     *   }\n     *   return unit.between(this, endTemporal);\n     * </pre>\n     *\n     * The target object must not be altered by this method.\n     *\n     * @param {Temporal} endTemporal - the end temporal, of the same type as this object, not null\n     * @param {TemporalUnit} unit - the unit to measure the period in, not null\n     * @return {number} the amount of the period between this and the end\n     * @throws DateTimeException - if the period cannot be calculated\n     * @throws ArithmeticException - if numeric overflow occurs\n     */\n    // eslint-disable-next-line no-unused-vars\n    until(endTemporal, unit) {\n        abstractMethodFail('until');\n    }\n\n    /**\n     * function overloading for {@link Temporal.with}\n     *\n     * Called with 1 (or less) arguments, p1 is expected to be a {@link TemporalAdjuster} and {@link Temporal.withAdjuster} is called.\n     *\n     * Otherwise {@link Temporal.withFieldValue} is called.\n     *\n     * @param {!(TemporalAdjuster|TemporalField)} adjusterOrField\n     * @param {number} newValue\n     * @return {Temporal}\n     */\n    with(adjusterOrField, newValue) {\n        if (arguments.length < 2) {\n            return this._withAdjuster(adjusterOrField);\n        } else {\n            return this._withField(adjusterOrField, newValue);\n        }\n    }\n\n    /**\n     * Returns an adjusted object of the same type as this object with the adjustment made.\n     * This adjusts this date-time according to the rules of the specified adjuster. A simple adjuster might simply set the one of the fields, such as the year field. A more complex adjuster might set the date to the last day of the month. A selection of common adjustments is provided in {@link TemporalAdjusters}. These include finding the \"last day of the month\" and \"next Wednesday\". The adjuster is responsible for handling special cases, such as the varying lengths of month and leap years.\n     *\n     * Some example code indicating how and why this method is used:\n     *\n     * <pre>\n     *   date = date.with(Month.JULY);        // most key classes implement TemporalAdjuster\n     *   date = date.with(lastDayOfMonth());  // static import from TemporalAdjusters\n     *   date = date.with(next(WEDNESDAY));   // static import from TemporalAdjusters and DayOfWeek\n     * </pre>\n     *\n     * ### Specification for implementors\n     * Implementations must not alter either this object. Instead, an adjusted copy of the original must be returned. This provides equivalent, safe behavior for immutable and mutable implementations.\n     *\n     * @param {TemporalAdjuster} adjuster - the adjuster to use, not null\n     * @return {Temporal} an object of the same type with the specified adjustment made, not null\n     * @throws DateTimeException - if unable to make the adjustment\n     * @throws ArithmeticException - if numeric overflow occurs\n     */\n    _withAdjuster(adjuster) {\n        requireNonNull(adjuster, 'adjuster');\n        assert(typeof adjuster.adjustInto === 'function',\n            'adjuster must be a TemporalAdjuster',\n            IllegalArgumentException);\n        return adjuster.adjustInto(this);\n    }\n\n    /**\n     * Returns an object of the same type as this object with the specified field altered.\n     * This returns a new object based on this one with the value for the specified field changed. For example, on a {@link LocalDate}, this could be used to set the year, month or day-of-month. The returned object will have the same observable type as this object.\n     *\n     * In some cases, changing a field is not fully defined. For example, if the target object is a date representing the 31st January, then changing the month to February would be unclear. In cases like this, the field is responsible for resolving the result. Typically it will choose the previous valid date, which would be the last valid day of February in this example.\n     *\n     * ### Specification for implementors\n     * Implementations must check and handle all fields defined in {@link ChronoField}. If the field is supported, then the adjustment must be performed. If unsupported, then a {@link DateTimeException} must be thrown.\n     * If the field is not a {@link ChronoField}, then the result of this method is obtained by invoking `TemporalField.adjustInto(Temporal, long)` passing this as the first argument.\n     *\n     * Implementations must not alter either this object or the specified temporal object. Instead, an adjusted copy of the original must be returned. This provides equivalent, safe behavior for immutable and mutable implementations.\n     *\n     * @param {TemporalField} field - the field to set in the result, not null\n     * @param {number} newValue - the new value of the field in the result\n     * @return {Temporal} an object of the same type with the specified field set, not null\n     * @throws DateTimeException - if the field cannot be set\n     * @throws ArithmeticException - if numeric overflow occurs\n     */\n    // eslint-disable-next-line no-unused-vars\n    _withField(field, newValue) {\n        abstractMethodFail('_withField');\n    }\n}\n\nif (typeof Symbol !== 'undefined' && Symbol.toPrimitive) {\n    Temporal.prototype[Symbol.toPrimitive] = function (hint) {\n        // hint could be 'number', 'string' or 'default'. Only 'number'\n        // should throw and 'default' is treated as 'string'.\n        if (hint !== 'number') {\n            return this.toString();\n        }\n\n        throw new TypeError(\n            'A conversion from Temporal to a number is not allowed. ' +\n            'To compare use the methods .equals(), .compareTo(), .isBefore() ' +\n            'or one that is more suitable to your use case.'\n        );\n    };\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { requireNonNull, requireInstance } from '../assert';\n\nimport { ChronoField } from '../temporal/ChronoField';\nimport { ChronoUnit } from '../temporal/ChronoUnit';\nimport { DateTimeFormatter } from '../format/DateTimeFormatter';\nimport { TemporalQueries } from '../temporal/TemporalQueries';\nimport { Temporal } from '../temporal/Temporal';\n\nimport { LocalDate } from '../LocalDate';\n\n/**\n * A date without time-of-day or time-zone in an arbitrary chronology, intended\n * for advanced globalization use cases.\n *\n * **Most applications should declare method signatures, fields and variables\n * as {@link LocalDate}, not this interface.**\n *\n * A {@link ChronoLocalDate} is the abstract representation of a date where the\n * {@link Chronology}, or calendar system, is pluggable.\n * The date is defined in terms of fields expressed by {@link TemporalField},\n * where most common implementations are defined in {@link ChronoField}.\n * The chronology defines how the calendar system operates and the meaning of\n * the standard fields.\n *\n * #### When to use this interface\n *\n * The design of the API encourages the use of {@link LocalDate} rather than this\n * interface, even in the case where the application needs to deal with multiple\n * calendar systems. The rationale for this is explored in the following documentation.\n *\n * The primary use case where this interface should be used is where the generic\n * type parameter `C` is fully defined as a specific chronology.\n * In that case, the assumptions of that chronology are known at development\n * time and specified in the code.\n *\n * When the chronology is defined in the generic type parameter as ? or otherwise\n * unknown at development time, the rest of the discussion below applies.\n *\n * To emphasize the point, declaring a method signature, field or variable as this\n * interface type can initially seem like the sensible way to globalize an application,\n * however it is usually the wrong approach.\n * As such, it should be considered an application-wide architectural decision to choose\n * to use this interface as opposed to {@link LocalDate}.\n *\n * #### Architectural issues to consider\n *\n * These are some of the points that must be considered before using this interface\n * throughout an application.\n *\n * 1) Applications using this interface, as opposed to using just {@link LocalDate},\n * face a significantly higher probability of bugs. This is because the calendar system\n * in use is not known at development time. A key cause of bugs is where the developer\n * applies assumptions from their day-to-day knowledge of the ISO calendar system\n * to code that is intended to deal with any arbitrary calendar system.\n * The section below outlines how those assumptions can cause problems\n * The primary mechanism for reducing this increased risk of bugs is a strong code review process.\n * This should also be considered a extra cost in maintenance for the lifetime of the code.\n *\n * 2) This interface does not enforce immutability of implementations.\n * While the implementation notes indicate that all implementations must be immutable\n * there is nothing in the code or type system to enforce this. Any method declared\n * to accept a {@link ChronoLocalDate} could therefore be passed a poorly or\n * maliciously written mutable implementation.\n *\n * 3) Applications using this interface  must consider the impact of eras.\n * {@link LocalDate} shields users from the concept of eras, by ensuring that `getYear()`\n * returns the proleptic year. That decision ensures that developers can think of\n * {@link LocalDate} instances as consisting of three fields - year, month-of-year and day-of-month.\n * By contrast, users of this interface must think of dates as consisting of four fields -\n * era, year-of-era, month-of-year and day-of-month. The extra era field is frequently\n * forgotten, yet it is of vital importance to dates in an arbitrary calendar system.\n * For example, in the Japanese calendar system, the era represents the reign of an Emperor.\n * Whenever one reign ends and another starts, the year-of-era is reset to one.\n *\n * 4) The only agreed international standard for passing a date between two systems\n * is the ISO-8601 standard which requires the ISO calendar system. Using this interface\n * throughout the application will inevitably lead to the requirement to pass the date\n * across a network or component boundary, requiring an application specific protocol or format.\n *\n * 5) Long term persistence, such as a database, will almost always only accept dates in the\n * ISO-8601 calendar system (or the related Julian-Gregorian). Passing around dates in other\n * calendar systems increases the complications of interacting with persistence.\n *\n * 6) Most of the time, passing a {@link ChronoLocalDate} throughout an application\n * is unnecessary, as discussed in the last section below.\n *\n * #### False assumptions causing bugs in multi-calendar system code\n *\n * As indicated above, there are many issues to consider when try to use and manipulate a\n * date in an arbitrary calendar system. These are some of the key issues.\n *\n * Code that queries the day-of-month and assumes that the value will never be more than\n * 31 is invalid. Some calendar systems have more than 31 days in some months.\n *\n * Code that adds 12 months to a date and assumes that a year has been added is invalid.\n * Some calendar systems have a different number of months, such as 13 in the Coptic or Ethiopic.\n *\n * Code that adds one month to a date and assumes that the month-of-year value will increase\n * by one or wrap to the next year is invalid. Some calendar systems have a variable number\n * of months in a year, such as the Hebrew.\n *\n * Code that adds one month, then adds a second one month and assumes that the day-of-month\n * will remain close to its original value is invalid. Some calendar systems have a large difference\n * between the length of the longest month and the length of the shortest month.\n * For example, the Coptic or Ethiopic have 12 months of 30 days and 1 month of 5 days.\n *\n * Code that adds seven days and assumes that a week has been added is invalid.\n * Some calendar systems have weeks of other than seven days, such as the French Revolutionary.\n *\n * Code that assumes that because the year of `date1` is greater than the year of `date2`\n * then `date1` is after `date2` is invalid. This is invalid for all calendar systems\n * when referring to the year-of-era, and especially untrue of the Japanese calendar system\n * where the year-of-era restarts with the reign of every new Emperor.\n *\n * Code that treats month-of-year one and day-of-month one as the start of the year is invalid.\n * Not all calendar systems start the year when the month value is one.\n *\n * In general, manipulating a date, and even querying a date, is wide open to bugs when the\n * calendar system is unknown at development time. This is why it is essential that code using\n * this interface is subjected to additional code reviews. It is also why an architectural\n * decision to avoid this interface type is usually the correct one.\n *\n * #### Using LocalDate instead\n *\n * The primary alternative to using this interface throughout your application is as follows.\n *\n * * Declare all method signatures referring to dates in terms of {@link LocalDate}.\n * * Either store the chronology (calendar system) in the user profile or lookup the chronology\n *   from the user locale.\n * * Convert the ISO {@link LocalDate} to and from the user's preferred calendar system during\n *   printing and parsing.\n *\n * This approach treats the problem of globalized calendar systems as a localization issue\n * and confines it to the UI layer. This approach is in keeping with other localization\n * issues in the java platform.\n *\n * As discussed above, performing calculations on a date where the rules of the calendar system\n * are pluggable requires skill and is not recommended.\n * Fortunately, the need to perform calculations on a date in an arbitrary calendar system\n * is extremely rare. For example, it is highly unlikely that the business rules of a library\n * book rental scheme will allow rentals to be for one month, where meaning of the month\n * is dependent on the user's preferred calendar system.\n *\n * A key use case for calculations on a date in an arbitrary calendar system is producing\n * a month-by-month calendar for display and user interaction. Again, this is a UI issue,\n * and use of this interface solely within a few methods of the UI layer may be justified.\n *\n * In any other part of the system, where a date must be manipulated in a calendar system\n * other than ISO, the use case will generally specify the calendar system to use.\n * For example, an application may need to calculate the next Islamic or Hebrew holiday\n * which may require manipulating the date.\n * This kind of use case can be handled as follows:\n *\n * * start from the ISO {@link LocalDate} being passed to the method\n * * convert the date to the alternate calendar system, which for this use case is known\n *   rather than arbitrary\n * * perform the calculation\n * * convert back to {@link LocalDate}\n *\n * Developers writing low-level frameworks or libraries should also avoid this interface.\n * Instead, one of the two general purpose access interfaces should be used.\n * Use {@link TemporalAccessor} if read-only access is required, or use {@link Temporal}\n * if read-write access is required.\n *\n * ### Specification for implementors\n *\n * This interface must be implemented with care to ensure other classes operate correctly.\n * All implementations that can be instantiated must be final, immutable and thread-safe.\n * Subclasses should be Serializable wherever possible.\n *\n * Additional calendar systems may be added to the system.\n * See {@link Chronology} for more details.\n *\n * In JDK 8, this is an interface with default methods.\n * Since there are no default methods in JDK 7, an abstract class is used.\n */\nexport class ChronoLocalDate extends Temporal {\n\n    isSupported(fieldOrUnit) {\n        if (fieldOrUnit instanceof ChronoField) {\n            return fieldOrUnit.isDateBased();\n        } else if (fieldOrUnit instanceof ChronoUnit) {\n            return fieldOrUnit.isDateBased();\n        }\n        return fieldOrUnit != null && fieldOrUnit.isSupportedBy(this);\n    }\n\n    query(query) {\n        if (query === TemporalQueries.chronology()) {\n            return this.chronology();\n        } else if (query === TemporalQueries.precision()) {\n            return ChronoUnit.DAYS;\n        } else if (query === TemporalQueries.localDate()) {\n            return LocalDate.ofEpochDay(this.toEpochDay());\n        } else if (query === TemporalQueries.localTime() || query === TemporalQueries.zone() ||\n                query === TemporalQueries.zoneId() || query === TemporalQueries.offset()) {\n            return null;\n        }\n        return super.query(query);\n    }\n\n    adjustInto(temporal) {\n        return temporal.with(ChronoField.EPOCH_DAY, this.toEpochDay());\n    }\n    /**\n     * Formats this date using the specified formatter.\n     *\n     * This date will be passed to the formatter to produce a string.\n     *\n     * The default implementation must behave as follows:\n     * <pre>\n     *  return formatter.format(this);\n     * </pre>\n     *\n     * @param {DateTimeFormatter} formatter  the formatter to use, not null\n     * @return {String} the formatted date string, not null\n     * @throws DateTimeException if an error occurs during printing\n     */\n    format(formatter) {\n        requireNonNull(formatter, 'formatter');\n        requireInstance(formatter, DateTimeFormatter, 'formatter');\n        return formatter.format(this);\n    }\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { MathUtil } from './MathUtil';\n\n/**\n * @private\n */\nexport class StringUtil {\n\n    /**\n     *\n     * @param {string} text\n     * @param {string} pattern\n     * @return {boolean}\n     */\n    static startsWith(text, pattern){\n        return text.indexOf(pattern) === 0;\n    }\n\n    /**\n     *\n     * @param {string} text\n     * @returns {number}\n     */\n    static hashCode(text) {\n        const len = text.length;\n        if (len === 0) {\n            return 0;\n        }\n\n        let hash = 0;\n        for (let i = 0; i < len; i++) {\n            const chr = text.charCodeAt(i);\n            hash = ((hash << 5) - hash) + chr;\n            hash |= 0; // Convert to 32bit integer\n        }\n        return MathUtil.smi(hash);\n    }\n}\n\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { abstractMethodFail } from './assert';\nimport { DateTimeException } from './errors';\n\nimport { StringUtil } from './StringUtil';\n\nimport { Instant } from './Instant';\n\nexport class ZoneId {\n    /**\n     * Gets the system default time-zone.\n     *\n     * @return {ZoneId} the zone ID, not null\n     */\n    static systemDefault() {\n        // Find implementation at {@link ZoneIdFactory}\n        throw new DateTimeException('not supported operation');\n    }\n\n    /**\n     * Gets the set of available zone IDs.\n     *\n     * This set includes the string form of all available region-based IDs.\n     * Offset-based zone IDs are not included in the returned set.\n     * The ID can be passed to {@link of} to create a {@link ZoneId}.\n     *\n     * The set of zone IDs can increase over time, although in a typical application\n     * the set of IDs is fixed. Each call to this method is thread-safe.\n     *\n     * @return {string[]} a modifiable copy of the set of zone IDs, not null\n     */\n    static getAvailableZoneIds() {\n        // Find implementation at {@link ZoneIdFactory}\n        throw new DateTimeException('not supported operation');\n    }\n\n    /**\n     * Obtains an instance of {@link ZoneId} from an ID ensuring that the\n     * ID is valid and available for use.\n     *\n     * This method parses the ID producing a {@link ZoneId} or {@link ZoneOffset}.\n     * A {@link ZoneOffset} is returned if the ID is 'Z', or starts with '+' or '-'.\n     * The result will always be a valid ID for which {@link ZoneRules} can be obtained.\n     *\n     * Parsing matches the zone ID step by step as follows.\n     *\n     * * If the zone ID equals 'Z', the result is {@link ZoneOffset.UTC}.\n     * * If the zone ID consists of a single letter, the zone ID is invalid\n     *   and {@link DateTimeException} is thrown.\n     * * If the zone ID starts with '+' or '-', the ID is parsed as a\n     *   {@link ZoneOffset} using {@link ZoneOffset#of}.\n     * * If the zone ID equals 'GMT', 'UTC' or 'UT' then the result is a {@link ZoneId}\n     *   with the same ID and rules equivalent to {@link ZoneOffset.UTC}.\n     * * If the zone ID starts with 'UTC+', 'UTC-', 'GMT+', 'GMT-', 'UT+' or 'UT-'\n     *   then the ID is a prefixed offset-based ID. The ID is split in two, with\n     *   a two or three letter prefix and a suffix starting with the sign.\n     *   The suffix is parsed as a {@link ZoneOffset}.\n     *   The result will be a {@link ZoneId} with the specified UTC/GMT/UT prefix\n     *   and the normalized offset ID as per {@link ZoneOffset#getId}.\n     *   The rules of the returned {@link ZoneId} will be equivalent to the\n     *   parsed {@link ZoneOffset}.\n     * * All other IDs are parsed as region-based zone IDs. Region IDs must\n     *   match the regular expression `[A-Za-z][A-Za-z0-9~/._+-]+`,\n     *   otherwise a {@link DateTimeException} is thrown. If the zone ID is not\n     *   in the configured set of IDs, {@link ZoneRulesException} is thrown.\n     *   The detailed format of the region ID depends on the group supplying the data.\n     *   The default set of data is supplied by the IANA Time Zone Database (TZDB).\n     *   This has region IDs of the form '{area}/{city}', such as 'Europe/Paris' or 'America/New_York'.\n     *   This is compatible with most IDs from {@link java.util.TimeZone}.\n     *\n     * @param {string} zoneId  the time-zone ID, not null\n     * @return {ZoneId} the zone ID, not null\n     * @throws DateTimeException if the zone ID has an invalid format\n     * @throws ZoneRulesException if the zone ID is a region ID that cannot be found\n     */\n    static of(zoneId) {\n        // Find implementation at {@link ZoneIdFactory}\n        throw new DateTimeException(`not supported operation${zoneId}`);\n    }\n\n    /**\n     * Obtains an instance of {@link ZoneId} wrapping an offset.\n     *\n     * If the prefix is 'GMT', 'UTC', or 'UT' a {@link ZoneId}\n     * with the prefix and the non-zero offset is returned.\n     * If the prefix is empty `''` the {@link ZoneOffset} is returned.\n     *\n     * @param {string} prefix  the time-zone ID, not null\n     * @param {ZoneOffset} offset  the offset, not null\n     * @return {ZoneId} the zone ID, not null\n     * @throws IllegalArgumentException if the prefix is not one of\n     *     'GMT', 'UTC', or 'UT', or ''\n     */\n    static ofOffset(prefix, offset) {\n        // Find implementation at {@link ZoneIdFactory}\n        throw new DateTimeException(`not supported operation${prefix}${offset}`);\n    }\n\n\n    /**\n     * Obtains an instance of {@link ZoneId} from a temporal object.\n     *\n     * A {@link TemporalAccessor} represents some form of date and time information.\n     * This factory converts the arbitrary temporal object to an instance of {@link ZoneId}.\n     *\n     * The conversion will try to obtain the zone in a way that favours region-based\n     * zones over offset-based zones using {@link TemporalQueries#zone}.\n     *\n     * This method matches the signature of the functional interface {@link TemporalQuery}\n     * allowing it to be used in queries via method reference, {@link ZoneId::from}.\n     *\n     * @param {!TemporalAccessor} temporal - the temporal object to convert, not null\n     * @return {ZoneId} the zone ID, not null\n     * @throws DateTimeException if unable to convert to a {@link ZoneId}\n     */\n    static from(temporal) {\n        // Find implementation at {@link ZoneIdFactory}\n        throw new DateTimeException(`not supported operation${temporal}`);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the unique time-zone ID.\n     *\n     * This ID uniquely defines this object.\n     * The format of an offset based ID is defined by {@link ZoneOffset#getId}.\n     *\n     * @return {String} the time-zone unique ID, not null\n     */\n    id(){\n        abstractMethodFail('ZoneId.id');\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the time-zone rules for this ID allowing calculations to be performed.\n     *\n     * The rules provide the functionality associated with a time-zone,\n     * such as finding the offset for a given instant or local date-time.\n     *\n     * A time-zone can be invalid if it is deserialized in a Java Runtime which\n     * does not have the same rules loaded as the Java Runtime that stored it.\n     * In this case, calling this method will throw a {@link ZoneRulesException}.\n     *\n     * The rules are supplied by {@link ZoneRulesProvider}. An advanced provider may\n     * support dynamic updates to the rules without restarting the Java Runtime.\n     * If so, then the result of this method may change over time.\n     * Each individual call will be still remain thread-safe.\n     *\n     * {@link ZoneOffset} will always return a set of rules where the offset never changes.\n     *\n     * @return {!ZoneRules} the rules, not null\n     * @throws ZoneRulesException if no rules are available for this ID\n     */\n    rules(){\n        abstractMethodFail('ZoneId.rules');\n    }\n\n    /**\n      * Normalizes the time-zone ID, returning a {@link ZoneOffset} where possible.\n      *\n      * The returns a normalized {@link ZoneId} that can be used in place of this ID.\n      * The result will have {@link ZoneRules} equivalent to those returned by this object,\n      * however the ID returned by {@link getId} may be different.\n      *\n      * The normalization checks if the rules of this {@link ZoneId} have a fixed offset.\n      * If they do, then the {@link ZoneOffset} equal to that offset is returned.\n      * Otherwise `this` is returned.\n      *\n      * @return {ZoneId} the time-zone unique ID, not null\n      */\n    normalized() {\n        const rules = this.rules();\n        if (rules.isFixedOffset()) {\n            return rules.offset(Instant.EPOCH);\n        }\n        //try {\n        //} catch (ZoneRulesException ex) {\n        //    // ignore invalid objects\n        //}\n        return this;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n      * Checks if this time-zone ID is equal to another time-zone ID.\n      *\n      * The comparison is based on the ID.\n      *\n      * @param {*} other  the object to check, null returns false\n      * @return {boolean} true if this is equal to the other time-zone ID\n      */\n    equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof ZoneId) {\n            return this.id() === other.id();\n        }\n        return false;\n    }\n\n    /**\n      * A hash code for this time-zone ID.\n      *\n      * @return {number} a suitable hash code\n      */\n    hashCode() {\n        return StringUtil.hashCode(this.id());\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n      * Outputs this zone as a string, using the ID.\n      *\n      * @return {string} a string representation of this time-zone ID, not null\n      */\n    toString() {\n        return this.id();\n    }\n\n    /**\n     * toJSON() use by JSON.stringify\n     * delegates to toString()\n     *\n     * @return {string}\n     */\n    toJSON() {\n        return this.toString();\n    }\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { requireNonNull, abstractMethodFail } from '../assert';\n\nimport { Duration } from '../Duration';\nimport { Instant } from '../Instant';\n\nexport class ZoneRules {\n\n    /**\n     * Obtains an instance of {@link ZoneRules} that always uses the same offset.\n     *\n     * The returned rules always have the same offset.\n     *\n     * @param {ZoneOffset} offset - the offset, not null\n     * @return {ZoneRules} the zone rules, not null\n     */\n    static of(offset) {\n        requireNonNull(offset, 'offset');\n        return new Fixed(offset);\n    }\n\n\n    //-----------------------------------------------------------------------\n    /**\n     * Checks of the zone rules are fixed, such that the offset never varies.\n     *\n     * @return {boolean} true if the time-zone is fixed and the offset never changes\n     */\n    isFixedOffset(){\n        abstractMethodFail('ZoneRules.isFixedOffset');\n    }\n\n    //-----------------------------------------------------------------------\n\n    /**\n     *\n     * @param instantOrLocalDateTime\n     * @returns {ZoneOffset}\n     */\n    offset(instantOrLocalDateTime){\n        if(instantOrLocalDateTime instanceof Instant){\n            return this.offsetOfInstant(instantOrLocalDateTime);\n        } else {\n            return this.offsetOfLocalDateTime(instantOrLocalDateTime);\n        }\n    }\n\n    /**\n     * Gets the offset applicable at the specified instant in these rules.\n     *\n     * The mapping from an instant to an offset is simple, there is only\n     * one valid offset for each instant.\n     * This method returns that offset.\n     *\n     * @param {Instant} instant - the instant to find the offset for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset} the offset, not null\n     */\n    // eslint-disable-next-line no-unused-vars\n    offsetOfInstant(instant){\n        abstractMethodFail('ZoneRules.offsetInstant');\n    }\n\n    /**\n     * Gets the offset applicable at the specified epochMilli in these rules.\n     *\n     * The method is for javascript performance optimisation.\n     *\n     * @param {number} epochMilli - the epoch millisecond to find the offset for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset} the offset, not null\n     */\n    // eslint-disable-next-line no-unused-vars\n    offsetOfEpochMilli(epochMilli){\n        abstractMethodFail('ZoneRules.offsetOfEpochMilli');\n    }\n\n\n    /**\n     * Gets a suitable offset for the specified local date-time in these rules.\n     *\n     * The mapping from a local date-time to an offset is not straightforward.\n     * There are three cases:\n     *\n     * * Normal, with one valid offset. For the vast majority of the year, the normal\n     *   case applies, where there is a single valid offset for the local date-time.\n     * * Gap, with zero valid offsets. This is when clocks jump forward typically\n     *   due to the spring daylight savings change from \"winter\" to \"summer\".\n     *   In a gap there are local date-time values with no valid offset.\n     * * Overlap, with two valid offsets. This is when clocks are set back typically\n     *   due to the autumn daylight savings change from \"summer\" to \"winter\".\n     *   In an overlap there are local date-time values with two valid offsets.\n     *\n     * Thus, for any given local date-time there can be zero, one or two valid offsets.\n     * This method returns the single offset in the Normal case, and in the Gap or Overlap\n     * case it returns the offset before the transition.\n     *\n     * Since, in the case of Gap and Overlap, the offset returned is a \"best\" value, rather\n     * than the \"correct\" value, it should be treated with care. Applications that care\n     * about the correct offset should use a combination of this method,\n     * {@link getValidOffsets} and {@link getTransition}.\n     *\n     * @param {LocalDateTime} localDateTime - the local date-time to query, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset} the best available offset for the local date-time, not null\n     */\n    // eslint-disable-next-line no-unused-vars\n    offsetOfLocalDateTime(localDateTime){\n        abstractMethodFail('ZoneRules.offsetLocalDateTime');\n    }\n\n    /**\n     * Gets the offset applicable at the specified local date-time in these rules.\n     *\n     * The mapping from a local date-time to an offset is not straightforward.\n     * There are three cases:\n     *\n     * * Normal, with one valid offset. For the vast majority of the year, the normal\n     *   case applies, where there is a single valid offset for the local date-time.\n     * * Gap, with zero valid offsets. This is when clocks jump forward typically\n     *   due to the spring daylight savings change from \"winter\" to \"summer\".\n     *   In a gap there are local date-time values with no valid offset.\n     * * Overlap, with two valid offsets. This is when clocks are set back typically\n     *   due to the autumn daylight savings change from \"summer\" to \"winter\".\n     *   In an overlap there are local date-time values with two valid offsets.\n     *\n     * Thus, for any given local date-time there can be zero, one or two valid offsets.\n     * This method returns that list of valid offsets, which is a list of size 0, 1 or 2.\n     * In the case where there are two offsets, the earlier offset is returned at index 0\n     * and the later offset at index 1.\n     *\n     * There are various ways to handle the conversion from a {@link LocalDateTime}.\n     * One technique, using this method, would be:\n     * <pre>\n     *  List<ZoneOffset> validOffsets = rules.getOffset(localDT);\n     *  if (validOffsets.size() == 1) {\n     *    // Normal case: only one valid offset\n     *    zoneOffset = validOffsets.get(0);\n     *  } else {\n     *    // Gap or Overlap: determine what to do from transition (which will be non-null)\n     *    ZoneOffsetTransition trans = rules.getTransition(localDT);\n     *  }\n     * </pre>\n     *\n     * In theory, it is possible for there to be more than two valid offsets.\n     * This would happen if clocks to be put back more than once in quick succession.\n     * This has never happened in the history of time-zones and thus has no special handling.\n     * However, if it were to happen, then the list would return more than 2 entries.\n     *\n     * @param {LocalDateTime} localDateTime - the local date-time to query for valid offsets, not null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset[]} the list of valid offsets, may be immutable, not null\n     */\n    // eslint-disable-next-line no-unused-vars\n    validOffsets(localDateTime){\n        abstractMethodFail('ZoneRules.validOffsets');\n    }\n\n    /**\n     * Gets the offset transition applicable at the specified local date-time in these rules.\n     *\n     * The mapping from a local date-time to an offset is not straightforward.\n     * There are three cases:\n     *\n     * * Normal, with one valid offset. For the vast majority of the year, the normal\n     *   case applies, where there is a single valid offset for the local date-time.\n     * * Gap, with zero valid offsets. This is when clocks jump forward typically\n     *   due to the spring daylight savings change from \"winter\" to \"summer\".\n     *   In a gap there are local date-time values with no valid offset.\n     * * Overlap, with two valid offsets. This is when clocks are set back typically\n     *   due to the autumn daylight savings change from \"summer\" to \"winter\".\n     *   In an overlap there are local date-time values with two valid offsets.\n     *\n     * A transition is used to model the cases of a Gap or Overlap.\n     * The Normal case will return null.\n     *\n     * There are various ways to handle the conversion from a {@link LocalDateTime}.\n     * One technique, using this method, would be:\n     * <pre>\n     *  ZoneOffsetTransition trans = rules.getTransition(localDT);\n     *  if (trans != null) {\n     *    // Gap or Overlap: determine what to do from transition\n     *  } else {\n     *    // Normal case: only one valid offset\n     *    zoneOffset = rule.getOffset(localDT);\n     *  }\n     * </pre>\n     *\n     * @param {LocalDateTime} localDateTime  the local date-time to query for offset transition, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffsetTransition} the offset transition, null if the local date-time is not in transition\n     */\n    // eslint-disable-next-line no-unused-vars\n    transition(localDateTime){\n        abstractMethodFail('ZoneRules.transition');\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the standard offset for the specified instant in this zone.\n     *\n     * This provides access to historic information on how the standard offset\n     * has changed over time.\n     * The standard offset is the offset before any daylight saving time is applied.\n     * This is typically the offset applicable during winter.\n     *\n     * @param {Instant} instant - the instant to find the offset information for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset} the standard offset, not null\n     */\n    // eslint-disable-next-line no-unused-vars\n    standardOffset(instant){\n        abstractMethodFail('ZoneRules.standardOffset');\n    }\n\n    /**\n     * Gets the amount of daylight savings in use for the specified instant in this zone.\n     *\n     * This provides access to historic information on how the amount of daylight\n     * savings has changed over time.\n     * This is the difference between the standard offset and the actual offset.\n     * Typically the amount is zero during winter and one hour during summer.\n     * Time-zones are second-based, so the nanosecond part of the duration will be zero.\n     *\n     * @param {Instant} instant - the instant to find the daylight savings for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {Duration} the difference between the standard and actual offset, not null\n     */\n    // eslint-disable-next-line no-unused-vars\n    daylightSavings(instant){\n        abstractMethodFail('ZoneRules.daylightSavings');\n        //    default {\n        //        ZoneOffset standardOffset = getStandardOffset(instant);\n        //        ZoneOffset actualOffset = getOffset(instant);\n        //        return actualOffset.toDuration().minus(standardOffset.toDuration()).normalized();\n        //    }\n    }\n\n    /**\n     * Checks if the specified instant is in daylight savings.\n     *\n     * This checks if the standard and actual offsets are the same at the specified instant.\n     *\n     * @param {Instant} instant - the instant to find the offset information for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {boolean} the standard offset, not null\n     */\n    // eslint-disable-next-line no-unused-vars\n    isDaylightSavings(instant) {\n        abstractMethodFail('ZoneRules.isDaylightSavings');\n        //    default {\n        //        return (getStandardOffset(instant).equals(getOffset(instant)) == false);\n        //    }\n    }\n\n    /**\n     * Checks if the offset date-time is valid for these rules.\n     *\n     * To be valid, the local date-time must not be in a gap and the offset\n     * must match the valid offsets.\n     *\n     * @param {LocalDateTime} localDateTime - the date-time to check, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @param {ZoneOffset} offset - the offset to check, null returns false\n     * @return {boolean} true if the offset date-time is valid for these rules\n     */\n    // eslint-disable-next-line no-unused-vars\n    isValidOffset(localDateTime, offset){\n        abstractMethodFail('ZoneRules.isValidOffset');\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the next transition after the specified instant.\n     *\n     * This returns details of the next transition after the specified instant.\n     * For example, if the instant represents a point where \"Summer\" daylight savings time\n     * applies, then the method will return the transition to the next \"Winter\" time.\n     *\n     * @param {Instant} instant - the instant to get the next transition after, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffsetTransition} the next transition after the specified instant, null if this is after the last transition\n     */\n    // eslint-disable-next-line no-unused-vars\n    nextTransition(instant){\n        abstractMethodFail('ZoneRules.nextTransition');\n    }\n\n    /**\n     * Gets the previous transition before the specified instant.\n     *\n     * This returns details of the previous transition after the specified instant.\n     * For example, if the instant represents a point where \"summer\" daylight saving time\n     * applies, then the method will return the transition from the previous \"winter\" time.\n     *\n     * @param {Instant} instant - the instant to get the previous transition after, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffsetTransition} the previous transition after the specified instant, null if this is before the first transition\n     */\n    // eslint-disable-next-line no-unused-vars\n    previousTransition(instant){\n        abstractMethodFail('ZoneRules.previousTransition');\n    }\n\n    /**\n     * Gets the complete list of fully defined transitions.\n     *\n     * The complete set of transitions for this rules instance is defined by this method\n     * and {@link getTransitionRules}. This method returns those transitions that have\n     * been fully defined. These are typically historical, but may be in the future.\n     *\n     * The list will be empty for fixed offset rules and for any time-zone where there has\n     * only ever been a single offset. The list will also be empty if the transition rules are unknown.\n     *\n     * @return {ZoneOffsetTransition[]} an immutable list of fully defined transitions, not null\n     */\n    transitions(){\n        abstractMethodFail('ZoneRules.transitions');\n    }\n\n    /**\n     * Gets the list of transition rules for years beyond those defined in the transition list.\n     *\n     * The complete set of transitions for this rules instance is defined by this method\n     * and {@link getTransitions}. This method returns instances of {@link ZoneOffsetTransitionRule}\n     * that define an algorithm for when transitions will occur.\n     *\n     * For any given {@link ZoneRules}, this list contains the transition rules for years\n     * beyond those years that have been fully defined. These rules typically refer to future\n     * daylight saving time rule changes.\n     *\n     * If the zone defines daylight savings into the future, then the list will normally\n     * be of size two and hold information about entering and exiting daylight savings.\n     * If the zone does not have daylight savings, or information about future changes\n     * is uncertain, then the list will be empty.\n     *\n     * The list will be empty for fixed offset rules and for any time-zone where there is no\n     * daylight saving time. The list will also be empty if the transition rules are unknown.\n     *\n     * @return {ZoneOffsetTransitionRule[]} an immutable list of transition rules, not null\n     */\n    transitionRules(){\n        abstractMethodFail('ZoneRules.transitionRules');\n    }\n\n    toString(){\n        abstractMethodFail('ZoneRules.toString');\n    }\n\n    /**\n     * toJSON() use by JSON.stringify\n     * delegates to toString()\n     *\n     * @return {string}\n     */\n    toJSON() {\n        return this.toString();\n    }\n}\n\n\nclass Fixed extends ZoneRules{\n    /**\n     *\n     * @param {ZoneOffset} offset\n     * @private\n     */\n    constructor(offset){\n        super();\n        this._offset = offset;\n    }\n\n    isFixedOffset(){\n        return true;\n    }\n\n    offsetOfInstant(){\n        return this._offset;\n    }\n\n    offsetOfEpochMilli(){\n        return this._offset;\n    }\n\n    offsetOfLocalDateTime(){\n        return this._offset;\n    }\n\n    validOffsets(){\n        return [this._offset];\n    }\n\n    transition(){\n        return null;\n    }\n\n    standardOffset(){\n        return this._offset;\n    }\n\n    daylightSavings(){\n        return Duration.ZERO;\n    }\n\n    isDaylightSavings(){\n        return false;\n    }\n\n    /**\n     *\n     * @param {LocalDateTime} localDateTime\n     * @param {ZoneOffset} offset\n     * @return {boolean}\n     */\n    isValidOffset(localDateTime, offset) {\n        return this._offset.equals(offset);\n    }\n\n    nextTransition(){\n        return null;\n    }\n\n    previousTransition(){\n        return null;\n    }\n\n    transitions(){\n        return [];\n    }\n\n    transitionRules(){\n        return [];\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     *\n     * @param {*} other\n     * @returns {boolean}\n     */\n    equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof Fixed) {\n            return this._offset.equals(other._offset);\n        }\n        return false;\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    toString() {\n        return `FixedRules:${this._offset.toString()}`;\n    }\n\n}\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { requireNonNull } from './assert';\nimport { DateTimeException } from './errors';\nimport { MathUtil } from './MathUtil';\n\nimport { LocalTime } from './LocalTime';\nimport { ZoneId } from './ZoneId';\n\nimport { ChronoField } from './temporal/ChronoField';\nimport { TemporalQueries } from './temporal/TemporalQueries';\n\nimport { ZoneRules } from './zone/ZoneRules';\n\nconst SECONDS_CACHE = {};\nconst ID_CACHE = {};\n\n/**\n *\n * ### Static properties of Class {@link LocalDate}\n *\n * ZoneOffset.MAX_SECONDS = 18 * LocalTime.SECONDS_PER_HOUR;\n *\n * ZoneOffset.UTC = ZoneOffset.ofTotalSeconds(0);\n *\n * ZoneOffset.MIN = ZoneOffset.ofTotalSeconds(-ZoneOffset.MAX_SECONDS);\n *\n * ZoneOffset.MAX = ZoneOffset.ofTotalSeconds(ZoneOffset.MAX_SECONDS);\n *\n */\nexport class ZoneOffset extends ZoneId {\n    /**\n     *\n     * @param {number} totalSeconds\n     * @private\n     */\n    constructor(totalSeconds){\n        super();\n        ZoneOffset._validateTotalSeconds(totalSeconds);\n        this._totalSeconds = MathUtil.safeToInt(totalSeconds);\n        this._rules = ZoneRules.of(this);\n        this._id = ZoneOffset._buildId(totalSeconds);\n    }\n\n    /**\n     *\n     * @returns {number}\n     */\n    totalSeconds() {\n        return this._totalSeconds;\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    id() {\n        return this._id;\n    }\n\n    /**\n     *\n     * @param {number} totalSeconds\n     * @returns {string}\n     */\n    static _buildId(totalSeconds) {\n        if (totalSeconds === 0) {\n            return 'Z';\n        } else {\n            const absTotalSeconds = Math.abs(totalSeconds);\n            const absHours = MathUtil.intDiv(absTotalSeconds, LocalTime.SECONDS_PER_HOUR);\n            const absMinutes = MathUtil.intMod(MathUtil.intDiv(absTotalSeconds, LocalTime.SECONDS_PER_MINUTE), LocalTime.MINUTES_PER_HOUR);\n            let buf = `${totalSeconds < 0 ? '-' : '+'\n            }${absHours < 10 ? '0' : ''}${absHours\n            }${absMinutes < 10 ? ':0' : ':'}${absMinutes}`;\n            const absSeconds = MathUtil.intMod(absTotalSeconds, LocalTime.SECONDS_PER_MINUTE);\n            if (absSeconds !== 0) {\n                buf += (absSeconds < 10 ? ':0' : ':') + (absSeconds);\n            }\n            return buf;\n        }\n    }\n\n\n    /**\n     *\n     * @param {number} totalSeconds\n     * @private\n     */\n    static _validateTotalSeconds(totalSeconds){\n        if (Math.abs(totalSeconds) > ZoneOffset.MAX_SECONDS) {\n            throw new DateTimeException('Zone offset not in valid range: -18:00 to +18:00');\n        }\n    }\n\n    /**\n     *\n     * @param {number} hours\n     * @param {number} minutes\n     * @param {number} seconds\n     * @private\n     */\n    static _validate(hours, minutes, seconds) {\n        if (hours < -18 || hours > 18) {\n            throw new DateTimeException(`Zone offset hours not in valid range: value ${hours \n            } is not in the range -18 to 18`);\n        }\n        if (hours > 0) {\n            if (minutes < 0 || seconds < 0) {\n                throw new DateTimeException('Zone offset minutes and seconds must be positive because hours is positive');\n            }\n        } else if (hours < 0) {\n            if (minutes > 0 || seconds > 0) {\n                throw new DateTimeException('Zone offset minutes and seconds must be negative because hours is negative');\n            }\n        } else if ((minutes > 0 && seconds < 0) || (minutes < 0 && seconds > 0)) {\n            throw new DateTimeException('Zone offset minutes and seconds must have the same sign');\n        }\n        if (Math.abs(minutes) > 59) {\n            throw new DateTimeException(`Zone offset minutes not in valid range: abs(value) ${ \n                Math.abs(minutes)} is not in the range 0 to 59`);\n        }\n        if (Math.abs(seconds) > 59) {\n            throw new DateTimeException(`Zone offset seconds not in valid range: abs(value) ${ \n                Math.abs(seconds)} is not in the range 0 to 59`);\n        }\n        if (Math.abs(hours) === 18 && (Math.abs(minutes) > 0 || Math.abs(seconds) > 0)) {\n            throw new DateTimeException('Zone offset not in valid range: -18:00 to +18:00');\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains an instance of {@link ZoneOffset} using the ID.\n     *\n     * This method parses the string ID of a {@link ZoneOffset} to\n     * return an instance. The parsing accepts all the formats generated by\n     * {@link getId}, plus some additional formats:\n     *\n     * * {@link Z} - for UTC\n     * * `+h`\n     * * `+hh`\n     * * `+hh:mm`\n     * * `-hh:mm`\n     * * `+hhmm`\n     * * `-hhmm`\n     * * `+hh:mm:ss`\n     * * `-hh:mm:ss`\n     * * `+hhmmss`\n     * * `-hhmmss`\n     *\n     * Note that &plusmn; means either the plus or minus symbol.\n     *\n     * The ID of the returned offset will be normalized to one of the formats\n     * described by {@link getId}.\n     *\n     * The maximum supported range is from +18:00 to -18:00 inclusive.\n     *\n     * @param {string} offsetId  the offset ID, not null\n     * @return {ZoneOffset} the zone-offset, not null\n     * @throws DateTimeException if the offset ID is invalid\n     */\n    static of(offsetId) {\n        requireNonNull(offsetId, 'offsetId');\n        // \"Z\" is always in the cache\n        const offset = ID_CACHE[offsetId];\n        if (offset != null) {\n            return offset;\n        }\n\n        // parse - +h, +hh, +hhmm, +hh:mm, +hhmmss, +hh:mm:ss\n        let hours, minutes, seconds;\n        switch (offsetId.length) {\n            case 2:\n                offsetId = `${offsetId[0]}0${offsetId[1]}`;  // fallthru\n            // eslint-disable-next-line no-fallthrough\n            case 3:\n                hours = ZoneOffset._parseNumber(offsetId, 1, false);\n                minutes = 0;\n                seconds = 0;\n                break;\n            case 5:\n                hours = ZoneOffset._parseNumber(offsetId, 1, false);\n                minutes = ZoneOffset._parseNumber(offsetId, 3, false);\n                seconds = 0;\n                break;\n            case 6:\n                hours = ZoneOffset._parseNumber(offsetId, 1, false);\n                minutes = ZoneOffset._parseNumber(offsetId, 4, true);\n                seconds = 0;\n                break;\n            case 7:\n                hours = ZoneOffset._parseNumber(offsetId, 1, false);\n                minutes = ZoneOffset._parseNumber(offsetId, 3, false);\n                seconds = ZoneOffset._parseNumber(offsetId, 5, false);\n                break;\n            case 9:\n                hours = ZoneOffset._parseNumber(offsetId, 1, false);\n                minutes = ZoneOffset._parseNumber(offsetId, 4, true);\n                seconds = ZoneOffset._parseNumber(offsetId, 7, true);\n                break;\n            default:\n                throw new DateTimeException(`Invalid ID for ZoneOffset, invalid format: ${offsetId}`);\n        }\n        const first = offsetId[0];\n        if (first !== '+' && first !== '-') {\n            throw new DateTimeException(`Invalid ID for ZoneOffset, plus/minus not found when expected: ${offsetId}`);\n        }\n        if (first === '-') {\n            return ZoneOffset.ofHoursMinutesSeconds(-hours, -minutes, -seconds);\n        } else {\n            return ZoneOffset.ofHoursMinutesSeconds(hours, minutes, seconds);\n        }\n    }\n\n    /**\n     * Parse a two digit zero-prefixed number.\n     *\n     * @param {string} offsetId - the offset ID, not null\n     * @param {number} pos - the position to parse, valid\n     * @param {boolean} precededByColon - should this number be prefixed by a precededByColon\n     * @return {number} the parsed number, from 0 to 99\n     */\n    static _parseNumber(offsetId, pos, precededByColon) {\n        if (precededByColon && offsetId[pos - 1] !== ':') {\n            throw new DateTimeException(`Invalid ID for ZoneOffset, colon not found when expected: ${offsetId}`);\n        }\n        const ch1 = offsetId[pos];\n        const ch2 = offsetId[pos + 1];\n        if (ch1 < '0' || ch1 > '9' || ch2 < '0' || ch2 > '9') {\n            throw new DateTimeException(`Invalid ID for ZoneOffset, non numeric characters found: ${offsetId}`);\n        }\n        return (ch1.charCodeAt(0) - 48) * 10 + (ch2.charCodeAt(0) - 48);\n    }\n\n    /**\n     *\n     * @param {number} hours\n     * @returns {ZoneOffset}\n     */\n    static ofHours(hours) {\n        return ZoneOffset.ofHoursMinutesSeconds(hours, 0, 0);\n    }\n\n    /**\n     *\n     * @param {number} hours\n     * @param {number} minutes\n     * @returns {ZoneOffset}\n     */\n    static ofHoursMinutes(hours, minutes) {\n        return ZoneOffset.ofHoursMinutesSeconds(hours, minutes, 0);\n    }\n\n    /**\n     *\n     * @param {number} hours\n     * @param {number} minutes\n     * @param {number} seconds\n     * @returns {ZoneOffset}\n     */\n    static ofHoursMinutesSeconds(hours, minutes, seconds) {\n        ZoneOffset._validate(hours, minutes, seconds);\n        const totalSeconds = hours * LocalTime.SECONDS_PER_HOUR + minutes * LocalTime.SECONDS_PER_MINUTE + seconds;\n        return ZoneOffset.ofTotalSeconds(totalSeconds);\n    }\n\n    /**\n     *\n     * @param {number} totalMinutes\n     * @returns {ZoneOffset}\n     */\n    static ofTotalMinutes(totalMinutes) {\n        const totalSeconds = totalMinutes * LocalTime.SECONDS_PER_MINUTE;\n        return ZoneOffset.ofTotalSeconds(totalSeconds);\n    }\n\n    /**\n     *\n     * @param {number} totalSeconds\n     * @returns {ZoneOffset}\n     */\n    static ofTotalSeconds(totalSeconds) {\n        if (totalSeconds % (15 * LocalTime.SECONDS_PER_MINUTE) === 0) {\n            const totalSecs = totalSeconds;\n            let result = SECONDS_CACHE[totalSecs];\n            if (result == null) {\n                result = new ZoneOffset(totalSeconds);\n                SECONDS_CACHE[totalSecs] = result;\n                ID_CACHE[result.id()] = result;\n            }\n            return result;\n        } else {\n            return new ZoneOffset(totalSeconds);\n        }\n    }\n\n    /**\n     * Gets the associated time-zone rules.\n     *\n     * The rules will always return this offset when queried.\n     * The implementation class is immutable, thread-safe and serializable.\n     *\n     * @return {ZoneRules} the rules, not null\n     */\n    rules() {\n        return this._rules;\n    }\n\n    /**\n      * Gets the value of the specified field from this offset as an `int`.\n      *\n      * This queries this offset for the value for the specified field.\n      * The returned value will always be within the valid range of values for the field.\n      * If it is not possible to return the value, because the field is not supported\n      * or for some other reason, an exception is thrown.\n      *\n      * If the field is a {@link ChronoField} then the query is implemented here.\n      * The {@link OFFSET_SECONDS} field returns the value of the offset.\n      * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n      *\n      * If the field is not a {@link ChronoField}, then the result of this method\n      * is obtained by invoking {@link TemporalField.getFrom}\n      * passing `this` as the argument. Whether the value can be obtained,\n      * and what the value represents, is determined by the field.\n      *\n      * @param {TemporalField} field - the field to get, not null\n      * @return {number} the value for the field\n      * @throws DateTimeException if a value for the field cannot be obtained\n      * @throws ArithmeticException if numeric overflow occurs\n      */\n    get(field) {\n        return this.getLong(field);\n    }\n\n    /**\n      * Gets the value of the specified field from this offset as a `long`.\n      *\n      * This queries this offset for the value for the specified field.\n      * If it is not possible to return the value, because the field is not supported\n      * or for some other reason, an exception is thrown.\n      *\n      * If the field is a {@link ChronoField} then the query is implemented here.\n      * The {@link OFFSET_SECONDS} field returns the value of the offset.\n      * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n      *\n      * If the field is not a {@link ChronoField}, then the result of this method\n      * is obtained by invoking {@link TemporalField.getFrom}\n      * passing `this` as the argument. Whether the value can be obtained,\n      * and what the value represents, is determined by the field.\n      *\n      * @param {TemporalField} field - the field to get, not null\n      * @return {number} the value for the field\n      * @throws DateTimeException if a value for the field cannot be obtained\n      * @throws ArithmeticException if numeric overflow occurs\n      */\n    getLong(field) {\n        if (field === ChronoField.OFFSET_SECONDS) {\n            return this._totalSeconds;\n        } else if (field instanceof ChronoField) {\n            throw new DateTimeException(`Unsupported field: ${field}`);\n        }\n        return field.getFrom(this);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n      * Queries this offset using the specified query.\n      *\n      * This queries this offset using the specified query strategy object.\n      * The {@link TemporalQuery} object defines the logic to be used to\n      * obtain the result. Read the documentation of the query to understand\n      * what the result of this method will be.\n      *\n      * The result of this method is obtained by invoking the\n      * {@link TemporalQuery#queryFrom} method on the\n      * specified query passing `this` as the argument.\n      *\n      * @param {TemporalQuery} query - the query to invoke, not null\n      * @return {*} the query result, null may be returned (defined by the query)\n      * @throws DateTimeException if unable to query (defined by the query)\n      * @throws ArithmeticException if numeric overflow occurs (defined by the query)\n      */\n    query(query) {\n        requireNonNull(query, 'query');\n        if (query === TemporalQueries.offset() || query === TemporalQueries.zone()) {\n            return this;\n        } else if (query === TemporalQueries.localDate() || query === TemporalQueries.localTime() ||\n                 query === TemporalQueries.precision() || query === TemporalQueries.chronology() || query === TemporalQueries.zoneId()) {\n            return null;\n        }\n        return query.queryFrom(this);\n    }\n\n    /**\n      * Adjusts the specified temporal object to have the same offset as this object.\n      *\n      * This returns a temporal object of the same observable type as the input\n      * with the offset changed to be the same as this.\n      *\n      * The adjustment is equivalent to using {@link Temporal#with}\n      * passing {@link ChronoField#OFFSET_SECONDS} as the field.\n      *\n      * In most cases, it is clearer to reverse the calling pattern by using\n      * {@link Temporal#with}:\n      * <pre>\n      *   // these two lines are equivalent, but the second approach is recommended\n      *   temporal = thisOffset.adjustInto(temporal);\n      *   temporal = temporal.with(thisOffset);\n      * </pre>\n      *\n      * This instance is immutable and unaffected by this method call.\n      *\n      * @param {Temporal} temporal - the target object to be adjusted, not null\n      * @return {Temporal} the adjusted object, not null\n      * @throws DateTimeException if unable to make the adjustment\n      * @throws ArithmeticException if numeric overflow occurs\n      */\n    adjustInto(temporal) {\n        return temporal.with(ChronoField.OFFSET_SECONDS, this._totalSeconds);\n    }\n\n    /**\n     * Compares this offset to another offset in descending order.\n     *\n     * The offsets are compared in the order that they occur for the same time\n     * of day around the world. Thus, an offset of `+10:00` comes before an\n     * offset of `+09:00` and so on down to `-18:00`.\n     *\n     * The comparison is \"consistent with equals\", as defined by {@link Comparable}.\n     *\n     * @param {!ZoneOffset} other - the other date to compare to, not null\n     * @return {number} the comparator value, negative if less, positive if greater\n     * @throws NullPointerException if {@link other} is null\n     */\n    compareTo(other) {\n        requireNonNull(other, 'other');\n        return other._totalSeconds - this._totalSeconds;\n    }\n\n\n    /**\n     * Checks if this offset is equal to another offset.\n     *\n     * The comparison is based on the amount of the offset in seconds.\n     * This is equivalent to a comparison by ID.\n     *\n     * @param {*} obj - the object to check, null returns false\n     * @return {boolean} true if this is equal to the other offset\n     */\n    equals(obj) {\n        if (this === obj) {\n            return true;\n        }\n        if (obj instanceof ZoneOffset) {\n            return this._totalSeconds === obj._totalSeconds;\n        }\n        return false;\n    }\n\n    /**\n     * @return {number}\n     */\n    hashCode(){\n        return this._totalSeconds;\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    toString(){\n        return this._id;\n    }\n}\n\nexport function _init() {\n    ZoneOffset.MAX_SECONDS = 18 * LocalTime.SECONDS_PER_HOUR;\n    ZoneOffset.UTC = ZoneOffset.ofTotalSeconds(0);\n    ZoneOffset.MIN = ZoneOffset.ofTotalSeconds(-ZoneOffset.MAX_SECONDS);\n    ZoneOffset.MAX = ZoneOffset.ofTotalSeconds(ZoneOffset.MAX_SECONDS);\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { requireNonNull } from '../assert';\nimport { DateTimeException } from '../errors';\nimport { MathUtil } from '../MathUtil';\n\nimport { EnumMap } from './EnumMap';\nimport { ResolverStyle } from './ResolverStyle';\n\nimport { IsoChronology } from '../chrono/IsoChronology';\nimport { ChronoLocalDate } from '../chrono/ChronoLocalDate';\nimport { ChronoField } from '../temporal/ChronoField';\nimport { TemporalAccessor } from '../temporal/TemporalAccessor';\nimport { TemporalQueries } from '../temporal/TemporalQueries';\n\nimport { LocalTime } from '../LocalTime';\nimport { LocalDate } from '../LocalDate';\nimport { Period } from '../Period';\n\nimport { ZoneOffset } from '../ZoneOffset';\n\n/**\n * Builder that can holds date and time fields and related date and time objects.\n *\n * The builder is used to hold onto different elements of date and time.\n * It is designed as two separate maps:\n *\n * * from {@link TemporalField} to `long` value, where the value may be\n *   outside the valid range for the field\n * * from {@link Class} to {@link TemporalAccessor}, holding larger scale objects\n *   like {@link LocalDateTime}.\n *\n *   @private\n */\nexport class DateTimeBuilder extends TemporalAccessor {\n\n    /**\n     * Creates a new instance of the builder with a single field-value.\n     *\n     * This is equivalent to using {@link addFieldValue} on an empty builder.\n     *\n     * @param {TemporalField} field - the field to add, not null\n     * @param {number} value - the value to add, not null\n     * @return {DateTimeBuilder}\n     */\n    static create(field, value) {\n        const dtb = new DateTimeBuilder();\n        dtb._addFieldValue(field, value);\n        return dtb;\n    }\n\n\n    constructor(){\n        super();\n\n        /**\n         * The map of other fields.\n         */\n        this.fieldValues = new EnumMap();\n        /**\n         * The chronology.\n         */\n        this.chrono = null;\n        /**\n         * The zone.\n         */\n        this.zone = null;\n        /**\n         * The date.\n         */\n        this.date = null;\n        /**\n         * The time.\n         */\n        this.time = null;\n        /**\n         * The leap second flag.\n         */\n        this.leapSecond = false;\n        /**\n         * The excess days.\n         */\n        this.excessDays = null;\n    }\n\n    /**\n     *\n     * @param {TemporalField} field\n     * @return {Number} field value\n     */\n    getFieldValue0(field) {\n        return this.fieldValues.get(field);\n    }\n\n    /**\n     * Adds a field-value pair to the builder.\n     *\n     * This adds a field to the builder.\n     * If the field is not already present, then the field-value pair is added to the map.\n     * If the field is already present and it has the same value as that specified, no action occurs.\n     * If the field is already present and it has a different value to that specified, then\n     * an exception is thrown.\n     *\n     * @param {TemporalField} field - the field to add, not null\n     * @param {Number} value - the value to add, not null\n     * @return {DateTimeBuilder}, this for method chaining\n     * @throws DateTimeException if the field is already present with a different value\n     */\n    _addFieldValue(field, value) {\n        requireNonNull(field, 'field');\n        const old = this.getFieldValue0(field);  // check first for better error message\n        if (old != null && old !== value) {\n            throw new DateTimeException(`Conflict found: ${field} ${old} differs from ${field} ${value}: ${this}`);\n        }\n        return this._putFieldValue0(field, value);\n    }\n\n    /**\n     * @param {TemporalField} field\n     * @param {Number} value\n     * @return {DateTimeBuilder}, this for method chaining\n     */\n    _putFieldValue0(field, value) {\n        this.fieldValues.put(field, value);\n        return this;\n    }\n\n    /**\n     * Resolves the builder, evaluating the date and time.\n     *\n     * This examines the contents of the build.er and resolves it to produce the best\n     * available date and time, throwing an exception if a problem occurs.\n     * Calling this method changes the state of the builder.\n     *\n     * @param {ResolverStyle} resolverStyle - how to resolve\n     * @param {TemporalField[]} resolverFields\n     * @return {DateTimeBuilder} this, for method chaining\n     */\n    resolve(resolverStyle, resolverFields) {\n        if (resolverFields != null) {\n            this.fieldValues.retainAll(resolverFields);\n        }\n        // handle standard fields\n        // this._mergeInstantFields();\n        this._mergeDate(resolverStyle);\n        this._mergeTime(resolverStyle);\n        //if (resolveFields(resolverStyle)) {\n        //    mergeInstantFields();\n        //    mergeDate(resolverStyle);\n        //    mergeTime(resolverStyle);\n        //}\n        this._resolveTimeInferZeroes(resolverStyle);\n        //this._crossCheck();\n        if (this.excessDays != null && this.excessDays.isZero() === false && this.date != null && this.time != null) {\n            this.date = this.date.plus(this.excessDays);\n            this.excessDays = Period.ZERO;\n        }\n        //resolveFractional();\n        this._resolveInstant();\n        return this;\n    }\n\n    /**\n     *\n     * @param {ResolverStyle} resolverStyle\n     * @private\n     */\n    _mergeDate(resolverStyle) {\n        //if (this.chrono instanceof IsoChronology) {\n        this._checkDate(IsoChronology.INSTANCE.resolveDate(this.fieldValues, resolverStyle));\n        //} else {\n        //    if (this.fieldValues.containsKey(ChronoField.EPOCH_DAY)) {\n        //        this._checkDate(LocalDate.ofEpochDay(this.fieldValues.remove(ChronoField.EPOCH_DAY)));\n        //        return;\n        //    }\n        //}\n    }\n\n    /**\n     *\n     * @param {LocalDate} date\n     * @private\n     */\n    _checkDate(date) {\n        if (date != null) {\n            this._addObject(date);\n            for (const fieldName in this.fieldValues.keySet()) {\n                const field = ChronoField.byName(fieldName);\n                if (field) {\n                    if (this.fieldValues.get(field) !== undefined) { // undefined if \"removed\" in EnumMap\n                        if (field.isDateBased()) {\n                            let val1;\n                            try {\n                                val1 = date.getLong(field);\n                            } catch (ex) {\n                                if (ex instanceof DateTimeException) {\n                                    continue;\n                                } else {\n                                    throw ex;\n                                }\n                            }\n                            const val2 = this.fieldValues.get(field);\n                            if (val1 !== val2) {\n                                throw new DateTimeException(`Conflict found: Field ${field} ${val1} differs from ${field} ${val2} derived from ${date}`);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     *\n     * @param {ResolverStyle} resolverStyle\n     * @private\n     */\n    _mergeTime(resolverStyle) {\n        if (this.fieldValues.containsKey(ChronoField.CLOCK_HOUR_OF_DAY)) {\n            const ch = this.fieldValues.remove(ChronoField.CLOCK_HOUR_OF_DAY);\n            if (resolverStyle !== ResolverStyle.LENIENT) {\n                if (resolverStyle === ResolverStyle.SMART && ch === 0) {\n                    // ok\n                } else {\n                    ChronoField.CLOCK_HOUR_OF_DAY.checkValidValue(ch);\n                }\n            }\n            this._addFieldValue(ChronoField.HOUR_OF_DAY, ch === 24 ? 0 : ch);\n        }\n        if (this.fieldValues.containsKey(ChronoField.CLOCK_HOUR_OF_AMPM)) {\n            const ch = this.fieldValues.remove(ChronoField.CLOCK_HOUR_OF_AMPM);\n            if (resolverStyle !== ResolverStyle.LENIENT) {\n                if (resolverStyle === ResolverStyle.SMART && ch === 0) {\n                    // ok\n                } else {\n                    ChronoField.CLOCK_HOUR_OF_AMPM.checkValidValue(ch);\n                }\n            }\n            this._addFieldValue(ChronoField.HOUR_OF_AMPM, ch === 12 ? 0 : ch);\n        }\n        if (resolverStyle !== ResolverStyle.LENIENT) {\n            if (this.fieldValues.containsKey(ChronoField.AMPM_OF_DAY)) {\n                ChronoField.AMPM_OF_DAY.checkValidValue(this.fieldValues.get(ChronoField.AMPM_OF_DAY));\n            }\n            if (this.fieldValues.containsKey(ChronoField.HOUR_OF_AMPM)) {\n                ChronoField.HOUR_OF_AMPM.checkValidValue(this.fieldValues.get(ChronoField.HOUR_OF_AMPM));\n            }\n        }\n        if (this.fieldValues.containsKey(ChronoField.AMPM_OF_DAY) && this.fieldValues.containsKey(ChronoField.HOUR_OF_AMPM)) {\n            const ap = this.fieldValues.remove(ChronoField.AMPM_OF_DAY);\n            const hap = this.fieldValues.remove(ChronoField.HOUR_OF_AMPM);\n            this._addFieldValue(ChronoField.HOUR_OF_DAY, ap * 12 + hap);\n        }\n        //        if (timeFields.containsKey(HOUR_OF_DAY) && timeFields.containsKey(MINUTE_OF_HOUR)) {\n        //            const hod = timeFields.remove(HOUR_OF_DAY);\n        //            const moh = timeFields.remove(MINUTE_OF_HOUR);\n        //            this._addFieldValue(MINUTE_OF_DAY, hod * 60 + moh);\n        //        }\n        //        if (timeFields.containsKey(MINUTE_OF_DAY) && timeFields.containsKey(SECOND_OF_MINUTE)) {\n        //            const mod = timeFields.remove(MINUTE_OF_DAY);\n        //            const som = timeFields.remove(SECOND_OF_MINUTE);\n        //            this._addFieldValue(SECOND_OF_DAY, mod * 60 + som);\n        //        }\n        if (this.fieldValues.containsKey(ChronoField.NANO_OF_DAY)) {\n            const nod = this.fieldValues.remove(ChronoField.NANO_OF_DAY);\n            if (resolverStyle !== ResolverStyle.LENIENT) {\n                ChronoField.NANO_OF_DAY.checkValidValue(nod);\n            }\n            this._addFieldValue(ChronoField.SECOND_OF_DAY, MathUtil.intDiv(nod, 1000000000));\n            this._addFieldValue(ChronoField.NANO_OF_SECOND, MathUtil.intMod(nod, 1000000000));\n        }\n        if (this.fieldValues.containsKey(ChronoField.MICRO_OF_DAY)) {\n            const cod = this.fieldValues.remove(ChronoField.MICRO_OF_DAY);\n            if (resolverStyle !== ResolverStyle.LENIENT) {\n                ChronoField.MICRO_OF_DAY.checkValidValue(cod);\n            }\n            this._addFieldValue(ChronoField.SECOND_OF_DAY, MathUtil.intDiv(cod, 1000000));\n            this._addFieldValue(ChronoField.MICRO_OF_SECOND, MathUtil.intMod(cod, 1000000));\n        }\n        if (this.fieldValues.containsKey(ChronoField.MILLI_OF_DAY)) {\n            const lod = this.fieldValues.remove(ChronoField.MILLI_OF_DAY);\n            if (resolverStyle !== ResolverStyle.LENIENT) {\n                ChronoField.MILLI_OF_DAY.checkValidValue(lod);\n            }\n            this._addFieldValue(ChronoField.SECOND_OF_DAY, MathUtil.intDiv(lod, 1000));\n            this._addFieldValue(ChronoField.MILLI_OF_SECOND, MathUtil.intMod(lod, 1000));\n        }\n        if (this.fieldValues.containsKey(ChronoField.SECOND_OF_DAY)) {\n            const sod = this.fieldValues.remove(ChronoField.SECOND_OF_DAY);\n            if (resolverStyle !== ResolverStyle.LENIENT) {\n                ChronoField.SECOND_OF_DAY.checkValidValue(sod);\n            }\n            this._addFieldValue(ChronoField.HOUR_OF_DAY, MathUtil.intDiv(sod, 3600));\n            this._addFieldValue(ChronoField.MINUTE_OF_HOUR, MathUtil.intMod(MathUtil.intDiv(sod, 60), 60));\n            this._addFieldValue(ChronoField.SECOND_OF_MINUTE, MathUtil.intMod(sod, 60));\n        }\n        if (this.fieldValues.containsKey(ChronoField.MINUTE_OF_DAY)) {\n            const mod = this.fieldValues.remove(ChronoField.MINUTE_OF_DAY);\n            if (resolverStyle !== ResolverStyle.LENIENT) {\n                ChronoField.MINUTE_OF_DAY.checkValidValue(mod);\n            }\n            this._addFieldValue(ChronoField.HOUR_OF_DAY, MathUtil.intDiv(mod, 60));\n            this._addFieldValue(ChronoField.MINUTE_OF_HOUR, MathUtil.intMod(mod, 60));\n        }\n\n        //            const sod = MathUtil.intDiv(nod, 1000000000L);\n        //            this._addFieldValue(HOUR_OF_DAY, MathUtil.intDiv(sod, 3600));\n        //            this._addFieldValue(MINUTE_OF_HOUR, MathUtil.intMod(MathUtil.intDiv(sod, 60), 60));\n        //            this._addFieldValue(SECOND_OF_MINUTE, MathUtil.intMod(sod, 60));\n        //            this._addFieldValue(NANO_OF_SECOND, MathUtil.intMod(nod, 1000000000L));\n        if (resolverStyle !== ResolverStyle.LENIENT) {\n            if (this.fieldValues.containsKey(ChronoField.MILLI_OF_SECOND)) {\n                ChronoField.MILLI_OF_SECOND.checkValidValue(this.fieldValues.get(ChronoField.MILLI_OF_SECOND));\n            }\n            if (this.fieldValues.containsKey(ChronoField.MICRO_OF_SECOND)) {\n                ChronoField.MICRO_OF_SECOND.checkValidValue(this.fieldValues.get(ChronoField.MICRO_OF_SECOND));\n            }\n        }\n        if (this.fieldValues.containsKey(ChronoField.MILLI_OF_SECOND) && this.fieldValues.containsKey(ChronoField.MICRO_OF_SECOND)) {\n            const los = this.fieldValues.remove(ChronoField.MILLI_OF_SECOND);\n            const cos = this.fieldValues.get(ChronoField.MICRO_OF_SECOND);\n            this._putFieldValue0(ChronoField.MICRO_OF_SECOND, los * 1000 + (MathUtil.intMod(cos, 1000)));\n        }\n        if (this.fieldValues.containsKey(ChronoField.MICRO_OF_SECOND) && this.fieldValues.containsKey(ChronoField.NANO_OF_SECOND)) {\n            const nos = this.fieldValues.get(ChronoField.NANO_OF_SECOND);\n            this._putFieldValue0(ChronoField.MICRO_OF_SECOND, MathUtil.intDiv(nos, 1000));\n            this.fieldValues.remove(ChronoField.MICRO_OF_SECOND);\n        }\n        if (this.fieldValues.containsKey(ChronoField.MILLI_OF_SECOND) && this.fieldValues.containsKey(ChronoField.NANO_OF_SECOND)) {\n            const nos = this.fieldValues.get(ChronoField.NANO_OF_SECOND);\n            this._putFieldValue0(ChronoField.MILLI_OF_SECOND, MathUtil.intDiv(nos, 1000000));\n            this.fieldValues.remove(ChronoField.MILLI_OF_SECOND);\n        }\n        if (this.fieldValues.containsKey(ChronoField.MICRO_OF_SECOND)) {\n            const cos = this.fieldValues.remove(ChronoField.MICRO_OF_SECOND);\n            this._putFieldValue0(ChronoField.NANO_OF_SECOND, cos * 1000);\n        } else if (this.fieldValues.containsKey(ChronoField.MILLI_OF_SECOND)) {\n            const los = this.fieldValues.remove(ChronoField.MILLI_OF_SECOND);\n            this._putFieldValue0(ChronoField.NANO_OF_SECOND, los * 1000000);\n        }\n    }\n\n    /**\n     *\n     * @param {ResolverStyle} resolverStyle\n     * @private\n     */\n    _resolveTimeInferZeroes(resolverStyle) {\n        let hod =  this.fieldValues.get(ChronoField.HOUR_OF_DAY);\n        const moh =  this.fieldValues.get(ChronoField.MINUTE_OF_HOUR);\n        const som =  this.fieldValues.get(ChronoField.SECOND_OF_MINUTE);\n        let nos =  this.fieldValues.get(ChronoField.NANO_OF_SECOND);\n        if (hod == null) {\n            return;\n        }\n        if (moh == null && (som != null || nos != null)) {\n            return;\n        }\n        if (moh != null && som == null && nos != null) {\n            return;\n        }\n        if (resolverStyle !== ResolverStyle.LENIENT) {\n            if (hod != null) {\n                if (resolverStyle === ResolverStyle.SMART &&\n                                hod === 24 &&\n                                (moh == null || moh === 0) &&\n                                (som == null || som === 0) &&\n                                (nos == null || nos === 0)) {\n                    hod = 0;\n                    this.excessDays = Period.ofDays(1);\n                }\n                const hodVal = ChronoField.HOUR_OF_DAY.checkValidIntValue(hod);\n                if (moh != null) {\n                    const mohVal = ChronoField.MINUTE_OF_HOUR.checkValidIntValue(moh);\n                    if (som != null) {\n                        const somVal = ChronoField.SECOND_OF_MINUTE.checkValidIntValue(som);\n                        if (nos != null) {\n                            const nosVal = ChronoField.NANO_OF_SECOND.checkValidIntValue(nos);\n                            this._addObject(LocalTime.of(hodVal, mohVal, somVal, nosVal));\n                        } else {\n                            this._addObject(LocalTime.of(hodVal, mohVal, somVal));\n                        }\n                    } else {\n                        if (nos == null) {\n                            this._addObject(LocalTime.of(hodVal, mohVal));\n                        }\n                    }\n                } else {\n                    if (som == null && nos == null) {\n                        this._addObject(LocalTime.of(hodVal, 0));\n                    }\n                }\n            }\n        } else {\n            if (hod != null) {\n                let hodVal = hod;\n                if (moh != null) {\n                    if (som != null) {\n                        if (nos == null) {\n                            nos = 0;\n                        }\n                        let totalNanos = MathUtil.safeMultiply(hodVal, 3600000000000);\n                        totalNanos = MathUtil.safeAdd(totalNanos, MathUtil.safeMultiply(moh, 60000000000));\n                        totalNanos = MathUtil.safeAdd(totalNanos, MathUtil.safeMultiply(som, 1000000000));\n                        totalNanos = MathUtil.safeAdd(totalNanos, nos);\n                        const excessDays =  MathUtil.floorDiv(totalNanos, 86400000000000);  // safe int cast\n                        const nod = MathUtil.floorMod(totalNanos, 86400000000000);\n                        this._addObject(LocalTime.ofNanoOfDay(nod));\n                        this.excessDays = Period.ofDays(excessDays);\n                    } else {\n                        let totalSecs = MathUtil.safeMultiply(hodVal, 3600);\n                        totalSecs = MathUtil.safeAdd(totalSecs, MathUtil.safeMultiply(moh, 60));\n                        const excessDays =  MathUtil.floorDiv(totalSecs, 86400);  // safe int cast\n                        const sod = MathUtil.floorMod(totalSecs, 86400);\n                        this._addObject(LocalTime.ofSecondOfDay(sod));\n                        this.excessDays = Period.ofDays(excessDays);\n                    }\n                } else {\n                    const excessDays = MathUtil.safeToInt(MathUtil.floorDiv(hodVal, 24));\n                    hodVal = MathUtil.floorMod(hodVal, 24);\n                    this._addObject(LocalTime.of(hodVal, 0));\n                    this.excessDays = Period.ofDays(excessDays);\n                }\n            }\n        }\n        this.fieldValues.remove(ChronoField.HOUR_OF_DAY);\n        this.fieldValues.remove(ChronoField.MINUTE_OF_HOUR);\n        this.fieldValues.remove(ChronoField.SECOND_OF_MINUTE);\n        this.fieldValues.remove(ChronoField.NANO_OF_SECOND);\n    }\n\n    /**\n     *\n     * @param {ChronoLocalDate|LocalTime} dateOrTime\n     * @private\n     */\n    _addObject(dateOrTime) {\n        if (dateOrTime instanceof ChronoLocalDate){\n            this.date = dateOrTime;\n        } else if (dateOrTime instanceof LocalTime){\n            this.time = dateOrTime;\n        }\n    }\n\n    _resolveInstant() {\n        if (this.date != null && this.time != null) {\n            const offsetSecs = this.fieldValues.get(ChronoField.OFFSET_SECONDS);\n            if (offsetSecs != null) {\n                const offset = ZoneOffset.ofTotalSeconds(offsetSecs);\n                const instant = this.date.atTime(this.time).atZone(offset).getLong(ChronoField.INSTANT_SECONDS);\n                this.fieldValues.put(ChronoField.INSTANT_SECONDS, instant);\n            } else if (this.zone != null) {\n                const instant = this.date.atTime(this.time).atZone(this.zone).getLong(ChronoField.INSTANT_SECONDS);\n                this.fieldValues.put(ChronoField.INSTANT_SECONDS, instant);\n            }\n        }\n    }\n\n    /**\n     * Builds the specified type from the values in this builder.\n     *\n     * This attempts to build the specified type from this builder.\n     * If the builder cannot return the type, an exception is thrown.\n     *\n     * @param {!TemporalQuery} type - the type to invoke `from` on, not null\n     * @return {*} the extracted value, not null\n     * @throws DateTimeException if an error occurs\n     */\n    build(type) {\n        return type.queryFrom(this);\n    }\n\n    /**\n     *\n     * @param {TemporalField} field\n     * @returns {number}\n     */\n    isSupported(field) {\n        if (field == null) {\n            return false;\n        }\n        return (this.fieldValues.containsKey(field) && this.fieldValues.get(field) !== undefined) ||\n                (this.date != null && this.date.isSupported(field)) ||\n                (this.time != null && this.time.isSupported(field));\n    }\n\n    /**\n     *\n     * @param {TemporalField} field\n     * @returns {number}\n     */\n    getLong(field) {\n        requireNonNull(field, 'field');\n        const value = this.getFieldValue0(field);\n        if (value == null) {\n            if (this.date != null && this.date.isSupported(field)) {\n                return this.date.getLong(field);\n            }\n            if (this.time != null && this.time.isSupported(field)) {\n                return this.time.getLong(field);\n            }\n            throw new DateTimeException(`Field not found: ${field}`);\n        }\n        return value;\n    }\n\n    /**\n     *\n     * @param {!TemporalQuery} query\n     * @returns {*}\n     */\n    query(query) {\n        if (query === TemporalQueries.zoneId()) {\n            return this.zone;\n        } else if (query === TemporalQueries.chronology()) {\n            return this.chrono;\n        } else if (query === TemporalQueries.localDate()) {\n            return this.date != null ? LocalDate.from(this.date) : null;\n        } else if (query === TemporalQueries.localTime()) {\n            return this.time;\n        } else if (query === TemporalQueries.zone() || query === TemporalQueries.offset()) {\n            return query.queryFrom(this);\n        } else if (query === TemporalQueries.precision()) {\n            return null;  // not a complete date/time\n        }\n        // inline TemporalAccessor.super.query(query) as an optimization\n        // non-JDK classes are not permitted to make this optimization\n        return query.queryFrom(this);\n    }\n\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { assert, requireNonNull } from '../assert';\n\nimport { DateTimeBuilder } from './DateTimeBuilder';\nimport { EnumMap } from './EnumMap';\n\nimport { IsoChronology } from '../chrono/IsoChronology';\nimport { Temporal } from '../temporal/Temporal';\nimport { TemporalQueries } from '../temporal/TemporalQueries';\n\n/**\n * @private\n */\nexport class DateTimeParseContext{\n\n    constructor(){\n        if(arguments.length === 1){\n            if(arguments[0] instanceof DateTimeParseContext){\n                this._constructorSelf.apply(this, arguments);\n                return;\n            } else {\n                this._constructorFormatter.apply(this, arguments);\n            }\n        } else {\n            this._constructorParam.apply(this, arguments);\n        }\n\n        this._caseSensitive = true;\n        this._strict = true;\n        this._parsed = [new Parsed(this)];\n    }\n\n    _constructorParam(locale, symbols, chronology){\n        this._locale = locale;\n        this._symbols = symbols;\n        this._overrideChronology = chronology;\n    }\n\n    _constructorFormatter(formatter){\n        this._locale = formatter.locale();\n        this._symbols = formatter.decimalStyle();\n        this._overrideChronology = formatter.chronology();\n    }\n\n\n    _constructorSelf(other) {\n        this._locale = other._locale;\n        this._symbols = other._symbols;\n        this._overrideChronology = other._overrideChronology;\n        this._overrideZone = other._overrideZone;\n        this._caseSensitive = other._caseSensitive;\n        this._strict = other._strict;\n        this._parsed = [new Parsed(this)];\n    }\n\n    /**\n     * Creates a copy of this context.\n     */\n    copy() {\n        return new DateTimeParseContext(this);\n    }\n\n    symbols(){\n        return this._symbols;\n    }\n\n    isStrict(){\n        return this._strict;\n    }\n\n    setStrict(strict){\n        this._strict = strict;\n    }\n\n    locale() {\n        return this._locale;\n    }\n\n    setLocale(locale) {\n        this._locale = locale;\n    }\n    //-----------------------------------------------------------------------\n    /**\n     * Starts the parsing of an optional segment of the input.\n     */\n    startOptional() {\n        this._parsed.push(this.currentParsed().copy());\n    }\n\n    /**\n     * Ends the parsing of an optional segment of the input.\n     *\n     * @param {boolean} successful  whether the optional segment was successfully parsed\n     */\n    endOptional(successful) {\n        if (successful) {\n            this._parsed.splice(this._parsed.length - 2, 1);\n        } else {\n            this._parsed.splice(this._parsed.length - 1, 1);\n        }\n    }\n\n    /**\n     * Checks if parsing is case sensitive.\n     *\n     * @return true if parsing is case sensitive, false if case insensitive\n     */\n    isCaseSensitive() {\n        return this._caseSensitive;\n    }\n\n    /**\n     * Sets whether the parsing is case sensitive or not.\n     *\n     * @param caseSensitive  changes the parsing to be case sensitive or not from now on\n     */\n    setCaseSensitive(caseSensitive) {\n        this._caseSensitive = caseSensitive;\n    }\n\n    /**\n     * Helper to compare two {@link CharSequence} instances.\n     * This uses {@link isCaseSensitive}.\n     *\n     * @param cs1  the first character sequence, not null\n     * @param offset1  the offset into the first sequence, valid\n     * @param cs2  the second character sequence, not null\n     * @param offset2  the offset into the second sequence, valid\n     * @param length  the length to check, valid\n     * @return true if equal\n     */\n    subSequenceEquals(cs1, offset1, cs2, offset2, length) {\n        if (offset1 + length > cs1.length || offset2 + length > cs2.length) {\n            return false;\n        }\n        if (! this.isCaseSensitive()) {\n            cs1 = cs1.toLowerCase();\n            cs2 = cs2.toLowerCase();\n        }\n        for (let i = 0; i < length; i++) {\n            const ch1 = cs1[offset1 + i];\n            const ch2 = cs2[offset2 + i];\n            if (ch1 !== ch2) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Helper to compare two `char`.\n     * This uses {@link isCaseSensitive}.\n     *\n     * @param ch1  the first character\n     * @param ch2  the second character\n     * @return true if equal\n     */\n    charEquals(ch1, ch2) {\n        if (this.isCaseSensitive()) {\n            return ch1 === ch2;\n        }\n        return this.charEqualsIgnoreCase(ch1, ch2);\n    }\n\n    /**\n     * Compares two characters ignoring case.\n     *\n     * @param c1  the first\n     * @param c2  the second\n     * @return true if equal\n     */\n    charEqualsIgnoreCase(c1, c2) {\n        return c1 === c2 ||\n                c1.toLowerCase() === c2.toLowerCase();\n    }\n\n    setParsedField(field, value, errorPos, successPos){\n        const currentParsedFieldValues = this.currentParsed().fieldValues;\n        const old = currentParsedFieldValues.get(field);\n        currentParsedFieldValues.set(field, value);\n        return (old != null && old !== value) ? ~errorPos : successPos;\n    }\n\n    /**\n     * Stores the parsed zone.\n     *\n     * This stores the zone that has been parsed.\n     * No validation is performed other than ensuring it is not null.\n     *\n     * @param {ZoneId} zone  the parsed zone, not null\n     */\n    setParsedZone(zone) {\n        requireNonNull(zone, 'zone');\n        this.currentParsed().zone = zone;\n    }\n\n    getParsed(field) {\n        return this.currentParsed().fieldValues.get(field);\n    }\n\n    toParsed() {\n        return this.currentParsed();\n    }\n\n    currentParsed() {\n        return this._parsed[this._parsed.length - 1];\n    }\n\n    /**\n     * Stores the leap second.\n     */\n    setParsedLeapSecond() {\n        this.currentParsed().leapSecond = true;\n    }\n\n    /**\n     * Gets the effective chronology during parsing.\n     *\n     * @return the effective parsing chronology, not null\n     */\n    getEffectiveChronology() {\n        let chrono = this.currentParsed().chrono;\n        if (chrono == null) {\n            chrono = this._overrideChronology;\n            if (chrono == null) {\n                chrono = IsoChronology.INSTANCE;\n            }\n        }\n        return chrono;\n    }\n\n\n}\n\nclass Parsed extends Temporal {\n    constructor(dateTimeParseContext){\n        super();\n        this.chrono = null;\n        this.zone = null;\n        this.fieldValues = new EnumMap();\n        this.leapSecond = false;\n        this.dateTimeParseContext = dateTimeParseContext;\n    }\n\n    copy() {\n        const cloned = new Parsed();\n        cloned.chrono = this.chrono;\n        cloned.zone = this.zone;\n        cloned.fieldValues.putAll(this.fieldValues);\n        cloned.leapSecond = this.leapSecond;\n        cloned.dateTimeParseContext = this.dateTimeParseContext;\n        return cloned;\n    }\n\n    toString() {\n        return `${this.fieldValues}, ${this.chrono}, ${this.zone}`;\n    }\n\n    isSupported(field) {\n        return this.fieldValues.containsKey(field);\n    }\n\n    get(field) {\n        const val = this.fieldValues.get(field);\n        assert(val != null);\n        return val;\n    }\n\n    query(query) {\n        if (query === TemporalQueries.chronology()) {\n            return this.chrono;\n        }\n        if (query === TemporalQueries.zoneId() || query === TemporalQueries.zone()) {\n            return this.zone;\n        }\n        return super.query(query);\n    }\n\n    toBuilder() {\n        const builder = new DateTimeBuilder();\n        builder.fieldValues.putAll(this.fieldValues);\n        builder.chrono = this.dateTimeParseContext.getEffectiveChronology();\n        if (this.zone != null) {\n            builder.zone = this.zone;\n        } else {\n            builder.zone = this.overrideZone;\n        }\n        builder.leapSecond = this.leapSecond;\n        builder.excessDays = this.excessDays;\n        return builder;\n    }\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { DateTimeException } from '../errors';\n\nimport { DateTimeFormatter } from './DateTimeFormatter';\n\n/**\n * @private\n */\nexport class DateTimePrintContext{\n    /**\n     *\n     * @param {TemporalAccessor} temporal\n     * @param {DateTimeFormatter|Locale} localeOrFormatter\n     * @param {DecimalStyle} symbols\n     */\n    constructor(temporal, localeOrFormatter, symbols) {\n        if(arguments.length === 2 && arguments[1] instanceof DateTimeFormatter){\n            this._temporal = DateTimePrintContext.adjust(temporal, localeOrFormatter);\n            this._locale = localeOrFormatter.locale();\n            this._symbols = localeOrFormatter.decimalStyle();\n        } else {\n            this._temporal = temporal;\n            this._locale = localeOrFormatter;\n            this._symbols = symbols;\n        }\n        this._optional = 0;\n    }\n\n    /**\n     *\n     * @param {TemporalAccessor} temporal\n     * @param {DateTimeFormatter} formatter\n     * @returns {TemporalAccessor}\n     */\n    // eslint-disable-next-line no-unused-vars\n    static adjust(temporal, formatter) {\n        // TODO implement\n        return temporal;\n    }\n\n\n    symbols(){\n        return this._symbols;\n    }\n\n    /**\n     * Starts the printing of an optional segment of the input.\n     */\n    startOptional() {\n        this._optional++;\n    }\n\n    /**\n     * Ends the printing of an optional segment of the input.\n     */\n    endOptional() {\n        this._optional--;\n    }\n\n    /**\n     * Gets a value using a query.\n     *\n     * @param {TemporalQuery} query  the query to use, not null\n     * @return {*} the result, null if not found and optional is true\n     * @throws DateTimeException if the type is not available and the section is not optional\n     */\n    getValueQuery(query) {\n        const result = this._temporal.query(query);\n        if (result == null && this._optional === 0) {\n            throw new DateTimeException(`Unable to extract value: ${this._temporal}`);\n        }\n        return result;\n    }\n\n    /**\n     * Gets the value of the specified field.\n     *\n     * This will return the value for the specified field.\n     *\n     * @param field  the field to find, not null\n     * @return the value, null if not found and optional is true\n     * @throws DateTimeException if the field is not available and the section is not optional\n     */\n    getValue(field) {\n        try {\n            return this._temporal.getLong(field);\n        } catch (ex) {\n            if ((ex instanceof DateTimeException) && this._optional > 0) {\n                return null;\n            }\n            throw ex;\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the temporal object being output.\n     *\n     * @return {TemporalAccessor} the temporal object, not null\n     */\n    temporal() {\n        return this._temporal;\n    }\n\n    /**\n     * Gets the locale.\n     * <p>\n     * This locale is used to control localization in the print output except\n     * where localization is controlled by the symbols.\n     *\n     * @return the locale, not null\n     */\n    locale() {\n        return this._locale;\n    }\n\n    //-------------------------------------------------------------------------\n    // for testing\n    /**\n     * Sets the date-time being output.\n     *\n     * @param temporal  the date-time object, not null\n     */\n    setDateTime(temporal) {\n        this._temporal = temporal;\n    }\n\n    setLocale(locale) {\n        this._locale = locale;\n    }\n\n\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { UnsupportedTemporalTypeException, IllegalStateException } from '../errors';\n\nimport { DayOfWeek } from '../DayOfWeek';\nimport { Duration } from '../Duration';\nimport { MathUtil } from '../MathUtil';\nimport { LocalDate } from '../LocalDate';\n\nimport { ChronoField } from './ChronoField';\nimport { ChronoUnit } from './ChronoUnit';\nimport { TemporalField } from './TemporalField';\nimport { TemporalUnit } from './TemporalUnit';\nimport { ValueRange } from './ValueRange';\n\nimport { IsoChronology } from '../chrono/IsoChronology';\n\nimport { ResolverStyle } from '../format/ResolverStyle';\n\n/**\n * Fields and units specific to the ISO-8601 calendar system,\n * including quarter-of-year and week-based-year.\n *\n * This class defines fields and units that are specific to the ISO calendar system.\n *\n * ### Quarter of year\n *\n * The ISO-8601 standard is based on the standard civic 12 month year.\n * This is commonly divided into four quarters, often abbreviated as Q1, Q2, Q3 and Q4.\n *\n * January, February and March are in Q1.\n * April, May and June are in Q2.\n * July, August and September are in Q3.\n * October, November and December are in Q4.\n *\n * The complete date is expressed using three fields:\n *\n * * `IsoFields.DAY_OF_QUARTER` - the day within the quarter, from 1 to 90, 91 or 92\n * * `QUARTER_OF_YEAR` - the week within the week-based-year\n * * `ChronoField.YEAR` - the standard ISO year (see {@link ChronoField})\n *\n * ### Week based years\n *\n * The ISO-8601 standard was originally intended as a data interchange format,\n * defining a string format for dates and times. However, it also defines an\n * alternate way of expressing the date, based on the concept of week-based-year.\n *\n * The date is expressed using three fields:\n *\n * * `ChronoField.DAY_OF_WEEK` - the standard field defining the\n *   day-of-week from Monday (1) to Sunday (7) (see {@link ChronoField})\n * * `WEEK_OF_WEEK_BASED_YEAR` - the week within the week-based-year\n * * `WEEK_BASED_YEAR` - the week-based-year \n *\n * The week-based-year itself is defined relative to the standard ISO proleptic year.\n * It differs from the standard year in that it always starts on a Monday.\n *\n * The first week of a week-based-year is the first Monday-based week of the standard\n * ISO year that has at least 4 days in the new year.\n *\n * * If January 1st is Monday then week 1 starts on January 1st\n * * If January 1st is Tuesday then week 1 starts on December 31st of the previous standard year\n * * If January 1st is Wednesday then week 1 starts on December 30th of the previous standard year\n * * If January 1st is Thursday then week 1 starts on December 29th of the previous standard year\n * * If January 1st is Friday then week 1 starts on January 4th\n * * If January 1st is Saturday then week 1 starts on January 3rd\n * * If January 1st is Sunday then week 1 starts on January 2nd\n *\n * There are 52 weeks in most week-based years, however on occasion there are 53 weeks.\n *\n * For example:\n *\n * * Sunday, 2008-12-28: Week 52 of week-based-year 2008\n * * Monday, 2008-12-29: Week 1 of week-based-year 2009\n * * Wednesday, 2008-12-31: Week 1 of week-based-year 2009\n * * Thursday, 2009-01-01: Week 1 of week-based-year 2009\n * * Sunday, 2009-01-04: Week 1 of week-based-year 2009\n * * Monday, 2009-01-05: Week 2 of week-based-year 2009\n *\n * @property {TemporalField} DAY_OF_QUARTER The field that represents the day-of-quarter.\n *\n * This field allows the day-of-quarter value to be queried and set.\n * The day-of-quarter has values from 1 to 90 in Q1 of a standard year, from 1 to 91\n * in Q1 of a leap year, from 1 to 91 in Q2 and from 1 to 92 in Q3 and Q4.\n *\n * The day-of-quarter can only be calculated if the day-of-year, month-of-year and year\n * are available.\n *\n * When setting this field, the value is allowed to be partially lenient, taking any\n * value from 1 to 92. If the quarter has less than 92 days, then day 92, and\n * potentially day 91, is in the following quarter.\n *\n * @property {TemporalField} QUARTER_OF_YEAR The field that represents the quarter-of-year.\n *\n * This field allows the quarter-of-year value to be queried and set.\n * The quarter-of-year has values from 1 to 4.\n *\n * The day-of-quarter can only be calculated if the month-of-year is available.\n *\n * @property {TemporalField} WEEK_OF_WEEK_BASED_YEAR The field that represents the\n * week-of-week-based-year.\n *\n * This field allows the week of the week-based-year value to be queried and set.\n *\n * @property {TemporalField} WEEK_BASED_YEAR The field that represents the week-based-year.\n *\n * This field allows the week-based-year value to be queried and set.\n *\n * @property {TemporalField} WEEK_BASED_YEARS The unit that represents week-based-years for\n * the purpose of addition and subtraction.\n *\n * This allows a number of week-based-years to be added to, or subtracted from, a date.\n * The unit is equal to either 52 or 53 weeks.\n * The estimated duration of a week-based-year is the same as that of a standard ISO\n * year at 365.2425 days.\n *\n * The rules for addition add the number of week-based-years to the existing value\n * for the week-based-year field. If the resulting week-based-year only has 52 weeks,\n * then the date will be in week 1 of the following week-based-year.\n *\n * @property {TemporalField} QUARTER_YEARS Unit that represents the concept of a quarter-year.\n * For the ISO calendar system, it is equal to 3 months.\n * The estimated duration of a quarter-year is one quarter of 365.2425 days.\n * \n * @typedef {Object} IsoFields\n * @type {Object}\n */\nexport const IsoFields = {};\n\n//-----------------------------------------------------------------------\n\nconst QUARTER_DAYS = [0, 90, 181, 273, 0, 91, 182, 274];\n\n/**\n * Implementation of the field.\n * @private\n */\nclass Field extends TemporalField{\n\n    /**\n     *\n     * @returns {boolean}\n     */\n    isDateBased() {\n        return true;\n    }\n\n    /**\n     *\n     * @returns {boolean}\n     */\n    isTimeBased() {\n        return false;\n    }\n\n    /**\n     *\n     * @returns {boolean}\n     */\n    _isIso() {\n        return true;\n    }\n\n    /**\n     *\n     * @param {LocalDate} date\n     * @returns {ValueRange}\n     */\n    static _getWeekRangeByLocalDate(date) {\n        const wby = Field._getWeekBasedYear(date);\n        return ValueRange.of(1, Field._getWeekRangeByYear(wby));\n    }\n\n    /**\n     *\n     * @param {number} wby\n     * @returns {number}\n     */\n    static _getWeekRangeByYear(wby) {\n        const date = LocalDate.of(wby, 1, 1);\n        // 53 weeks if standard year starts on Thursday, or Wed in a leap year\n        if (date.dayOfWeek() === DayOfWeek.THURSDAY || (date.dayOfWeek() === DayOfWeek.WEDNESDAY && date.isLeapYear())) {\n            return 53;\n        }\n        return 52;\n    }\n\n    /**\n     *\n     * @param {LocalDate} date\n     * @returns {number}\n     */\n    static _getWeek(date) {\n        const dow0 = date.dayOfWeek().ordinal();\n        const doy0 = date.dayOfYear() - 1;\n        const doyThu0 = doy0 + (3 - dow0);  // adjust to mid-week Thursday (which is 3 indexed from zero)\n        const alignedWeek = MathUtil.intDiv(doyThu0, 7);\n        const firstThuDoy0 = doyThu0 - (alignedWeek * 7);\n        let firstMonDoy0 = firstThuDoy0 - 3;\n        if (firstMonDoy0 < -3) {\n            firstMonDoy0 += 7;\n        }\n        if (doy0 < firstMonDoy0) {\n            return Field._getWeekRangeByLocalDate(date.withDayOfYear(180).minusYears(1)).maximum();\n        }\n        let week = MathUtil.intDiv((doy0 - firstMonDoy0), 7) + 1;\n        if (week === 53) {\n            if ((firstMonDoy0 === -3 || (firstMonDoy0 === -2 && date.isLeapYear())) === false) {\n                week = 1;\n            }\n        }\n        return week;\n    }\n\n    /**\n     *\n     * @param {LocalDate} date\n     * @returns {number}\n     */\n    static _getWeekBasedYear(date) {\n        let year = date.year();\n        let doy = date.dayOfYear();\n        if (doy <= 3) {\n            const dow = date.dayOfWeek().ordinal();\n            if (doy - dow < -2) {\n                year--;\n            }\n        } else if (doy >= 363) {\n            const dow = date.dayOfWeek().ordinal();\n            doy = doy - 363 - (date.isLeapYear() ? 1 : 0);\n            if (doy - dow >= 0) {\n                year++;\n            }\n        }\n        return year;\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    displayName(/*locale*/) {\n        return this.toString();\n    }\n\n    /**\n     *\n     * @returns {null}\n     */\n    resolve() {\n        return null;\n    }\n\n    name(){\n        return this.toString();\n    }\n\n}\n\n/**\n * @private\n */\nclass DAY_OF_QUARTER_FIELD extends Field {\n\n    /**\n     *\n     * @returns {string}\n     */\n    toString() {\n        return 'DayOfQuarter';\n    }\n\n    /**\n     *\n     * @returns {TemporalUnit}\n     */\n    baseUnit() {\n        return ChronoUnit.DAYS;\n    }\n\n    /**\n     *\n     * @returns {TemporalUnit}\n     */\n    rangeUnit() {\n        return QUARTER_YEARS;\n    }\n\n    /**\n     *\n     * @returns {ValueRange}\n     */\n    range() {\n        return ValueRange.of(1, 90, 92);\n    }\n\n    /**\n     *\n     * @param {TemporalAccessor} temporal\n     * @returns {boolean}\n     */\n    isSupportedBy(temporal) {\n        return temporal.isSupported(ChronoField.DAY_OF_YEAR) && temporal.isSupported(ChronoField.MONTH_OF_YEAR) &&\n            temporal.isSupported(ChronoField.YEAR) && this._isIso(temporal);\n    }\n\n\n    /**\n     *\n     * @param {TemporalAccessor} temporal\n     * @returns {ValueRange}\n     */\n    rangeRefinedBy(temporal) {\n        if (temporal.isSupported(this) === false) {\n            throw new UnsupportedTemporalTypeException('Unsupported field: DayOfQuarter');\n        }\n        const qoy = temporal.getLong(QUARTER_OF_YEAR);\n        if (qoy === 1) {\n            const year = temporal.getLong(ChronoField.YEAR);\n            return (IsoChronology.isLeapYear(year) ? ValueRange.of(1, 91) : ValueRange.of(1, 90));\n        } else if (qoy === 2) {\n            return ValueRange.of(1, 91);\n        } else if (qoy === 3 || qoy === 4) {\n            return ValueRange.of(1, 92);\n        } // else value not from 1 to 4, so drop through\n        return this.range();\n    }\n\n    /**\n     *\n     * @param {TemporalAccessor} temporal\n     * @returns {number}\n     */\n    getFrom(temporal) {\n        if (temporal.isSupported(this) === false) {\n            throw new UnsupportedTemporalTypeException('Unsupported field: DayOfQuarter');\n        }\n        const doy = temporal.get(ChronoField.DAY_OF_YEAR);\n        const moy = temporal.get(ChronoField.MONTH_OF_YEAR);\n        const year = temporal.getLong(ChronoField.YEAR);\n        return doy - QUARTER_DAYS[MathUtil.intDiv((moy - 1), 3) + (IsoChronology.isLeapYear(year) ? 4 : 0)];\n    }\n\n    /**\n     *\n     * @param {Temporal} temporal\n     * @param {number} newValue\n     * @returns {temporal}\n     */\n    adjustInto(temporal, newValue) {\n        const curValue = this.getFrom(temporal);\n        this.range().checkValidValue(newValue, this);\n        return temporal.with(ChronoField.DAY_OF_YEAR, temporal.getLong(ChronoField.DAY_OF_YEAR) + (newValue - curValue));\n    }\n\n    /**\n     *\n     * @param {Map<TemporalField, number>} fieldValues\n     * @param {TemporalAccessor} partialTemporal\n     * @param {ResolverStyle} resolverStyle\n     * @returns {ValueRange}\n     */\n    resolve(fieldValues, partialTemporal, resolverStyle) {\n        const yearLong = fieldValues.get(ChronoField.YEAR);\n        const qoyLong = fieldValues.get(QUARTER_OF_YEAR);\n        if (yearLong == null || qoyLong == null) {\n            return null;\n        }\n        const y = ChronoField.YEAR.checkValidIntValue(yearLong);\n        const doq = fieldValues.get(DAY_OF_QUARTER);\n        let date;\n        if (resolverStyle === ResolverStyle.LENIENT) {\n            const qoy = qoyLong;\n            date = LocalDate.of(y, 1, 1);\n            date = date.plusMonths(MathUtil.safeMultiply(MathUtil.safeSubtract(qoy, 1), 3));\n            date = date.plusDays(MathUtil.safeSubtract(doq, 1));\n        } else {\n            const qoy = QUARTER_OF_YEAR.range().checkValidIntValue(qoyLong, QUARTER_OF_YEAR);\n            if (resolverStyle === ResolverStyle.STRICT) {\n                let max = 92;\n                if (qoy === 1) {\n                    max = (IsoChronology.isLeapYear(y) ? 91 : 90);\n                } else if (qoy === 2) {\n                    max = 91;\n                }\n                ValueRange.of(1, max).checkValidValue(doq, this);\n            } else {\n                this.range().checkValidValue(doq, this);  // leniently check from 1 to 92\n            }\n            date = LocalDate.of(y, ((qoy - 1) * 3) + 1, 1).plusDays(doq - 1);\n        }\n        fieldValues.remove(this);\n        fieldValues.remove(ChronoField.YEAR);\n        fieldValues.remove(QUARTER_OF_YEAR);\n        return date;\n    }\n}\n\n/**\n * @private\n */\nclass QUARTER_OF_YEAR_FIELD extends Field {\n\n    /**\n     *\n     * @returns {string}\n     */\n    toString() {\n        return 'QuarterOfYear';\n    }\n\n    /**\n     *\n     * @returns {TemporalUnit}\n     */\n    baseUnit() {\n        return QUARTER_YEARS;\n    }\n\n    /**\n     *\n     * @returns {TemporalUnit}\n     */\n    rangeUnit() {\n        return ChronoUnit.YEARS;\n    }\n\n    /**\n     *\n     * @returns {ValueRange}\n     */\n    range() {\n        return ValueRange.of(1, 4);\n    }\n\n    /**\n     *\n     * @param {TemporalAccessor} temporal\n     * @returns {boolean}\n     */\n    isSupportedBy(temporal) {\n        return temporal.isSupported(ChronoField.MONTH_OF_YEAR) && this._isIso(temporal);\n    }\n\n\n    /**\n     *\n     * @param {TemporalAccessor} temporal\n     * @returns {ValueRange}\n     */\n    //eslint-disable-next-line no-unused-vars\n    rangeRefinedBy(temporal) {\n        return this.range();\n    }\n\n    /**\n     *\n     * @param {TemporalAccessor} temporal\n     * @returns {number}\n     */\n    getFrom(temporal) {\n        if (temporal.isSupported(this) === false) {\n            throw new UnsupportedTemporalTypeException('Unsupported field: QuarterOfYear');\n        }\n        const moy = temporal.getLong(ChronoField.MONTH_OF_YEAR);\n        return MathUtil.intDiv((moy + 2), 3);\n    }\n\n    /**\n     *\n     * @param {Temporal} temporal\n     * @param {number} newValue\n     * @returns {temporal}\n     */\n    adjustInto(temporal, newValue) {\n        const curValue = this.getFrom(temporal);\n        this.range().checkValidValue(newValue, this);\n        return temporal.with(ChronoField.MONTH_OF_YEAR, temporal.getLong(ChronoField.MONTH_OF_YEAR) + (newValue - curValue) * 3);\n    }\n\n}\n\n/**\n * @private\n */\nclass WEEK_OF_WEEK_BASED_YEAR_FIELD extends Field {\n\n    /**\n     *\n     * @returns {string}\n     */\n    toString() {\n        return 'WeekOfWeekBasedYear';\n    }\n\n    /**\n     *\n     * @returns {TemporalUnit}\n     */\n    baseUnit() {\n        return ChronoUnit.WEEKS;\n    }\n\n    /**\n     *\n     * @returns {TemporalUnit}\n     */\n    rangeUnit() {\n        return WEEK_BASED_YEARS;\n    }\n\n    /**\n     *\n     * @returns {ValueRange}\n     */\n    range() {\n        return ValueRange.of(1, 52, 53);\n    }\n\n    /**\n     *\n     * @param {TemporalAccessor} temporal\n     * @returns {boolean}\n     */\n    isSupportedBy(temporal) {\n        return temporal.isSupported(ChronoField.EPOCH_DAY) && this._isIso(temporal);\n    }\n\n\n    /**\n     *\n     * @param {TemporalAccessor} temporal\n     * @returns {ValueRange}\n     */\n    rangeRefinedBy(temporal) {\n        if (temporal.isSupported(this) === false) {\n            throw new UnsupportedTemporalTypeException('Unsupported field: WeekOfWeekBasedYear');\n        }\n        return Field._getWeekRangeByLocalDate(LocalDate.from(temporal));\n    }\n\n    /**\n     *\n     * @param {TemporalAccessor} temporal\n     * @returns {number}\n     */\n    getFrom(temporal) {\n        if (temporal.isSupported(this) === false) {\n            throw new UnsupportedTemporalTypeException('Unsupported field: WeekOfWeekBasedYear');\n        }\n        return Field._getWeek(LocalDate.from(temporal));\n    }\n\n    /**\n     *\n     * @param {Temporal} temporal\n     * @param {number} newValue\n     * @returns {temporal}\n     */\n    adjustInto(temporal, newValue) {\n        this.range().checkValidValue(newValue, this);\n        return temporal.plus(MathUtil.safeSubtract(newValue, this.getFrom(temporal)), ChronoUnit.WEEKS);\n    }\n\n    /**\n     *\n     * @param {Map<TemporalField, number>} fieldValues\n     * @param {TemporalAccessor} partialTemporal\n     * @param {ResolverStyle} resolverStyle\n     * @returns {ValueRange}\n     */\n    resolve(fieldValues, partialTemporal, resolverStyle) {\n        const wbyLong = fieldValues.get(WEEK_BASED_YEAR);\n        const dowLong = fieldValues.get(ChronoField.DAY_OF_WEEK);\n        if (wbyLong == null || dowLong == null) {\n            return null;\n        }\n        const wby = WEEK_BASED_YEAR.range().checkValidIntValue(wbyLong, WEEK_BASED_YEAR);\n        const wowby = fieldValues.get(WEEK_OF_WEEK_BASED_YEAR);\n        let date;\n        if (resolverStyle === ResolverStyle.LENIENT) {\n            let dow = dowLong;\n            let weeks = 0;\n            if (dow > 7) {\n                weeks = MathUtil.intDiv((dow - 1), 7);\n                dow = (MathUtil.intMod((dow - 1), 7) + 1);\n            } else if (dow < 1) {\n                weeks = MathUtil.intDiv(dow, 7) - 1;\n                dow = MathUtil.intMod(dow, 7) + 7;\n            }\n            date = LocalDate.of(wby, 1, 4).plusWeeks(wowby - 1).plusWeeks(weeks).with(ChronoField.DAY_OF_WEEK, dow);\n        } else {\n            const dow = ChronoField.DAY_OF_WEEK.checkValidIntValue(dowLong);\n            if (resolverStyle === ResolverStyle.STRICT) {\n                const temp = LocalDate.of(wby, 1, 4);\n                const range = Field._getWeekRangeByLocalDate(temp);\n                range.checkValidValue(wowby, this);\n            } else {\n                this.range().checkValidValue(wowby, this);  // leniently check from 1 to 53\n            }\n            date = LocalDate.of(wby, 1, 4).plusWeeks(wowby - 1).with(ChronoField.DAY_OF_WEEK, dow);\n        }\n        fieldValues.remove(this);\n        fieldValues.remove(WEEK_BASED_YEAR);\n        fieldValues.remove(ChronoField.DAY_OF_WEEK);\n        return date;\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    displayName() {\n        return 'Week';\n    }\n\n}\n\n/**\n * @private\n */\nclass WEEK_BASED_YEAR_FIELD extends Field {\n\n    /**\n     *\n     * @returns {string}\n     */\n    toString() {\n        return 'WeekBasedYear';\n    }\n\n    /**\n     *\n     * @returns {TemporalUnit}\n     */\n    baseUnit() {\n        return WEEK_BASED_YEARS;\n    }\n\n    /**\n     *\n     * @returns {TemporalUnit}\n     */\n    rangeUnit() {\n        return ChronoUnit.FOREVER;\n    }\n\n    /**\n     *\n     * @returns {ValueRange}\n     */\n    range() {\n        return ChronoField.YEAR.range();\n    }\n\n    /**\n     *\n     * @param {TemporalAccessor} temporal\n     * @returns {boolean}\n     */\n    isSupportedBy(temporal) {\n        return temporal.isSupported(ChronoField.EPOCH_DAY) && this._isIso(temporal);\n    }\n\n\n    /**\n     *\n     * @param {TemporalAccessor} temporal\n     * @returns {ValueRange}\n     */\n    //eslint-disable-next-line no-unused-vars\n    rangeRefinedBy(temporal) {\n        return ChronoField.YEAR.range();\n    }\n\n    /**\n     *\n     * @param {TemporalAccessor} temporal\n     * @returns {number}\n     */\n    getFrom(temporal) {\n        if (temporal.isSupported(this) === false) {\n            throw new UnsupportedTemporalTypeException('Unsupported field: WeekBasedYear');\n        }\n        return Field._getWeekBasedYear(LocalDate.from(temporal));\n    }\n\n    /**\n     *\n     * @param {Temporal} temporal\n     * @param {number} newValue\n     * @returns {temporal}\n     */\n    adjustInto(temporal, newValue) {\n        if (this.isSupportedBy(temporal) === false) {\n            throw new UnsupportedTemporalTypeException('Unsupported field: WeekBasedYear');\n        }\n        const newWby = this.range().checkValidIntValue(newValue, WEEK_BASED_YEAR);  // strict check\n        const date = LocalDate.from(temporal);\n        const dow = date.get(ChronoField.DAY_OF_WEEK);\n        let week = Field._getWeek(date);\n        if (week === 53 && Field._getWeekRangeByYear(newWby) === 52) {\n            week = 52;\n        }\n        let resolved = LocalDate.of(newWby, 1, 4);  // 4th is guaranteed to be in week one\n        const days = (dow - resolved.get(ChronoField.DAY_OF_WEEK)) + ((week - 1) * 7);\n        resolved = resolved.plusDays(days);\n        return temporal.with(resolved);\n    }\n\n}\n\n//-----------------------------------------------------------------------\n/**\n * Implementation of the period unit.\n * @private\n */\nclass Unit extends TemporalUnit {\n\n    /**\n     *\n     * @param {string} name\n     * @param {Duration} estimatedDuration\n     * @private\n     */\n    constructor(name, estimatedDuration) {\n        super();\n        this._name = name;\n        this._duration = estimatedDuration;\n    }\n\n    /**\n     *\n     * @returns {Duration}\n     */\n    duration() {\n        return this._duration;\n    }\n\n    /**\n     *\n     * @returns {boolean}\n     */\n    isDurationEstimated() {\n        return true;\n    }\n\n    /**\n     *\n     * @returns {boolean}\n     */\n    isDateBased() {\n        return true;\n    }\n\n    /**\n     *\n     * @returns {boolean}\n     */\n    isTimeBased() {\n        return false;\n    }\n\n    /**\n     *\n     * @param {Temporal} temporal\n     * @returns {boolean}\n     */\n    isSupportedBy(temporal) {\n        return temporal.isSupported(ChronoField.EPOCH_DAY);\n    }\n\n    /**\n     *\n     * @param {Temporal} temporal\n     * @param {number} periodToAdd\n     * @returns {number}\n     */\n    addTo(temporal, periodToAdd) {\n        switch(this) {\n            case WEEK_BASED_YEARS: {\n                const added = MathUtil.safeAdd(temporal.get(WEEK_BASED_YEAR), periodToAdd);\n                return temporal.with(WEEK_BASED_YEAR, added);\n            }\n            case QUARTER_YEARS:\n                // no overflow (256 is multiple of 4)\n                return temporal.plus(MathUtil.intDiv(periodToAdd, 256), ChronoUnit.YEARS).plus(MathUtil.intMod(periodToAdd, 256) * 3, ChronoUnit.MONTHS);\n            default:\n                throw new IllegalStateException('Unreachable');\n        }\n    }\n\n    /**\n     *\n     * @param {Temporal} temporal1\n     * @param {Temporal} temporal2\n     * @returns {number}\n     */\n    between(temporal1, temporal2) {\n        switch(this) {\n            case WEEK_BASED_YEARS:\n                return MathUtil.safeSubtract(temporal2.getLong(WEEK_BASED_YEAR), temporal1.getLong(WEEK_BASED_YEAR));\n            case QUARTER_YEARS:\n                return MathUtil.intDiv(temporal1.until(temporal2, ChronoUnit.MONTHS), 3);\n            default:\n                throw new IllegalStateException('Unreachable');\n        }\n    }\n\n    toString() {\n        return this._name;\n    }\n}\n\nlet DAY_OF_QUARTER = null;\nlet QUARTER_OF_YEAR = null;\nlet WEEK_OF_WEEK_BASED_YEAR = null;\nlet WEEK_BASED_YEAR = null;\nlet WEEK_BASED_YEARS = null;\nlet QUARTER_YEARS = null;\n\nexport function _init() {\n    DAY_OF_QUARTER = new DAY_OF_QUARTER_FIELD();\n    QUARTER_OF_YEAR = new QUARTER_OF_YEAR_FIELD();\n    WEEK_OF_WEEK_BASED_YEAR = new WEEK_OF_WEEK_BASED_YEAR_FIELD();\n    WEEK_BASED_YEAR = new WEEK_BASED_YEAR_FIELD();\n\n    WEEK_BASED_YEARS = new Unit('WeekBasedYears', Duration.ofSeconds(31556952));\n    QUARTER_YEARS = new Unit('QuarterYears', Duration.ofSeconds(31556952 / 4));\n\n    IsoFields.DAY_OF_QUARTER = DAY_OF_QUARTER;\n    IsoFields.QUARTER_OF_YEAR = QUARTER_OF_YEAR;\n    IsoFields.WEEK_OF_WEEK_BASED_YEAR = WEEK_OF_WEEK_BASED_YEAR;\n    IsoFields.WEEK_BASED_YEAR = WEEK_BASED_YEAR;\n    IsoFields.WEEK_BASED_YEARS = WEEK_BASED_YEARS;\n    IsoFields.QUARTER_YEARS = QUARTER_YEARS;\n\n    // this differs from threeten, but for ease of use we bring back good old joda time functionality\n    /**\n     * the week of the week based year as defined by the ISO8601 Standard with a Monday-based week\n     *\n     * @returns {number} the week a the week based year\n     */\n    LocalDate.prototype.isoWeekOfWeekyear = function () {\n        return this.get(IsoFields.WEEK_OF_WEEK_BASED_YEAR);\n    };\n    /**\n     * the year of the week based year as defined by the ISO8601 Standard with a Monday-based week\n     *\n     * @returns {number} the year a the week based year\n     */\n    LocalDate.prototype.isoWeekyear = function () {\n        return this.get(IsoFields.WEEK_BASED_YEAR);\n    };\n}\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nexport class DecimalStyle {\n    /**\n     *\n     * @param zeroChar\n     * @param positiveSignChar\n     * @param negativeSignChar\n     * @param decimalPointChar\n     * @private\n     */\n    constructor(zeroChar, positiveSignChar, negativeSignChar, decimalPointChar) {\n        this._zeroDigit = zeroChar;\n        this._zeroDigitCharCode = zeroChar.charCodeAt(0);\n        this._positiveSign = positiveSignChar;\n        this._negativeSign = negativeSignChar;\n        this._decimalSeparator = decimalPointChar;\n    }\n\n    positiveSign(){\n        return this._positiveSign;\n    }\n\n    withPositiveSign(positiveSign) {\n        if (positiveSign === this._positiveSign) {\n            return this;\n        }\n        return new DecimalStyle(this._zeroDigit, positiveSign, this._negativeSign, this._decimalSeparator);\n    }\n\n    negativeSign(){\n        return this._negativeSign;\n    }\n\n    withNegativeSign(negativeSign) {\n        if (negativeSign === this._negativeSign) {\n            return this;\n        }\n        return new DecimalStyle(this._zeroDigit, this._positiveSign, negativeSign, this._decimalSeparator);\n    }\n\n    zeroDigit(){\n        return this._zeroDigit;\n    }\n\n    withZeroDigit(zeroDigit) {\n        if (zeroDigit === this._zeroDigit) {\n            return this;\n        }\n        return new DecimalStyle(zeroDigit, this._positiveSign, this._negativeSign, this._decimalSeparator);\n    }\n\n    decimalSeparator(){\n        return this._decimalSeparator;\n    }\n\n    withDecimalSeparator(decimalSeparator) {\n        if (decimalSeparator === this._decimalSeparator) {\n            return this;\n        }\n        return new DecimalStyle(this._zeroDigit, this._positiveSign, this._negativeSign, decimalSeparator);\n    }\n\n    convertToDigit(char){\n        const val = char.charCodeAt(0) - this._zeroDigitCharCode;\n        return (val >= 0 && val <= 9) ? val : -1;\n    }\n\n    convertNumberToI18N(numericText) {\n        if (this._zeroDigit === '0') {\n            return numericText;\n        }\n        const diff = this._zeroDigitCharCode - '0'.charCodeAt(0);\n        let convertedText = '';\n        for (let i = 0; i < numericText.length; i++) {\n            convertedText += String.fromCharCode(numericText.charCodeAt(i) + diff);\n        }\n        return convertedText;\n    }\n\n    equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof DecimalStyle) {\n            return (this._zeroDigit === other._zeroDigit && this._positiveSign === other._positiveSign &&\n                this._negativeSign === other._negativeSign && this._decimalSeparator === other._decimalSeparator);\n        }\n        return false;\n    }\n\n    hashCode() {\n        return this._zeroDigit + this._positiveSign + this._negativeSign + this._decimalSeparator;\n    }\n\n    toString() {\n        return `DecimalStyle[${this._zeroDigit}${this._positiveSign}${this._negativeSign}${this._decimalSeparator}]`;\n    }\n\n    static of(){\n        throw new Error('not yet supported');\n    }\n    static availableLocales(){\n        throw new Error('not yet supported');\n    }\n\n}\n\nDecimalStyle.STANDARD = new DecimalStyle('0', '+', '-', '.');\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { Enum } from '../Enum';\n\nexport class SignStyle extends Enum{\n    /**\n     * Parse helper.\n     *\n     * @param positive  true if positive sign parsed, false for negative sign\n     * @param strict  true if strict, false if lenient\n     * @param fixedWidth  true if fixed width, false if not\n     * @return true if valid\n     */\n    parse(positive, strict, fixedWidth){\n        switch (this) {\n            case SignStyle.NORMAL: // NORMAL\n                // valid if negative or (positive and lenient)\n                return !positive || !strict;\n            case SignStyle.ALWAYS: // ALWAYS\n            case SignStyle.EXCEEDS_PAD: // EXCEEDS_PAD\n                return true;\n            default:\n                // valid if lenient and not fixed width\n                return !strict && !fixedWidth;\n        }\n\n    }\n}\n\nSignStyle.NORMAL = new SignStyle('NORMAL');\nSignStyle.NEVER = new SignStyle('NEVER');\nSignStyle.ALWAYS = new SignStyle('ALWAYS');\nSignStyle.EXCEEDS_PAD = new SignStyle('EXCEEDS_PAD');\nSignStyle.NOT_NEGATIVE = new SignStyle('NOT_NEGATIVE');\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @license BSD-3-Clause (see LICENSE.md in the root directory of this source tree)\n */\n\nimport { Enum } from '../Enum';\n\n/**\n * Enumeration of the style of text formatting and parsing.\n *\n * Text styles define three sizes for the formatted text - 'full', 'short' and 'narrow'.\n * Each of these three sizes is available in both 'standard' and 'stand-alone' variations.\n *\n * The difference between the three sizes is obvious in most languages.\n * For example, in English the 'full' month is 'January', the 'short' month is 'Jan'\n * and the 'narrow' month is 'J'. Note that the narrow size is often not unique.\n * For example, 'January', 'June' and 'July' all have the 'narrow' text 'J'.\n *\n * The difference between the 'standard' and 'stand-alone' forms is trickier to describe\n * as there is no difference in English. However, in other languages there is a difference\n * in the word used when the text is used alone, as opposed to in a complete date.\n * For example, the word used for a month when used alone in a date picker is different\n * to the word used for month in association with a day and year in a date.\n *\n * ### Specification for implementors\n *\n * This is immutable and thread-safe enum.\n */\nexport class TextStyle extends Enum {\n    /**\n     * Checks if the style is stand-alone.\n     *\n     * @return {boolean} true if the style is stand-alone\n     */\n    isStandalone() {\n        switch (this) {\n            case TextStyle.FULL_STANDALONE:\n            case TextStyle.SHORT_STANDALONE:\n            case TextStyle.NARROW_STANDALONE:\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    /**\n     * Converts the style to the equivalent stand-alone style.\n     *\n     * @return {TextStyle} the matching stand-alone style\n     */\n    asStandalone() {\n        switch (this) {\n            case TextStyle.FULL:\n                return TextStyle.FULL_STANDALONE;\n            case TextStyle.SHORT:\n                return TextStyle.SHORT_STANDALONE;\n            case TextStyle.NARROW:\n                return TextStyle.NARROW_STANDALONE;\n            default:\n                // all others are already standalone\n                return this;\n        }\n    }\n\n    /**\n     * Converts the style to the equivalent normal style.\n     *\n     * @return {TextStyle} the matching normal style\n     */\n    asNormal() {\n        switch (this) {\n            case TextStyle.FULL_STANDALONE:\n                return TextStyle.FULL;\n            case TextStyle.SHORT_STANDALONE:\n                return TextStyle.SHORT;\n            case TextStyle.NARROW_STANDALONE:\n                return TextStyle.NARROW;\n            default:\n                // all others are already normal\n                return this;\n        }\n    }\n}\n\n/**\n * Full text, typically the full description.\n * For example, day-of-week Monday might output \"Monday\".\n */\nTextStyle.FULL = new TextStyle('FULL');\n/**\n * Full text for stand-alone use, typically the full description.\n * For example, day-of-week Monday might output \"Monday\".\n */\nTextStyle.FULL_STANDALONE = new TextStyle('FULL_STANDALONE');\n/**\n * Short text, typically an abbreviation.\n * For example, day-of-week Monday might output \"Mon\".\n */\nTextStyle.SHORT = new TextStyle('SHORT');\n/**\n * Short text for stand-alone use, typically an abbreviation.\n * For example, day-of-week Monday might output \"Mon\".\n */\nTextStyle.SHORT_STANDALONE = new TextStyle('SHORT_STANDALONE');\n/**\n * Narrow text, typically a single letter.\n * For example, day-of-week Monday might output \"M\".\n */\nTextStyle.NARROW = new TextStyle('NARROW');\n/**\n * Narrow text for stand-alone use, typically a single letter.\n * For example, day-of-week Monday might output \"M\".\n */\nTextStyle.NARROW_STANDALONE = new TextStyle('NARROW_STANDALONE');\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { IllegalArgumentException } from '../../errors';\n\n/**\n * Prints or parses a char literal.\n * @private\n */\nexport class CharLiteralPrinterParser {\n\n    constructor(literal) {\n        if (literal.length > 1) {\n            throw new IllegalArgumentException(`invalid literal, too long: \"${literal}\"`);\n        }\n        this._literal = literal;\n    }\n\n    print(context, buf) {\n        buf.append(this._literal);\n        return true;\n    }\n\n    parse(context, text, position) {\n        const length = text.length;\n        if (position === length) {\n            return ~position;\n        }\n        const ch = text.charAt(position);\n        if (context.charEquals(this._literal, ch) === false) {\n            return ~position;\n        }\n        return position + this._literal.length;\n    }\n\n    toString() {\n        if (this._literal === '\\'') {\n            return \"''\";\n        }\n        return `'${this._literal}'`;\n    }\n}\n\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\n/**\n * @private\n */\nexport class CompositePrinterParser {\n\n    constructor(printerParsers, optional) {\n        this._printerParsers = printerParsers;\n        this._optional = optional;\n    }\n\n    /**\n     * Returns a copy of this printer-parser with the optional flag changed.\n     *\n     * @param {boolean} optional  the optional flag to set in the copy\n     * @return {CompositePrinterParser} the new printer-parser, not null\n     */\n    withOptional(optional) {\n        if (optional === this._optional) {\n            return this;\n        }\n        return new CompositePrinterParser(this._printerParsers, optional);\n    }\n\n    print(context, buf) {\n        const length = buf.length();\n        if (this._optional) {\n            context.startOptional();\n        }\n        try {\n            for (let i=0; i<this._printerParsers.length; i++) {\n                const pp = this._printerParsers[i];\n                if (pp.print(context, buf) === false) {\n                    buf.setLength(length);  // reset buffer\n                    return true;\n                }\n            }\n        } finally {\n            if (this._optional) {\n                context.endOptional();\n            }\n        }\n        return true;\n    }\n\n    parse(context, text, position) {\n        if (this._optional) {\n            context.startOptional();\n            let pos = position;\n            for (let i=0; i<this._printerParsers.length; i++) {\n                const pp = this._printerParsers[i];\n                pos = pp.parse(context, text, pos);\n                if (pos < 0) {\n                    context.endOptional(false);\n                    return position;  // return original position\n                }\n            }\n            context.endOptional(true);\n            return pos;\n        } else {\n            for (let i=0; i<this._printerParsers.length; i++) {\n                const pp = this._printerParsers[i];\n                position = pp.parse(context, text, position);\n                if (position < 0) {\n                    break;\n                }\n            }\n            return position;\n        }\n    }\n\n    toString() {\n        let buf = '';\n        if (this._printerParsers != null) {\n            buf += this._optional ? '[' : '(';\n            for (let i=0; i<this._printerParsers.length; i++) {\n                const pp = this._printerParsers[i];\n                buf += pp.toString();\n            }\n            buf += this._optional ? ']' : ')';\n        }\n        return buf;\n    }\n}\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { requireNonNull } from '../../assert';\nimport { IllegalArgumentException } from '../../errors';\nimport { MathUtil } from '../../MathUtil';\n\n/**\n * TODO optimize FractionPrinterParser, fix documentation\n *\n * Prints and parses a numeric date-time field with optional padding.\n * @private\n */\nexport class FractionPrinterParser {\n\n    /**\n     * Constructor.\n     *\n     * @param {TemporalField} field  the field to output, not null\n     * @param {Number} minWidth  the minimum width to output, from 0 to 9\n     * @param {Number} maxWidth  the maximum width to output, from 0 to 9\n     * @param {boolean} decimalPoint  whether to output the localized decimal point symbol\n     */\n    constructor(field, minWidth, maxWidth, decimalPoint) {\n        requireNonNull(field, 'field');\n        if (field.range().isFixed() === false) {\n            throw new IllegalArgumentException(`Field must have a fixed set of values: ${field}`);\n        }\n        if (minWidth < 0 || minWidth > 9) {\n            throw new IllegalArgumentException(`Minimum width must be from 0 to 9 inclusive but was ${minWidth}`);\n        }\n        if (maxWidth < 1 || maxWidth > 9) {\n            throw new IllegalArgumentException(`Maximum width must be from 1 to 9 inclusive but was ${maxWidth}`);\n        }\n        if (maxWidth < minWidth) {\n            throw new IllegalArgumentException(`Maximum width must exceed or equal the minimum width but ${ \n                maxWidth} < ${minWidth}`);\n        }\n        this.field = field;\n        this.minWidth = minWidth;\n        this.maxWidth = maxWidth;\n        this.decimalPoint = decimalPoint;\n    }\n\n    print(context, buf) {\n        const value = context.getValue(this.field);\n        if (value === null) {\n            return false;\n        }\n        const symbols = context.symbols();\n        if (value === 0) {  // scale is zero if value is zero\n            if (this.minWidth > 0) {\n                if (this.decimalPoint) {\n                    buf.append(symbols.decimalSeparator());\n                }\n                for (let i = 0; i < this.minWidth; i++) {\n                    buf.append(symbols.zeroDigit());\n                }\n            }\n        } else {\n            let fraction = this.convertToFraction(value, symbols.zeroDigit());\n            const outputScale = Math.min(Math.max(fraction.length, this.minWidth), this.maxWidth);\n            fraction = fraction.substr(0, outputScale);\n            if(fraction * 1 > 0 ) {\n                while (fraction.length > this.minWidth && fraction[fraction.length - 1] === '0') {\n                    fraction = fraction.substr(0, fraction.length - 1);\n                }\n            }\n            let str = fraction;\n            str = symbols.convertNumberToI18N(str);\n            if (this.decimalPoint) {\n                buf.append(symbols.decimalSeparator());\n            }\n            buf.append(str);\n        }\n        return true;\n    }\n\n    parse(context, text, position) {\n        const effectiveMin = (context.isStrict() ? this.minWidth : 0);\n        const effectiveMax = (context.isStrict() ? this.maxWidth : 9);\n        const length = text.length;\n        if (position === length) {\n            // valid if whole field is optional, invalid if minimum width\n            return (effectiveMin > 0 ? ~position : position);\n        }\n        if (this.decimalPoint) {\n            if (text[position] !== context.symbols().decimalSeparator()) {\n                // valid if whole field is optional, invalid if minimum width\n                return (effectiveMin > 0 ? ~position : position);\n            }\n            position++;\n        }\n        const minEndPos = position + effectiveMin;\n        if (minEndPos > length) {\n            return ~position;  // need at least min width digits\n        }\n        const maxEndPos = Math.min(position + effectiveMax, length);\n        let total = 0;  // can use int because we are only parsing up to 9 digits\n        let pos = position;\n        while (pos < maxEndPos) {\n            const ch = text.charAt(pos++);\n            const digit = context.symbols().convertToDigit(ch);\n            if (digit < 0) {\n                if (pos < minEndPos) {\n                    return ~position;  // need at least min width digits\n                }\n                pos--;\n                break;\n            }\n            total = total * 10 + digit;\n        }\n        const moveLeft = pos - position;\n        const scale = Math.pow(10, moveLeft);\n        const value = this.convertFromFraction(total, scale);\n        return context.setParsedField(this.field, value, position, pos);\n    }\n\n    /**\n     *\n     * @param {Number} value  the value to convert, must be valid for this rule\n     * @param {String} zeroDigit  the character for zero\n     * @return {String} the value as a fraction within the range, from 0 to 1, not null\n     */\n    convertToFraction(value, zeroDigit) {\n        const range = this.field.range();\n        range.checkValidValue(value, this.field);\n        const _min = range.minimum();\n        const _range = range.maximum() - _min + 1;\n        const _value = value - _min;\n        const _scaled = MathUtil.intDiv((_value * 1000000000),  _range);\n        let fraction = `${_scaled}`;\n        while(fraction.length < 9){\n            fraction = zeroDigit + fraction;\n        }\n        return fraction;\n    }\n\n    /**\n     *\n     * @param {Number} total  the fraction to convert, not null\n     * @param {Number} scale  the scale, not null\n     * @return {Number} the value of the field, valid for this rule\n     * @throws DateTimeException if the value cannot be converted\n     */\n    convertFromFraction(total, scale) {\n        const range = this.field.range();\n        const _min = range.minimum();\n        const _range = range.maximum() - _min + 1;\n        const _value = MathUtil.intDiv((total * _range), scale);\n        return _value;\n    }\n\n    toString() {\n        const decimal = (this.decimalPoint ? ',DecimalPoint' : '');\n        return `Fraction(${this.field},${this.minWidth},${this.maxWidth}${decimal})`;\n    }\n}\n\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { assert } from '../../assert';\nimport { ArithmeticException, DateTimeException, IllegalArgumentException } from '../../errors';\nimport { MathUtil } from '../../MathUtil';\n\nimport { IsoChronology } from '../../chrono/IsoChronology';\n\nimport { SignStyle } from '../SignStyle';\n\n\nconst MAX_WIDTH = 15; // can't parse all numbers with more then 15 digits in javascript\n\nconst EXCEED_POINTS = [\n    0,\n    10,\n    100,\n    1000,\n    10000,\n    100000,\n    1000000,\n    10000000,\n    100000000,\n    1000000000\n];\n\n/**\n * @private\n */\nexport class NumberPrinterParser {\n\n    /**\n     * Constructor.\n     *\n     * @param field  the field to print, not null\n     * @param minWidth  the minimum field width, from 1 to 19\n     * @param maxWidth  the maximum field width, from minWidth to 19\n     * @param signStyle  the positive/negative sign style, not null\n     * @param subsequentWidth  the width of subsequent non-negative numbers, 0 or greater,\n     *  -1 if fixed width due to active adjacent parsing\n     */\n    constructor(field, minWidth, maxWidth, signStyle, subsequentWidth=0){\n        this._field = field;\n        this._minWidth = minWidth;\n        this._maxWidth = maxWidth;\n        this._signStyle = signStyle;\n        this._subsequentWidth = subsequentWidth;\n    }\n\n    field(){ return this._field;}\n    minWidth(){ return this._minWidth;}\n    maxWidth(){ return this._maxWidth;}\n    signStyle(){ return this._signStyle;}\n\n    withFixedWidth() {\n        if (this._subsequentWidth === -1) {\n            return this;\n        }\n        return new NumberPrinterParser(this._field, this._minWidth, this._maxWidth, this._signStyle, -1);\n    }\n\n    withSubsequentWidth(subsequentWidth) {\n        return new NumberPrinterParser(this._field, this._minWidth, this._maxWidth, this._signStyle, this._subsequentWidth + subsequentWidth);\n    }\n\n    _isFixedWidth() {\n        return this._subsequentWidth === -1 ||\n            (this._subsequentWidth > 0 && this._minWidth === this._maxWidth && this._signStyle === SignStyle.NOT_NEGATIVE);\n    }\n\n    print(context, buf) {\n        const contextValue = context.getValue(this._field);\n        if (contextValue == null) {\n            return false;\n        }\n        const value = this._getValue(context, contextValue);\n        const symbols = context.symbols();\n        let str = `${Math.abs(value)}`;\n        if (str.length > this._maxWidth) {\n            throw new DateTimeException(`Field ${this._field \n            } cannot be printed as the value ${value \n            } exceeds the maximum print width of ${this._maxWidth}`);\n        }\n        str = symbols.convertNumberToI18N(str);\n\n        if (value >= 0) {\n            switch (this._signStyle) {\n                case SignStyle.EXCEEDS_PAD:\n                    if (this._minWidth < MAX_WIDTH && value >= EXCEED_POINTS[this._minWidth]) {\n                        buf.append(symbols.positiveSign());\n                    }\n                    break;\n                case SignStyle.ALWAYS:\n                    buf.append(symbols.positiveSign());\n                    break;\n            }\n        } else {\n            switch (this._signStyle) {\n                case SignStyle.NORMAL:\n                case SignStyle.EXCEEDS_PAD:\n                case SignStyle.ALWAYS:\n                    buf.append(symbols.negativeSign());\n                    break;\n                case SignStyle.NOT_NEGATIVE:\n                    throw new DateTimeException(`Field ${this._field \n                    } cannot be printed as the value ${value \n                    } cannot be negative according to the SignStyle`);\n            }\n        }\n        for (let i = 0; i < this._minWidth - str.length; i++) {\n            buf.append(symbols.zeroDigit());\n        }\n        buf.append(str);\n        return true;\n    }\n\n    parse(context, text, position){\n        const length = text.length;\n        if (position === length) {\n            return ~position;\n        }\n        assert(position>=0 && position<length);\n        const sign = text.charAt(position);  // IOOBE if invalid position\n        let negative = false;\n        let positive = false;\n        if (sign === context.symbols().positiveSign()) {\n            if (this._signStyle.parse(true, context.isStrict(), this._minWidth === this._maxWidth) === false) {\n                return ~position;\n            }\n            positive = true;\n            position++;\n        } else if (sign === context.symbols().negativeSign()) {\n            if (this._signStyle.parse(false, context.isStrict(), this._minWidth === this._maxWidth) === false) {\n                return ~position;\n            }\n            negative = true;\n            position++;\n        } else {\n            if (this._signStyle === SignStyle.ALWAYS && context.isStrict()) {\n                return ~position;\n            }\n        }\n        const effMinWidth = (context.isStrict() || this._isFixedWidth() ? this._minWidth : 1);\n        const minEndPos = position + effMinWidth;\n        if (minEndPos > length) {\n            return ~position;\n        }\n        let effMaxWidth = (context.isStrict() || this._isFixedWidth() ? this._maxWidth : 9) + Math.max(this._subsequentWidth, 0);\n        let total = 0;\n        let pos = position;\n        for (let pass = 0; pass < 2; pass++) {\n            const maxEndPos = Math.min(pos + effMaxWidth, length);\n            while (pos < maxEndPos) {\n                const ch = text.charAt(pos++);\n                const digit = context.symbols().convertToDigit(ch);\n                if (digit < 0) {\n                    pos--;\n                    if (pos < minEndPos) {\n                        return ~position;  // need at least min width digits\n                    }\n                    break;\n                }\n                if ((pos - position) > MAX_WIDTH) {\n                    throw new ArithmeticException('number text exceeds length');\n                } else {\n                    total = total * 10 + digit;\n                }\n            }\n            if (this._subsequentWidth > 0 && pass === 0) {\n                // re-parse now we know the correct width\n                const parseLen = pos - position;\n                effMaxWidth = Math.max(effMinWidth, parseLen - this._subsequentWidth);\n                pos = position;\n                total = 0;\n            } else {\n                break;\n            }\n        }\n        if (negative) {\n            if (total === 0 && context.isStrict()) {\n                return ~(position - 1);  // minus zero not allowed\n            }\n            if(total !== 0) {\n                total = -total;\n            }\n        } else if (this._signStyle === SignStyle.EXCEEDS_PAD && context.isStrict()) {\n            const parseLen = pos - position;\n            if (positive) {\n                if (parseLen <= this._minWidth) {\n                    return ~(position - 1);  // '+' only parsed if minWidth exceeded\n                }\n            } else {\n                if (parseLen > this._minWidth) {\n                    return ~position;  // '+' must be parsed if minWidth exceeded\n                }\n            }\n        }\n        return this._setValue(context, total, position, pos);\n    }\n\n    /**\n     * Gets the value to output.\n     * (This is needed to allow e.g. ReducedPrinterParser to override this and change the value!\n     *\n     * @param context  the context\n     * @param value  the value of the field, not null\n     * @return the value\n     * @private\n     */\n    _getValue(context, value) {\n        return value;\n    }\n\n    /**\n     * Stores the value.\n     *\n     * @param context  the context to store into, not null\n     * @param value  the value\n     * @param errorPos  the position of the field being parsed\n     * @param successPos  the position after the field being parsed\n     * @return the new position\n     */\n    _setValue(context, value, errorPos, successPos) {\n        return context.setParsedField(this._field, value, errorPos, successPos);\n    }\n\n    toString() {\n        if (this._minWidth === 1 && this._maxWidth === MAX_WIDTH && this._signStyle === SignStyle.NORMAL) {\n            return `Value(${this._field})`;\n        }\n        if (this._minWidth === this._maxWidth && this._signStyle === SignStyle.NOT_NEGATIVE) {\n            return `Value(${this._field},${this._minWidth})`;\n        }\n        return `Value(${this._field},${this._minWidth},${this._maxWidth},${this._signStyle})`;\n    }\n\n}\n//-----------------------------------------------------------------------\n/**\n * Prints and parses a reduced numeric date-time field.\n * @private\n */\nexport class ReducedPrinterParser extends NumberPrinterParser {\n\n    /**\n     * Constructor.\n     *\n     * @param {TemporalField} field  the field to print, validated not null\n     * @param {number} width  the field width, from 1 to 10\n     * @param {number} maxWidth  the field max width, from 1 to 10\n     * @param {number} baseValue  the base value\n     * @param {ChronoLocalDate} baseDate  the base date\n     */\n    constructor(field, width, maxWidth, baseValue, baseDate) {\n        super(field, width, maxWidth, SignStyle.NOT_NEGATIVE);\n        if (width < 1 || width > 10) {\n            throw new IllegalArgumentException(`The width must be from 1 to 10 inclusive but was ${width}`);\n        }\n        if (maxWidth < 1 || maxWidth > 10) {\n            throw new IllegalArgumentException(`The maxWidth must be from 1 to 10 inclusive but was ${maxWidth}`);\n        }\n        if (maxWidth < width) {\n            throw new IllegalArgumentException('The maxWidth must be greater than the width');\n        }\n        if (baseDate === null) {\n            if (field.range().isValidValue(baseValue) === false) {\n                throw new IllegalArgumentException('The base value must be within the range of the field');\n            }\n            if ((baseValue + EXCEED_POINTS[width]) > MathUtil.MAX_SAFE_INTEGER) {\n                throw new DateTimeException('Unable to add printer-parser as the range exceeds the capacity of an int');\n            }\n        }\n        this._baseValue = baseValue;\n        this._baseDate = baseDate;\n    }\n\n    /**\n     *\n     * @param {DateTimePrintContext} context\n     * @param {number} value\n     */\n    _getValue(context, value) {\n        const absValue = Math.abs(value);\n        let baseValue = this._baseValue;\n        if (this._baseDate !== null) {\n            // TODO: in threetenbp the following line is used, but we dont have Chronology yet,\n            // let chrono = Chronology.from(context.getTemporal());\n            // so let's use IsoChronology for now\n            context.temporal();\n            const chrono = IsoChronology.INSTANCE;\n            baseValue = chrono.date(this._baseDate).get(this._field);\n        }\n        if (value >= baseValue && value < baseValue + EXCEED_POINTS[this._minWidth]) {\n            return absValue % EXCEED_POINTS[this._minWidth];\n        }\n        return absValue % EXCEED_POINTS[this._maxWidth];\n    }\n\n    /**\n     *\n     * @param {DateTimeParseContext} context\n     * @param {number} value\n     * @param {number} errorPos\n     * @param {number} successPos\n     */\n    _setValue(context, value, errorPos, successPos) {\n        let baseValue = this._baseValue;\n        if (this._baseDate != null) {\n            const chrono = context.getEffectiveChronology();\n            baseValue = chrono.date(this._baseDate).get(this._field);\n            // TODO: not implemented??\n            // context.addChronologyChangedParser(this, value, errorPos, successPos);\n        }\n        const parseLen = successPos - errorPos;\n        if (parseLen === this._minWidth && value >= 0) {\n            const range = EXCEED_POINTS[this._minWidth];\n            const lastPart = baseValue % range;\n            const basePart = baseValue - lastPart;\n            if (baseValue > 0) {\n                value = basePart + value;\n            } else {\n                value = basePart - value;\n            }\n            if (value < baseValue) {\n                value += range;\n            }\n        }\n        return context.setParsedField(this._field, value, errorPos, successPos);\n    }\n\n    withFixedWidth() {\n        if (this._subsequentWidth === -1) {\n            return this;\n        }\n        return new ReducedPrinterParser(this._field, this._minWidth, this._maxWidth, this._baseValue, this._baseDate, -1);\n    }\n\n    /**\n     *\n     * @param {number} subsequentWidth\n     * @returns {ReducedPrinterParser}\n     */\n    withSubsequentWidth(subsequentWidth) {\n        return new ReducedPrinterParser(this._field, this._minWidth, this._maxWidth, this._baseValue, this._baseDate,\n            this._subsequentWidth + subsequentWidth);\n    }\n\n    /**\n     *\n     * @param {DateTimeParseContext} context\n     */\n    isFixedWidth(context) {\n        if (context.isStrict() === false) {\n            return false;\n        }\n        return super.isFixedWidth(context);\n    }\n\n    toString() {\n        return `ReducedValue(${this._field},${this._minWidth},${this._maxWidth},${this._baseDate != null ? this._baseDate : this._baseValue})`;\n    }\n}\n\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { requireNonNull } from '../../assert';\nimport { IllegalArgumentException } from '../../errors';\nimport { MathUtil } from '../../MathUtil';\n\nimport { ChronoField } from '../../temporal/ChronoField';\n\n//-----------------------------------------------------------------------\nconst PATTERNS = [\n    '+HH', '+HHmm', '+HH:mm', '+HHMM', '+HH:MM', '+HHMMss', '+HH:MM:ss', '+HHMMSS', '+HH:MM:SS'\n];\n/**\n * Prints or parses an offset ID.\n * @private\n */\nexport class OffsetIdPrinterParser  {\n\n    /**\n     * Constructor.\n     *\n     * @param {string} noOffsetText  the text to use for UTC, not null\n     * @param {string} pattern  the pattern\n     */\n    constructor(noOffsetText, pattern) {\n        requireNonNull(noOffsetText, 'noOffsetText');\n        requireNonNull(pattern, 'pattern');\n        this.noOffsetText = noOffsetText;\n        this.type = this._checkPattern(pattern);\n    }\n\n    /**\n     * @param {String} pattern\n     * @return {number}\n     */\n    _checkPattern(pattern) {\n        for (let i = 0; i < PATTERNS.length; i++) {\n            if (PATTERNS[i] === pattern) {\n                return i;\n            }\n        }\n        throw new IllegalArgumentException(`Invalid zone offset pattern: ${pattern}`);\n    }\n\n    /**\n     * @param {DateTimePrintContext} context\n     * @param {StringBuilder} buf\n     * @return {boolean}\n     */\n    print(context, buf) {\n        const offsetSecs = context.getValue(ChronoField.OFFSET_SECONDS);\n        if (offsetSecs == null) {\n            return false;\n        }\n        const totalSecs = MathUtil.safeToInt(offsetSecs);\n        if (totalSecs === 0) {\n            buf.append(this.noOffsetText);\n        } else {\n            const absHours = Math.abs(MathUtil.intMod(MathUtil.intDiv(totalSecs, 3600), 100));  // anything larger than 99 silently dropped\n            const absMinutes = Math.abs(MathUtil.intMod(MathUtil.intDiv(totalSecs, 60), 60));\n            const absSeconds = Math.abs(MathUtil.intMod(totalSecs, 60));\n            const bufPos = buf.length();\n            let output = absHours;\n            buf.append(totalSecs < 0 ? '-' : '+')\n                .appendChar((`${MathUtil.intDiv(absHours, 10)}0`)).appendChar(`${MathUtil.intMod(absHours, 10)}0`);\n            if (this.type >= 3 || (this.type >= 1 && absMinutes > 0)) {\n                buf.append((this.type % 2) === 0 ? ':' : '')\n                    .appendChar((`${MathUtil.intDiv(absMinutes, 10)}0`)).appendChar((`${absMinutes % 10}0`));\n                output += absMinutes;\n                if (this.type >= 7 || (this.type >= 5 && absSeconds > 0)) {\n                    buf.append((this.type % 2) === 0 ? ':' : '')\n                        .appendChar((`${MathUtil.intDiv(absSeconds, 10)}0`)).appendChar((`${absSeconds % 10}0`));\n                    output += absSeconds;\n                }\n            }\n            if (output === 0) {\n                buf.setLength(bufPos);\n                buf.append(this.noOffsetText);\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @param {DateTimeParseContext} context\n     * @param {String} text\n     * @param {number} position\n     * @return {number}\n     */\n    parse(context, text, position) {\n        const length = text.length;\n        const noOffsetLen = this.noOffsetText.length;\n        if (noOffsetLen === 0) {\n            if (position === length) {\n                return context.setParsedField(ChronoField.OFFSET_SECONDS, 0, position, position);\n            }\n        } else {\n            if (position === length) {\n                return ~position;\n            }\n            if (context.subSequenceEquals(text, position, this.noOffsetText, 0, noOffsetLen)) {\n                return context.setParsedField(ChronoField.OFFSET_SECONDS, 0, position, position + noOffsetLen);\n            }\n        }\n\n        // parse normal plus/minus offset\n        const sign = text[position];  // IOOBE if invalid position\n        if (sign === '+' || sign === '-') {\n            // starts\n            const negative = (sign === '-' ? -1 : 1);\n            const array = [0,0,0,0];\n            array[0] = position + 1;\n            if ((this._parseNumber(array, 1, text, true) ||\n                this._parseNumber(array, 2, text, this.type >=3) ||\n                this._parseNumber(array, 3, text, false)) === false) {\n                // success\n                const offsetSecs = MathUtil.safeZero(negative * (array[1] * 3600 + array[2] * 60 + array[3]));\n                return context.setParsedField(ChronoField.OFFSET_SECONDS, offsetSecs, position, array[0]);\n            }\n        }\n        // handle special case of empty no offset text\n        if (noOffsetLen === 0) {\n            return context.setParsedField(ChronoField.OFFSET_SECONDS, 0, position, position + noOffsetLen);\n        }\n        return ~position;\n    }\n\n    /**\n     * Parse a two digit zero-prefixed number.\n     *\n     * @param {number[]} array  the array of parsed data, 0=pos,1=hours,2=mins,3=secs, not null\n     * @param {number} arrayIndex  the index to parse the value into\n     * @param {string} parseText  the offset ID, not null\n     * @param {boolean} required  whether this number is required\n     * @return {boolean} true if an error occurred\n     */\n    _parseNumber(array, arrayIndex, parseText, required) {\n        if ((this.type + 3) / 2 < arrayIndex) {\n            return false;  // ignore seconds/minutes\n        }\n        let pos = array[0];\n        if ((this.type % 2) === 0 && arrayIndex > 1) {\n            if (pos + 1 > parseText.length || parseText[pos] !== ':') {\n                return required;\n            }\n            pos++;\n        }\n        if (pos + 2 > parseText.length) {\n            return required;\n        }\n        const ch1 = parseText[pos++];\n        const ch2 = parseText[pos++];\n        if (ch1 < '0' || ch1 > '9' || ch2 < '0' || ch2 > '9') {\n            return required;\n        }\n        const value = (ch1.charCodeAt(0) - 48) * 10 + (ch2.charCodeAt(0) - 48);\n        if (value < 0 || value > 59) {\n            return required;\n        }\n        array[arrayIndex] = value;\n        array[0] = pos;\n        return false;\n    }\n\n\n    toString() {\n        const converted = this.noOffsetText.replace('\\'', '\\'\\'');\n        return `Offset(${PATTERNS[this.type]},'${converted}')`;\n    }\n}\nOffsetIdPrinterParser.INSTANCE_ID = new OffsetIdPrinterParser('Z', '+HH:MM:ss');\nOffsetIdPrinterParser.PATTERNS = PATTERNS;\n\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { assert } from '../../assert';\n\nimport { DateTimeException } from '../../errors';\n\n/**\n * Pads the output to a fixed width.\n * @private\n */\nexport class PadPrinterParserDecorator {\n\n    /**\n     * Constructor.\n     *\n     * @param printerParser  the printer, not null\n     * @param padWidth  the width to pad to, 1 or greater\n     * @param padChar  the pad character\n     */\n    constructor(printerParser, padWidth, padChar) {\n        // input checked by DateTimeFormatterBuilder\n        this._printerParser = printerParser;\n        this._padWidth = padWidth;\n        this._padChar = padChar;\n    }\n\n    print(context, buf) {\n        const preLen = buf.length();\n        if (this._printerParser.print(context, buf) === false) {\n            return false;\n        }\n        const len = buf.length() - preLen;\n        if (len > this._padWidth) {\n            throw new DateTimeException(\n                `Cannot print as output of ${len} characters exceeds pad width of ${this._padWidth}`);\n        }\n        for (let i = 0; i < this._padWidth - len; i++) {\n            buf.insert(preLen, this._padChar);\n        }\n        return true;\n    }\n\n    parse(context, text, position) {\n        // cache context before changed by decorated parser\n        const strict = context.isStrict();\n        const caseSensitive = context.isCaseSensitive();\n        // parse\n        assert(!(position > text.length));\n        assert(position >= 0);\n        if (position === text.length) {\n            return ~position;  // no more characters in the string\n        }\n        let endPos = position + this._padWidth;\n        if (endPos > text.length) {\n            if (strict) {\n                return ~position;  // not enough characters in the string to meet the parse width\n            }\n            endPos = text.length;\n        }\n        let pos = position;\n        while (pos < endPos &&\n        (caseSensitive ? text[pos] === this._padChar : context.charEquals(text[pos], this._padChar))) {\n            pos++;\n        }\n        text = text.substring(0, endPos);\n        const resultPos = this._printerParser.parse(context, text, pos);\n        if (resultPos !== endPos && strict) {\n            return ~(position + pos);  // parse of decorated field didn't parse to the end\n        }\n        return resultPos;\n    }\n\n    toString() {\n        return `Pad(${this._printerParser},${this._padWidth}${(this._padChar === ' ' ? ')' : `,'${this._padChar}')`)}`;\n    }\n}\n\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { Enum } from '../../Enum';\n\n/**\n * @private\n */\nexport class SettingsParser extends Enum {\n\n    print(/*context, buf*/) {\n        return true;  // nothing to do here\n    }\n\n    parse(context, text, position) {\n        // using ordinals to avoid javac synthetic inner class\n        switch (this) {\n            case SettingsParser.SENSITIVE:   context.setCaseSensitive(true); break;\n            case SettingsParser.INSENSITIVE: context.setCaseSensitive(false); break;\n            case SettingsParser.STRICT:      context.setStrict(true); break;\n            case SettingsParser.LENIENT:     context.setStrict(false); break;\n        }\n        return position;\n    }\n\n    toString() {\n        // using ordinals to avoid javac synthetic inner class\n        switch (this) {\n            case SettingsParser.SENSITIVE:   return 'ParseCaseSensitive(true)';\n            case SettingsParser.INSENSITIVE: return 'ParseCaseSensitive(false)';\n            case SettingsParser.STRICT:      return 'ParseStrict(true)';\n            case SettingsParser.LENIENT:     return 'ParseStrict(false)';\n        }\n    }\n}\n\nSettingsParser.SENSITIVE = new SettingsParser('SENSITIVE');\nSettingsParser.INSENSITIVE = new SettingsParser('INSENSITIVE');\nSettingsParser.STRICT = new SettingsParser('STRICT');\nSettingsParser.LENIENT = new SettingsParser('LENIENT');\n\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { assert } from '../../assert';\n\n/**\n * Prints or parses a string literal.\n * @private\n */\nexport class StringLiteralPrinterParser {\n\n    constructor(literal) {\n        this._literal = literal;\n    }\n\n    print(context, buf) {\n        buf.append(this._literal);\n        return true;\n    }\n\n    parse(context, text, position) {\n        const length = text.length;\n        assert(!(position > length || position < 0));\n\n        if (context.subSequenceEquals(text, position, this._literal, 0, this._literal.length) === false) {\n            return ~position;\n        }\n        return position + this._literal.length;\n    }\n\n    toString() {\n        const converted = this._literal.replace(\"'\", \"''\");\n        return `'${converted}'`;\n    }\n}\n\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @license BSD-3-Clause (see LICENSE.md in the root directory of this source tree)\n */\n\nimport { requireNonNull, requireInstance } from './assert';\nimport { DateTimeException, UnsupportedTemporalTypeException } from './errors';\nimport { MathUtil } from './MathUtil';\n\nimport { ChronoField } from './temporal/ChronoField';\nimport { Clock } from './Clock';\nimport { DateTimeFormatter } from './format/DateTimeFormatter';\nimport { DateTimeFormatterBuilder } from './format/DateTimeFormatterBuilder';\nimport { IsoChronology } from './chrono/IsoChronology';\nimport { LocalDate } from './LocalDate';\nimport { Month } from './Month';\nimport { TemporalAccessor } from './temporal/TemporalAccessor';\nimport { TemporalQuery, createTemporalQuery } from './temporal/TemporalQuery';\nimport { TemporalQueries } from './temporal/TemporalQueries';\nimport { ValueRange } from './temporal/ValueRange';\nimport { Year } from './Year';\nimport { ZoneId } from './ZoneId';\n\n/**\n * A month-day in the ISO-8601 calendar system, such as `--12-03`.\n *\n * {@link MonthDay} is an immutable date-time object that represents the combination\n * of a year and month. Any field that can be derived from a month and day, such as\n * quarter-of-year, can be obtained.\n *\n * This class does not store or represent a year, time or time-zone.\n * For example, the value \"December 3rd\" can be stored in a {@link MonthDay}.\n *\n * Since a {@link MonthDay} does not possess a year, the leap day of\n * February 29th is considered valid.\n *\n * This class implements {@link TemporalAccessor} rather than {@link Temporal}.\n * This is because it is not possible to define whether February 29th is valid or not\n * without external information, preventing the implementation of plus/minus.\n * Related to this, {@link MonthDay} only provides access to query and set the fields\n * {@link MONTH_OF_YEAR} and {@link DAY_OF_MONTH}.\n *\n * The ISO-8601 calendar system is the modern civil calendar system used today\n * in most of the world. It is equivalent to the proleptic Gregorian calendar\n * system, in which today's rules for leap years are applied for all time.\n * For most applications written today, the ISO-8601 rules are entirely suitable.\n * However, any application that makes use of historical dates, and requires them\n * to be accurate will find the ISO-8601 approach unsuitable.\n *\n * ### Specification for implementors\n *\n * This class is immutable and thread-safe.\n */\nexport class MonthDay extends TemporalAccessor {\n    /**\n     * function overloading for {@link MonthDay.now}\n     *\n     * if called with 0 argument {@link MonthDay.now0} is executed,\n     *\n     * if called with 1 argument and first argument is an instance of ZoneId, then {@link MonthDay.nowZoneId} is executed,\n     *\n     * otherwise {@link MonthDay.nowClock} is executed\n     *\n     * @param {?(ZoneId|Clock)} zoneIdOrClock\n     * @returns {MonthDay}\n     */\n    static now(zoneIdOrClock) {\n        if (arguments.length === 0) {\n            return MonthDay.now0();\n        } else if (arguments.length === 1 && zoneIdOrClock instanceof ZoneId) {\n            return MonthDay.nowZoneId(zoneIdOrClock);\n        } else {\n            return MonthDay.nowClock(zoneIdOrClock);\n        }\n    }\n    /**\n     * Obtains the current month-day from the system clock in the default time-zone.\n     *\n     * This will query the system clock (see {@link Clock#systemDefaultZone}) in the default\n     * time-zone to obtain the current month-day.\n     *\n     * Using this method will prevent the ability to use an alternate clock for testing\n     * because the clock is hard-coded.\n     *\n     * @return {MonthDay} the current month-day using the system clock and default time-zone, not null\n     */\n    static now0() {\n        return this.nowClock(Clock.systemDefaultZone());\n    }\n\n    /**\n     * Obtains the current month-day from the system clock in the specified time-zone.\n     *\n     * This will query the system clock (see {@link Clock#system}) to obtain the current month-day.\n     * Specifying the time-zone avoids dependence on the default time-zone.\n     *\n     * Using this method will prevent the ability to use an alternate clock for testing\n     * because the clock is hard-coded.\n     *\n     * @param {ZoneId} zone  the zone ID to use, not null\n     * @return {MonthDay} the current month-day using the system clock, not null\n     */\n    static nowZoneId(zone) {\n        requireNonNull(zone, 'zone');\n        return this.nowClock(Clock.system(zone));\n    }\n\n    /**\n     * Obtains the current month-day from the specified clock.\n     *\n     * This will query the specified clock to obtain the current month-day.\n     * Using this method allows the use of an alternate clock for testing.\n     * The alternate clock may be introduced using dependency injection (see {@link Clock}).\n     *\n     * @param {Clock} clock  the clock to use, not null\n     * @return {MonthDay} the current month-day, not null\n     */\n    static nowClock(clock) {\n        requireNonNull(clock, 'clock');\n        const now = LocalDate.now(clock);  // called once\n        return MonthDay.of(now.month(), now.dayOfMonth());\n    }\n    //-----------------------------------------------------------------------\n    /**\n     * function overloading for {@link MonthDay.of}\n     *\n     * if called with 2 argument and first argument is an instance of Month, then {@link MonthDay.ofMonthNumber} is executed,\n     *\n     * otherwise {@link MonthDay.ofNumberNumber} is executed\n     *\n     * @param {!(Month|number)} monthOrNumber\n     * @param {?number} number\n     * @returns {MonthDay}\n     */\n    static of(monthOrNumber, number) {\n        if (arguments.length === 2 && monthOrNumber instanceof Month) {\n            return MonthDay.ofMonthNumber(monthOrNumber, number);\n        } else {\n            return MonthDay.ofNumberNumber(monthOrNumber, number);\n        }\n    }\n    /**\n     * Obtains an instance of {@link MonthDay}.\n     *\n     * The day-of-month must be valid for the month within a leap year.\n     * Hence, for February, day 29 is valid.\n     *\n     * For example, passing in April and day 31 will throw an exception, as\n     * there can never be April 31st in any year. By contrast, passing in\n     * February 29th is permitted, as that month-day can sometimes be valid.\n     *\n     * @param {Month} month  the month-of-year to represent, not null\n     * @param {number} dayOfMonth  the day-of-month to represent, from 1 to 31\n     * @return {MonthDay} the month-day, not null\n     * @throws DateTimeException if the value of any field is out of range\n     * @throws DateTimeException if the day-of-month is invalid for the month\n     */\n    static ofMonthNumber(month, dayOfMonth) {\n        requireNonNull(month, 'month');\n        ChronoField.DAY_OF_MONTH.checkValidValue(dayOfMonth);\n        if (dayOfMonth > month.maxLength()) {\n            throw new DateTimeException(`Illegal value for DayOfMonth field, value ${dayOfMonth \n            } is not valid for month ${month.toString()}`);\n        }\n        return new MonthDay(month.value(), dayOfMonth);\n    }\n\n    /**\n     * Obtains an instance of {@link MonthDay}.\n     *\n     * The day-of-month must be valid for the month within a leap year.\n     * Hence, for month 2 (February), day 29 is valid.\n     *\n     * For example, passing in month 4 (April) and day 31 will throw an exception, as\n     * there can never be April 31st in any year. By contrast, passing in\n     * February 29th is permitted, as that month-day can sometimes be valid.\n     *\n     * @param {number} month  the month-of-year to represent, from 1 (January) to 12 (December)\n     * @param {number} dayOfMonth  the day-of-month to represent, from 1 to 31\n     * @return {MonthDay} the month-day, not null\n     * @throws DateTimeException if the value of any field is out of range\n     * @throws DateTimeException if the day-of-month is invalid for the month\n     */\n    static ofNumberNumber(month, dayOfMonth) {\n        requireNonNull(month, 'month');\n        requireNonNull(dayOfMonth, 'dayOfMonth');\n        return MonthDay.of(Month.of(month), dayOfMonth);\n    }\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains an instance of {@link MonthDay} from a temporal object.\n     *\n     * A {@link TemporalAccessor} represents some form of date and time information.\n     * This factory converts the arbitrary temporal object to an instance of {@link MonthDay}.\n     *\n     * The conversion extracts the MONTH_OF_YEAR (see {@link ChronoField#MONTH_OF_YEAR}) and\n     * DAY_OF_MONTH (see {@link ChronoField#DAY_OF_MONTH}) fields.\n     * The extraction is only permitted if the date-time has an ISO chronology.\n     *\n     * This method matches the signature of the functional interface {@link TemporalQuery}\n     * allowing it to be used in queries via method reference, {@link MonthDay::from}.\n     *\n     * @param {TemporalAccessor} temporal  the temporal object to convert, not null\n     * @return {MonthDay} the month-day, not null\n     * @throws DateTimeException if unable to convert to a {@link MonthDay}\n     */\n    static from(temporal) {\n        requireNonNull(temporal, 'temporal');\n        requireInstance(temporal, TemporalAccessor, 'temporal');\n        if (temporal instanceof MonthDay) {\n            return temporal;\n        }\n        try {\n            /* TODO: only IsoChronology for now\n            if (IsoChronology.INSTANCE.equals(Chronology.from(temporal)) == false) {\n                temporal = LocalDate.from(temporal);\n            }*/\n            return MonthDay.of(temporal.get(ChronoField.MONTH_OF_YEAR), temporal.get(ChronoField.DAY_OF_MONTH));\n        } catch (ex) {\n            throw new DateTimeException(`Unable to obtain MonthDay from TemporalAccessor: ${ \n                temporal}, type ${temporal && temporal.constructor != null ? temporal.constructor.name : ''}`);\n        }\n    }\n    //-----------------------------------------------------------------------\n    /**\n     * function overloading for {@link MonthDay.parse}\n     *\n     * if called with 1 argument, then {@link MonthDay.parseString} is executed,\n     *\n     * otherwise {@link MonthDay.parseStringFormatter} is executed\n     *\n     * @param {!(String)} text\n     * @param {?DateTimeFormatter} formatter\n     * @returns {MonthDay}\n     */\n    static parse(text, formatter) {\n        if (arguments.length === 1) {\n            return MonthDay.parseString(text);\n        } else {\n            return MonthDay.parseStringFormatter(text, formatter);\n        }\n    }\n\n    /**\n     * Obtains an instance of {@link MonthDay} from a text string such as `--12-03`.\n     *\n     * The string must represent a valid month-day.\n     * The format is `--MM-dd`.\n     *\n     * @param {String} text  the text to parse such as \"--12-03\", not null\n     * @return {MonthDay} the parsed month-day, not null\n     * @throws DateTimeParseException if the text cannot be parsed\n     */\n    static parseString(text) {\n        return MonthDay.parseStringFormatter(text, PARSER);\n    }\n\n    /**\n     * Obtains an instance of {@link MonthDay} from a text string using a specific formatter.\n     *\n     * The text is parsed using the formatter, returning a month-day.\n     *\n     * @param {String} text  the text to parse, not null\n     * @param {DateTimeFormatter} formatter  the formatter to use, not null\n     * @return {MonthDay} the parsed month-day, not null\n     * @throws DateTimeParseException if the text cannot be parsed\n     */\n    static parseStringFormatter(text, formatter) {\n        requireNonNull(text, 'text');\n        requireNonNull(formatter, 'formatter');\n        requireInstance(formatter, DateTimeFormatter, 'formatter');\n        return formatter.parse(text, MonthDay.FROM);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Constructor, previously validated.\n     *\n     * @param {number} month  the month-of-year to represent, validated from 1 to 12\n     * @param {number} dayOfMonth  the day-of-month to represent, validated from 1 to 29-31\n     * @private\n     */\n    constructor(month, dayOfMonth) {\n        super();\n        this._month = MathUtil.safeToInt(month);\n        this._day = MathUtil.safeToInt(dayOfMonth);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the month-of-year field from 1 to 12.\n     *\n     * This method returns the month as an `int` from 1 to 12.\n     * Application code is frequently clearer if the enum {@link Month}\n     * is used by calling {@link getMonth}.\n     *\n     * @return {number} the month-of-year, from 1 to 12\n     * @see #month()\n     */\n    monthValue() {\n        return this._month;\n    }\n\n    /**\n     * Gets the month-of-year field using the {@link Month} enum.\n     *\n     * This method returns the enum {@link Month} for the month.\n     * This avoids confusion as to what `int` values mean.\n     * If you need access to the primitive `int` value then the enum\n     * provides the int value (see {@link Month#getValue}).\n     *\n     * @return {Month} the month-of-year, not null\n     * @see #getMonthValue()\n     */\n    month() {\n        return Month.of(this._month);\n    }\n\n    /**\n     * Gets the day-of-month field.\n     *\n     * This method returns the primitive `int` value for the day-of-month.\n     *\n     * @return {number} the day-of-month, from 1 to 31\n     */\n    dayOfMonth() {\n        return this._day;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Checks if the specified field is supported.\n     *\n     * This checks if this month-day can be queried for the specified field.\n     * If false, then calling the range (see {@link range}) and\n     * get (see {@link get}) methods will throw an exception.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return valid\n     * values based on this date-time.\n     * The supported fields are:\n     *\n     * * {@link MONTH_OF_YEAR}\n     * * {@link YEAR}\n     *\n     * All other {@link ChronoField} instances will return false.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.isSupportedBy}\n     * passing `this` as the argument.\n     * Whether the field is supported is determined by the field.\n     *\n     * @param {TemporalField} field  the field to check, null returns false\n     * @return {boolean} true if the field is supported on this month-day, false if not\n     */\n    isSupported(field) {\n        if (field instanceof ChronoField) {\n            return field === ChronoField.MONTH_OF_YEAR || field === ChronoField.DAY_OF_MONTH;\n        }\n        return field != null && field.isSupportedBy(this);\n    }\n\n    /**\n     * Gets the range of valid values for the specified field.\n     *\n     * The range object expresses the minimum and maximum valid values for a field.\n     * This month-day is used to enhance the accuracy of the returned range.\n     * If it is not possible to return the range, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return\n     * appropriate range instances.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.rangeRefinedBy}\n     * passing `this` as the argument.\n     * Whether the range can be obtained is determined by the field.\n     *\n     * @param {TemporalField} field  the field to query the range for, not null\n     * @return {ValueRange} the range of valid values for the field, not null\n     * @throws DateTimeException if the range for the field cannot be obtained\n     */\n    range(field) {\n        if (field === ChronoField.MONTH_OF_YEAR) {\n            return field.range();\n        } else if (field === ChronoField.DAY_OF_MONTH) {\n            return ValueRange.of(1, this.month().minLength(), this.month().maxLength());\n        }\n        return super.range(field);\n    }\n\n    /**\n     * Gets the value of the specified field from this month-day as an `int`.\n     *\n     * This queries this month-day for the value for the specified field.\n     * The returned value will always be within the valid range of values for the field.\n     * If it is not possible to return the value, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return valid\n     * values based on this month-day.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.getFrom}\n     * passing `this` as the argument. Whether the value can be obtained,\n     * and what the value represents, is determined by the field.\n     *\n     * @param {TemporalField} field  the field to get, not null\n     * @return {number} the value for the field\n     * @throws DateTimeException if a value for the field cannot be obtained\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    get(field) {\n        return this.range(field).checkValidIntValue(this.getLong(field), field);\n    }\n\n    /**\n     * Gets the value of the specified field from this month-day as a `long`.\n     *\n     * This queries this month-day for the value for the specified field.\n     * If it is not possible to return the value, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return valid\n     * values based on this month-day.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.getFrom}\n     * passing `this` as the argument. Whether the value can be obtained,\n     * and what the value represents, is determined by the field.\n     *\n     * @param {TemporalField} field  the field to get, not null\n     * @return {number} the value for the field\n     * @throws DateTimeException if a value for the field cannot be obtained\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    getLong(field) {\n        requireNonNull(field, 'field');\n        if (field instanceof ChronoField) {\n            switch (field) {\n                // alignedDOW and alignedWOM not supported because they cannot be set in with()\n                case ChronoField.DAY_OF_MONTH: return this._day;\n                case ChronoField.MONTH_OF_YEAR: return this._month;\n            }\n            throw new UnsupportedTemporalTypeException(`Unsupported field: ${field}`);\n        }\n        return field.getFrom(this);\n    }\n    //-----------------------------------------------------------------------\n    /**\n     * Checks if the year is valid for this month-day.\n     *\n     * This method checks whether this month and day and the input year form\n     * a valid date. This can only return false for February 29th.\n     *\n     * @param {number} year  the year to validate, an out of range value returns false\n     * @return {boolean} true if the year is valid for this month-day\n     * @see Year#isValidMonthDay(MonthDay)\n     */\n    isValidYear(year) {\n        return (this._day === 29 && this._month === 2 && Year.isLeap(year) === false) === false;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this {@link MonthDay} with the month-of-year altered.\n     *\n     * This returns a month-day with the specified month.\n     * If the day-of-month is invalid for the specified month, the day will\n     * be adjusted to the last valid day-of-month.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} month  the month-of-year to set in the returned month-day, from 1 (January) to 12 (December)\n     * @return {MonthDay} based on this month-day with the requested month, not null\n     * @throws DateTimeException if the month-of-year value is invalid\n     */\n    withMonth(month) {\n        return this.with(Month.of(month));\n    }\n\n    /**\n    * Returns a copy of this {@link MonthDay} with the month-of-year altered.\n    *\n    * This returns a month-day with the specified month.\n    * If the day-of-month is invalid for the specified month, the day will\n    * be adjusted to the last valid day-of-month.\n    *\n    * This instance is immutable and unaffected by this method call.\n    *\n    * @param {Month} month  the month-of-year to set in the returned month-day, not null\n    * @return {MonthDay} based on this month-day with the requested month, not null\n    */\n    with(month) {\n        requireNonNull(month, 'month');\n        if (month.value() === this._month) {\n            return this;\n        }\n        const day = Math.min(this._day, month.maxLength());\n        return new MonthDay(month.value(), day);\n    }\n\n    /**\n     * Returns a copy of this {@link MonthDay} with the day-of-month altered.\n     *\n     * This returns a month-day with the specified day-of-month.\n     * If the day-of-month is invalid for the month, an exception is thrown.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} dayOfMonth  the day-of-month to set in the return month-day, from 1 to 31\n     * @return {MonthDay} based on this month-day with the requested day, not null\n     * @throws DateTimeException if the day-of-month value is invalid\n     * @throws DateTimeException if the day-of-month is invalid for the month\n     */\n    withDayOfMonth(dayOfMonth) {\n        if (dayOfMonth === this._day) {\n            return this;\n        }\n        return MonthDay.of(this._month, dayOfMonth);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Queries this month-day using the specified query.\n     *\n     * This queries this month-day using the specified query strategy object.\n     * The {@link TemporalQuery} object defines the logic to be used to\n     * obtain the result. Read the documentation of the query to understand\n     * what the result of this method will be.\n     *\n     * The result of this method is obtained by invoking the\n     * {@link TemporalQuery#queryFrom} method on the\n     * specified query passing `this` as the argument.\n     *\n     * @param {TemporalQuery} query  the query to invoke, not null\n     * @return {*} the query result, null may be returned (defined by the query)\n     * @throws DateTimeException if unable to query (defined by the query)\n     * @throws ArithmeticException if numeric overflow occurs (defined by the query)\n     */\n    query(query) {\n        requireNonNull(query, 'query');\n        requireInstance(query, TemporalQuery, 'query');\n        if (query === TemporalQueries.chronology()) {\n            return IsoChronology.INSTANCE;\n        }\n        return super.query(query);\n    }\n\n    /**\n     * Adjusts the specified temporal object to have this month-day.\n     *\n     * This returns a temporal object of the same observable type as the input\n     * with the month and day-of-month changed to be the same as this.\n     *\n     * The adjustment is equivalent to using {@link Temporal#with}\n     * twice, passing {@link ChronoField#MONTH_OF_YEAR} and\n     * {@link ChronoField#DAY_OF_MONTH} as the fields.\n     * If the specified temporal object does not use the ISO calendar system then\n     * a {@link DateTimeException} is thrown.\n     *\n     * In most cases, it is clearer to reverse the calling pattern by using\n     * {@link Temporal#with}:\n     * <pre>\n     *   // these two lines are equivalent, but the second approach is recommended\n     *   temporal = thisMonthDay.adjustInto(temporal);\n     *   temporal = temporal.with(thisMonthDay);\n     * </pre>\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Temporal} temporal  the target object to be adjusted, not null\n     * @return {Temporal} the adjusted object, not null\n     * @throws DateTimeException if unable to make the adjustment\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    adjustInto(temporal) {\n        requireNonNull(temporal, 'temporal');\n        /* TODO: only IsoChronology for now\n        if (Chronology.from(temporal).equals(IsoChronology.INSTANCE) == false) {\n            throw new DateTimeException(\"Adjustment only supported on ISO date-time\");\n        }*/\n        temporal = temporal.with(ChronoField.MONTH_OF_YEAR, this._month);\n        return temporal.with(ChronoField.DAY_OF_MONTH, Math.min(temporal.range(ChronoField.DAY_OF_MONTH).maximum(), this._day));\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Combines this month-day with a year to create a {@link LocalDate}.\n     *\n     * This returns a {@link LocalDate} formed from this month-day and the specified year.\n     *\n     * A month-day of February 29th will be adjusted to February 28th in the resulting\n     * date if the year is not a leap year.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} year  the year to use, from MIN_YEAR to MAX_YEAR\n     * @return {LocalDate} the local date formed from this month-day and the specified year, not null\n     * @throws DateTimeException if the year is outside the valid range of years\n     */\n    atYear(year) {\n        return LocalDate.of(year, this._month, this.isValidYear(year) ? this._day : 28);\n    }\n    //-----------------------------------------------------------------------\n    /**\n     * Compares this month-day to another month-day.\n     *\n     * The comparison is based first on value of the month, then on the value of the day.\n     * It is \"consistent with equals\", as defined by {@link Comparable}.\n     *\n     * @param {MonthDay} other  the other month-day to compare to, not null\n     * @return {number} the comparator value, negative if less, positive if greater\n     */\n    compareTo(other) {\n        requireNonNull(other, 'other');\n        requireInstance(other, MonthDay, 'other');\n        let cmp = (this._month - other.monthValue());\n        if (cmp === 0) {\n            cmp = (this._day - other.dayOfMonth());\n        }\n        return cmp;\n    }\n\n    /**\n     * Is this month-day after the specified month-day.\n     *\n     * @param {MonthDay} other  the other month-day to compare to, not null\n     * @return {boolean} true if this is after the specified month-day\n     */\n    isAfter(other) {\n        requireNonNull(other, 'other');\n        requireInstance(other, MonthDay, 'other');\n        return this.compareTo(other) > 0;\n    }\n\n    /**\n     * Is this month-day before the specified month-day.\n     *\n     * @param {MonthDay} other  the other month-day to compare to, not null\n     * @return {boolean} true if this point is before the specified month-day\n     */\n    isBefore(other) {\n        requireNonNull(other, 'other');\n        requireInstance(other, MonthDay, 'other');\n        return this.compareTo(other) < 0;\n    }\n\n\n    //-----------------------------------------------------------------------\n    /**\n     * Checks if this month-day is equal to another month-day.\n     *\n     * The comparison is based on the time-line position of the month-day within a year.\n     *\n     * @param {*} obj  the object to check, null returns false\n     * @return {boolean} true if this is equal to the other month-day\n     */\n    equals(obj) {\n        if (this === obj) {\n            return true;\n        }\n        if (obj instanceof MonthDay) {\n            const other = obj;\n            return this.monthValue() === other.monthValue() && this.dayOfMonth() === other.dayOfMonth();\n        }\n        return false;\n    }\n    //-----------------------------------------------------------------------\n    /**\n     * Outputs this month-day as a string, such as `--12-03`.\n     *\n     * The output will be in the format `--MM-dd`:\n     *\n     * @return {String} a string representation of this month-day, not null\n     */\n    toString() {\n        return `--${\n            this._month < 10 ? '0' : ''}${this._month\n        }${this._day < 10 ? '-0' : '-'}${this._day}`;\n    }\n\n    /**\n     * toJSON() use by JSON.stringify\n     * delegates to toString()\n     *\n     * @return {string}\n     */\n    toJSON() {\n        return this.toString();\n    }\n\n    /**\n     * Outputs this month-day as a string using the formatter.\n     *\n     * This month-day will be passed to the formatter\n     * print method (see {@link DateTimeFormatter#format}).\n     *\n     * @param {DateTimeFormatter} formatter  the formatter to use, not null\n     * @return {String} the formatted month-day string, not null\n     * @throws DateTimeException if an error occurs during printing\n     */\n    format(formatter) {\n        requireNonNull(formatter, 'formatter');\n        requireInstance(formatter, DateTimeFormatter, 'formatter');\n        return formatter.format(this);\n    }\n\n}\n\nlet PARSER;\n\nexport function _init() {\n    PARSER = new DateTimeFormatterBuilder()\n        .appendLiteral('--')\n        .appendValue(ChronoField.MONTH_OF_YEAR, 2)\n        .appendLiteral('-')\n        .appendValue(ChronoField.DAY_OF_MONTH, 2)\n        .toFormatter();\n\n    MonthDay.FROM = createTemporalQuery('MonthDay.FROM', (temporal) => {\n        return MonthDay.from(temporal);\n    });\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @license BSD-3-Clause (see LICENSE.md in the root directory of this source tree)\n */\n\nimport { requireNonNull, requireInstance } from './assert';\nimport { DateTimeException, UnsupportedTemporalTypeException } from './errors';\nimport { MathUtil } from './MathUtil';\n\nimport { ChronoField } from './temporal/ChronoField';\nimport { ChronoUnit } from './temporal/ChronoUnit';\nimport { Clock } from './Clock';\nimport { DateTimeFormatterBuilder } from './format/DateTimeFormatterBuilder';\nimport { IsoChronology } from './chrono/IsoChronology';\nimport { LocalDate } from './LocalDate';\nimport { Month } from './Month';\nimport { SignStyle } from './format/SignStyle';\nimport { Temporal } from './temporal/Temporal';\nimport { TemporalField } from './temporal/TemporalField';\nimport { TemporalQueries } from './temporal/TemporalQueries';\nimport { TemporalQuery } from './temporal/TemporalQuery';\nimport { TemporalUnit } from './temporal/TemporalUnit';\nimport { createTemporalQuery } from './temporal/TemporalQuery';\nimport { ValueRange } from './temporal/ValueRange';\nimport { Year } from './Year';\nimport { ZoneId } from './ZoneId';\n\n/**\n * A year-month in the ISO-8601 calendar system, such as `2007-12`.\n *\n * {@link YearMonth} is an immutable date-time object that represents the combination\n * of a year and month. Any field that can be derived from a year and month, such as\n * quarter-of-year, can be obtained.\n *\n * This class does not store or represent a day, time or time-zone.\n * For example, the value \"October 2007\" can be stored in a {@link YearMonth}.\n *\n * The ISO-8601 calendar system is the modern civil calendar system used today\n * in most of the world. It is equivalent to the proleptic Gregorian calendar\n * system, in which today's rules for leap years are applied for all time.\n * For most applications written today, the ISO-8601 rules are entirely suitable.\n * However, any application that makes use of historical dates, and requires them\n * to be accurate will find the ISO-8601 approach unsuitable.\n *\n * ### Specification for implementors\n *\n * This class is immutable and thread-safe.\n */\nexport class YearMonth extends Temporal {\n    //-----------------------------------------------------------------------\n    /**\n     * function overloading for {@link YearMonth.now}\n     *\n     * if called with 0 argument {@link YearMonth.now0} is executed,\n     *\n     * if called with 1 argument and first argument is an instance of ZoneId, then {@link YearMonth.nowZoneId} is executed,\n     *\n     * otherwise {@link YearMonth.nowClock} is executed\n     *\n     * @param {?(ZoneId|Clock)} zoneIdOrClock\n     * @returns {YearMonth}\n     */\n    static now(zoneIdOrClock) {\n        if (arguments.length === 0) {\n            return YearMonth.now0();\n        } else if (arguments.length === 1 && zoneIdOrClock instanceof ZoneId) {\n            return YearMonth.nowZoneId(zoneIdOrClock);\n        } else {\n            return YearMonth.nowClock(zoneIdOrClock);\n        }\n    }\n\n    /**\n     * Obtains the current year-month from the system clock in the default time-zone.\n     *\n     * This will query the system clock (see {@link Clock#systemDefaultZone}) in the default\n     * time-zone to obtain the current year-month.\n     * The zone and offset will be set based on the time-zone in the clock.\n     *\n     * Using this method will prevent the ability to use an alternate clock for testing\n     * because the clock is hard-coded.\n     *\n     * @return {YearMonth} the current year-month using the system clock and default time-zone, not null\n     */\n    static now0() {\n        return YearMonth.nowClock(Clock.systemDefaultZone());\n    }\n\n    /**\n     * Obtains the current year-month from the system clock in the specified time-zone.\n     *\n     * This will query the system clock (see {@link Clock#system}) to obtain the current year-month.\n     * Specifying the time-zone avoids dependence on the default time-zone.\n     *\n     * Using this method will prevent the ability to use an alternate clock for testing\n     * because the clock is hard-coded.\n     *\n     * @param {ZoneId} zone  the zone ID to use, not null\n     * @return {YearMonth} the current year-month using the system clock, not null\n     */\n    static nowZoneId(zone) {\n        return YearMonth.nowClock(Clock.system(zone));\n    }\n\n    /**\n     * Obtains the current year-month from the specified clock.\n     *\n     * This will query the specified clock to obtain the current year-month.\n     * Using this method allows the use of an alternate clock for testing.\n     * The alternate clock may be introduced using dependency injection.\n     *\n     * @param {Clock} clock  the clock to use, not null\n     * @return {YearMonth} the current year-month, not null\n     */\n    static nowClock(clock) {\n        const now = LocalDate.now(clock);\n        return YearMonth.of(now.year(), now.month());\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * function overloading for {@link YearMonth.of}\n     *\n     * if called with 2 argument and first argument is an instance of Month, then {@link YearMonth.ofNumberMonth} is executed,\n     *\n     * otherwise {@link YearMonth.ofNumberNumber} is executed\n     *\n     * @param {!number} year\n     * @param {!(Month|number)} monthOrNumber\n     * @returns {YearMonth}\n     */\n    static of(year, monthOrNumber) {\n        if (arguments.length === 2 && monthOrNumber instanceof Month) {\n            return YearMonth.ofNumberMonth(year, monthOrNumber);\n        } else {\n            return YearMonth.ofNumberNumber(year, monthOrNumber);\n        }\n    }\n\n    /**\n     * Obtains an instance of {@link YearMonth} from a year and month.\n     *\n     * @param {number} year  the year to represent, from MIN_YEAR to MAX_YEAR\n     * @param {Month} month  the month-of-year to represent, not null\n     * @return {YearMonth} the year-month, not null\n     * @throws DateTimeException if the year value is invalid\n     */\n    static ofNumberMonth(year, month) {\n        requireNonNull(month, 'month');\n        requireInstance(month, Month, 'month');\n        return YearMonth.ofNumberNumber(year, month.value());\n    }\n\n    /**\n     * Obtains an instance of {@link YearMonth} from a year and month.\n     *\n     * @param {number} year  the year to represent, from MIN_YEAR to MAX_YEAR\n     * @param {number} month  the month-of-year to represent, from 1 (January) to 12 (December)\n     * @return {YearMonth} the year-month, not null\n     * @throws DateTimeException if either field value is invalid\n     */\n    static ofNumberNumber(year, month) {\n        requireNonNull(year, 'year');\n        requireNonNull(month, 'month');\n        ChronoField.YEAR.checkValidValue(year);\n        ChronoField.MONTH_OF_YEAR.checkValidValue(month);\n        return new YearMonth(year, month);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains an instance of {@link YearMonth} from a temporal object.\n     *\n     * A {@link TemporalAccessor} represents some form of date and time information.\n     * This factory converts the arbitrary temporal object to an instance of {@link YearMonth}.\n     *\n     * The conversion extracts the {@link ChronoField#YEAR} and\n     * {@link ChronoField#MONTH_OF_YEAR} fields.\n     * The extraction is only permitted if the temporal object has an ISO\n     * chronology, or can be converted to a {@link LocalDate}.\n     *\n     * This method matches the signature of the functional interface {@link TemporalQuery}\n     * allowing it to be used in queries via method reference, {@link YearMonth::from}.\n     *\n     * @param {TemporalAccessor} temporal  the temporal object to convert, not null\n     * @return {YearMonth} the year-month, not null\n     * @throws DateTimeException if unable to convert to a {@link YearMonth}\n     */\n    static from(temporal) {\n        requireNonNull(temporal, 'temporal');\n        if (temporal instanceof YearMonth) {\n            return temporal;\n        }\n        try {\n            /* TODO: only IsoChronology for now\n            if (IsoChronology.INSTANCE.equals(Chronology.from(temporal)) == false) {\n                temporal = LocalDate.from(temporal);\n            }*/\n            return YearMonth.of(temporal.get(ChronoField.YEAR), temporal.get(ChronoField.MONTH_OF_YEAR));\n        } catch (ex) {\n            throw new DateTimeException(`Unable to obtain YearMonth from TemporalAccessor: ${ \n                temporal}, type ${temporal && temporal.constructor != null ? temporal.constructor.name : ''}`);\n        }\n    }\n    //-----------------------------------------------------------------------\n    /**\n     * function overloading for {@link YearMonth.parse}\n     *\n     * if called with 2 argument and first argument is an instance of Month, then {@link YearMonth.parseString} is executed,\n     *\n     * otherwise {@link YearMonth.parseStringFormatter} is executed\n     *\n     * @param {!(String)} text\n     * @param {?DateTimeFormatter} formatter\n     * @returns {YearMonth}\n     */\n    static parse(text, formatter) {\n        if (arguments.length === 1) {\n            return YearMonth.parseString(text);\n        } else {\n            return YearMonth.parseStringFormatter(text, formatter);\n        }\n    }\n\n    /**\n     * Obtains an instance of {@link YearMonth} from a text string such as `2007-12`.\n     *\n     * The string must represent a valid year-month.\n     * The format must be {@link yyyy-MM}.\n     * Years outside the range 0000 to 9999 must be prefixed by the plus or minus symbol.\n     *\n     * @param {String} text  the text to parse such as \"2007-12\", not null\n     * @return {YearMonth} the parsed year-month, not null\n     * @throws DateTimeParseException if the text cannot be parsed\n     */\n    static parseString(text) {\n        return YearMonth.parseStringFormatter(text, PARSER);\n    }\n\n    /**\n     * Obtains an instance of {@link YearMonth} from a text string using a specific formatter.\n     *\n     * The text is parsed using the formatter, returning a year-month.\n     *\n     * @param {String} text  the text to parse, not null\n     * @param {DateTimeFormatter} formatter  the formatter to use, not null\n     * @return the parsed year-month, not null\n     * @throws DateTimeParseException if the text cannot be parsed\n     */\n    static parseStringFormatter(text, formatter) {\n        requireNonNull(formatter, 'formatter');\n        return formatter.parse(text, YearMonth.FROM);\n    }\n\n\n    /**\n     * Constructor.\n     *\n     * @param {number} year  the year to represent, validated from MIN_YEAR to MAX_YEAR\n     * @param {number} month  the month-of-year to represent, validated from 1 (January) to 12 (December)\n     * @private\n     */\n    constructor(year, month) {\n        super();\n        this._year = MathUtil.safeToInt(year);\n        this._month = MathUtil.safeToInt(month);\n    }\n\n    /**\n     * function overloading for {@link YearMonth.isSupported}\n     *\n     * if called with 1 argument and first argument is an instance of TemporalField, then {@link YearMonth.isSupportedField} is executed,\n     *\n     * otherwise {@link YearMonth.isSupportedUnit} is executed\n     *\n     * @param {!(TemporalField|ChronoUnit)} fieldOrUnit\n     * @returns {boolean}\n     */\n    isSupported(fieldOrUnit) {\n        if (arguments.length === 1 && fieldOrUnit instanceof TemporalField) {\n            return this.isSupportedField(fieldOrUnit);\n        } else {\n            return this.isSupportedUnit(fieldOrUnit);\n        }\n    }\n\n    /**\n     * Checks if the specified field is supported.\n     *\n     * This checks if this year-month can be queried for the specified field.\n     * If false, then calling {@link range} and {@link get} will throw an exception.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return valid\n     * values based on this date-time.\n     * The supported fields are:\n     *\n     * * {@link MONTH_OF_YEAR}\n     * * {@link EPOCH_MONTH}\n     * * {@link YEAR_OF_ERA}\n     * * {@link YEAR}\n     * * {@link ERA}\n     *\n     * All other {@link ChronoField} instances will return false.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.isSupportedBy}\n     * passing `this` as the argument.\n     * Whether the field is supported is determined by the field.\n     *\n     * @param {TemporalField} field  the field to check, null returns false\n     * @return {boolean} true if the field is supported on this year-month, false if not\n     */\n    isSupportedField(field) {\n        if (field instanceof ChronoField) {\n            return field === ChronoField.YEAR || field === ChronoField.MONTH_OF_YEAR ||\n                    field === ChronoField.PROLEPTIC_MONTH || field === ChronoField.YEAR_OF_ERA || field === ChronoField.ERA;\n        }\n        return field != null && field.isSupportedBy(this);\n    }\n\n    isSupportedUnit(unit) {\n        if (unit instanceof ChronoUnit) {\n            return unit === ChronoUnit.MONTHS || unit === ChronoUnit.YEARS || unit === ChronoUnit.DECADES || unit === ChronoUnit.CENTURIES || unit === ChronoUnit.MILLENNIA || unit === ChronoUnit.ERAS;\n        }\n        return unit != null && unit.isSupportedBy(this);\n    }\n\n    /**\n     * Gets the range of valid values for the specified field.\n     *\n     * The range object expresses the minimum and maximum valid values for a field.\n     * This year-month is used to enhance the accuracy of the returned range.\n     * If it is not possible to return the range, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return\n     * appropriate range instances.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.rangeRefinedBy}\n     * passing `this` as the argument.\n     * Whether the range can be obtained is determined by the field.\n     *\n     * @param {TemporalField} field  the field to query the range for, not null\n     * @return {ValueRange} the range of valid values for the field, not null\n     * @throws DateTimeException if the range for the field cannot be obtained\n     */\n    range(field) {\n        if (field === ChronoField.YEAR_OF_ERA) {\n            return (this.year() <= 0 ? ValueRange.of(1, Year.MAX_VALUE + 1) : ValueRange.of(1, Year.MAX_VALUE));\n        }\n        return super.range(field);\n    }\n\n    /**\n     * Gets the value of the specified field from this year-month as an `int`.\n     *\n     * This queries this year-month for the value for the specified field.\n     * The returned value will always be within the valid range of values for the field.\n     * If it is not possible to return the value, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return valid\n     * values based on this year-month, except {@link EPOCH_MONTH} which is too\n     * large to fit in an `int` and throw a {@link DateTimeException}.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.getFrom}\n     * passing `this` as the argument. Whether the value can be obtained,\n     * and what the value represents, is determined by the field.\n     *\n     * @param {TemporalField} field  the field to get, not null\n     * @return {number} the value for the field\n     * @throws DateTimeException if a value for the field cannot be obtained\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    get(field) {\n        requireNonNull(field, 'field');\n        requireInstance(field, TemporalField, 'field');\n        return this.range(field).checkValidIntValue(this.getLong(field), field);\n    }\n\n    /**\n     * Gets the value of the specified field from this year-month as a `long`.\n     *\n     * This queries this year-month for the value for the specified field.\n     * If it is not possible to return the value, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return valid\n     * values based on this year-month.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.getFrom}\n     * passing `this` as the argument. Whether the value can be obtained,\n     * and what the value represents, is determined by the field.\n     *\n     * @param {TemporalField} field  the field to get, not null\n     * @return {number} the value for the field\n     * @throws DateTimeException if a value for the field cannot be obtained\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    getLong(field) {\n        requireNonNull(field, 'field');\n        requireInstance(field, TemporalField, 'field');\n        if (field instanceof ChronoField) {\n            switch (field) {\n                case ChronoField.MONTH_OF_YEAR: return this._month;\n                case ChronoField.PROLEPTIC_MONTH: return this._getProlepticMonth();\n                case ChronoField.YEAR_OF_ERA: return (this._year < 1 ? 1 - this._year : this._year);\n                case ChronoField.YEAR: return this._year;\n                case ChronoField.ERA: return (this._year < 1 ? 0 : 1);\n            }\n            throw new UnsupportedTemporalTypeException(`Unsupported field: ${field}`);\n        }\n        return field.getFrom(this);\n    }\n\n    _getProlepticMonth() {\n        return MathUtil.safeAdd(MathUtil.safeMultiply(this._year, 12), (this._month - 1));\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the year field.\n     *\n     * This method returns the primitive `int` value for the year.\n     *\n     * The year returned by this method is proleptic as per {@link get}.\n     *\n     * @return {number} the year, from MIN_YEAR to MAX_YEAR\n     */\n    year() {\n        return this._year;\n    }\n\n    /**\n     * Gets the month-of-year field from 1 to 12.\n     *\n     * This method returns the month as an `int` from 1 to 12.\n     * Application code is frequently clearer if the enum {@link Month}\n     * is used by calling {@link getMonth}.\n     *\n     * @return {number} the month-of-year, from 1 to 12\n     * @see #getMonth()\n     */\n    monthValue() {\n        return this._month;\n    }\n\n    /**\n     * Gets the month-of-year field using the {@link Month} enum.\n     *\n     * This method returns the enum {@link Month} for the month.\n     * This avoids confusion as to what `int` values mean.\n     * If you need access to the primitive `int` value, use {@link Month#getValue}.\n     *\n     * @return {Month} the month-of-year, not null\n     */\n    month() {\n        return Month.of(this._month);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Checks if the year is a leap year, according to the ISO proleptic\n     * calendar system rules.\n     *\n     * This method applies the current rules for leap years across the whole time-line.\n     * In general, a year is a leap year if it is divisible by four without\n     * remainder. However, years divisible by 100, are not leap years, with\n     * the exception of years divisible by 400 which are.\n     *\n     * For example, 1904 is a leap year it is divisible by 4.\n     * 1900 was not a leap year as it is divisible by 100, however 2000 was a\n     * leap year as it is divisible by 400.\n     *\n     * The calculation is proleptic - applying the same rules into the far future and far past.\n     * This is historically inaccurate, but is correct for the ISO-8601 standard.\n     *\n     * @return {boolean} true if the year is leap, false otherwise\n     */\n    isLeapYear() {\n        return IsoChronology.isLeapYear(this._year);\n    }\n\n    /**\n     * Checks if the day-of-month is valid for this year-month.\n     *\n     * This method checks whether this year and month and the input day form\n     * a valid date.\n     *\n     * @param {number} dayOfMonth  the day-of-month to validate, from 1 to 31, invalid value returns false\n     * @return {boolean} true if the day is valid for this year-month\n     */\n    isValidDay(dayOfMonth) {\n        return dayOfMonth >= 1 && dayOfMonth <= this.lengthOfMonth();\n    }\n\n    /**\n     * Returns the length of the month, taking account of the year.\n     *\n     * This returns the length of the month in days.\n     * For example, a date in January would return 31.\n     *\n     * @return {number} the length of the month in days, from 28 to 31\n     */\n    lengthOfMonth() {\n        return this.month().length(this.isLeapYear());\n    }\n\n    /**\n     * Returns the length of the year.\n     *\n     * This returns the length of the year in days, either 365 or 366.\n     *\n     * @return {number} 366 if the year is leap, 365 otherwise\n     */\n    lengthOfYear() {\n        return (this.isLeapYear() ? 366 : 365);\n    }\n\n    /**\n     * function overloading for {@link YearMonth.with}\n     *\n     * if called with 1 argument, then {@link YearMonth.withAdjuster} is executed,\n     * otherwise {@link YearMonth.withFieldValue} is executed.\n     *\n     * @param {!(TemporalAdjuster|TemporalField)} adjusterOrField\n     * @param {?number} value nullable only of first argument is an instance of TemporalAdjuster\n     * @returns {YearMonth}\n     */\n    with(adjusterOrField, value) {\n        if (arguments.length === 1) {\n            return this._withAdjuster(adjusterOrField);\n        } else {\n            return this._withField(adjusterOrField, value);\n        }\n    }\n\n    /**\n     * Returns a copy of this year-month with the specified field set to a new value.\n     *\n     * This returns a new {@link YearMonth}, based on this one, with the value\n     * for the specified field changed.\n     * This can be used to change any supported field, such as the year or month.\n     * If it is not possible to set the value, because the field is not supported or for\n     * some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the adjustment is implemented here.\n     * The supported fields behave as follows:\n     *\n     * * {@link MONTH_OF_YEAR} -\n     *   Returns a {@link YearMonth} with the specified month-of-year.\n     *   The year will be unchanged.\n     * * {@link PROLEPTIC_MONTH} -\n     *   Returns a {@link YearMonth} with the specified proleptic-month.\n     *   This completely replaces the year and month of this object.\n     * * {@link YEAR_OF_ERA} -\n     *   Returns a {@link YearMonth} with the specified year-of-era\n     *   The month and era will be unchanged.\n     * * {@link YEAR} -\n     *   Returns a {@link YearMonth} with the specified year.\n     *   The month will be unchanged.\n     * * {@link ERA} -\n     *   Returns a {@link YearMonth} with the specified era.\n     *   The month and year-of-era will be unchanged.\n     *\n     * In all cases, if the new value is outside the valid range of values for the field\n     * then a {@link DateTimeException} will be thrown.\n     *\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.adjustInto}\n     * passing `this` as the argument. In this case, the field determines\n     * whether and how to adjust the instant.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {TemporalField} field  the field to set in the result, not null\n     * @param {number} newValue  the new value of the field in the result\n     * @return a {@link YearMonth} based on `this` with the specified field set, not null\n     * @throws DateTimeException if the field cannot be set\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    _withField(field, newValue) {\n        requireNonNull(field, 'field');\n        requireInstance(field, TemporalField, 'field');\n        if (field instanceof ChronoField) {\n            const f = field;\n            f.checkValidValue(newValue);\n            switch (f) {\n                case ChronoField.MONTH_OF_YEAR: return this.withMonth(newValue);\n                case ChronoField.PROLEPTIC_MONTH: return this.plusMonths(newValue - this.getLong(ChronoField.PROLEPTIC_MONTH));\n                case ChronoField.YEAR_OF_ERA: return this.withYear((this._year < 1 ? 1 - newValue : newValue));\n                case ChronoField.YEAR: return this.withYear(newValue);\n                case ChronoField.ERA: return (this.getLong(ChronoField.ERA) === newValue ? this : this.withYear(1 - this._year));\n            }\n            throw new UnsupportedTemporalTypeException(`Unsupported field: ${field}`);\n        }\n        return field.adjustInto(this, newValue);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this {@link YearMonth} with the year altered.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} year  the year to set in the returned year-month, from MIN_YEAR to MAX_YEAR\n     * @return {YearMonth} based on this year-month with the requested year, not null\n     * @throws DateTimeException if the year value is invalid\n     */\n    withYear(year) {\n        ChronoField.YEAR.checkValidValue(year);\n        return new YearMonth(year, this._month);\n    }\n\n    /**\n     * Returns a copy of this {@link YearMonth} with the month-of-year altered.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} month  the month-of-year to set in the returned year-month, from 1 (January) to 12 (December)\n     * @return {YearMonth} based on this year-month with the requested month, not null\n     * @throws DateTimeException if the month-of-year value is invalid\n     */\n    withMonth(month) {\n        ChronoField.MONTH_OF_YEAR.checkValidValue(month);\n        return new YearMonth(this._year, month);\n    }\n\n    //-----------------------------------------------------------------------\n\n    /**\n     * @param {number} amountToAdd\n     * @param {TemporalUnit} unit\n     * @return {YearMonth} based on this year-month with the addition made, not null\n     * @throws DateTimeException if the addition cannot be made\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    _plusUnit(amountToAdd, unit) {\n        requireNonNull(unit, 'unit');\n        requireInstance(unit, TemporalUnit, 'unit');\n        if (unit instanceof ChronoUnit) {\n            switch (unit) {\n                case ChronoUnit.MONTHS: return this.plusMonths(amountToAdd);\n                case ChronoUnit.YEARS: return this.plusYears(amountToAdd);\n                case ChronoUnit.DECADES: return this.plusYears(MathUtil.safeMultiply(amountToAdd, 10));\n                case ChronoUnit.CENTURIES: return this.plusYears(MathUtil.safeMultiply(amountToAdd, 100));\n                case ChronoUnit.MILLENNIA: return this.plusYears(MathUtil.safeMultiply(amountToAdd, 1000));\n                case ChronoUnit.ERAS: return this.with(ChronoField.ERA, MathUtil.safeAdd(this.getLong(ChronoField.ERA), amountToAdd));\n            }\n            throw new UnsupportedTemporalTypeException(`Unsupported unit: ${unit}`);\n        }\n        return unit.addTo(this, amountToAdd);\n    }\n\n    /**\n     * Returns a copy of this year-month with the specified period in years added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} yearsToAdd  the years to add, may be negative\n     * @return {YearMonth} based on this year-month with the years added, not null\n     * @throws DateTimeException if the result exceeds the supported range\n     */\n    plusYears(yearsToAdd) {\n        if (yearsToAdd === 0) {\n            return this;\n        }\n        const newYear = ChronoField.YEAR.checkValidIntValue(this._year + yearsToAdd);  // safe overflow\n        return this.withYear(newYear);\n    }\n\n    /**\n     * Returns a copy of this year-month with the specified period in months added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} monthsToAdd  the months to add, may be negative\n     * @return {YearMonth} based on this year-month with the months added, not null\n     * @throws DateTimeException if the result exceeds the supported range\n     */\n    plusMonths(monthsToAdd) {\n        if (monthsToAdd === 0) {\n            return this;\n        }\n        const monthCount = (this._year * 12) + (this._month - 1);\n        const calcMonths = monthCount + monthsToAdd;\n        const newYear = ChronoField.YEAR.checkValidIntValue(MathUtil.floorDiv(calcMonths, 12));\n        const newMonth = MathUtil.floorMod(calcMonths, 12) + 1;\n        return new YearMonth(newYear, newMonth);\n    }\n\n    //-----------------------------------------------------------------------\n\n    /**\n     * Returns a copy of this year-month with the specified period in years subtracted.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} yearsToSubtract  the years to subtract, may be negative\n     * @return {YearMonth} based on this year-month with the years subtracted, not null\n     * @throws DateTimeException if the result exceeds the supported range\n     */\n    minusYears(yearsToSubtract) {\n        return (yearsToSubtract === MathUtil.MIN_SAFE_INTEGER ? this.plusYears(MathUtil.MIN_SAFE_INTEGER).plusYears(1) : this.plusYears(-yearsToSubtract));\n    }\n\n    /**\n     * Returns a copy of this year-month with the specified period in months subtracted.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} monthsToSubtract  the months to subtract, may be negative\n     * @return {YearMonth} based on this year-month with the months subtracted, not null\n     * @throws DateTimeException if the result exceeds the supported range\n     */\n    minusMonths(monthsToSubtract) {\n        return (monthsToSubtract === MathUtil.MIN_SAFE_INTEGER ? this.plusMonths(Math.MAX_SAFE_INTEGER).plusMonths(1) : this.plusMonths(-monthsToSubtract));\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Queries this year-month using the specified query.\n     *\n     * This queries this year-month using the specified query strategy object.\n     * The {@link TemporalQuery} object defines the logic to be used to\n     * obtain the result. Read the documentation of the query to understand\n     * what the result of this method will be.\n     *\n     * The result of this method is obtained by invoking the\n     * {@link TemporalQuery#queryFrom} method on the\n     * specified query passing `this` as the argument.\n     *\n     * @param {TemporalQuery} query  the query to invoke, not null\n     * @return {*} the query result, null may be returned (defined by the query)\n     * @throws DateTimeException if unable to query (defined by the query)\n     * @throws ArithmeticException if numeric overflow occurs (defined by the query)\n     */\n    query(query) {\n        requireNonNull(query, 'query');\n        requireInstance(query, TemporalQuery, 'query');\n        if (query === TemporalQueries.chronology()) {\n            return IsoChronology.INSTANCE;\n        } else if (query === TemporalQueries.precision()) {\n            return ChronoUnit.MONTHS;\n        } else if (query === TemporalQueries.localDate() || query === TemporalQueries.localTime() ||\n                query === TemporalQueries.zone() || query === TemporalQueries.zoneId() || query === TemporalQueries.offset()) {\n            return null;\n        }\n        return super.query(query);\n    }\n\n    /**\n     * Adjusts the specified temporal object to have this year-month.\n     *\n     * This returns a temporal object of the same observable type as the input\n     * with the year and month changed to be the same as this.\n     *\n     * The adjustment is equivalent to using {@link Temporal#with}\n     * passing {@link ChronoField#PROLEPTIC_MONTH} as the field.\n     * If the specified temporal object does not use the ISO calendar system then\n     * a {@link DateTimeException} is thrown.\n     *\n     * In most cases, it is clearer to reverse the calling pattern by using\n     * {@link Temporal#with}:\n     * <pre>\n     *   // these two lines are equivalent, but the second approach is recommended\n     *   temporal = thisYearMonth.adjustInto(temporal);\n     *   temporal = temporal.with(thisYearMonth);\n     * </pre>\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Temporal} temporal  the target object to be adjusted, not null\n     * @return {Temporal} the adjusted object, not null\n     * @throws DateTimeException if unable to make the adjustment\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    adjustInto(temporal) {\n        requireNonNull(temporal, 'temporal');\n        requireInstance(temporal, Temporal, 'temporal');\n        /* TODO: only IsoChronology for now\n        if (Chronology.from(temporal).equals(IsoChronology.INSTANCE) == false) {\n            throw new DateTimeException(\"Adjustment only supported on ISO date-time\");\n        }*/\n        return temporal.with(ChronoField.PROLEPTIC_MONTH, this._getProlepticMonth());\n    }\n\n    /**\n     * Calculates the period between this year-month and another year-month in\n     * terms of the specified unit.\n     *\n     * This calculates the period between two year-months in terms of a single unit.\n     * The start and end points are `this` and the specified year-month.\n     * The result will be negative if the end is before the start.\n     * The {@link Temporal} passed to this method must be a {@link YearMonth}.\n     * For example, the period in years between two year-months can be calculated\n     * using {@link startYearMonth.until}.\n     *\n     * The calculation returns a whole number, representing the number of\n     * complete units between the two year-months.\n     * For example, the period in decades between 2012-06 and 2032-05\n     * will only be one decade as it is one month short of two decades.\n     *\n     * This method operates in association with {@link TemporalUnit#between}.\n     * The result of this method is a `long` representing the amount of\n     * the specified unit. By contrast, the result of {@link between} is an\n     * object that can be used directly in addition/subtraction:\n     * <pre>\n     *   long period = start.until(end, YEARS);   // this method\n     *   dateTime.plus(YEARS.between(start, end));      // use in plus/minus\n     * </pre>\n     *\n     * The calculation is implemented in this method for {@link ChronoUnit}.\n     * The units {@link MONTHS}, {@link YEARS}, {@link DECADES},\n     * {@link CENTURIES}, {@link MILLENNIA} and {@link ERAS} are supported.\n     * Other {@link ChronoUnit} values will throw an exception.\n     *\n     * If the unit is not a {@link ChronoUnit}, then the result of this method\n     * is obtained by invoking {@link TemporalUnit.between}\n     * passing `this` as the first argument and the input temporal as\n     * the second argument.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Temporal} endExclusive  the end year-month, which is converted to a {@link YearMonth}, not null\n     * @param {TemporalUnit} unit  the unit to measure the period in, not null\n     * @return {number} the amount of the period between this year-month and the end year-month\n     * @throws DateTimeException if the period cannot be calculated\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    until(endExclusive, unit) {\n        requireNonNull(endExclusive, 'endExclusive');\n        requireNonNull(unit, 'unit');\n        requireInstance(endExclusive, Temporal, 'endExclusive');\n        requireInstance(unit, TemporalUnit, 'unit');\n\n        const end = YearMonth.from(endExclusive);\n        if (unit instanceof ChronoUnit) {\n            const monthsUntil = end._getProlepticMonth() - this._getProlepticMonth();  // no overflow\n            switch (unit) {\n                case ChronoUnit.MONTHS: return monthsUntil;\n                case ChronoUnit.YEARS: return MathUtil.intDiv(monthsUntil, 12);\n                case ChronoUnit.DECADES: return MathUtil.intDiv(monthsUntil, 120);\n                case ChronoUnit.CENTURIES: return MathUtil.intDiv(monthsUntil, 1200);\n                case ChronoUnit.MILLENNIA: return MathUtil.intDiv(monthsUntil, 12000);\n                case ChronoUnit.ERAS: return end.getLong(ChronoField.ERA) - this.getLong(ChronoField.ERA);\n            }\n            throw new UnsupportedTemporalTypeException(`Unsupported unit: ${unit}`);\n        }\n        return unit.between(this, end);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Combines this year-month with a day-of-month to create a {@link LocalDate}.\n     *\n     * This returns a {@link LocalDate} formed from this year-month and the specified day-of-month.\n     *\n     * The day-of-month value must be valid for the year-month.\n     *\n     * This method can be used as part of a chain to produce a date:\n     * <pre>\n     *  LocalDate date = year.atMonth(month).atDay(day);\n     * </pre>\n     *\n     * @param {number} dayOfMonth  the day-of-month to use, from 1 to 31\n     * @return {LocalDate} the date formed from this year-month and the specified day, not null\n     * @throws DateTimeException if the day is invalid for the year-month\n     * @see #isValidDay(int)\n     */\n    atDay(dayOfMonth) {\n        requireNonNull(dayOfMonth, 'dayOfMonth');\n        return LocalDate.of(this._year, this._month, dayOfMonth);\n    }\n\n    /**\n     * Returns a {@link LocalDate} at the end of the month.\n     *\n     * This returns a {@link LocalDate} based on this year-month.\n     * The day-of-month is set to the last valid day of the month, taking\n     * into account leap years.\n     *\n     * This method can be used as part of a chain to produce a date:\n     * <pre>\n     *  LocalDate date = year.atMonth(month).atEndOfMonth();\n     * </pre>\n     *\n     * @return {LocalDate} the last valid date of this year-month, not null\n     */\n    atEndOfMonth() {\n        return LocalDate.of(this._year, this._month, this.lengthOfMonth());\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Compares this year-month to another year-month.\n     *\n     * The comparison is based first on the value of the year, then on the value of the month.\n     * It is \"consistent with equals\", as defined by {@link Comparable}.\n     *\n     * @param {YearMonth} other  the other year-month to compare to, not null\n     * @return {number} the comparator value, negative if less, positive if greater\n     */\n    compareTo(other) {\n        requireNonNull(other, 'other');\n        requireInstance(other, YearMonth, 'other');\n        let cmp = (this._year - other.year());\n        if (cmp === 0) {\n            cmp = (this._month - other.monthValue());\n        }\n        return cmp;\n    }\n\n    /**\n     * Is this year-month after the specified year-month.\n     *\n     * @param {YearMonth} other  the other year-month to compare to, not null\n     * @return {boolean} true if this is after the specified year-month\n     */\n    isAfter(other) {\n        return this.compareTo(other) > 0;\n    }\n\n    /**\n     * Is this year-month before the specified year-month.\n     *\n     * @param {YearMonth} other  the other year-month to compare to, not null\n     * @return {boolean} true if this point is before the specified year-month\n     */\n    isBefore(other) {\n        return this.compareTo(other) < 0;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Checks if this year-month is equal to another year-month.\n     *\n     * The comparison is based on the time-line position of the year-months.\n     *\n     * @param {*} obj  the object to check, null returns false\n     * @return {boolean} true if this is equal to the other year-month\n     */\n    equals(obj) {\n        if (this === obj) {\n            return true;\n        }\n        if (obj instanceof YearMonth) {\n            const other = obj;\n            return this.year() === other.year() && this.monthValue() === other.monthValue();\n        }\n        return false;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Outputs this year-month as a string, such as `2007-12`.\n     *\n     * The output will be in the format {@link yyyy-MM}:\n     *\n     * @return {String} a string representation of this year-month, not null\n     */\n    toString() {\n        return PARSER.format(this);\n    }\n\n    /**\n     * toJSON() use by JSON.stringify\n     * delegates to toString()\n     *\n     * @return {string}\n     */\n    toJSON() {\n        return this.toString();\n    }\n\n    /**\n     * Outputs this year-month as a string using the formatter.\n     *\n     * @param {DateTimeFormatter} formatter  the formatter to use, not null\n     * @return {String} the formatted year-month string, not null\n     * @throws DateTimeException if an error occurs during printing\n     */\n    format(formatter) {\n        requireNonNull(formatter, 'formatter');\n        return formatter.format(this);\n    }\n\n}\n\nlet PARSER;\n\nexport function _init() {\n\n    PARSER = new DateTimeFormatterBuilder()\n        .appendValue(ChronoField.YEAR, 4, 10, SignStyle.EXCEEDS_PAD)\n        .appendLiteral('-')\n        .appendValue(ChronoField.MONTH_OF_YEAR, 2)\n        .toFormatter();\n\n    YearMonth.FROM = createTemporalQuery('YearMonth.FROM', (temporal) => {\n        return YearMonth.from(temporal);\n    });\n}\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { DateTimeException, UnsupportedTemporalTypeException } from './errors';\nimport { requireNonNull, requireInstance } from './assert';\nimport { MathUtil } from './MathUtil';\n\nimport { ChronoField } from './temporal/ChronoField';\nimport { ChronoUnit } from './temporal/ChronoUnit';\nimport { Clock } from './Clock';\nimport { DateTimeFormatter } from './format/DateTimeFormatter';\nimport { DateTimeFormatterBuilder } from './format/DateTimeFormatterBuilder';\nimport { IsoChronology } from './chrono/IsoChronology';\nimport { LocalDate } from './LocalDate';\nimport { Month } from './Month';\nimport { MonthDay } from './MonthDay';\nimport { SignStyle } from './format/SignStyle';\nimport { Temporal } from './temporal/Temporal';\nimport { TemporalAccessor } from './temporal/TemporalAccessor';\nimport { TemporalField } from './temporal/TemporalField';\nimport { TemporalQueries } from './temporal/TemporalQueries';\nimport { TemporalQuery, createTemporalQuery } from './temporal/TemporalQuery';\nimport { TemporalUnit } from './temporal/TemporalUnit';\nimport { YearConstants } from './YearConstants';\nimport { YearMonth } from './YearMonth';\nimport { ZoneId } from './ZoneId';\n\n\n/**\n * A year in the ISO-8601 calendar system, such as `2007`.\n *\n * {@link Year} is an immutable date-time object that represents a year.\n * Any field that can be derived from a year can be obtained.\n *\n * **Note that years in the ISO chronology only align with years in the\n * Gregorian-Julian system for modern years. Parts of Russia did not switch to the\n * modern Gregorian/ISO rules until 1920.\n * As such, historical years must be treated with caution.**\n *\n * This class does not store or represent a month, day, time or time-zone.\n * For example, the value \"2007\" can be stored in a {@link Year}.\n *\n * Years represented by this class follow the ISO-8601 standard and use\n * the proleptic numbering system. Year 1 is preceded by year 0, then by year -1.\n *\n * The ISO-8601 calendar system is the modern civil calendar system used today\n * in most of the world. It is equivalent to the proleptic Gregorian calendar\n * system, in which today's rules for leap years are applied for all time.\n * For most applications written today, the ISO-8601 rules are entirely suitable.\n * However, any application that makes use of historical dates, and requires them\n * to be accurate will find the ISO-8601 approach unsuitable.\n *\n * ### Static properties of Class {@link LocalDate}\n *\n * Year.MIN_VALUE = -999.999;\n *\n * The minimum supported year. Theoretically the minimum could be -28.542.4812 years in javascript.\n * approx LocalDateTime.ofEpochSecond(Number.MIN_SAFE_INTEGER, 0, ZoneOffset.UTC).year()\n *\n * Year.MAX_VALUE = 999.999;\n *\n * The maximum supported year. Theoretically the maximum could be 285.428.751 years in javascript.\n * approx LocalDateTime.ofEpochSecond(Number.MAX_SAFE_INTEGER, 0, ZoneOffset.UTC).year()\n *\n */\nexport class Year extends Temporal {\n\n    /**\n     *\n     * @param {number} value\n     * @private\n     */\n    constructor(value) {\n        super();\n        this._year = MathUtil.safeToInt(value);\n    }\n\n    /**\n     *\n     * @return {number} gets the value\n     */\n    value() {\n        return this._year;\n    }\n\n    /**\n     * function overloading for {@link Year.now}\n     *\n     * if called without arguments, then {@link Year.now0} is executed.\n\n     * if called with 1 arguments and first argument is an instance of ZoneId, then {@link Year.nowZoneId} is executed.\n     *\n     * Otherwise {@link Year.nowClock} is executed.\n     *\n     * @param {!(ZoneId|Clock)} zoneIdOrClock\n     * @returns {Year}\n     */\n    static now(zoneIdOrClock = undefined) {\n        if (zoneIdOrClock === undefined) {\n            return Year.now0();\n        } else if (zoneIdOrClock instanceof ZoneId) {\n            return Year.nowZoneId(zoneIdOrClock);\n        } else {\n            return Year.nowClock(zoneIdOrClock);\n        }\n    }\n\n    /**\n     * Obtains the current year from the system clock in the default time-zone.\n     *\n     * This will query the system clock (see {@link Clock#systemDefaultZone}) in the default\n     * time-zone to obtain the current year.\n     *\n     * Using this method will prevent the ability to use an alternate clock for testing\n     * because the clock is hard-coded.\n     *\n     * @return {Year} the current year using the system clock and default time-zone, not null\n     */\n    static now0() {\n        return Year.nowClock(Clock.systemDefaultZone());\n    }\n\n    /**\n     * Obtains the current year from the system clock in the specified time-zone.\n     *\n     * This will query the system clock (see {@link Clock#system}) to obtain the current year.\n     * Specifying the time-zone avoids dependence on the default time-zone.\n     *\n     * Using this method will prevent the ability to use an alternate clock for testing\n     * because the clock is hard-coded.\n     *\n     * @param {ZoneId} zone  the zone ID to use, not null\n     * @return {Year} the current year using the system clock, not null\n     */\n    static nowZoneId(zone) {\n        requireNonNull(zone, 'zone');\n        requireInstance(zone, ZoneId, 'zone');\n        return Year.nowClock(Clock.system(zone));\n    }\n\n    /**\n     * Obtains the current year from the specified clock.\n     *\n     * This will query the specified clock to obtain the current year.\n     * Using this method allows the use of an alternate clock for testing.\n     * The alternate clock may be introduced using dependency injection.\n     *\n     * @param {Clock} clock  the clock to use, not null\n     * @return {Year} the current year, not null\n     */\n    static nowClock(clock) {\n        requireNonNull(clock, 'clock');\n        requireInstance(clock, Clock, 'clock');\n        const now = LocalDate.now(clock);  // called once\n        return Year.of(now.year());\n    }\n    /**\n     * Obtains an instance of {@link Year}.\n     *\n     * This method accepts a year value from the proleptic ISO calendar system.\n     *\n     * * The year 2AD/CE is represented by 2.\n     * * The year 1AD/CE is represented by 1.\n     * * The year 1BC/BCE is represented by 0.\n     * * The year 2BC/BCE is represented by -1.\n     *\n     * @param {Number} isoYear  the ISO proleptic year to represent, from {@link MIN_VALUE} to {@link MAX_VALUE}\n     * @return {Year} the year, not null\n     * @throws DateTimeException if the field is invalid\n     */\n    static of(isoYear) {\n        requireNonNull(isoYear, 'isoYear');\n        ChronoField.YEAR.checkValidValue(isoYear);\n        return new Year(isoYear);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains an instance of {@link Year} from a temporal object.\n     *\n     * A {@link TemporalAccessor} represents some form of date and time information.\n     * This factory converts the arbitrary temporal object to an instance of {@link Year}.\n     *\n     * The conversion extracts the {@link ChronoField#YEAR} field.\n     * The extraction is only permitted if the temporal object has an ISO\n     * chronology, or can be converted to a {@link LocalDate}.\n     *\n     * This method matches the signature of the functional interface {@link TemporalQuery}\n     * allowing it to be used in queries via method reference, {@link Year::from}.\n     *\n     * @param {TemporalAccessor} temporal  the temporal object to convert, not null\n     * @return {Year} the year, not null\n     * @throws DateTimeException if unable to convert to a {@link Year}\n     */\n    static from(temporal) {\n        requireNonNull(temporal, 'temporal');\n        requireInstance(temporal, TemporalAccessor, 'temporal');\n        if (temporal instanceof Year) {\n            return temporal;\n        }\n        try {\n            /* TODO: we support only ISO for now\n            if (IsoChronology.INSTANCE.equals(Chronology.from(temporal)) == false) {\n                temporal = LocalDate.from(temporal);\n            }*/\n            return Year.of(temporal.get(ChronoField.YEAR));\n        } catch (ex) {\n            throw new DateTimeException(`Unable to obtain Year from TemporalAccessor: ${ \n                temporal}, type ${temporal && temporal.constructor != null ? temporal.constructor.name : ''}`);\n        }\n    }\n    //-----------------------------------------------------------------------\n    /**\n     * function overloading for {@link Year.parse}\n     *\n     * if called with 1 argument, then {@link Year.parseText} is executed.\n     *\n     * Otherwise {@link Year.parseTextFormatter} is executed.\n     *\n     * @param {!(String)} text\n     * @param {?DateTimeFormatter} formatter\n     * @returns {Year}\n     */\n    static parse(text, formatter) {\n        if (arguments.length <= 1) {\n            return Year.parseText(text);\n        } else {\n            return Year.parseTextFormatter(text, formatter);\n        }\n    }\n\n    /**\n     * Obtains an instance of {@link Year} from a text string such as `2007`.\n     *\n     * The string must represent a valid year.\n     * Years outside the range 0000 to 9999 must be prefixed by the plus or minus symbol.\n     *\n     * @param {String} text  the text to parse such as \"2007\", not null\n     * @return {Year} the parsed year, not null\n     * @throws DateTimeParseException if the text cannot be parsed\n     */\n    static parseText(text) {\n        requireNonNull(text, 'text');\n        return Year.parse(text, PARSER);\n    }\n\n    /**\n     * Obtains an instance of {@link Year} from a text string using a specific formatter.\n     *\n     * The text is parsed using the formatter, returning a year.\n     *\n     * @param {String} text  the text to parse, not null\n     * @param {DateTimeFormatter} formatter  the formatter to use, not null\n     * @return {Year} the parsed year, not null\n     * @throws DateTimeParseException if the text cannot be parsed\n     */\n    static parseTextFormatter(text, formatter = PARSER) {\n        requireNonNull(text, 'text');\n        requireNonNull(formatter, 'formatter');\n        requireInstance(formatter, DateTimeFormatter, 'formatter');\n        return formatter.parse(text, Year.FROM);\n    }\n\n    //-------------------------------------------------------------------------\n    /**\n     * Checks if the year is a leap year, according to the ISO proleptic\n     * calendar system rules.\n     *\n     * This method applies the current rules for leap years across the whole time-line.\n     * In general, a year is a leap year if it is divisible by four without\n     * remainder. However, years divisible by 100, are not leap years, with\n     * the exception of years divisible by 400 which are.\n     *\n     * For example, 1904 is a leap year it is divisible by 4.\n     * 1900 was not a leap year as it is divisible by 100, however 2000 was a\n     * leap year as it is divisible by 400.\n     *\n     * The calculation is proleptic - applying the same rules into the far future and far past.\n     * This is historically inaccurate, but is correct for the ISO-8601 standard.\n     *\n     * @param {number} year  the year to check\n     * @return {boolean} true if the year is leap, false otherwise\n     */\n    static isLeap(year) {\n        return ((MathUtil.intMod(year, 4) === 0) && ((MathUtil.intMod(year, 100) !== 0) || (MathUtil.intMod(year, 400) === 0)));\n    }\n\n    /**\n     * function overloading for {@link YearMonth.isSupported}\n     *\n     * if called with 1 argument and first argument is an instance of TemporalField, then {@link YearMonth.isSupportedField} is executed,\n     *\n     * otherwise {@link YearMonth.isSupportedUnit} is executed\n     *\n     * @param {!(TemporalField|ChronoUnit)} fieldOrUnit\n     * @returns {boolean}\n     */\n    isSupported(fieldOrUnit) {\n        if (arguments.length === 1 && fieldOrUnit instanceof TemporalField) {\n            return this.isSupportedField(fieldOrUnit);\n        } else {\n            return this.isSupportedUnit(fieldOrUnit);\n        }\n    }\n\n    /**\n     * Checks if the specified field is supported.\n     *\n     * This checks if this year can be queried for the specified field.\n     * If false, then calling {@link range} and {@link get} will throw an exception.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return valid\n     * values based on this date-time.\n     * The supported fields are:\n     *\n     * * {@link YEAR_OF_ERA}\n     * * {@link YEAR}\n     * * {@link ERA}\n     *\n     * All other {@link ChronoField} instances will return false.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.isSupportedBy}\n     * passing `this` as the argument.\n     * Whether the field is supported is determined by the field.\n     *\n     * @param {TemporalField} field  the field to check, null returns false\n     * @return {boolean} true if the field is supported on this year, false if not\n     */\n    isSupportedField(field) {\n        if (field instanceof ChronoField) {\n            return field === ChronoField.YEAR || field === ChronoField.YEAR_OF_ERA || field === ChronoField.ERA;\n        }\n        return field != null && field.isSupportedBy(this);\n    }\n\n    isSupportedUnit(unit) {\n        if (unit instanceof ChronoUnit) {\n            return unit === ChronoUnit.YEARS || unit === ChronoUnit.DECADES || unit === ChronoUnit.CENTURIES || unit === ChronoUnit.MILLENNIA || unit === ChronoUnit.ERAS;\n        }\n        return unit != null && unit.isSupportedBy(this);\n    }\n\n    /**\n     * Gets the range of valid values for the specified field.\n     *\n     * The range object expresses the minimum and maximum valid values for a field.\n     * This year is used to enhance the accuracy of the returned range.\n     * If it is not possible to return the range, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return\n     * appropriate range instances.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.rangeRefinedBy}\n     * passing `this` as the argument.\n     * Whether the range can be obtained is determined by the field.\n     *\n     * @param {TemporalField} field  the field to query the range for, not null\n     * @return {ValueRange} the range of valid values for the field, not null\n     * @throws DateTimeException if the range for the field cannot be obtained\n     */\n    range(field) {\n        if (this.isSupported(field)) {\n            return field.range();\n        } else if (field instanceof ChronoField) {\n            throw new UnsupportedTemporalTypeException(`Unsupported field: ${field}`);\n        }\n        return super.range(field);\n    }\n\n    /**\n     * Gets the value of the specified field from this year as an `int`.\n     *\n     * This queries this year for the value for the specified field.\n     * The returned value will always be within the valid range of values for the field.\n     * If it is not possible to return the value, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return valid\n     * values based on this year.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.getFrom}\n     * passing `this` as the argument. Whether the value can be obtained,\n     * and what the value represents, is determined by the field.\n     *\n     * @param {TemporalField} field  the field to get, not null\n     * @return {number} the value for the field\n     * @throws DateTimeException if a value for the field cannot be obtained\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    get(field) {\n        return this.range(field).checkValidIntValue(this.getLong(field), field);\n    }\n\n    /**\n     * Gets the value of the specified field from this year as a `long`.\n     *\n     * This queries this year for the value for the specified field.\n     * If it is not possible to return the value, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return valid\n     * values based on this year.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.getFrom}\n     * passing `this` as the argument. Whether the value can be obtained,\n     * and what the value represents, is determined by the field.\n     *\n     * @param {TemporalField} field  the field to get, not null\n     * @return {number} the value for the field\n     * @throws DateTimeException if a value for the field cannot be obtained\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    getLong(field) {\n        requireNonNull(field, 'field');\n        if (field instanceof ChronoField) {\n            switch (field) {\n                case ChronoField.YEAR_OF_ERA: return (this._year < 1 ? 1 - this._year : this._year);\n                case ChronoField.YEAR: return this._year;\n                case ChronoField.ERA: return (this._year < 1 ? 0 : 1);\n            }\n            throw new UnsupportedTemporalTypeException(`Unsupported field: ${field}`);\n        }\n        return field.getFrom(this);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Checks if the year is a leap year, according to the ISO proleptic\n     * calendar system rules.\n     *\n     * This method applies the current rules for leap years across the whole time-line.\n     * In general, a year is a leap year if it is divisible by four without\n     * remainder. However, years divisible by 100, are not leap years, with\n     * the exception of years divisible by 400 which are.\n     *\n     * For example, 1904 is a leap year it is divisible by 4.\n     * 1900 was not a leap year as it is divisible by 100, however 2000 was a\n     * leap year as it is divisible by 400.\n     *\n     * The calculation is proleptic - applying the same rules into the far future and far past.\n     * This is historically inaccurate, but is correct for the ISO-8601 standard.\n     *\n     * @return {boolean} true if the year is leap, false otherwise\n     */\n    isLeap() {\n        return Year.isLeap(this._year);\n    }\n\n    //-----------------------------------------------------------------------\n\n    /**\n     * Returns a copy of this year with the specified field set to a new value.\n     *\n     * This returns a new {@link Year}, based on this one, with the value\n     * for the specified field changed.\n     * If it is not possible to set the value, because the field is not supported or for\n     * some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the adjustment is implemented here.\n     * The supported fields behave as follows:\n     *\n     * * {@link YEAR_OF_ERA} -\n     *   Returns a {@link Year} with the specified year-of-era\n     *   The era will be unchanged.\n     * * {@link YEAR} -\n     *   Returns a {@link Year} with the specified year.\n     *   This completely replaces the date and is equivalent to {@link of}.\n     * * {@link ERA} -\n     *   Returns a {@link Year} with the specified era.\n     *   The year-of-era will be unchanged.\n     *\n     * In all cases, if the new value is outside the valid range of values for the field\n     * then a {@link DateTimeException} will be thrown.\n     *\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.adjustInto}\n     * passing `this` as the argument. In this case, the field determines\n     * whether and how to adjust the instant.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {TemporalField} field  the field to set in the result, not null\n     * @param {number} newValue  the new value of the field in the result\n     * @returns {Year} based on `this` with the specified field set, not null\n     * @throws DateTimeException if the field cannot be set\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    _withField(field, newValue) {\n        requireNonNull(field, 'field');\n        requireInstance(field, TemporalField, 'field');\n        if (field instanceof ChronoField) {\n            field.checkValidValue(newValue);\n            switch (field) {\n                case ChronoField.YEAR_OF_ERA:\n                    return Year.of((this._year < 1 ? 1 - newValue : newValue));\n                case ChronoField.YEAR:\n                    return Year.of(newValue);\n                case ChronoField.ERA:\n                    return (this.getLong(ChronoField.ERA) === newValue ? this : Year.of(1 - this._year));\n            }\n            throw new UnsupportedTemporalTypeException(`Unsupported field: ${field}`);\n        }\n        return field.adjustInto(this, newValue);\n    }\n\n    /**\n     * @param {number} amountToAdd\n     * @param {TemporalUnit} unit\n     * @return {Year} based on this year with the addition made, not null\n     * @throws DateTimeException if the addition cannot be made\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    _plusUnit(amountToAdd, unit) {\n        requireNonNull(amountToAdd, 'amountToAdd');\n        requireNonNull(unit, 'unit');\n        requireInstance(unit, TemporalUnit, 'unit');\n        if (unit instanceof ChronoUnit) {\n            switch (unit) {\n                case ChronoUnit.YEARS: return this.plusYears(amountToAdd);\n                case ChronoUnit.DECADES: return this.plusYears(MathUtil.safeMultiply(amountToAdd, 10));\n                case ChronoUnit.CENTURIES: return this.plusYears(MathUtil.safeMultiply(amountToAdd, 100));\n                case ChronoUnit.MILLENNIA: return this.plusYears(MathUtil.safeMultiply(amountToAdd, 1000));\n                case ChronoUnit.ERAS: return this.with(ChronoField.ERA, MathUtil.safeAdd(this.getLong(ChronoField.ERA), amountToAdd));\n            }\n            throw new UnsupportedTemporalTypeException(`Unsupported unit: ${unit}`);\n        }\n        return unit.addTo(this, amountToAdd);\n    }\n\n    /**\n     * Returns a copy of this year with the specified number of years added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} yearsToAdd  the years to add, may be negative\n     * @return {Year} based on this year with the period added, not null\n     * @throws DateTimeException if the result exceeds the supported year range\n     */\n    plusYears(yearsToAdd) {\n        if (yearsToAdd === 0) {\n            return this;\n        }\n        return Year.of(ChronoField.YEAR.checkValidIntValue(MathUtil.safeAdd(this._year, yearsToAdd)));\n    }\n\n    //-----------------------------------------------------------------------\n\n    /**\n     * Returns a copy of this year with the specified number of years subtracted.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} yearsToSubtract  the years to subtract, may be negative\n     * @return {Year} based on this year with the period subtracted, not null\n     * @throws DateTimeException if the result exceeds the supported year range\n     */\n    minusYears(yearsToSubtract) {\n        return (yearsToSubtract === MathUtil.MIN_SAFE_INTEGER ? this.plusYears(MathUtil.MAX_SAFE_INTEGER).plusYears(1) : this.plusYears(-yearsToSubtract));\n    }\n\n    /**\n     * Adjusts the specified temporal object to have this year.\n     *\n     * This returns a temporal object of the same observable type as the input\n     * with the year changed to be the same as this.\n     *\n     * The adjustment is equivalent to using {@link Temporal#with}\n     * passing {@link ChronoField#YEAR} as the field.\n     * If the specified temporal object does not use the ISO calendar system then\n     * a {@link DateTimeException} is thrown.\n     *\n     * In most cases, it is clearer to reverse the calling pattern by using\n     * {@link Temporal#with}:\n     * <pre>\n     *   // these two lines are equivalent, but the second approach is recommended\n     *   temporal = thisYear.adjustInto(temporal);\n     *   temporal = temporal.with(thisYear);\n     * </pre>\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Temporal} temporal  the target object to be adjusted, not null\n     * @return {Temporal} the adjusted object, not null\n     * @throws DateTimeException if unable to make the adjustment\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    adjustInto(temporal) {\n        requireNonNull(temporal, 'temporal');\n        /* TODO: only IsoChronology for now\n         if (Chronology.from(temporal).equals(IsoChronology.INSTANCE) == false) {\n         throw new DateTimeException(\"Adjustment only supported on ISO date-time\");\n         }*/\n        return temporal.with(ChronoField.YEAR, this._year);\n    }\n\n    /**\n     * Checks if the month-day is valid for this year.\n     *\n     * This method checks whether this year and the input month and day form\n     * a valid date.\n     *\n     * @param {MonthDay} monthDay  the month-day to validate, null returns false\n     * @return {boolean} true if the month and day are valid for this year\n     */\n    isValidMonthDay(monthDay) {\n        return monthDay != null && monthDay.isValidYear(this._year);\n    }\n\n    /**\n     * Gets the length of this year in days.\n     *\n     * @return {number} the length of this year in days, 365 or 366\n     */\n    length() {\n        return this.isLeap() ? 366 : 365;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Combines this year with a day-of-year to create a {@link LocalDate}.\n     *\n     * This returns a {@link LocalDate} formed from this year and the specified day-of-year.\n     *\n     * The day-of-year value 366 is only valid in a leap year.\n     *\n     * @param {number} dayOfYear  the day-of-year to use, not null\n     * @return {LocalDate} the local date formed from this year and the specified date of year, not null\n     * @throws DateTimeException if the day of year is zero or less, 366 or greater or equal\n     *  to 366 and this is not a leap year\n     */\n    atDay(dayOfYear) {\n        return LocalDate.ofYearDay(this._year, dayOfYear);\n    }\n\n    /**\n     * function overloading for {@link Year.atMonth}\n     *\n     * if called with 1 arguments and first argument is instance of Month, then {@link Year.atMonthMonth} is executed.\n     *\n     * Otherwise {@link Year.atMonthNumber} is executed.\n     *\n     * @param {Month|number} monthOrNumber\n     * @returns {YearMonth}\n     */\n    atMonth(monthOrNumber) {\n        if (arguments.length === 1 && monthOrNumber instanceof Month) {\n            return this.atMonthMonth(monthOrNumber);\n        } else {\n            return this.atMonthNumber(monthOrNumber);\n        }\n    }\n\n    /**\n     * Combines this year with a month to create a {@link YearMonth}.\n     *\n     * This returns a {@link YearMonth} formed from this year and the specified month.\n     * All possible combinations of year and month are valid.\n     *\n     * This method can be used as part of a chain to produce a date:\n     * <pre>\n     *  LocalDate date = year.atMonth(month).atDay(day);\n     * </pre>\n     *\n     * @param {Month} month  the month-of-year to use, not null\n     * @return {YearMonth} the year-month formed from this year and the specified month, not null\n     */\n    atMonthMonth(month) {\n        requireNonNull(month, 'month');\n        requireInstance(month, Month, 'month');\n        return YearMonth.of(this._year, month);\n    }\n\n    /**\n     * Combines this year with a month to create a {@link YearMonth}.\n     *\n     * This returns a {@link YearMonth} formed from this year and the specified month.\n     * All possible combinations of year and month are valid.\n     *\n     * This method can be used as part of a chain to produce a date:\n     * <pre>\n     *  LocalDate date = year.atMonth(month).atDay(day);\n     * </pre>\n     *\n     * @param {number} month  the month-of-year to use, from 1 (January) to 12 (December)\n     * @return {YearMonth} the year-month formed from this year and the specified month, not null\n     * @throws DateTimeException if the month is invalid\n     */\n    atMonthNumber(month) {\n        requireNonNull(month, 'month');\n        return YearMonth.of(this._year, month);\n    }\n\n    /**\n     * Combines this year with a month-day to create a {@link LocalDate}.\n     *\n     * This returns a {@link LocalDate} formed from this year and the specified month-day.\n     *\n     * A month-day of February 29th will be adjusted to February 28th in the resulting\n     * date if the year is not a leap year.\n     *\n     * @param {MonthDay} monthDay  the month-day to use, not null\n     * @return {LocalDate} the local date formed from this year and the specified month-day, not null\n     */\n    atMonthDay(monthDay) {\n        requireNonNull(monthDay, 'monthDay');\n        requireInstance(monthDay, MonthDay, 'monthDay');\n        return monthDay.atYear(this._year);\n    }\n\n\n    //-----------------------------------------------------------------------\n    /**\n     * Queries this year using the specified query.\n     *\n     * This queries this year using the specified query strategy object.\n     * The {@link TemporalQuery} object defines the logic to be used to\n     * obtain the result. Read the documentation of the query to understand\n     * what the result of this method will be.\n     *\n     * The result of this method is obtained by invoking the\n     * {@link TemporalQuery#queryFrom} method on the\n     * specified query passing `this` as the argument.\n     *\n     * @param {TemporalQuery} query  the query to invoke, not null\n     * @return {*} the query result, null may be returned (defined by the query)\n     * @throws DateTimeException if unable to query (defined by the query)\n     * @throws ArithmeticException if numeric overflow occurs (defined by the query)\n     */\n    query(query) {\n        requireNonNull(query, 'query()');\n        requireInstance(query, TemporalQuery, 'query()');\n        if (query === TemporalQueries.chronology()) {\n            return IsoChronology.INSTANCE;\n        } else if (query === TemporalQueries.precision()) {\n            return ChronoUnit.YEARS;\n        } else if (query === TemporalQueries.localDate() || query === TemporalQueries.localTime() ||\n                query === TemporalQueries.zone() || query === TemporalQueries.zoneId() || query === TemporalQueries.offset()) {\n            return null;\n        }\n        return super.query(query);\n    }\n    //-----------------------------------------------------------------------\n    /**\n     * Compares this year to another year.\n     *\n     * The comparison is based on the value of the year.\n     * It is \"consistent with equals\", as defined by {@link Comparable}.\n     *\n     * @param {Year} other  the other year to compare to, not null\n     * @return {number} the comparator value, negative if less, positive if greater\n     */\n    compareTo(other) {\n        requireNonNull(other, 'other');\n        requireInstance(other, Year, 'other');\n        return this._year - other._year;\n    }\n\n    /**\n     * Is this year after the specified year.\n     *\n     * @param {Year} other  the other year to compare to, not null\n     * @return {boolean} true if this is after the specified year\n     */\n    isAfter(other) {\n        requireNonNull(other, 'other');\n        requireInstance(other, Year, 'other');\n        return this._year > other._year;\n    }\n\n    /**\n     * Is this year before the specified year.\n     *\n     * @param {Year} other  the other year to compare to, not null\n     * @return {boolean} true if this point is before the specified year\n     */\n    isBefore(other) {\n        requireNonNull(other, 'other');\n        requireInstance(other, Year, 'other');\n        return this._year < other._year;\n    }\n    /**\n     * Outputs this year as a string using the formatter.\n     *\n     * @param {DateTimeFormatter} formatter  the formatter to use, not null\n     * @return {String} the formatted year string, not null\n     * @throws DateTimeException if an error occurs during printing\n     */\n    format(formatter) {\n        requireNonNull(formatter, 'formatter');\n        requireInstance(formatter, DateTimeFormatter, 'formatter');\n        return formatter.format(this);\n    }\n\n    /**\n     * Checks if this year is equal to the specified {@link Year}.\n     *\n     * The comparison is based on the value\n     *\n     * @param {*} other - the other year, null returns false\n     * @return {boolean} true if the other duration is equal to this one\n     */\n    equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof Year) {\n            return this.value() === other.value();\n        }\n        return false;\n    }\n    /**\n     * Outputs this year as a string.\n     *\n     * @return {String} a string representation of this year, not null\n     */\n    toString() {\n        return `${this._year}`;\n    }\n\n    /**\n     * toJSON() use by JSON.stringify\n     * delegates to toString()\n     *\n     * @return {string}\n     */\n    toJSON() {\n        return this.toString();\n    }\n\n    /**\n     * Calculates the amount of time until another temporal in terms of the specified unit.\n     * This calculates the amount of time between two temporal objects in terms of a single {@link TemporalUnit}. The start and end points are this and the specified temporal. The end point is converted to be of the same type as the start point if different. The result will be negative if the end is before the start. For example, the amount in hours between two temporal objects can be calculated using `startTime.until(endTime, HOURS)`.\n     *\n     * The calculation returns a whole number, representing the number of complete units between the two temporals. For example, the amount in hours between the times 11:30 and 13:29 will only be one hour as it is one minute short of two hours.\n     *\n     * There are two equivalent ways of using this method. The first is to invoke this method directly. The second is to use `TemporalUnit.between(Temporal, Temporal)`:\n     *\n     * <pre>\n     *    // these two lines are equivalent\n     *    temporal = start.until(end, unit);\n     *    temporal = unit.between(start, end);\n     * </pre>\n     *\n     * The choice should be made based on which makes the code more readable.\n     * For example, this method allows the number of days between two dates to be calculated:\n     *\n     * <pre>\n     *   daysBetween = start.until(end, DAYS);\n     *   // or alternatively\n     *   daysBetween = DAYS.between(start, end);\n     * </pre>\n     *\n     * ### Implementation Requirements:\n     * Implementations must begin by checking to ensure that the input temporal object is of the same observable type as the implementation. They must then perform the calculation for all instances of {@link ChronoUnit}. An {@link UnsupportedTemporalTypeException} must be thrown for {@link ChronoUnit} instances that are unsupported.\n     * If the unit is not a {@link ChronoUnit}, then the result of this method is obtained by invoking `TemporalUnit.between(Temporal, Temporal)` passing this as the first argument and the converted input temporal as the second argument.\n     *\n     * In summary, implementations must behave in a manner equivalent to this pseudo-code:\n     *\n     * <pre>\n     *   // convert the end temporal to the same type as this class\n     *   if (unit instanceof ChronoUnit) {\n     *     // if unit is supported, then calculate and return result\n     *     // else throw UnsupportedTemporalTypeException for unsupported units\n     *   }\n     *   return unit.between(this, convertedEndTemporal);\n     * </pre>\n     *\n     * Note that the unit's between method must only be invoked if the two temporal objects have exactly the same type evaluated by `getClass()`.\n     *\n     * Implementations must ensure that no observable state is altered when this read-only method is invoked.\n     *\n     * @param {Temporal} endExclusive - the end temporal, exclusive, converted to be of the same type as this object, not null\n     * @param {TemporalUnit} unit - the unit to measure the amount in, not null\n     * @return {number} the amount of time between this temporal object and the specified one in terms of the unit; positive if the specified object is later than this one, negative if it is earlier than this one\n     * @throws DateTimeException - if the amount cannot be calculated, or the end temporal cannot be converted to the same type as this temporal\n     * @throws UnsupportedTemporalTypeException - if the unit is not supported\n     * @throws ArithmeticException - if numeric overflow occurs\n     */\n    until(endExclusive, unit) {\n        const end = Year.from(endExclusive);\n\n        if (unit instanceof ChronoUnit) {\n            const yearsUntil = end.value() - this.value();\n            switch (unit) {\n                case ChronoUnit.YEARS:\n                    return yearsUntil;\n                case ChronoUnit.DECADES:\n                    return MathUtil.intDiv(yearsUntil, 10);\n                case ChronoUnit.CENTURIES:\n                    return MathUtil.intDiv(yearsUntil, 100);\n                case ChronoUnit.MILLENNIA:\n                    return MathUtil.intDiv(yearsUntil, 1000);\n                case ChronoUnit.ERAS:\n                    return end.getLong(ChronoField.ERA) - this.getLong(ChronoField.ERA);\n            }\n            throw new UnsupportedTemporalTypeException(`Unsupported unit: ${unit}`);\n        }\n        return unit.between(this, end);\n    }\n}\n\nlet PARSER;\n\nexport function _init() {\n\n    Year.MIN_VALUE = YearConstants.MIN_VALUE;\n    Year.MAX_VALUE = YearConstants.MAX_VALUE;\n\n    PARSER = new DateTimeFormatterBuilder()\n        .appendValue(ChronoField.YEAR, 4, 10, SignStyle.EXCEEDS_PAD)\n        .toFormatter();\n\n    Year.FROM = createTemporalQuery('Year.FROM', (temporal) => {\n        return Year.from(temporal);\n    });\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter, Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { DateTimeException } from '../errors';\n\nexport class ZoneRulesProvider {\n    /**\n     * Gets the rules for the zone ID.\n     *\n     * This returns the latest available rules for the zone ID.\n     *\n     * This method relies on time-zone data provider files that are configured.\n     *\n     * @param {string} zoneId\n     * @return {ZoneRules}\n     */\n    static getRules(zoneId){\n        throw new DateTimeException(`unsupported ZoneId:${zoneId}`);\n    }\n\n\n    /**\n     * Gets the set of available zone IDs.\n     *\n     * These zone IDs are loaded and available for use by {@link ZoneId}.\n     *\n     * @return {string[]} a modifiable copy of the set of zone IDs, not null\n     */\n    static getAvailableZoneIds(){\n        return [];\n    }\n}\n\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\n\nimport { ZoneId } from './ZoneId';\nimport { ZoneRulesProvider } from './zone/ZoneRulesProvider';\n\n/**\n * A geographical region where the same time-zone rules apply.\n *\n * Time-zone information is categorized as a set of rules defining when and\n * how the offset from UTC/Greenwich changes. These rules are accessed using\n * identifiers based on geographical regions, such as countries or states.\n * The most common region classification is the Time Zone Database (TZDB),\n * which defines regions such as 'Europe/Paris' and 'Asia/Tokyo'.\n *\n * The region identifier, modeled by this class, is distinct from the\n * underlying rules, modeled by {@link ZoneRules}.\n * The rules are defined by governments and change frequently.\n * By contrast, the region identifier is well-defined and long-lived.\n * This separation also allows rules to be shared between regions if appropriate.\n *\n * ### Specification for implementors\n *\n * This class is immutable and thread-safe.\n */\nexport class ZoneRegion extends ZoneId {\n    /**\n     * @param {string} zoneId\n     * @return {ZoneId}\n     */\n    static ofId(zoneId){\n        const rules = ZoneRulesProvider.getRules(zoneId);\n        return new ZoneRegion(zoneId, rules);\n    }\n\n    //-------------------------------------------------------------------------\n    /**\n     * Constructor.\n     *\n     * @param {string} id  the time-zone ID, not null\n     * @param {ZoneRules} rules  the rules, null for lazy lookup\n     * @private\n     */\n    constructor(id, rules) {\n        super();\n        this._id = id;\n        this._rules = rules;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     *\n     * @returns {string}\n     */\n    id() {\n        return this._id;\n    }\n\n    /**\n     *\n     * @returns {ZoneRules}\n     */\n    rules() {\n        return this._rules;\n    }\n\n}\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { ZoneOffset } from '../../ZoneOffset';\nimport { ZoneId } from '../../ZoneId';\nimport { ZoneRegion } from '../../ZoneRegion';\n\nimport { ChronoField } from '../../temporal/ChronoField';\n\nimport { ZoneRulesProvider } from '../../zone/ZoneRulesProvider';\n\nimport { OffsetIdPrinterParser } from './OffsetIdPrinterParser';\n\n/**\n * Prints or parses a zone ID.\n * @private\n */\nexport class ZoneIdPrinterParser {\n\n    /**\n     *\n     * @param {TemporalQuery} query\n     * @param {string} description\n     */\n    constructor(query, description) {\n        this.query = query;\n        this.description = description;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     *\n     * @param {DateTimePrintContext } context\n     * @param {StringBuilder} buf\n     * @returns {boolean}\n     */\n    print(context, buf) {\n        const zone = context.getValueQuery(this.query);\n        if (zone == null) {\n            return false;\n        }\n        buf.append(zone.id());\n        return true;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * This implementation looks for the longest matching string.\n     * For example, parsing Etc/GMT-2 will return Etc/GMC-2 rather than just\n     * Etc/GMC although both are valid.\n     *\n     * This implementation uses a tree to search for valid time-zone names in\n     * the parseText. The top level node of the tree has a length equal to the\n     * length of the shortest time-zone as well as the beginning characters of\n     * all other time-zones.\n     *\n     * @param {DateTimeParseContext} context\n     * @param {String} text\n     * @param {number} position\n     * @return {number}\n     */\n    parse(context, text, position) {\n        const length = text.length;\n        if (position > length) {\n            return ~position;\n        }\n        if (position === length) {\n            return ~position;\n        }\n\n        // handle fixed time-zone IDs\n        const nextChar = text.charAt(position);\n        if (nextChar === '+' || nextChar === '-') {\n            const newContext = context.copy();\n            const endPos = OffsetIdPrinterParser.INSTANCE_ID.parse(newContext, text, position);\n            if (endPos < 0) {\n                return endPos;\n            }\n            const offset = newContext.getParsed(ChronoField.OFFSET_SECONDS);\n            const zone = ZoneOffset.ofTotalSeconds(offset);\n            context.setParsedZone(zone);\n            return endPos;\n        } else if (length >= position + 2) {\n            const nextNextChar = text.charAt(position + 1);\n            if (context.charEquals(nextChar, 'U') &&\n                context.charEquals(nextNextChar, 'T')) {\n                if (length >= position + 3 &&\n                    context.charEquals(text.charAt(position + 2), 'C')) {\n                    return this._parsePrefixedOffset(context, text, position, position + 3);\n                }\n                return this._parsePrefixedOffset(context, text, position, position + 2);\n            } else if (context.charEquals(nextChar, 'G') &&\n                length >= position + 3 &&\n                context.charEquals(nextNextChar, 'M') &&\n                context.charEquals(text.charAt(position + 2), 'T')) {\n                return this._parsePrefixedOffset(context, text, position, position + 3);\n            }\n        }\n        // javascript special case\n        if(text.substr(position, 6) === 'SYSTEM'){\n            context.setParsedZone(ZoneId.systemDefault());\n            return position + 6;\n        }\n\n        // ...\n        if (context.charEquals(nextChar, 'Z')) {\n            context.setParsedZone(ZoneOffset.UTC);\n            return position + 1;\n        }\n\n        const availableZoneIds = ZoneRulesProvider.getAvailableZoneIds();\n        if (zoneIdTree.size !== availableZoneIds.length) {\n            zoneIdTree = ZoneIdTree.createTreeMap(availableZoneIds);\n        }\n\n        const maxParseLength = length - position;\n        let treeMap = zoneIdTree.treeMap;\n        let parsedZoneId = null;\n        let parseLength = 0;\n        while(treeMap != null) {\n            const parsedSubZoneId = text.substr(position, Math.min(treeMap.length, maxParseLength));\n            treeMap = treeMap.get(parsedSubZoneId);\n            if (treeMap != null && treeMap.isLeaf) {\n                parsedZoneId = parsedSubZoneId;\n                parseLength = treeMap.length;\n            }\n        }\n        if (parsedZoneId != null) {\n            context.setParsedZone(ZoneRegion.ofId(parsedZoneId));\n            return position + parseLength;\n        }\n\n        return ~position;\n    }\n\n    /**\n     *\n     * @param {DateTimeParseContext} context\n     * @param {String} text\n     * @param {number} prefixPos\n     * @param {number} position\n     * @return {number}\n     */\n    _parsePrefixedOffset(context, text, prefixPos, position) {\n        const prefix = text.substring(prefixPos, position).toUpperCase();\n        const newContext = context.copy();\n        if (position < text.length && context.charEquals(text.charAt(position), 'Z')) {\n            context.setParsedZone(ZoneId.ofOffset(prefix, ZoneOffset.UTC));\n            return position;\n        }\n        const endPos = OffsetIdPrinterParser.INSTANCE_ID.parse(newContext, text, position);\n        if (endPos < 0) {\n            context.setParsedZone(ZoneId.ofOffset(prefix, ZoneOffset.UTC));\n            return position;\n        }\n        const offsetSecs = newContext.getParsed(ChronoField.OFFSET_SECONDS);\n        const offset = ZoneOffset.ofTotalSeconds(offsetSecs);\n        context.setParsedZone(ZoneId.ofOffset(prefix, offset));\n        return endPos;\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    toString() {\n        return this.description;\n    }\n}\n\nclass ZoneIdTree {\n\n    static createTreeMap(availableZoneIds) {\n        const sortedZoneIds =  availableZoneIds.sort((a, b) => a.length - b.length);\n        const treeMap = new ZoneIdTreeMap(sortedZoneIds[0].length, false);\n        for (let i=0; i<sortedZoneIds.length; i++){\n            treeMap.add(sortedZoneIds[i]);\n        }\n        return new ZoneIdTree(sortedZoneIds.length, treeMap);\n    }\n\n    constructor(size, treeMap) {\n        this.size = size;\n        this.treeMap = treeMap;\n    }\n}\n\nclass ZoneIdTreeMap {\n    constructor(length = 0, isLeaf = false){\n        this.length = length;\n        this.isLeaf = isLeaf;\n        this._treeMap = {};\n    }\n\n    add(zoneId){\n        const idLength = zoneId.length;\n        if(idLength === this.length) {\n            this._treeMap[zoneId] = new ZoneIdTreeMap(idLength, true);\n        } else if (idLength > this.length) {\n            const subZoneId = zoneId.substr(0, this.length);\n            let subTreeMap = this._treeMap[subZoneId];\n            if (subTreeMap == null) {\n                subTreeMap = new ZoneIdTreeMap(idLength, false);\n                this._treeMap[subZoneId] = subTreeMap;\n            }\n            subTreeMap.add(zoneId);\n        }\n    }\n\n    get(zoneId){\n        return this._treeMap[zoneId];\n    }\n}\n\nlet zoneIdTree = new ZoneIdTree([]);","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { assert, requireNonNull, requireInstance } from '../assert';\nimport { IllegalArgumentException, IllegalStateException } from '../errors';\nimport { MathUtil } from '../MathUtil';\n\nimport { LocalDate } from '../LocalDate';\nimport { LocalDateTime } from '../LocalDateTime';\nimport { ZoneOffset } from '../ZoneOffset';\nimport { ChronoLocalDate } from '../chrono/ChronoLocalDate';\nimport { ChronoField } from '../temporal/ChronoField';\nimport { IsoFields } from '../temporal/IsoFields';\nimport { TemporalQueries } from '../temporal/TemporalQueries';\n\nimport { DateTimeFormatter } from './DateTimeFormatter';\nimport { DecimalStyle } from './DecimalStyle';\nimport { SignStyle } from './SignStyle';\nimport { TextStyle } from './TextStyle';\nimport { ResolverStyle } from './ResolverStyle';\n\nimport { CharLiteralPrinterParser } from './parser/CharLiteralPrinterParser';\nimport { CompositePrinterParser } from './parser/CompositePrinterParser';\nimport { FractionPrinterParser } from './parser/FractionPrinterParser';\nimport { NumberPrinterParser, ReducedPrinterParser } from './parser/NumberPrinterParser';\nimport { OffsetIdPrinterParser } from './parser/OffsetIdPrinterParser';\nimport { PadPrinterParserDecorator } from './parser/PadPrinterParserDecorator';\nimport { SettingsParser } from './parser/SettingsParser';\nimport { StringLiteralPrinterParser } from './parser/StringLiteralPrinterParser';\nimport { ZoneIdPrinterParser } from './parser/ZoneIdPrinterParser';\n\nconst MAX_WIDTH = 15; // can't parse all numbers with more then 15 digits in javascript\n\nexport class DateTimeFormatterBuilder {\n\n    /**\n     * Constructs a new instance of the builder.\n     */\n    constructor() {\n        /**\n         * The currently active builder, used by the outermost builder.\n         */\n        this._active = this;\n        /**\n         * The parent builder, null for the outermost builder.\n         */\n        this._parent = null;\n\n        /**\n         * The list of printers that will be used.\n         */\n        this._printerParsers = [];\n\n        /**\n         * Whether this builder produces an optional formatter.\n         */\n        this._optional = false;\n        /**\n         * The width to pad the next field to.\n         */\n        this._padNextWidth = 0;\n\n        /**\n         * The character to pad the next field with.\n         */\n        this._padNextChar = null;\n\n        /**\n         * The index of the last variable width value parser.\n         */\n        this._valueParserIndex = -1;\n    }\n\n    /**\n     * Private static factory, replaces private threeten constructor\n     * Returns a new instance of the builder.\n     *\n     * @param {DateTimeFormatterBuilder} parent  the parent builder, not null\n     * @param {boolean} optional  whether the formatter is optional, not null\n     * @return {DateTimeFormatterBuilder} new instance\n     */\n    static _of(parent, optional){\n        requireNonNull(parent, 'parent');\n        requireNonNull(optional, 'optional');\n\n        const dtFormatterBuilder = new DateTimeFormatterBuilder();\n        dtFormatterBuilder._parent = parent;\n        dtFormatterBuilder._optional = optional;\n\n        return dtFormatterBuilder;\n    }\n\n    /**\n     * Changes the parse style to be case sensitive for the remainder of the formatter.\n     *\n     * Parsing can be case sensitive or insensitive - by default it is case sensitive.\n     * This method allows the case sensitivity setting of parsing to be changed.\n     *\n     * Calling this method changes the state of the builder such that all\n     * subsequent builder method calls will parse text in case sensitive mode.\n     * See {@link parseCaseInsensitive} for the opposite setting.\n     * The parse case sensitive/insensitive methods may be called at any point\n     * in the builder, thus the parser can swap between case parsing modes\n     * multiple times during the parse.\n     *\n     * Since the default is case sensitive, this method should only be used after\n     * a previous call to {@link parseCaseInsensitive}.\n     *\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     */\n    parseCaseSensitive() {\n        this._appendInternalPrinterParser(SettingsParser.SENSITIVE);\n        return this;\n    }\n\n    /**\n     * Changes the parse style to be case insensitive for the remainder of the formatter.\n     *\n     * Parsing can be case sensitive or insensitive - by default it is case sensitive.\n     * This method allows the case sensitivity setting of parsing to be changed.\n     *\n     * Calling this method changes the state of the builder such that all\n     * subsequent builder method calls will parse text in case sensitive mode.\n     * See {@link parseCaseSensitive} for the opposite setting.\n     * The parse case sensitive/insensitive methods may be called at any point\n     * in the builder, thus the parser can swap between case parsing modes\n     * multiple times during the parse.\n     *\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     */\n    parseCaseInsensitive() {\n        this._appendInternalPrinterParser(SettingsParser.INSENSITIVE);\n        return this;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Changes the parse style to be strict for the remainder of the formatter.\n     *\n     * Parsing can be strict or lenient - by default its strict.\n     * This controls the degree of flexibility in matching the text and sign styles.\n     *\n     * When used, this method changes the parsing to be strict from this point onwards.\n     * As strict is the default, this is normally only needed after calling {@link parseLenient}.\n     * The change will remain in force until the end of the formatter that is eventually\n     * constructed or until {@link parseLenient} is called.\n     *\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     */\n    parseStrict() {\n        this._appendInternalPrinterParser(SettingsParser.STRICT);\n        return this;\n    }\n\n    /**\n     * Changes the parse style to be lenient for the remainder of the formatter.\n     * Note that case sensitivity is set separately to this method.\n     *\n     * Parsing can be strict or lenient - by default its strict.\n     * This controls the degree of flexibility in matching the text and sign styles.\n     * Applications calling this method should typically also call {@link parseCaseInsensitive}.\n     *\n     * When used, this method changes the parsing to be strict from this point onwards.\n     * The change will remain in force until the end of the formatter that is eventually\n     * constructed or until {@link parseStrict} is called.\n     *\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     */\n    parseLenient() {\n        this._appendInternalPrinterParser(SettingsParser.LENIENT);\n        return this;\n    }\n\n    /**\n     * Appends a default value for a field to the formatter for use in parsing.\n     * <p>\n     * This appends an instruction to the builder to inject a default value\n     * into the parsed result. This is especially useful in conjunction with\n     * optional parts of the formatter.\n     * <p>\n     * For example, consider a formatter that parses the year, followed by\n     * an optional month, with a further optional day-of-month. Using such a\n     * formatter would require the calling code to check whether a full date,\n     * year-month or just a year had been parsed. This method can be used to\n     * default the month and day-of-month to a sensible value, such as the\n     * first of the month, allowing the calling code to always get a date.\n     * <p>\n     * During formatting, this method has no effect.\n     * <p>\n     * During parsing, the current state of the parse is inspected.\n     * If the specified field has no associated value, because it has not been\n     * parsed successfully at that point, then the specified value is injected\n     * into the parse result. Injection is immediate, thus the field-value pair\n     * will be visible to any subsequent elements in the formatter.\n     * As such, this method is normally called at the end of the builder.\n     *\n     * @param {TemporalField} field  the field to default the value of, not null\n     * @param {number} value  the value to default the field to\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     */\n    parseDefaulting(field, value) {\n        requireNonNull(field);\n        this._appendInternal(new DefaultingParser(field, value));\n        return this;\n    }\n\n    /**\n     * appendValue function overloading\n     */\n    appendValue(){\n        if(arguments.length === 1){\n            return this._appendValue1.apply(this, arguments);\n        } else if(arguments.length === 2){\n            return this._appendValue2.apply(this, arguments);\n        } else {\n            return this._appendValue4.apply(this, arguments);\n        }\n    }\n\n    /**\n     * Appends the value of a date-time field to the formatter using a normal\n     * output style.\n     *\n     * The value of the field will be output during a print.\n     * If the value cannot be obtained then an exception will be thrown.\n     *\n     * The value will be printed as per the normal print of an integer value.\n     * Only negative numbers will be signed. No padding will be added.\n     *\n     * The parser for a variable width value such as this normally behaves greedily,\n     * requiring one digit, but accepting as many digits as possible.\n     * This behavior can be affected by 'adjacent value parsing'.\n     * See {@link appendValue} for full details.\n     *\n     * @param field  the field to append, not null\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     */\n    _appendValue1(field) {\n        requireNonNull(field);\n        this._appendValuePrinterParser(new NumberPrinterParser(field, 1, MAX_WIDTH, SignStyle.NORMAL));\n        return this;\n    }\n\n    /**\n     * Appends the value of a date-time field to the formatter using a fixed\n     * width, zero-padded approach.\n     *\n     * The value of the field will be output during a print.\n     * If the value cannot be obtained then an exception will be thrown.\n     *\n     * The value will be zero-padded on the left. If the size of the value\n     * means that it cannot be printed within the width then an exception is thrown.\n     * If the value of the field is negative then an exception is thrown during printing.\n     *\n     * This method supports a special technique of parsing known as 'adjacent value parsing'.\n     * This technique solves the problem where a variable length value is followed by one or more\n     * fixed length values. The standard parser is greedy, and thus it would normally\n     * steal the digits that are needed by the fixed width value parsers that follow the\n     * variable width one.\n     *\n     * No action is required to initiate 'adjacent value parsing'.\n     * When a call to {@link appendValue} with a variable width is made, the builder\n     * enters adjacent value parsing setup mode. If the immediately subsequent method\n     * call or calls on the same builder are to this method, then the parser will reserve\n     * space so that the fixed width values can be parsed.\n     *\n     * For example, consider `builder.appendValue(YEAR).appendValue(MONTH_OF_YEAR, 2)`.\n     * The year is a variable width parse of between 1 and 19 digits.\n     * The month is a fixed width parse of 2 digits.\n     * Because these were appended to the same builder immediately after one another,\n     * the year parser will reserve two digits for the month to parse.\n     * Thus, the text '201106' will correctly parse to a year of 2011 and a month of 6.\n     * Without adjacent value parsing, the year would greedily parse all six digits and leave\n     * nothing for the month.\n     *\n     * Adjacent value parsing applies to each set of fixed width not-negative values in the parser\n     * that immediately follow any kind of variable width value.\n     * Calling any other append method will end the setup of adjacent value parsing.\n     * Thus, in the unlikely event that you need to avoid adjacent value parsing behavior,\n     * simply add the `appendValue` to another {@link DateTimeFormatterBuilder}\n     * and add that to this builder.\n     *\n     * If adjacent parsing is active, then parsing must match exactly the specified\n     * number of digits in both strict and lenient modes.\n     * In addition, no positive or negative sign is permitted.\n     *\n     * @param field  the field to append, not null\n     * @param width  the width of the printed field, from 1 to 19\n     * @return this, for chaining, not null\n     * @throws IllegalArgumentException if the width is invalid\n     */\n    _appendValue2(field, width) {\n        requireNonNull(field);\n        if (width < 1 || width > MAX_WIDTH) {\n            throw new IllegalArgumentException(`The width must be from 1 to ${MAX_WIDTH} inclusive but was ${width}`);\n        }\n        const pp = new NumberPrinterParser(field, width, width, SignStyle.NOT_NEGATIVE);\n        this._appendValuePrinterParser(pp);\n        return this;\n    }\n\n    /**\n     * Appends the value of a date-time field to the formatter providing full\n     * control over printing.\n     *\n     * The value of the field will be output during a print.\n     * If the value cannot be obtained then an exception will be thrown.\n     *\n     * This method provides full control of the numeric formatting, including\n     * zero-padding and the positive/negative sign.\n     *\n     * The parser for a variable width value such as this normally behaves greedily,\n     * accepting as many digits as possible.\n     * This behavior can be affected by 'adjacent value parsing'.\n     * See {@link appendValue} for full details.\n     *\n     * In strict parsing mode, the minimum number of parsed digits is `minWidth`.\n     * In lenient parsing mode, the minimum number of parsed digits is one.\n     *\n     * If this method is invoked with equal minimum and maximum widths and a sign style of\n     * `NOT_NEGATIVE` then it delegates to `appendValue(TemporalField, int)`.\n     * In this scenario, the printing and parsing behavior described there occur.\n     *\n     * @param field  the field to append, not null\n     * @param minWidth  the minimum field width of the printed field, from 1 to 19\n     * @param maxWidth  the maximum field width of the printed field, from 1 to 19\n     * @param signStyle  the positive/negative output style, not null\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     * @throws IllegalArgumentException if the widths are invalid\n     */\n    _appendValue4(field, minWidth, maxWidth, signStyle) {\n        requireNonNull(field);\n        requireNonNull(signStyle);\n        if (minWidth === maxWidth && signStyle === SignStyle.NOT_NEGATIVE) {\n            return this._appendValue2(field, maxWidth);\n        }\n        if (minWidth < 1 || minWidth > MAX_WIDTH) {\n            throw new IllegalArgumentException(`The minimum width must be from 1 to ${MAX_WIDTH} inclusive but was ${minWidth}`);\n        }\n        if (maxWidth < 1 || maxWidth > MAX_WIDTH) {\n            throw new IllegalArgumentException(`The minimum width must be from 1 to ${MAX_WIDTH} inclusive but was ${maxWidth}`);\n        }\n        if (maxWidth < minWidth) {\n            throw new IllegalArgumentException(`The maximum width must exceed or equal the minimum width but ${maxWidth} < ${minWidth}`);\n        }\n        const pp = new NumberPrinterParser(field, minWidth, maxWidth, signStyle);\n        this._appendValuePrinterParser(pp);\n        return this;\n    }\n\n    /**\n     * appendValueReduced function overloading\n     */\n    appendValueReduced() {\n        if (arguments.length === 4 && arguments[3] instanceof ChronoLocalDate) {\n            return this._appendValueReducedFieldWidthMaxWidthBaseDate.apply(this, arguments);\n        } else {\n            return this._appendValueReducedFieldWidthMaxWidthBaseValue.apply(this, arguments);\n        }\n    }\n\n    /**\n     * Appends the reduced value of a date-time field to the formatter.\n     *\n     * Since fields such as year vary by chronology, it is recommended to use the\n     * {@link appendValueReduced} date}\n     * variant of this method in most cases. This variant is suitable for\n     * simple fields or working with only the ISO chronology.\n     *\n     * For formatting, the `width` and `maxWidth` are used to\n     * determine the number of characters to format.\n     * If they are equal then the format is fixed width.\n     * If the value of the field is within the range of the `baseValue` using\n     * `width` characters then the reduced value is formatted otherwise the value is\n     * truncated to fit `maxWidth`.\n     * The rightmost characters are output to match the width, left padding with zero.\n     *\n     * For strict parsing, the number of characters allowed by `width` to `maxWidth` are parsed.\n     * For lenient parsing, the number of characters must be at least 1 and less than 10.\n     * If the number of digits parsed is equal to `width` and the value is positive,\n     * the value of the field is computed to be the first number greater than\n     * or equal to the `baseValue` with the same least significant characters,\n     * otherwise the value parsed is the field value.\n     * This allows a reduced value to be entered for values in range of the baseValue\n     * and width and absolute values can be entered for values outside the range.\n     *\n     * For example, a base value of `1980` and a width of `2` will have\n     * valid values from `1980` to `2079`.\n     * During parsing, the text `\"12\"` will result in the value `2012` as that\n     * is the value within the range where the last two characters are \"12\".\n     * By contrast, parsing the text `\"1915\"` will result in the value `1915`.\n     *\n     * @param {TemporalField} field  the field to append, not null\n     * @param {number} width  the field width of the printed and parsed field, from 1 to 10\n     * @param {number} maxWidth  the maximum field width of the printed field, from 1 to 10\n     * @param {number} baseValue  the base value of the range of valid values\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     * @throws IllegalArgumentException if the width or base value is invalid\n     */\n    _appendValueReducedFieldWidthMaxWidthBaseValue(field, width, maxWidth, baseValue) {\n        requireNonNull(field, 'field');\n        const pp = new ReducedPrinterParser(field, width, maxWidth, baseValue, null);\n        this._appendValuePrinterParser(pp);\n        return this;\n    }\n\n    /**\n     * Appends the reduced value of a date-time field to the formatter.\n     *\n     * This is typically used for formatting and parsing a two digit year.\n     *\n     * The base date is used to calculate the full value during parsing.\n     * For example, if the base date is 1950-01-01 then parsed values for\n     * a two digit year parse will be in the range 1950-01-01 to 2049-12-31.\n     * Only the year would be extracted from the date, thus a base date of\n     * 1950-08-25 would also parse to the range 1950-01-01 to 2049-12-31.\n     * This behavior is necessary to support fields such as week-based-year\n     * or other calendar systems where the parsed value does not align with\n     * standard ISO years.\n     *\n     * The exact behavior is as follows. Parse the full set of fields and\n     * determine the effective chronology using the last chronology if\n     * it appears more than once. Then convert the base date to the\n     * effective chronology. Then extract the specified field from the\n     * chronology-specific base date and use it to determine the\n     * `baseValue` used below.\n     *\n     * For formatting, the `width` and `maxWidth` are used to\n     * determine the number of characters to format.\n     * If they are equal then the format is fixed width.\n     * If the value of the field is within the range of the `baseValue` using\n     * `width` characters then the reduced value is formatted otherwise the value is\n     * truncated to fit `maxWidth`.\n     * The rightmost characters are output to match the width, left padding with zero.\n     *\n     * For strict parsing, the number of characters allowed by `width` to `maxWidth` are parsed.\n     * For lenient parsing, the number of characters must be at least 1 and less than 10.\n     * If the number of digits parsed is equal to `width` and the value is positive,\n     * the value of the field is computed to be the first number greater than\n     * or equal to the `baseValue` with the same least significant characters,\n     * otherwise the value parsed is the field value.\n     * This allows a reduced value to be entered for values in range of the baseValue\n     * and width and absolute values can be entered for values outside the range.\n     *\n     * For example, a base value of `1980` and a width of `2` will have\n     * valid values from `1980` to `2079`.\n     * During parsing, the text `\"12\"` will result in the value `2012` as that\n     * is the value within the range where the last two characters are \"12\".\n     * By contrast, parsing the text `\"1915\"` will result in the value `1915`.\n     *\n     * @param {TemporalField} field  the field to append, not null\n     * @param {number} width  the field width of the printed and parsed field, from 1 to 10\n     * @param {number} maxWidth  the maximum field width of the printed field, from 1 to 10\n     * @param {ChronoLocalDate} baseDate  the base date used to calculate the base value for the range\n     *  of valid values in the parsed chronology, not null\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     * @throws IllegalArgumentException if the width or base value is invalid\n     */\n    _appendValueReducedFieldWidthMaxWidthBaseDate(field, width, maxWidth, baseDate) {\n        requireNonNull(field, 'field');\n        requireNonNull(baseDate, 'baseDate');\n        requireInstance(baseDate, ChronoLocalDate, 'baseDate');\n        const pp = new ReducedPrinterParser(field, width, maxWidth, 0, baseDate);\n        this._appendValuePrinterParser(pp);\n        return this;\n    }\n\n    /**\n     * Appends a fixed width printer-parser.\n     *\n     * @param pp  the printer-parser, not null\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     */\n    _appendValuePrinterParser(pp) {\n        assert(pp != null);\n        if (this._active._valueParserIndex >= 0 &&\n                this._active._printerParsers[this._active._valueParserIndex] instanceof NumberPrinterParser) {\n            const activeValueParser = this._active._valueParserIndex;\n\n            // adjacent parsing mode, update setting in previous parsers\n            let basePP = this._active._printerParsers[activeValueParser];\n            if (pp.minWidth() === pp.maxWidth() && pp.signStyle() === SignStyle.NOT_NEGATIVE) {\n                // Append the width to the subsequentWidth of the active parser\n                basePP = basePP.withSubsequentWidth(pp.maxWidth());\n                // Append the new parser as a fixed width\n                this._appendInternal(pp.withFixedWidth());\n                // Retain the previous active parser\n                this._active._valueParserIndex = activeValueParser;\n            } else {\n                // Modify the active parser to be fixed width\n                basePP = basePP.withFixedWidth();\n                // The new parser becomes the mew active parser\n                this._active._valueParserIndex = this._appendInternal(pp);\n            }\n            // Replace the modified parser with the updated one\n            this._active._printerParsers[activeValueParser] = basePP;\n        } else {\n            // The new Parser becomes the active parser\n            this._active._valueParserIndex = this._appendInternal(pp);\n        }\n        return this;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Appends the fractional value of a date-time field to the formatter.\n     *\n     * The fractional value of the field will be output including the\n     * preceding decimal point. The preceding value is not output.\n     * For example, the second-of-minute value of 15 would be output as `.25`.\n     *\n     * The width of the printed fraction can be controlled. Setting the\n     * minimum width to zero will cause no output to be generated.\n     * The printed fraction will have the minimum width necessary between\n     * the minimum and maximum widths - trailing zeroes are omitted.\n     * No rounding occurs due to the maximum width - digits are simply dropped.\n     *\n     * When parsing in strict mode, the number of parsed digits must be between\n     * the minimum and maximum width. When parsing in lenient mode, the minimum\n     * width is considered to be zero and the maximum is nine.\n     *\n     * If the value cannot be obtained then an exception will be thrown.\n     * If the value is negative an exception will be thrown.\n     * If the field does not have a fixed set of valid values then an\n     * exception will be thrown.\n     * If the field value in the date-time to be printed is invalid it\n     * cannot be printed and an exception will be thrown.\n     *\n     * @param {TemporalField} field  the field to append, not null\n     * @param {Number} minWidth  the minimum width of the field excluding the decimal point, from 0 to 9\n     * @param {Number} maxWidth  the maximum width of the field excluding the decimal point, from 1 to 9\n     * @param {boolean} decimalPoint  whether to output the localized decimal point symbol\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     * @throws IllegalArgumentException if the field has a variable set of valid values or\n     *  either width is invalid\n     */\n    appendFraction(field, minWidth, maxWidth, decimalPoint) {\n        this._appendInternal(new FractionPrinterParser(field, minWidth, maxWidth, decimalPoint));\n        return this;\n    }\n\n    /**\n     * Appends an instant using ISO-8601 to the formatter with control over\n     * the number of fractional digits.\n     *\n     * Instants have a fixed output format, although this method provides some\n     * control over the fractional digits. They are converted to a date-time\n     * with a zone-offset of UTC and printed using the standard ISO-8601 format.\n     * The localized decimal style is not used.\n     *\n     * The {@link this.fractionalDigits} parameter allows the output of the fractional\n     * second to be controlled. Specifying zero will cause no fractional digits\n     * to be output. From 1 to 9 will output an increasing number of digits, using\n     * zero right-padding if necessary. The special value -1 is used to output as\n     * many digits as necessary to avoid any trailing zeroes.\n     *\n     * When parsing in strict mode, the number of parsed digits must match the\n     * fractional digits. When parsing in lenient mode, any number of fractional\n     * digits from zero to nine are accepted.\n     *\n     * The instant is obtained using {@link ChronoField#INSTANT_SECONDS}\n     * and optionally (@code NANO_OF_SECOND). The value of {@link INSTANT_SECONDS}\n     * may be outside the maximum range of {@link LocalDateTime}.\n     *\n     * The {@link ResolverStyle} has no effect on instant parsing.\n     * The end-of-day time of '24:00' is handled as midnight at the start of the following day.\n     * The leap-second time of '23:59:59' is handled to some degree, see\n     * {@link DateTimeFormatter#parsedLeapSecond} for full details.\n     *\n     * An alternative to this method is to format/parse the instant as a single\n     * epoch-seconds value. That is achieved using `appendValue(INSTANT_SECONDS)`.\n     *\n     * @param {number} [fractionalDigits=-2] - the number of fractional second digits to format with,\n     *  from 0 to 9, or -1 to use as many digits as necessary\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     */\n    appendInstant(fractionalDigits=-2) {\n        if (fractionalDigits < -2 || fractionalDigits > 9) {\n            throw new IllegalArgumentException(`Invalid fractional digits: ${fractionalDigits}`);\n        }\n        this._appendInternal(new InstantPrinterParser(fractionalDigits));\n        return this;\n    }\n\n\n    /**\n     * Appends the zone offset, such as '+01:00', to the formatter.\n     *\n     * This appends an instruction to print/parse the offset ID to the builder.\n     * This is equivalent to calling `appendOffset(\"HH:MM:ss\", \"Z\")`.\n     *\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     */\n    appendOffsetId() {\n        this._appendInternal(OffsetIdPrinterParser.INSTANCE_ID);\n        return this;\n    }\n\n    /**\n     * Appends the zone offset, such as '+01:00', to the formatter.\n     *\n     * This appends an instruction to print/parse the offset ID to the builder.\n     *\n     * During printing, the offset is obtained using a mechanism equivalent\n     * to querying the temporal with {@link TemporalQueries#offset}.\n     * It will be printed using the format defined below.\n     * If the offset cannot be obtained then an exception is thrown unless the\n     * section of the formatter is optional.\n     *\n     * During parsing, the offset is parsed using the format defined below.\n     * If the offset cannot be parsed then an exception is thrown unless the\n     * section of the formatter is optional.\n     *\n     * The format of the offset is controlled by a pattern which must be one\n     * of the following:\n     *\n     * * `+HH` - hour only, ignoring minute and second\n     * * `+HHmm` - hour, with minute if non-zero, ignoring second, no colon\n     * * `+HH:mm` - hour, with minute if non-zero, ignoring second, with colon\n     * * `+HHMM` - hour and minute, ignoring second, no colon\n     * * `+HH:MM` - hour and minute, ignoring second, with colon\n     * * `+HHMMss` - hour and minute, with second if non-zero, no colon\n     * * `+HH:MM:ss` - hour and minute, with second if non-zero, with colon\n     * * `+HHMMSS` - hour, minute and second, no colon\n     * * `+HH:MM:SS` - hour, minute and second, with colon\n     *\n     * The \"no offset\" text controls what text is printed when the total amount of\n     * the offset fields to be output is zero.\n     * Example values would be 'Z', '+00:00', 'UTC' or 'GMT'.\n     * Three formats are accepted for parsing UTC - the \"no offset\" text, and the\n     * plus and minus versions of zero defined by the pattern.\n     *\n     * @param {String} pattern  the pattern to use, not null\n     * @param {String} noOffsetText  the text to use when the offset is zero, not null\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     */\n    appendOffset(pattern, noOffsetText) {\n        this._appendInternalPrinterParser(new OffsetIdPrinterParser(noOffsetText, pattern));\n        return this;\n    }\n\n    /**\n      * Appends the time-zone ID, such as 'Europe/Paris' or '+02:00', to the formatter.\n      *\n      * This appends an instruction to print/parse the zone ID to the builder.\n      * The zone ID is obtained in a strict manner suitable for {@link ZonedDateTime}.\n      * By contrast, {@link OffsetDateTime} does not have a zone ID suitable\n      * for use with this method, see {@link appendZoneOrOffsetId}.\n      *\n      * During printing, the zone is obtained using a mechanism equivalent\n      * to querying the temporal with {@link TemporalQueries#zoneId}.\n      * It will be printed using the result of {@link ZoneId#getId}.\n      * If the zone cannot be obtained then an exception is thrown unless the\n      * section of the formatter is optional.\n      *\n      * During parsing, the zone is parsed and must match a known zone or offset.\n      * If the zone cannot be parsed then an exception is thrown unless the\n      * section of the formatter is optional.\n      *\n      * @return {DateTimeFormatterBuilder} this, for chaining, not null\n      * @see #appendZoneRegionId()\n      */\n    appendZoneId() {\n        this._appendInternal(new ZoneIdPrinterParser(TemporalQueries.zoneId(), 'ZoneId()'));\n        return this;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Appends the elements defined by the specified pattern to the builder.\n     *\n     * All letters 'A' to 'Z' and 'a' to 'z' are reserved as pattern letters.\n     * The characters '{' and '}' are reserved for future use.\n     * The characters '[' and ']' indicate optional patterns.\n     * The following pattern letters are defined:\n     * <pre>\n     *  |Symbol  |Meaning                     |Presentation      |Examples\n     *  |--------|----------------------------|------------------|----------------------------------------------------\n     *  | G      | era                        | number/text      | 1; 01; AD; Anno Domini\n     *  | u      | year                       | year             | 2004; 04\n     *  | y      | year-of-era                | year             | 2004; 04\n     *  | D      | day-of-year                | number           | 189\n     *  | M      | month-of-year              | number/text      | 7; 07; Jul; July; J\n     *  | d      | day-of-month               | number           | 10\n     *  |        |                            |                  |\n     *  | Q      | quarter-of-year            | number/text      | 3; 03; Q3\n     *  | Y      | week-based-year            | year             | 1996; 96\n     *  | w      | week-of-year               | number           | 27\n     *  | W      | week-of-month              | number           | 27\n     *  | e      | localized day-of-week      | number           | 2; Tue; Tuesday; T\n     *  | E      | day-of-week                | number/text      | 2; Tue; Tuesday; T\n     *  | F      | week-of-month              | number           | 3\n     *  |        |                            |                  |\n     *  | a      | am-pm-of-day               | text             | PM\n     *  | h      | clock-hour-of-am-pm (1-12) | number           | 12\n     *  | K      | hour-of-am-pm (0-11)       | number           | 0\n     *  | k      | clock-hour-of-am-pm (1-24) | number           | 0\n     *  |        |                            |                  |\n     *  | H      | hour-of-day (0-23)         | number           | 0\n     *  | m      | minute-of-hour             | number           | 30\n     *  | s      | second-of-minute           | number           | 55\n     *  | S      | fraction-of-second         | fraction         | 978\n     *  | A      | milli-of-day               | number           | 1234\n     *  | n      | nano-of-second             | number           | 987654321\n     *  | N      | nano-of-day                | number           | 1234000000\n     *  |        |                            |                  |\n     *  | V      | time-zone ID               | zone-id          | America/Los_Angeles; Z; -08:30\n     *  | z      | time-zone name             | zone-name        | Pacific Standard Time; PST\n     *  | X      | zone-offset 'Z' for zero   | offset-X         | Z; -08; -0830; -08:30; -083015; -08:30:15;\n     *  | x      | zone-offset                | offset-x         | +0000; -08; -0830; -08:30; -083015; -08:30:15;\n     *  | Z      | zone-offset                | offset-Z         | +0000; -0800; -08:00;\n     *  |        |                            |                  |\n     *  | p      | pad next                   | pad modifier     | 1\n     *  |        |                            |                  |\n     *  | '      | escape for text            | delimiter        |\n     *  | ''     | single quote               | literal          | '\n     *  | [      | optional section start     |                  |\n     *  | ]      | optional section end       |                  |\n     *  | {}     | reserved for future use    |                  |\n     * </pre>\n     *\n     * The count of pattern letters determine the format.\n     *\n     * **Text**: The text style is determined based on the number of pattern letters used.\n     * Less than 4 pattern letters will use the short form (see {@link TextStyle#SHORT}).\n     * Exactly 4 pattern letters will use the full form (see {@link TextStyle#FULL}).\n     * Exactly 5 pattern letters will use the narrow form (see {@link TextStyle#NARROW}).\n     *\n     * **Number**: If the count of letters is one, then the value is printed using the minimum number\n     * of digits and without padding as per {@link appendValue}. Otherwise, the\n     * count of digits is used as the width of the output field as per {@link appendValue}.\n     *\n     * **Number/Text**: If the count of pattern letters is 3 or greater, use the Text rules above.\n     * Otherwise use the Number rules above.\n     *\n     * **Fraction**: Outputs the nano-of-second field as a fraction-of-second.\n     * The nano-of-second value has nine digits, thus the count of pattern letters is from 1 to 9.\n     * If it is less than 9, then the nano-of-second value is truncated, with only the most\n     * significant digits being output.\n     * When parsing in strict mode, the number of parsed digits must match the count of pattern letters.\n     * When parsing in lenient mode, the number of parsed digits must be at least the count of pattern\n     * letters, up to 9 digits.\n     *\n     * **Year**: The count of letters determines the minimum field width below which padding is used.\n     * If the count of letters is two, then a reduced (see {@link appendValueReduced}) two digit form is used.\n     * For printing, this outputs the rightmost two digits. For parsing, this will parse using the\n     * base value of 2000, resulting in a year within the range 2000 to 2099 inclusive.\n     * If the count of letters is less than four (but not two), then the sign is only output for negative\n     * years as per {@link SignStyle#NORMAL}.\n     * Otherwise, the sign is output if the pad width is exceeded, as per {@link SignStyle#EXCEEDS_PAD}\n     *\n     * **ZoneId**: This outputs the time-zone ID, such as 'Europe/Paris'.\n     * If the count of letters is two, then the time-zone ID is output.\n     * Any other count of letters throws {@link IllegalArgumentException}.\n     * <pre>\n     *  Pattern     Equivalent builder methods\n     *   VV          appendZoneId()\n     * </pre>\n     *\n     * **Zone names**: This outputs the display name of the time-zone ID.\n     * If the count of letters is one, two or three, then the short name is output.\n     * If the count of letters is four, then the full name is output.\n     * Five or more letters throws {@link IllegalArgumentException}.\n     * <pre>\n     *  Pattern     Equivalent builder methods\n     *   z           appendZoneText(TextStyle.SHORT)\n     *   zz          appendZoneText(TextStyle.SHORT)\n     *   zzz         appendZoneText(TextStyle.SHORT)\n     *   zzzz        appendZoneText(TextStyle.FULL)\n     * </pre>\n     *\n     * **Offset X and x**: This formats the offset based on the number of pattern letters.\n     * One letter outputs just the hour', such as '+01', unless the minute is non-zero\n     * in which case the minute is also output, such as '+0130'.\n     * Two letters outputs the hour and minute, without a colon, such as '+0130'.\n     * Three letters outputs the hour and minute, with a colon, such as '+01:30'.\n     * Four letters outputs the hour and minute and optional second, without a colon, such as '+013015'.\n     * Five letters outputs the hour and minute and optional second, with a colon, such as '+01:30:15'.\n     * Six or more letters throws {@link IllegalArgumentException}.\n     * Pattern letter 'X' (upper case) will output 'Z' when the offset to be output would be zero,\n     * whereas pattern letter 'x' (lower case) will output '+00', '+0000', or '+00:00'.\n     * <pre>\n     *  Pattern     Equivalent builder methods\n     *   X           appendOffset(\"+HHmm\",\"Z\")\n     *   XX          appendOffset(\"+HHMM\",\"Z\")\n     *   XXX         appendOffset(\"+HH:MM\",\"Z\")\n     *   XXXX        appendOffset(\"+HHMMss\",\"Z\")\n     *   XXXXX       appendOffset(\"+HH:MM:ss\",\"Z\")\n     *   x           appendOffset(\"+HHmm\",\"+00\")\n     *   xx          appendOffset(\"+HHMM\",\"+0000\")\n     *   xxx         appendOffset(\"+HH:MM\",\"+00:00\")\n     *   xxxx        appendOffset(\"+HHMMss\",\"+0000\")\n     *   xxxxx       appendOffset(\"+HH:MM:ss\",\"+00:00\")\n     * </pre>\n     *\n     * **Offset Z**: This formats the offset based on the number of pattern letters.\n     * One, two or three letters outputs the hour and minute, without a colon, such as '+0130'.\n     * Four or more letters throws {@link IllegalArgumentException}.\n     * The output will be '+0000' when the offset is zero.\n     * <pre>\n     *  Pattern     Equivalent builder methods\n     *   Z           appendOffset(\"+HHMM\",\"+0000\")\n     *   ZZ          appendOffset(\"+HHMM\",\"+0000\")\n     *   ZZZ         appendOffset(\"+HHMM\",\"+0000\")\n     * </pre>\n     *\n     * **Optional section**: The optional section markers work exactly like calling {@link optionalStart}\n     * and {@link optionalEnd}.\n     *\n     * **Pad modifier**: Modifies the pattern that immediately follows to be padded with spaces.\n     * The pad width is determined by the number of pattern letters.\n     * This is the same as calling {@link padNext}.\n     *\n     * For example, 'ppH' outputs the hour-of-day padded on the left with spaces to a width of 2.\n     *\n     * Any unrecognized letter is an error.\n     * Any non-letter character, other than '[', ']', '{', '}' and the single quote will be output directly.\n     * Despite this, it is recommended to use single quotes around all characters that you want to\n     * output directly to ensure that future changes do not break your application.\n     *\n     * Note that the pattern string is similar, but not identical, to\n     * {@link java.text.SimpleDateFormat}.\n     * The pattern string is also similar, but not identical, to that defined by the\n     * Unicode Common Locale Data Repository (CLDR/LDML).\n     * Pattern letters 'E' and 'u' are merged, which changes the meaning of \"E\" and \"EE\" to be numeric.\n     * Pattern letters 'X' is aligned with Unicode CLDR/LDML, which affects pattern 'X'.\n     * Pattern letter 'y' and 'Y' parse years of two digits and more than 4 digits differently.\n     * Pattern letters 'n', 'A', 'N', 'I' and 'p' are added.\n     * Number types will reject large numbers.\n     *\n     * @param {String} pattern  the pattern to add, not null\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     * @throws IllegalArgumentException if the pattern is invalid\n     */\n    appendPattern(pattern) {\n        requireNonNull(pattern, 'pattern');\n        this._parsePattern(pattern);\n        return this;\n    }\n\n\n    //-----------------------------------------------------------------------\n    // empty implementations of locale functionality, be implemented/overridden by js-joda-locale\n\n    appendZoneText() {\n        throw new IllegalArgumentException('Pattern using (localized) text not implemented, use @js-joda/locale plugin!');\n    }\n\n    appendText() {\n        throw new IllegalArgumentException('Pattern using (localized) text not implemented, use @js-joda/locale plugin!');\n    }\n\n    appendLocalizedOffset() {\n        throw new IllegalArgumentException('Pattern using (localized) text not implemented, use @js-joda/locale plugin!');\n    }\n\n    appendWeekField() {\n        throw new IllegalArgumentException('Pattern using (localized) text not implemented, use @js-joda/locale plugin!');\n    }\n\n    //-----------------------------------------------------------------------\n\n    _parsePattern(pattern) {\n        /** Map of letters to fields. */\n        const FIELD_MAP = {\n            'G': ChronoField.ERA,\n            'y': ChronoField.YEAR_OF_ERA,\n            'u': ChronoField.YEAR,\n            'Q': IsoFields.QUARTER_OF_YEAR,\n            'q': IsoFields.QUARTER_OF_YEAR,\n            'M': ChronoField.MONTH_OF_YEAR,\n            'L': ChronoField.MONTH_OF_YEAR,\n            'D': ChronoField.DAY_OF_YEAR,\n            'd': ChronoField.DAY_OF_MONTH,\n            'F': ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH,\n            'E': ChronoField.DAY_OF_WEEK,\n            'c': ChronoField.DAY_OF_WEEK,\n            'e': ChronoField.DAY_OF_WEEK,\n            'a': ChronoField.AMPM_OF_DAY,\n            'H': ChronoField.HOUR_OF_DAY,\n            'k': ChronoField.CLOCK_HOUR_OF_DAY,\n            'K': ChronoField.HOUR_OF_AMPM,\n            'h': ChronoField.CLOCK_HOUR_OF_AMPM,\n            'm': ChronoField.MINUTE_OF_HOUR,\n            's': ChronoField.SECOND_OF_MINUTE,\n            'S': ChronoField.NANO_OF_SECOND,\n            'A': ChronoField.MILLI_OF_DAY,\n            'n': ChronoField.NANO_OF_SECOND,\n            'N': ChronoField.NANO_OF_DAY\n        };\n\n        for (let pos = 0; pos < pattern.length; pos++) {\n            let cur = pattern.charAt(pos);\n            if ((cur >= 'A' && cur <= 'Z') || (cur >= 'a' && cur <= 'z')) {\n                let start = pos++;\n                for (; pos < pattern.length && pattern.charAt(pos) === cur; pos++);  // short loop\n                let count = pos - start;\n                // padding\n                if (cur === 'p') {\n                    let pad = 0;\n                    if (pos < pattern.length) {\n                        cur = pattern.charAt(pos);\n                        if ((cur >= 'A' && cur <= 'Z') || (cur >= 'a' && cur <= 'z')) {\n                            pad = count;\n                            start = pos++;\n                            for (; pos < pattern.length && pattern.charAt(pos) === cur; pos++);  // short loop\n                            count = pos - start;\n                        }\n                    }\n                    if (pad === 0) {\n                        throw new IllegalArgumentException(\n                            `Pad letter 'p' must be followed by valid pad pattern: ${pattern}`);\n                    }\n                    this.padNext(pad); // pad and continue parsing\n                }\n                // main rules\n                const field = FIELD_MAP[cur];\n                if (field != null) {\n                    this._parseField(cur, count, field);\n                } else if (cur === 'z') {\n                    if (count > 4) {\n                        throw new IllegalArgumentException(`Too many pattern letters: ${cur}`);\n                    } else if (count === 4) {\n                        this.appendZoneText(TextStyle.FULL);\n                    } else {\n                        this.appendZoneText(TextStyle.SHORT);\n                    }\n                } else if (cur === 'V') {\n                    if (count !== 2) {\n                        throw new IllegalArgumentException(`Pattern letter count must be 2: ${cur}`);\n                    }\n                    this.appendZoneId();\n                } else if (cur === 'Z') {\n                    if (count < 4) {\n                        this.appendOffset('+HHMM', '+0000');\n                    } else if (count === 4) {\n                        this.appendLocalizedOffset(TextStyle.FULL);\n                    } else if (count === 5) {\n                        this.appendOffset('+HH:MM:ss', 'Z');\n                    } else {\n                        throw new IllegalArgumentException(`Too many pattern letters: ${cur}`);\n                    }\n                } else if (cur === 'O') {\n                    if (count === 1) {\n                        this.appendLocalizedOffset(TextStyle.SHORT);\n                    } else if (count === 4) {\n                        this.appendLocalizedOffset(TextStyle.FULL);\n                    } else {\n                        throw new IllegalArgumentException(`Pattern letter count must be 1 or 4: ${cur}`);\n                    }\n                } else if (cur === 'X') {\n                    if (count > 5) {\n                        throw new IllegalArgumentException(`Too many pattern letters: ${cur}`);\n                    }\n                    this.appendOffset(OffsetIdPrinterParser.PATTERNS[count + (count === 1 ? 0 : 1)], 'Z');\n                } else if (cur === 'x') {\n                    if (count > 5) {\n                        throw new IllegalArgumentException(`Too many pattern letters: ${cur}`);\n                    }\n                    const zero = (count === 1 ? '+00' : (count % 2 === 0 ? '+0000' : '+00:00'));\n                    this.appendOffset(OffsetIdPrinterParser.PATTERNS[count + (count === 1 ? 0 : 1)], zero);\n                } else if (cur === 'W') {\n                    if (count > 1) {\n                        throw new IllegalArgumentException(`Too many pattern letters: ${cur}`);\n                    }\n                    this.appendWeekField('W', count);\n                } else if (cur === 'w') {\n                    if (count > 2) {\n                        throw new IllegalArgumentException(`Too many pattern letters: ${cur}`);\n                    }\n                    this.appendWeekField('w', count);\n                } else if (cur === 'Y') {\n                    this.appendWeekField('Y', count);\n                } else {\n                    throw new IllegalArgumentException(`Unknown pattern letter: ${cur}`);\n                }\n                pos--;\n\n            } else if (cur === '\\'') {\n                // parse literals\n                const start = pos++;\n                for (; pos < pattern.length; pos++) {\n                    if (pattern.charAt(pos) === '\\'') {\n                        if (pos + 1 < pattern.length && pattern.charAt(pos + 1) === '\\'') {\n                            pos++;\n                        } else {\n                            break;  // end of literal\n                        }\n                    }\n                }\n                if (pos >= pattern.length) {\n                    throw new IllegalArgumentException(`Pattern ends with an incomplete string literal: ${pattern}`);\n                }\n                const str = pattern.substring(start + 1, pos);\n                if (str.length === 0) {\n                    this.appendLiteral('\\'');\n                } else {\n                    this.appendLiteral(str.replace('\\'\\'', '\\''));\n                }\n\n            } else if (cur === '[') {\n                this.optionalStart();\n\n            } else if (cur === ']') {\n                if (this._active._parent === null) {\n                    throw new IllegalArgumentException('Pattern invalid as it contains ] without previous [');\n                }\n                this.optionalEnd();\n\n            } else if (cur === '{' || cur === '}' || cur === '#') {\n                throw new IllegalArgumentException(`Pattern includes reserved character: '${cur}'`);\n            } else {\n                this.appendLiteral(cur);\n            }\n        }\n    }\n\n    _parseField(cur, count, field) {\n        switch (cur) {\n            case 'u':\n            case 'y':\n                if (count === 2) {\n                    this.appendValueReduced(field, 2, 2, ReducedPrinterParser.BASE_DATE);\n                } else if (count < 4) {\n                    this.appendValue(field, count, MAX_WIDTH, SignStyle.NORMAL);\n                } else {\n                    this.appendValue(field, count, MAX_WIDTH, SignStyle.EXCEEDS_PAD);\n                }\n                break;\n            case 'M':\n            case 'Q':\n                switch (count) {\n                    case 1:\n                        this.appendValue(field);\n                        break;\n                    case 2:\n                        this.appendValue(field, 2);\n                        break;\n                    case 3:\n                        this.appendText(field, TextStyle.SHORT);\n                        break;\n                    case 4:\n                        this.appendText(field, TextStyle.FULL);\n                        break;\n                    case 5:\n                        this.appendText(field, TextStyle.NARROW);\n                        break;\n                    default:\n                        throw new IllegalArgumentException(`Too many pattern letters: ${cur}`);\n                }\n                break;\n            case 'L':\n            case 'q':\n                switch (count) {\n                    case 1:\n                        this.appendValue(field);\n                        break;\n                    case 2:\n                        this.appendValue(field, 2);\n                        break;\n                    case 3:\n                        this.appendText(field, TextStyle.SHORT_STANDALONE);\n                        break;\n                    case 4:\n                        this.appendText(field, TextStyle.FULL_STANDALONE);\n                        break;\n                    case 5:\n                        this.appendText(field, TextStyle.NARROW_STANDALONE);\n                        break;\n                    default:\n                        throw new IllegalArgumentException(`Too many pattern letters: ${cur}`);\n                }\n                break;\n            case 'e':\n                switch (count) {\n                    case 1:\n                    case 2:\n                        this.appendWeekField('e', count);\n                        break;\n                    case 3:\n                        this.appendText(field, TextStyle.SHORT);\n                        break;\n                    case 4:\n                        this.appendText(field, TextStyle.FULL);\n                        break;\n                    case 5:\n                        this.appendText(field, TextStyle.NARROW);\n                        break;\n                    default:\n                        throw new IllegalArgumentException(`Too many pattern letters: ${cur}`);\n                }\n                // eslint-disable-next-line no-unreachable\n                break;\n            case 'c':\n                switch (count) {\n                    case 1:\n                        this.appendWeekField('c', count);\n                        break;\n                    case 2:\n                        throw new IllegalArgumentException(`Invalid number of pattern letters: ${cur}`);\n                    case 3:\n                        this.appendText(field, TextStyle.SHORT_STANDALONE);\n                        break;\n                    case 4:\n                        this.appendText(field, TextStyle.FULL_STANDALONE);\n                        break;\n                    case 5:\n                        this.appendText(field, TextStyle.NARROW_STANDALONE);\n                        break;\n                    default:\n                        throw new IllegalArgumentException(`Too many pattern letters: ${cur}`);\n                }\n                // eslint-disable-next-line no-unreachable\n                break;\n            case 'a':\n                if (count === 1) {\n                    this.appendText(field, TextStyle.SHORT);\n                } else {\n                    throw new IllegalArgumentException(`Too many pattern letters: ${cur}`);\n                }\n                // eslint-disable-next-line no-unreachable\n                break;\n            case 'E':\n            case 'G':\n                switch (count) {\n                    case 1:\n                    case 2:\n                    case 3:\n                        this.appendText(field, TextStyle.SHORT);\n                        break;\n                    case 4:\n                        this.appendText(field, TextStyle.FULL);\n                        break;\n                    case 5:\n                        this.appendText(field, TextStyle.NARROW);\n                        break;\n                    default:\n                        throw new IllegalArgumentException(`Too many pattern letters: ${cur}`);\n                }\n                // eslint-disable-next-line no-unreachable\n                break;\n            case 'S':\n                this.appendFraction(ChronoField.NANO_OF_SECOND, count, count, false);\n                break;\n            case 'F':\n                if (count === 1) {\n                    this.appendValue(field);\n                } else {\n                    throw new IllegalArgumentException(`Too many pattern letters: ${cur}`);\n                }\n                break;\n            case 'd':\n            case 'h':\n            case 'H':\n            case 'k':\n            case 'K':\n            case 'm':\n            case 's':\n                if (count === 1) {\n                    this.appendValue(field);\n                } else if (count === 2) {\n                    this.appendValue(field, count);\n                } else {\n                    throw new IllegalArgumentException(`Too many pattern letters: ${cur}`);\n                }\n                break;\n            case 'D':\n                if (count === 1) {\n                    this.appendValue(field);\n                } else if (count <= 3) {\n                    this.appendValue(field, count);\n                } else {\n                    throw new IllegalArgumentException(`Too many pattern letters: ${cur}`);\n                }\n                break;\n            default:\n                if (count === 1) {\n                    this.appendValue(field);\n                } else {\n                    this.appendValue(field, count);\n                }\n                break;\n        }\n    }\n\n    /**\n     * padNext function overloading\n     */\n    padNext() {\n        if (arguments.length === 1) {\n            return this._padNext1.apply(this, arguments);\n        } else {\n            return this._padNext2.apply(this, arguments);\n        }\n    }\n\n    /**\n     * Causes the next added printer/parser to pad to a fixed width using a space.\n     *\n     * This padding will pad to a fixed width using spaces.\n     *\n     * During formatting, the decorated element will be output and then padded\n     * to the specified width. An exception will be thrown during printing if\n     * the pad width is exceeded.\n     *\n     * During parsing, the padding and decorated element are parsed.\n     * If parsing is lenient, then the pad width is treated as a maximum.\n     * If parsing is case insensitive, then the pad character is matched ignoring case.\n     * The padding is parsed greedily. Thus, if the decorated element starts with\n     * the pad character, it will not be parsed.\n     *\n     * @param {number} padWidth  the pad width, 1 or greater\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     * @throws IllegalArgumentException if pad width is too small\n     */\n    _padNext1(padWidth) {\n        return this._padNext2(padWidth, ' ');\n    }\n\n    /**\n     * Causes the next added printer/parser to pad to a fixed width.\n     *\n     * This padding is intended for padding other than zero-padding.\n     * Zero-padding should be achieved using the appendValue methods.\n     *\n     * During formatting, the decorated element will be output and then padded\n     * to the specified width. An exception will be thrown during printing if\n     * the pad width is exceeded.\n     *\n     * During parsing, the padding and decorated element are parsed.\n     * If parsing is lenient, then the pad width is treated as a maximum.\n     * If parsing is case insensitive, then the pad character is matched ignoring case.\n     * The padding is parsed greedily. Thus, if the decorated element starts with\n     * the pad character, it will not be parsed.\n     *\n     * @param {number} padWidth  the pad width, 1 or greater\n     * @param {String} padChar  the pad character\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     * @throws IllegalArgumentException if pad width is too small\n     */\n    _padNext2(padWidth, padChar) {\n        if (padWidth < 1) {\n            throw new IllegalArgumentException(`The pad width must be at least one but was ${padWidth}`);\n        }\n        this._active._padNextWidth = padWidth;\n        this._active._padNextChar = padChar;\n        this._active._valueParserIndex = -1;\n        return this;\n    }\n\n\n    //-----------------------------------------------------------------------\n    /**\n     * Mark the start of an optional section.\n     *\n     * The output of printing can include optional sections, which may be nested.\n     * An optional section is started by calling this method and ended by calling\n     * {@link optionalEnd} or by ending the build process.\n     *\n     * All elements in the optional section are treated as optional.\n     * During printing, the section is only output if data is available in the\n     * {@link TemporalAccessor} for all the elements in the section.\n     * During parsing, the whole section may be missing from the parsed string.\n     *\n     * For example, consider a builder setup as\n     * `builder.appendValue(HOUR_OF_DAY,2).optionalStart().appendValue(MINUTE_OF_HOUR,2)`.\n     * The optional section ends automatically at the end of the builder.\n     * During printing, the minute will only be output if its value can be obtained from the date-time.\n     * During parsing, the input will be successfully parsed whether the minute is present or not.\n     *\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     */\n    optionalStart() {\n        this._active._valueParserIndex = -1;\n        this._active = DateTimeFormatterBuilder._of(this._active, true);\n        return this;\n    }\n\n    /**\n     * Ends an optional section.\n     *\n     * The output of printing can include optional sections, which may be nested.\n     * An optional section is started by calling {@link optionalStart} and ended\n     * using this method (or at the end of the builder).\n     *\n     * Calling this method without having previously called `optionalStart`\n     * will throw an exception.\n     * Calling this method immediately after calling `optionalStart` has no effect\n     * on the formatter other than ending the (empty) optional section.\n     *\n     * All elements in the optional section are treated as optional.\n     * During printing, the section is only output if data is available in the\n     * {@link TemporalAccessor} for all the elements in the section.\n     * During parsing, the whole section may be missing from the parsed string.\n     *\n     * For example, consider a builder setup as\n     * `builder.appendValue(HOUR_OF_DAY,2).optionalStart().appendValue(MINUTE_OF_HOUR,2).optionalEnd()`.\n     * During printing, the minute will only be output if its value can be obtained from the date-time.\n     * During parsing, the input will be successfully parsed whether the minute is present or not.\n     *\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     * @throws IllegalStateException if there was no previous call to `optionalStart`\n     */\n    optionalEnd() {\n        if (this._active._parent == null) {\n            throw new IllegalStateException('Cannot call optionalEnd() as there was no previous call to optionalStart()');\n        }\n        if (this._active._printerParsers.length > 0) {\n            const cpp = new CompositePrinterParser(this._active._printerParsers, this._active._optional);\n            this._active = this._active._parent;\n            this._appendInternal(cpp);\n        } else {\n            this._active = this._active._parent;\n        }\n        return this;\n    }\n\n    /**\n     * Appends a printer and/or parser to the internal list handling padding.\n     *\n     * @param pp  the printer-parser to add, not null\n     * @return the index into the active parsers list\n     */\n    _appendInternal(pp) {\n        assert(pp != null);\n        if (this._active._padNextWidth > 0) {\n            if (pp != null) {\n                pp = new PadPrinterParserDecorator(pp, this._active._padNextWidth, this._active._padNextChar);\n            }\n            this._active._padNextWidth = 0;\n            this._active._padNextChar = 0;\n        }\n        this._active._printerParsers.push(pp);\n        this._active._valueParserIndex = -1;\n        return this._active._printerParsers.length - 1;\n    }\n\n    /**\n     * Appends a string literal to the formatter.\n     *\n     * This string will be output during a print.\n     *\n     * If the literal is empty, nothing is added to the formatter.\n     *\n     * @param literal  the literal to append, not null\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     */\n    appendLiteral(literal) {\n        assert(literal != null);\n        if (literal.length > 0) {\n            if (literal.length === 1) {\n                this._appendInternalPrinterParser(new CharLiteralPrinterParser(literal.charAt(0)));\n            } else {\n                this._appendInternalPrinterParser(new StringLiteralPrinterParser(literal));\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Appends a printer and/or parser to the internal list handling padding.\n     *\n     * @param pp  the printer-parser to add, not null\n     * @return the index into the active parsers list\n     */\n    _appendInternalPrinterParser(pp) {\n        assert(pp != null);\n        if (this._active._padNextWidth > 0) {\n            if (pp != null) {\n                pp = new PadPrinterParserDecorator(pp, this._active._padNextWidth, this._active._padNextChar);\n            }\n            this._active._padNextWidth = 0;\n            this._active._padNextChar = 0;\n        }\n        this._active._printerParsers.push(pp);\n        this._active._valueParserIndex = -1;\n        return this._active._printerParsers.length - 1;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Appends all the elements of a formatter to the builder.\n     *\n     * This method has the same effect as appending each of the constituent\n     * parts of the formatter directly to this builder.\n     *\n     * @param {DateTimeFormatter} formatter  the formatter to add, not null\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     */\n    append(formatter) {\n        requireNonNull(formatter, 'formatter');\n        this._appendInternal(formatter._toPrinterParser(false));\n        return this;\n    }\n\n    /**\n     * Completes this builder by creating the DateTimeFormatter.\n     *\n     * This will create a formatter with the specified locale.\n     * Numbers will be printed and parsed using the standard non-localized set of symbols.\n     *\n     * Calling this method will end any open optional sections by repeatedly\n     * calling {@link optionalEnd} before creating the formatter.\n     *\n     * This builder can still be used after creating the formatter if desired,\n     * although the state may have been changed by calls to `optionalEnd`.\n     *\n     * @param resolverStyle  the new resolver style\n     * @return the created formatter, not null\n     */\n    toFormatter(resolverStyle=ResolverStyle.SMART) {\n        while (this._active._parent != null) {\n            this.optionalEnd();\n        }\n        const pp = new CompositePrinterParser(this._printerParsers, false);\n        return new DateTimeFormatter(pp, null, DecimalStyle.STANDARD, resolverStyle, null, null, null);\n    }\n\n}\n\n// days in a 400 year cycle = 146097\n// days in a 10,000 year cycle = 146097 * 25\n// seconds per day = 86400\nconst SECONDS_PER_10000_YEARS = 146097 * 25 * 86400;\nconst SECONDS_0000_TO_1970 = ((146097 * 5) - (30 * 365 + 7)) * 86400;\n\n/**\n * Prints or parses an ISO-8601 instant.\n */\nclass InstantPrinterParser  {\n\n    constructor(fractionalDigits) {\n        this.fractionalDigits = fractionalDigits;\n    }\n\n    print(context, buf) {\n        // use INSTANT_SECONDS, thus this code is not bound by Instant.MAX\n        const inSecs = context.getValue(ChronoField.INSTANT_SECONDS);\n        let inNanos = 0;\n        if (context.temporal().isSupported(ChronoField.NANO_OF_SECOND)) {\n            inNanos = context.temporal().getLong(ChronoField.NANO_OF_SECOND);\n        }\n        if (inSecs == null) {\n            return false;\n        }\n        const inSec = inSecs;\n        let inNano = ChronoField.NANO_OF_SECOND.checkValidIntValue(inNanos);\n        if (inSec >= -SECONDS_0000_TO_1970) {\n            // current era\n            const zeroSecs = inSec - SECONDS_PER_10000_YEARS + SECONDS_0000_TO_1970;\n            const hi = MathUtil.floorDiv(zeroSecs, SECONDS_PER_10000_YEARS) + 1;\n            const lo = MathUtil.floorMod(zeroSecs, SECONDS_PER_10000_YEARS);\n            const ldt = LocalDateTime.ofEpochSecond(lo - SECONDS_0000_TO_1970, 0, ZoneOffset.UTC);\n            if (hi > 0) {\n                buf.append('+').append(hi);\n            }\n            buf.append(ldt.toString());\n            if (ldt.second() === 0) {\n                buf.append(':00');\n            }\n        } else {\n            // before current era\n            const zeroSecs = inSec + SECONDS_0000_TO_1970;\n            const hi = MathUtil.intDiv(zeroSecs, SECONDS_PER_10000_YEARS);\n            const lo = MathUtil.intMod(zeroSecs, SECONDS_PER_10000_YEARS);\n            const ldt = LocalDateTime.ofEpochSecond(lo - SECONDS_0000_TO_1970, 0, ZoneOffset.UTC);\n            const pos = buf.length();\n            buf.append(ldt.toString());\n            if (ldt.second() === 0) {\n                buf.append(':00');\n            }\n            if (hi < 0) {\n                if (ldt.year() === -10000) {\n                    buf.replace(pos, pos + 2, `${hi - 1}`);\n                } else if (lo === 0) {\n                    buf.insert(pos, hi);\n                } else {\n                    buf.insert(pos + 1, Math.abs(hi));\n                }\n            }\n        }\n        //fraction\n        if (this.fractionalDigits === -2) {\n            if (inNano !== 0) {\n                buf.append('.');\n                if (MathUtil.intMod(inNano, 1000000) === 0) {\n                    buf.append((`${MathUtil.intDiv(inNano, 1000000) + 1000}`).substring(1));\n                } else if (MathUtil.intMod(inNano, 1000) === 0) {\n                    buf.append((`${MathUtil.intDiv(inNano, 1000) + 1000000}`).substring(1));\n                } else {\n                    buf.append((`${(inNano) + 1000000000}`).substring(1));\n                }\n            }\n        } else if (this.fractionalDigits > 0 || (this.fractionalDigits === -1 && inNano > 0)) {\n            buf.append('.');\n            let div = 100000000;\n            for (let i = 0; ((this.fractionalDigits === -1 && inNano > 0) || i < this.fractionalDigits); i++) {\n                const digit = MathUtil.intDiv(inNano, div);\n                buf.append(digit);\n                inNano = inNano - (digit * div);\n                div = MathUtil.intDiv(div, 10);\n            }\n        }\n        buf.append('Z');\n        return true;\n    }\n\n    parse(context, text, position) {\n        // new context to avoid overwriting fields like year/month/day\n        const newContext = context.copy();\n        const minDigits = (this.fractionalDigits < 0 ? 0 : this.fractionalDigits);\n        const maxDigits = (this.fractionalDigits < 0 ? 9 : this.fractionalDigits);\n        const parser = new DateTimeFormatterBuilder()\n            .append(DateTimeFormatter.ISO_LOCAL_DATE).appendLiteral('T')\n            .appendValue(ChronoField.HOUR_OF_DAY, 2).appendLiteral(':').appendValue(ChronoField.MINUTE_OF_HOUR, 2).appendLiteral(':')\n            .appendValue(ChronoField.SECOND_OF_MINUTE, 2).appendFraction(ChronoField.NANO_OF_SECOND, minDigits, maxDigits, true).appendLiteral('Z')\n            .toFormatter()._toPrinterParser(false);\n        const pos = parser.parse(newContext, text, position);\n        if (pos < 0) {\n            return pos;\n        }\n        // parser restricts most fields to 2 digits, so definitely int\n        // correctly parsed nano is also guaranteed to be valid\n        const yearParsed = newContext.getParsed(ChronoField.YEAR);\n        const month = newContext.getParsed(ChronoField.MONTH_OF_YEAR);\n        const day = newContext.getParsed(ChronoField.DAY_OF_MONTH);\n        let hour = newContext.getParsed(ChronoField.HOUR_OF_DAY);\n        const min = newContext.getParsed(ChronoField.MINUTE_OF_HOUR);\n        const secVal = newContext.getParsed(ChronoField.SECOND_OF_MINUTE);\n        const nanoVal = newContext.getParsed(ChronoField.NANO_OF_SECOND);\n        let sec = (secVal != null ? secVal : 0);\n        const nano = (nanoVal != null ? nanoVal : 0);\n        const year = MathUtil.intMod(yearParsed, 10000);\n        let days = 0;\n        if (hour === 24 && min === 0 && sec === 0 && nano === 0) {\n            hour = 0;\n            days = 1;\n        } else if (hour === 23 && min === 59 && sec === 60) {\n            context.setParsedLeapSecond();\n            sec = 59;\n        }\n        let instantSecs;\n        try {\n            const ldt = LocalDateTime.of(year, month, day, hour, min, sec, 0).plusDays(days);\n            instantSecs = ldt.toEpochSecond(ZoneOffset.UTC);\n            instantSecs += MathUtil.safeMultiply(MathUtil.intDiv(yearParsed, 10000), SECONDS_PER_10000_YEARS);\n        } catch (ex) {\n            return ~position;\n        }\n        let successPos = pos;\n        successPos = context.setParsedField(ChronoField.INSTANT_SECONDS, instantSecs, position, successPos);\n        return context.setParsedField(ChronoField.NANO_OF_SECOND, nano, position, successPos);\n    }\n\n    toString() {\n        return 'Instant()';\n    }\n}\n\n/**\n * Used by parseDefaulting().\n * @implements {DateTimePrinterParser}\n * @private\n */\nclass DefaultingParser {\n    /**\n     * @param {TemporalField} field \n     * @param {number} value \n     */\n    constructor(field, value) {\n        this._field = field;\n        this._value = value;\n    }\n\n    /**\n     * @param {DateTimePrintContext} context\n     * @param {StringBuilder} buf\n     * @return {boolean}\n     */\n    print() {\n        return true;\n    }\n\n\n    /** \n     * @param {DateTimeParseContext} context \n     * @param {string} text\n     * @param {number} position \n     * @returns {number}\n     */\n    parse(context, text, position) {\n        if (context.getParsed(this._field) == null) {\n            context.setParsedField(this._field, this._value, position, position);\n        }\n        return position;\n    }\n}\n\nexport function _init() {\n    ReducedPrinterParser.BASE_DATE = LocalDate.of(2000, 1, 1);\n\n    DateTimeFormatterBuilder.CompositePrinterParser = CompositePrinterParser;\n    DateTimeFormatterBuilder.PadPrinterParserDecorator = PadPrinterParserDecorator;\n    DateTimeFormatterBuilder.SettingsParser = SettingsParser;\n    DateTimeFormatterBuilder.CharLiteralPrinterParser = StringLiteralPrinterParser;\n    DateTimeFormatterBuilder.StringLiteralPrinterParser = StringLiteralPrinterParser;\n    DateTimeFormatterBuilder.CharLiteralPrinterParser = CharLiteralPrinterParser;\n    DateTimeFormatterBuilder.NumberPrinterParser = NumberPrinterParser;\n    DateTimeFormatterBuilder.ReducedPrinterParser = ReducedPrinterParser;\n    DateTimeFormatterBuilder.FractionPrinterParser = FractionPrinterParser;\n    DateTimeFormatterBuilder.OffsetIdPrinterParser = OffsetIdPrinterParser;\n    DateTimeFormatterBuilder.ZoneIdPrinterParser = ZoneIdPrinterParser;\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\n/**\n * @private\n */\nexport class StringBuilder {\n    constructor(){\n        this._str = '';\n    }\n\n    append(str){\n        this._str += str;\n        return this;\n    }\n\n    appendChar(str){\n        this._str += str[0];\n        return this;\n    }\n\n    insert(offset, str){\n        this._str = this._str.slice(0, offset) + str + this._str.slice(offset);\n        return this;\n    }\n\n    replace(start, end, str){\n        this._str = this._str.slice(0, start) + str + this._str.slice(end);\n        return this;\n    }\n\n    length(){\n        return this._str.length;\n    }\n\n    setLength(length){\n        this._str = this._str.slice(0, length);\n        return this;\n    }\n\n\n    toString() {\n        return this._str;\n    }\n}\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { assert, requireNonNull } from '../assert';\n\nimport { DateTimeParseException, NullPointerException } from '../errors';\n\nimport { Period } from '../Period';\n\nimport { ParsePosition } from './ParsePosition';\nimport { DateTimeBuilder } from './DateTimeBuilder';\nimport { DateTimeParseContext } from './DateTimeParseContext';\nimport { DateTimePrintContext } from './DateTimePrintContext';\nimport { DateTimeFormatterBuilder } from './DateTimeFormatterBuilder';\nimport { SignStyle } from './SignStyle';\nimport { StringBuilder } from './StringBuilder';\nimport { ResolverStyle } from './ResolverStyle';\n\nimport { IsoChronology } from '../chrono/IsoChronology';\nimport { ChronoField } from '../temporal/ChronoField';\nimport { createTemporalQuery } from '../temporal/TemporalQuery';\n\n/**\n *\n * ### Static properties of Class {@link DateTimeFormatter}\n *\n * DateTimeFormatter.ISO_LOCAL_DATE\n *\n * DateTimeFormatter.ISO_LOCAL_TIME\n *\n * DateTimeFormatter.ISO_LOCAL_DATE_TIME\n *\n */\nexport class DateTimeFormatter {\n\n    //-----------------------------------------------------------------------\n    /**\n     * A query that provides access to the excess days that were parsed.\n     *\n     * This returns a singleton {@link TemporalQuery} that provides\n     * access to additional information from the parse. The query always returns\n     * a non-null period, with a zero period returned instead of null.\n     *\n     * There are two situations where this query may return a non-zero period.\n     *\n     * * If the {@link ResolverStyle} is {@link LENIENT} and a time is parsed\n     *   without a date, then the complete result of the parse consists of a\n     *   {@link LocalTime} and an excess {@link Period} in days.\n     * * If the {@link ResolverStyle} is {@link SMART} and a time is parsed\n     *   without a date where the time is 24:00:00, then the complete result of\n     *   the parse consists of a {@link LocalTime} of 00:00:00 and an excess\n     *   {@link Period} of one day.\n     *\n     * In both cases, if a complete {@link ChronoLocalDateTime} or {@link Instant}\n     * is parsed, then the excess days are added to the date part.\n     * As a result, this query will return a zero period.\n     *\n     * The {@link SMART} behaviour handles the common \"end of day\" 24:00 value.\n     * Processing in {@link LENIENT} mode also produces the same result:\n     * <pre>\n     *  Text to parse        Parsed object                         Excess days\n     *  \"2012-12-03T00:00\"   LocalDateTime.of(2012, 12, 3, 0, 0)   ZERO\n     *  \"2012-12-03T24:00\"   LocalDateTime.of(2012, 12, 4, 0, 0)   ZERO\n     *  \"00:00\"              LocalTime.of(0, 0)                    ZERO\n     *  \"24:00\"              LocalTime.of(0, 0)                    Period.ofDays(1)\n     * </pre>\n     * The query can be used as follows:\n     * <pre>\n     *  TemporalAccessor parsed = formatter.parse(str);\n     *  LocalTime time = parsed.query(LocalTime.FROM);\n     *  Period extraDays = parsed.query(DateTimeFormatter.parsedExcessDays());\n     * </pre>\n     * @return {TemporalQuery} a query that provides access to the excess days that were parsed\n     */\n    static parsedExcessDays() {\n        return DateTimeFormatter.PARSED_EXCESS_DAYS;\n    }\n\n    /**\n     * A query that provides access to whether a leap-second was parsed.\n     *\n     * This returns a singleton {@link TemporalQuery} that provides\n     * access to additional information from the parse. The query always returns\n     * a non-null boolean, true if parsing saw a leap-second, false if not.\n     *\n     * Instant parsing handles the special \"leap second\" time of '23:59:60'.\n     * Leap seconds occur at '23:59:60' in the UTC time-zone, but at other\n     * local times in different time-zones. To avoid this potential ambiguity,\n     * the handling of leap-seconds is limited to\n     * {@link DateTimeFormatterBuilder#appendInstant}, as that method\n     * always parses the instant with the UTC zone offset.\n     *\n     * If the time '23:59:60' is received, then a simple conversion is applied,\n     * replacing the second-of-minute of 60 with 59. This query can be used\n     * on the parse result to determine if the leap-second adjustment was made.\n     * The query will return one second of excess if it did adjust to remove\n     * the leap-second, and zero if not. Note that applying a leap-second\n     * smoothing mechanism, such as UTC-SLS, is the responsibility of the\n     * application, as follows:\n     * <pre>\n     *  TemporalAccessor parsed = formatter.parse(str);\n     *  Instant instant = parsed.query(Instant::from);\n     *  if (parsed.query(DateTimeFormatter.parsedLeapSecond())) {\n     *    // validate leap-second is correct and apply correct smoothing\n     *  }\n     * </pre>\n     * @return a query that provides access to whether a leap-second was parsed\n     */\n    static parsedLeapSecond() {\n        return DateTimeFormatter.PARSED_LEAP_SECOND;\n    }\n\n    /**\n     * Creates a formatter using the specified pattern.\n     *\n     * This method will create a formatter based on a simple pattern of letters and symbols.\n     *\n     * The returned formatter will use the default locale, but this can be changed\n     * using {@link DateTimeFormatter.withLocale}.\n     *\n     * All letters 'A' to 'Z' and 'a' to 'z' are reserved as pattern letters.\n     * The following pattern letters are defined:\n     * <pre>\n     *  |Symbol  |Meaning                     |Presentation      |Examples\n     *  |--------|----------------------------|------------------|----------------------------------------------------\n     *  | G      | era                        | number/text      | 1; 01; AD; Anno Domini\n     *  | u      | year                       | year             | 2004; 04\n     *  | y      | year-of-era                | year             | 2004; 04\n     *  | D      | day-of-year                | number           | 189\n     *  | M      | month-of-year              | number/text      | 7; 07; Jul; July; J\n     *  | d      | day-of-month               | number           | 10\n     *  |        |                            |                  |\n     *  | Q      | quarter-of-year            | number/text      | 3; 03; Q3\n     *  | Y      | week-based-year            | year             | 1996; 96\n     *  | w      | week-of-year               | number           | 27\n     *  | W      | week-of-month              | number           | 27\n     *  | e      | localized day-of-week      | number           | 2; Tue; Tuesday; T\n     *  | E      | day-of-week                | number/text      | 2; Tue; Tuesday; T\n     *  | F      | week-of-month              | number           | 3\n     *  |        |                            |                  |\n     *  | a      | am-pm-of-day               | text             | PM\n     *  | h      | clock-hour-of-am-pm (1-12) | number           | 12\n     *  | K      | hour-of-am-pm (0-11)       | number           | 0\n     *  | k      | clock-hour-of-am-pm (1-24) | number           | 0\n     *  |        |                            |                  |\n     *  | H      | hour-of-day (0-23)         | number           | 0\n     *  | m      | minute-of-hour             | number           | 30\n     *  | s      | second-of-minute           | number           | 55\n     *  | S      | fraction-of-second         | fraction         | 978\n     *  | A      | milli-of-day               | number           | 1234\n     *  | n      | nano-of-second             | number           | 987654321\n     *  | N      | nano-of-day                | number           | 1234000000\n     *  |        |                            |                  |\n     *  | V      | time-zone ID               | zone-id          | America/Los_Angeles; Z; -08:30\n     *  | z      | time-zone name             | zone-name        | Pacific Standard Time; PST\n     *  | X      | zone-offset 'Z' for zero   | offset-X         | Z; -08; -0830; -08:30; -083015; -08:30:15;\n     *  | x      | zone-offset                | offset-x         | +0000; -08; -0830; -08:30; -083015; -08:30:15;\n     *  | Z      | zone-offset                | offset-Z         | +0000; -0800; -08:00;\n     *  |        |                            |                  |\n     *  | p      | pad next                   | pad modifier     | 1\n     *  |        |                            |                  |\n     *  | '      | escape for text            | delimiter        |\n     *  | ''     | single quote               | literal          | '\n     *  | [      | optional section start     |                  |\n     *  | ]      | optional section end       |                  |\n     *  | {}     | reserved for future use    |                  |\n     * </pre>\n     *\n     * The count of pattern letters determine the format.\n     *\n     * **Text**: The text style is determined based on the number of pattern letters used.\n     * Less than 4 pattern letters will use the short form `TextStyle.SHORT`.\n     * Exactly 4 pattern letters will use the full form `TextStyle.FULL`.\n     * Exactly 5 pattern letters will use the narrow form `TextStyle.NARROW`.\n     *\n     * **NOTE**: since text styles require locale support, they are currently not supported in js-joda!\n     *\n     * **Number**: If the count of letters is one, then the value is printed using the minimum number\n     * of digits and without padding as per {@link DateTimeFormatterBuilder.appendValue}.\n     * Otherwise, the count of digits is used as the width of the output field as per\n     * {@link DateTimeFormatterBuilder.appendValue}.\n     *\n     * **Number/Text**: If the count of pattern letters is 3 or greater, use the Text rules above.\n     * Otherwise use the Number rules above.\n     *\n     * **Fraction**: Outputs the nano-of-second field as a fraction-of-second.\n     * The nano-of-second value has nine digits, thus the count of pattern letters is from 1 to 9.\n     * If it is less than 9, then the nano-of-second value is truncated, with only the most\n     * significant digits being output.\n     * When parsing in strict mode, the number of parsed digits must match the count of pattern letters.\n     * When parsing in lenient mode, the number of parsed digits must be at least the count of pattern\n     * letters, up to 9 digits.\n     *\n     * **Year**: The count of letters determines the minimum field width below which padding is used.\n     * If the count of letters is two, then a {@link DateTimeFormatterBuilder.appendValueReduced}\n     * two digit form is used.\n     * For printing, this outputs the rightmost two digits. For parsing, this will parse using the\n     * base value of 2000, resulting in a year within the range 2000 to 2099 inclusive.\n     * If the count of letters is less than four (but not two), then the sign is only output for negative\n     * years as per `SignStyle.NORMAL`.\n     * Otherwise, the sign is output if the pad width is exceeded, as per `SignStyle.EXCEEDS_PAD`\n     *\n     * **ZoneId**: This outputs the time-zone ID, such as 'Europe/Paris'.\n     * If the count of letters is two, then the time-zone ID is output.\n     * Any other count of letters throws `IllegalArgumentException`.\n     *\n     * **Zone names**: This outputs the display name of the time-zone ID.\n     * If the count of letters is one, two or three, then the short name is output.\n     * If the count of letters is four, then the full name is output.\n     * Five or more letters throws `IllegalArgumentException`.\n     *\n     * **NOTE**: since zone ids and name require the iana tzdb, they are currently not supported in js-joda!\n     *\n     * **Offset X and x**: This formats the offset based on the number of pattern letters.\n     * One letter outputs just the hour', such as '+01', unless the minute is non-zero\n     * in which case the minute is also output, such as '+0130'.\n     * Two letters outputs the hour and minute, without a colon, such as '+0130'.\n     * Three letters outputs the hour and minute, with a colon, such as '+01:30'.\n     * Four letters outputs the hour and minute and optional second, without a colon, such as '+013015'.\n     * Five letters outputs the hour and minute and optional second, with a colon, such as '+01:30:15'.\n     * Six or more letters throws `IllegalArgumentException`.\n     * Pattern letter 'X' (upper case) will output 'Z' when the offset to be output would be zero,\n     * whereas pattern letter 'x' (lower case) will output '+00', '+0000', or '+00:00'.\n     *\n     * **Offset Z**: This formats the offset based on the number of pattern letters.\n     * One, two or three letters outputs the hour and minute, without a colon, such as '+0130'.\n     * Four or more letters throws `IllegalArgumentException`.\n     * The output will be '+0000' when the offset is zero.\n     *\n     * **Optional section**: The optional section markers work exactly like calling\n     * {@link DateTimeFormatterBuilder.optionalStart} and {@link DateTimeFormatterBuilder.optionalEnd}.\n     *\n     * **Pad modifier**: Modifies the pattern that immediately follows to be padded with spaces.\n     * The pad width is determined by the number of pattern letters.\n     * This is the same as calling {@link DateTimeFormatterBuilder.padNext}.\n     *\n     * For example, 'ppH' outputs the hour-of-day padded on the left with spaces to a width of 2.\n     *\n     * Any unrecognized letter is an error.\n     * Any non-letter character, other than '[', ']', '{', '}' and the single quote will be output directly.\n     * Despite this, it is recommended to use single quotes around all characters that you want to\n     * output directly to ensure that future changes do not break your application.\n     *\n     * @param {String} pattern  the pattern to use, not null\n     * @return {DateTimeFormatter} the formatter based on the pattern, not null\n     * @throws IllegalArgumentException if the pattern is invalid\n     * @see DateTimeFormatterBuilder#appendPattern(String)\n     * @example\n     * var s = LocalDate.parse('2016-04-01').format(DateTimeFormatter.ofPattern('d MM yyyy'));\n     * console.log(s); // '1 04 2016'\n     *\n     */\n    static ofPattern(pattern) {\n        return new DateTimeFormatterBuilder().appendPattern(pattern).toFormatter();\n    }\n\n\n    //-----------------------------------------------------------------------\n    /**\n     * Constructor.\n     *\n     * @param printerParser  the printer/parser to use, not null\n     * @param locale  the locale to use, not null\n     * @param decimalStyle  the decimal style to use, not null\n     * @param resolverStyle  the resolver style to use, not null\n     * @param resolverFields  the fields to use during resolving, null for all fields\n     * @param chrono  the chronology to use, null for no override\n     * @param zone  the zone to use, null for no override\n     * @private\n     */\n    constructor(printerParser, locale, decimalStyle, resolverStyle, resolverFields, chrono=IsoChronology.INSTANCE, zone) {\n        assert(printerParser != null);\n        assert(decimalStyle != null);\n        assert(resolverStyle != null);\n        /**\n         * The printer and/or parser to use, not null.\n         */\n        this._printerParser = printerParser;\n        /**\n         * The locale to use for formatting. // nyi\n         */\n        this._locale = locale;\n        /**\n         * The symbols to use for formatting, not null.\n         */\n        this._decimalStyle = decimalStyle;\n        /**\n         * The resolver style to use, not null.\n         */\n        this._resolverStyle = resolverStyle;\n        /**\n         * The fields to use in resolving, null for all fields.\n         */\n        this._resolverFields = resolverFields;\n        /**\n         * The chronology to use for formatting, null for no override.\n         */\n        this._chrono = chrono;\n        /**\n         * The zone to use for formatting, null for no override. // nyi\n         */\n        this._zone = zone;\n    }\n\n    locale() {\n        return this._locale;\n    }\n\n    decimalStyle() {\n        return this._decimalStyle;\n    }\n\n    chronology() {\n        return this._chrono;\n    }\n\n    /**\n     * Returns a copy of this formatter with a new override chronology.\n     *\n     * This returns a formatter with similar state to this formatter but\n     * with the override chronology set.\n     * By default, a formatter has no override chronology, returning null.\n     *\n     * If an override is added, then any date that is printed or parsed will be affected.\n     *\n     * When printing, if the {@link Temporal} object contains a date then it will\n     * be converted to a date in the override chronology.\n     * Any time or zone will be retained unless overridden.\n     * The converted result will behave in a manner equivalent to an implementation\n     * of {@link ChronoLocalDate},{@link ChronoLocalDateTime} or {@link ChronoZonedDateTime}.\n     *\n     * When parsing, the override chronology will be used to interpret the\n     * {@link ChronoField} into a date unless the\n     * formatter directly parses a valid chronology.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param chrono  the new chronology, not null\n     * @return a formatter based on this formatter with the requested override chronology, not null\n     */\n    withChronology(chrono) {\n        if (this._chrono != null && this._chrono.equals(chrono)) {\n            return this;\n        }\n        return new DateTimeFormatter(this._printerParser, this._locale, this._decimalStyle,\n            this._resolverStyle, this._resolverFields, chrono, this._zone);\n    }\n\n    /**\n     * not yet supported\n     * @returns {DateTimeFormatter}\n     */\n    withLocale(){\n        return this;\n    }\n\n    /**\n     * Returns a copy of this formatter with a new resolver style.\n     * <p>\n     * This returns a formatter with similar state to this formatter but\n     * with the resolver style set. By default, a formatter has the\n     * {@link ResolverStyle#SMART SMART} resolver style.\n     * <p>\n     * Changing the resolver style only has an effect during parsing.\n     * Parsing a text string occurs in two phases.\n     * Phase 1 is a basic text parse according to the fields added to the builder.\n     * Phase 2 resolves the parsed field-value pairs into date and/or time objects.\n     * The resolver style is used to control how phase 2, resolving, happens.\n     * See {@link ResolverStyle} for more information on the options available.\n     * <p>\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {ResolverStyle} resolverStyle  the new resolver style, not null\n     * @return {DateTimeFormatter} a formatter based on this formatter with the requested resolver style, not null\n     */\n    withResolverStyle(resolverStyle) {\n        requireNonNull(resolverStyle, 'resolverStyle');\n        if (resolverStyle.equals(this._resolverStyle)) {\n            return this;\n        }\n        return new DateTimeFormatter(this._printerParser, this._locale, this._decimalStyle, resolverStyle, this._resolverFields, this._chrono, this._zone);\n    }\n    //-----------------------------------------------------------------------\n    /**\n     * Formats a date-time object using this formatter.\n     *\n     * This formats the date-time to a String using the rules of the formatter.\n     *\n     * @param {TemporalAccessor} temporal  the temporal object to print, not null\n     * @return {String} the printed string, not null\n     * @throws DateTimeException if an error occurs during formatting\n     */\n    format(temporal) {\n        const buf = new StringBuilder(32);\n        this._formatTo(temporal, buf);\n        return buf.toString();\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Formats a date-time object to an {@link Appendable} using this formatter.\n     *\n     * This formats the date-time to the specified destination.\n     * {@link Appendable} is a general purpose interface that is implemented by all\n     * key character output classes including {@link StringBuffer}, {@link StringBuilder},\n     * {@link PrintStream} and {@link Writer}.\n     *\n     * Although {@link Appendable} methods throw an {@link IOException}, this method does not.\n     * Instead, any {@link IOException} is wrapped in a runtime exception.\n     *\n     * @param {TemporalAccessor} temporal - the temporal object to print, not null\n     * @param {StringBuilder} appendable - the appendable to print to, not null\n     * @throws DateTimeException if an error occurs during formatting\n     */\n    _formatTo(temporal, appendable) {\n        requireNonNull(temporal, 'temporal');\n        requireNonNull(appendable, 'appendable');\n        const context = new DateTimePrintContext(temporal, this);\n        this._printerParser.print(context, appendable);\n    }\n\n    /**\n     * function overloading for {@link DateTimeFormatter.parse}\n     *\n     * if called with one arg {@link DateTimeFormatter.parse1} is called\n     * otherwise {@link DateTimeFormatter.parse2}\n     *\n     * @param {string} text\n     * @param {TemporalQuery} type\n     * @return {TemporalAccessor}\n     */\n    parse(text, type){\n        if(arguments.length === 1){\n            return this.parse1(text);\n        } else {\n            return this.parse2(text, type);\n        }\n    }\n\n    /**\n     * Fully parses the text producing a temporal object.\n     *\n     * This parses the entire text producing a temporal object.\n     * It is typically more useful to use {@link parse}.\n     * The result of this method is {@link TemporalAccessor} which has been resolved,\n     * applying basic validation checks to help ensure a valid date-time.\n     *\n     * If the parse completes without reading the entire length of the text,\n     * or a problem occurs during parsing or merging, then an exception is thrown.\n     *\n     * @param {String} text  the text to parse, not null\n     * @return {TemporalAccessor} the parsed temporal object, not null\n     * @throws DateTimeParseException if unable to parse the requested result\n     */\n    parse1(text) {\n        requireNonNull(text, 'text');\n        try {\n            return this._parseToBuilder(text, null).resolve(this._resolverStyle, this._resolverFields);\n        } catch (ex) {\n            if(ex instanceof DateTimeParseException){\n                throw ex;\n            } else {\n                throw this._createError(text, ex);\n            }\n        }\n    }\n\n    /**\n     * Fully parses the text producing a temporal object.\n     *\n     * This parses the entire text producing a temporal object.\n     * It is typically more useful to use {@link parse}.\n     * The result of this method is {@link TemporalAccessor} which has been resolved,\n     * applying basic validation checks to help ensure a valid date-time.\n     *\n     * If the parse completes without reading the entire length of the text,\n     * or a problem occurs during parsing or merging, then an exception is thrown.\n     *\n     * @param text  the text to parse, not null\n     * @param type the type to extract, not null\n * @return the parsed temporal object, not null\n     * @throws DateTimeParseException if unable to parse the requested result\n     */\n    parse2(text, type) {\n        requireNonNull(text, 'text');\n        requireNonNull(type, 'type');\n        try {\n            const builder = this._parseToBuilder(text, null).resolve(this._resolverStyle, this._resolverFields);\n            return builder.build(type);\n        } catch (ex) {\n            if(ex instanceof DateTimeParseException){\n                throw ex;\n            } else {\n                throw this._createError(text, ex);\n            }\n        }\n    }\n\n    _createError(text, ex) {\n        let abbr = '';\n        if (text.length > 64) {\n            abbr = `${text.substring(0, 64)}...`;\n        } else {\n            abbr = text;\n        }\n        return new DateTimeParseException(`Text '${abbr}' could not be parsed: ${ex.message}`, text, 0, ex);\n    }\n\n\n    /**\n     * Parses the text to a builder.\n     *\n     * This parses to a {@link DateTimeBuilder} ensuring that the text is fully parsed.\n     * This method throws {@link DateTimeParseException} if unable to parse, or\n     * some other {@link DateTimeException} if another date/time problem occurs.\n     *\n     * @param text  the text to parse, not null\n     * @param position  the position to parse from, updated with length parsed\n     *  and the index of any error, null if parsing whole string\n     * @return the engine representing the result of the parse, not null\n     * @throws DateTimeParseException if the parse fails\n     */\n    _parseToBuilder(text, position) {\n        const pos = (position != null ? position : new ParsePosition(0));\n        const result = this._parseUnresolved0(text, pos);\n        if (result == null || pos.getErrorIndex() >= 0 || (position == null && pos.getIndex() < text.length)) {\n            let abbr = '';\n            if (text.length > 64) {\n                abbr = `${text.substr(0, 64).toString()}...`;\n            } else {\n                abbr = text;\n            }\n            if (pos.getErrorIndex() >= 0) {\n                throw new DateTimeParseException(`Text '${abbr}' could not be parsed at index ${ \n                    pos.getErrorIndex()}`, text, pos.getErrorIndex());\n            } else {\n                throw new DateTimeParseException(`Text '${abbr}' could not be parsed, unparsed text found at index ${ \n                    pos.getIndex()}`, text, pos.getIndex());\n            }\n        }\n        return result.toBuilder();\n    }\n\n    /**\n     * Parses the text using this formatter, without resolving the result, intended\n     * for advanced use cases.\n     *\n     * Parsing is implemented as a two-phase operation.\n     * First, the text is parsed using the layout defined by the formatter, producing\n     * a {@link Map} of field to value, a {@link ZoneId} and a {@link Chronology}.\n     * Second, the parsed data is *resolved*, by validating, combining and\n     * simplifying the various fields into more useful ones.\n     * This method performs the parsing stage but not the resolving stage.\n     *\n     * The result of this method is {@link TemporalAccessor} which represents the\n     * data as seen in the input. Values are not validated, thus parsing a date string\n     * of '2012-00-65' would result in a temporal with three fields - year of '2012',\n     * month of '0' and day-of-month of '65'.\n     *\n     * The text will be parsed from the specified start {@link ParsePosition}.\n     * The entire length of the text does not have to be parsed, the {@link ParsePosition}\n     * will be updated with the index at the end of parsing.\n     *\n     * Errors are returned using the error index field of the {@link ParsePosition}\n     * instead of {@link DateTimeParseException}.\n     * The returned error index will be set to an index indicative of the error.\n     * Callers must check for errors before using the context.\n     *\n     * If the formatter parses the same field more than once with different values,\n     * the result will be an error.\n     *\n     * This method is intended for advanced use cases that need access to the\n     * internal state during parsing. Typical application code should use\n     * {@link parse} or the parse method on the target type.\n     *\n     * @param text  the text to parse, not null\n     * @param position  the position to parse from, updated with length parsed\n     *  and the index of any error, not null\n     * @return the parsed text, null if the parse results in an error\n     * @throws DateTimeException if some problem occurs during parsing\n     * @throws IndexOutOfBoundsException if the position is invalid\n     */\n    parseUnresolved(text, position) {\n        return this._parseUnresolved0(text, position);\n    }\n\n    _parseUnresolved0(text, position) {\n        assert(text != null, 'text', NullPointerException);\n        assert(position != null, 'position', NullPointerException);\n        const context = new DateTimeParseContext(this);\n        let pos = position.getIndex();\n        pos = this._printerParser.parse(context, text, pos);\n        if (pos < 0) {\n            position.setErrorIndex(~pos);  // index not updated from input\n            return null;\n        }\n        position.setIndex(pos);  // errorIndex not updated from input\n        return context.toParsed();\n    }\n\n    /**\n     * Returns the formatter as a composite printer parser.\n     *\n     * @param {boolean} optional  whether the printer/parser should be optional\n     * @return {CompositePrinterParser} the printer/parser, not null\n     */\n    _toPrinterParser(optional) {\n        return this._printerParser.withOptional(optional);\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    toString() {\n        const pattern = this._printerParser.toString();\n        return pattern.indexOf('[') === 0 ? pattern : pattern.substring(1, pattern.length - 1);\n    }\n\n}\n\nexport function _init() {\n\n    DateTimeFormatter.ISO_LOCAL_DATE = new DateTimeFormatterBuilder()\n        .appendValue(ChronoField.YEAR, 4, 10, SignStyle.EXCEEDS_PAD)\n        .appendLiteral('-')\n        .appendValue(ChronoField.MONTH_OF_YEAR, 2)\n        .appendLiteral('-')\n        .appendValue(ChronoField.DAY_OF_MONTH, 2)\n        .toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);\n\n    DateTimeFormatter.ISO_LOCAL_TIME = new DateTimeFormatterBuilder()\n        .appendValue(ChronoField.HOUR_OF_DAY, 2)\n        .appendLiteral(':')\n        .appendValue(ChronoField.MINUTE_OF_HOUR, 2)\n        .optionalStart()\n        .appendLiteral(':')\n        .appendValue(ChronoField.SECOND_OF_MINUTE, 2)\n        .optionalStart()\n        .appendFraction(ChronoField.NANO_OF_SECOND, 0, 9, true)\n        .toFormatter(ResolverStyle.STRICT);\n\n    DateTimeFormatter.ISO_LOCAL_DATE_TIME = new DateTimeFormatterBuilder()\n        .parseCaseInsensitive()\n        .append(DateTimeFormatter.ISO_LOCAL_DATE)\n        .appendLiteral('T')\n        .append(DateTimeFormatter.ISO_LOCAL_TIME)\n        .toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);\n\n    DateTimeFormatter.ISO_INSTANT = new DateTimeFormatterBuilder()\n        .parseCaseInsensitive()\n        .appendInstant()\n        .toFormatter(ResolverStyle.STRICT);\n\n    DateTimeFormatter.ISO_OFFSET_DATE_TIME = new DateTimeFormatterBuilder()\n        .parseCaseInsensitive()\n        .append(DateTimeFormatter.ISO_LOCAL_DATE_TIME)\n        .appendOffsetId()\n        .toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);\n\n    DateTimeFormatter.ISO_ZONED_DATE_TIME = new DateTimeFormatterBuilder()\n        .append(DateTimeFormatter.ISO_OFFSET_DATE_TIME)\n        .optionalStart()\n        .appendLiteral('[')\n        .parseCaseSensitive()\n        .appendZoneId()\n        // .appendZoneRegionId()\n        .appendLiteral(']')\n        .toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);\n\n    DateTimeFormatter.BASIC_ISO_DATE = new DateTimeFormatterBuilder()\n        .appendValue(ChronoField.YEAR, 4, 10, SignStyle.EXCEEDS_PAD)\n        .appendValue(ChronoField.MONTH_OF_YEAR, 2)\n        .appendValue(ChronoField.DAY_OF_MONTH, 2)\n        .toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);\n\n    DateTimeFormatter.ISO_OFFSET_DATE = new DateTimeFormatterBuilder()\n        .parseCaseInsensitive()\n        .append(DateTimeFormatter.ISO_LOCAL_DATE)\n        .appendOffsetId()\n        .toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);\n\n    DateTimeFormatter.ISO_OFFSET_TIME = new DateTimeFormatterBuilder()\n        .parseCaseInsensitive()\n        .append(DateTimeFormatter.ISO_LOCAL_TIME)\n        .appendOffsetId()\n        .toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);\n\n    DateTimeFormatter.ISO_ORDINAL_DATE = new DateTimeFormatterBuilder()\n        .appendValue(ChronoField.YEAR, 4, 10, SignStyle.EXCEEDS_PAD)\n        .appendLiteral('-')\n        .appendValue(ChronoField.DAY_OF_YEAR)\n        .toFormatter(ResolverStyle.STRICT);\n\n    DateTimeFormatter.ISO_WEEK_DATE = new DateTimeFormatterBuilder()\n        .appendValue(ChronoField.YEAR, 4, 10, SignStyle.EXCEEDS_PAD)\n        .appendLiteral('-W')\n        .appendValue(ChronoField.ALIGNED_WEEK_OF_YEAR)\n        .appendLiteral('-')\n        .appendValue(ChronoField.DAY_OF_WEEK)\n        .toFormatter(ResolverStyle.STRICT);\n\n    DateTimeFormatter.ISO_DATE = new DateTimeFormatterBuilder()\n        .parseCaseInsensitive()\n        .append(DateTimeFormatter.ISO_LOCAL_DATE)\n        .optionalStart()\n        .appendOffsetId()\n        .optionalEnd()\n        .toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);\n\n    DateTimeFormatter.ISO_TIME = new DateTimeFormatterBuilder()\n        .parseCaseInsensitive()\n        .append(DateTimeFormatter.ISO_LOCAL_TIME)\n        .optionalStart()\n        .appendOffsetId()\n        .optionalEnd()\n        .toFormatter(ResolverStyle.STRICT);\n\n    DateTimeFormatter.ISO_DATE_TIME = new DateTimeFormatterBuilder()\n        .append(DateTimeFormatter.ISO_LOCAL_DATE_TIME)\n        .optionalStart()\n        .appendOffsetId()\n        .optionalEnd()\n        .toFormatter(ResolverStyle.STRICT).withChronology(IsoChronology.INSTANCE);\n\n    // TODO:\n    //  RFC_1123_DATE_TIME - https://www.threeten.org/threetenbp/apidocs/org/threeten/bp/format/DateTimeFormatter.html#RFC_1123_DATE_TIME\n\n    DateTimeFormatter.PARSED_EXCESS_DAYS = createTemporalQuery('PARSED_EXCESS_DAYS', (temporal) => {\n        if (temporal instanceof DateTimeBuilder) {\n            return temporal.excessDays;\n        } else {\n            return Period.ZERO;\n        }\n    });\n\n    DateTimeFormatter.PARSED_LEAP_SECOND = createTemporalQuery('PARSED_LEAP_SECOND', (temporal) => {\n        if (temporal instanceof DateTimeBuilder) {\n            return temporal.leapSecond;\n        } else {\n            return false;\n        }\n    });\n\n\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { abstractMethodFail } from '../assert';\n\n/**\n * Strategy for adjusting a temporal object.\n *\n * Adjusters are a key tool for modifying temporal objects.\n * They exist to externalize the process of adjustment, permitting different\n * approaches, as per the strategy design pattern.\n * Examples might be an adjuster that sets the date avoiding weekends, or one that\n * sets the date to the last day of the month.\n *\n * There are two equivalent ways of using a {@link TemporalAdjuster}.\n * The first is to invoke the method on this interface directly.\n * The second is to use {@link Temporal#with}:\n * <pre>\n *   // these two lines are equivalent, but the second approach is recommended\n *   temporal = thisAdjuster.adjustInto(temporal);\n *   temporal = temporal.with(thisAdjuster);\n * </pre>\n * It is recommended to use the second approach, {@link with},\n * as it is a lot clearer to read in code.\n *\n * See {@link TemporalAdjusters} for a standard set of adjusters, including finding the\n * last day of the month.\n * Adjusters may also be defined by applications.\n *\n * ### Specification for implementors\n *\n * This interface places no restrictions on the mutability of implementations,\n * however immutability is strongly recommended.\n *\n * @interface\n */\nexport class TemporalAdjuster {\n\n    /**\n     * Adjusts the specified temporal object.\n     *\n     * This adjusts the specified temporal object using the logic\n     * encapsulated in the implementing class.\n     * Examples might be an adjuster that sets the date avoiding weekends, or one that\n     * sets the date to the last day of the month.\n     *\n     * There are two equivalent ways of using this method.\n     * The first is to invoke this method directly.\n     * The second is to use {@link Temporal#with}:\n     * <pre>\n     *   // these two lines are equivalent, but the second approach is recommended\n     *   temporal = thisAdjuster.adjustInto(temporal);\n     *   temporal = temporal.with(thisAdjuster);\n     * </pre>\n     * It is recommended to use the second approach, {@link with},\n     * as it is a lot clearer to read in code.\n     *\n     * ### Specification for implementors\n     *\n     * The implementation must take the input object and adjust it.\n     * The implementation defines the logic of the adjustment and is responsible for\n     * documenting that logic. It may use any method on {@link Temporal} to\n     * query the temporal object and perform the adjustment.\n     * The returned object must have the same observable type as the input object\n     *\n     * The input object must not be altered.\n     * Instead, an adjusted copy of the original must be returned.\n     * This provides equivalent, safe behavior for immutable and mutable temporal objects.\n     *\n     * The input temporal object may be in a calendar system other than ISO.\n     * Implementations may choose to document compatibility with other calendar systems,\n     * or reject non-ISO temporal objects by querying the chronology (see {@link TemporalQueries#chronology}).\n     *\n     * This method may be called from multiple threads in parallel.\n     * It must be thread-safe when invoked.\n     *\n     * @param {Temporal} temporal  the temporal object to adjust, not null\n     * @return {Temporal} an object of the same observable type with the adjustment made, not null\n     * @throws DateTimeException if unable to make the adjustment\n     * @throws ArithmeticException if numeric overflow occurs\n     *\n     * @abstract\n     */\n    // eslint-disable-next-line no-unused-vars\n    adjustInto(temporal){\n        abstractMethodFail('adjustInto');\n    }\n\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { requireNonNull } from '../assert';\nimport { IllegalStateException } from '../errors';\n\nimport { TemporalAdjuster } from './TemporalAdjuster';\nimport { ChronoField } from '../temporal/ChronoField';\nimport { ChronoUnit } from '../temporal/ChronoUnit';\nimport { MathUtil } from '../MathUtil';\n\n/**\n * Common implementations of {@link TemporalAdjuster}.\n *\n * This class provides common implementations of {@link TemporalAdjuster}.\n * They are especially useful to document the intent of business logic and\n * often link well to requirements.\n * For example, these two pieces of code do the same thing, but the second\n * one is clearer (assuming that there is a static import of this class):\n * <pre>\n *  // direct manipulation\n *  date.withDayOfMonth(1).plusMonths(1).minusDays(1);\n *  // use of an adjuster from this class\n *  date.with(lastDayOfMonth());\n * </pre>\n * There are two equivalent ways of using a {@link TemporalAdjuster}.\n * The first is to invoke the method on the interface directly.\n * The second is to use {@link Temporal#with}:\n * <pre>\n *   // these two lines are equivalent, but the second approach is recommended\n *   dateTime = adjuster.adjustInto(dateTime);\n *   dateTime = dateTime.with(adjuster);\n * </pre>\n * It is recommended to use the second approach, {@link with},\n * as it is a lot clearer to read in code.\n *\n * ### Specification for implementors\n *\n * This is a thread-safe utility class.\n * All returned adjusters are immutable and thread-safe.\n *\n * The JDK 8 ofDateAdjuster(UnaryOperator) method is not backported.\n */\nexport class TemporalAdjusters {\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns the 'first day of month' adjuster, which returns a new date set to\n     * the first day of the current month.\n     *\n     * The ISO calendar system behaves as follows:\n     *\n     * * The input 2011-01-15 will return 2011-01-01.\n     * * The input 2011-02-15 will return 2011-02-01.\n     *\n     * The behavior is suitable for use with most calendar systems.\n     * It is equivalent to:\n     * <pre>\n     *  temporal.with(DAY_OF_MONTH, 1);\n     * </pre>\n     *\n     * @return {TemporalAdjuster} the first day-of-month adjuster, not null\n     */\n    static firstDayOfMonth() {\n        return Impl.FIRST_DAY_OF_MONTH;\n    }\n\n    /**\n     * Returns the 'last day of month' adjuster, which returns a new date set to\n     * the last day of the current month.\n     *\n     * The ISO calendar system behaves as follows:\n     *\n     * * The input 2011-01-15 will return 2011-01-31.\n     * * The input 2011-02-15 will return 2011-02-28.\n     * * The input 2012-02-15 will return 2012-02-29 (leap year).\n     * * The input 2011-04-15 will return 2011-04-30.\n     *\n     * The behavior is suitable for use with most calendar systems.\n     * It is equivalent to:\n     * <pre>\n     *  long lastDay = temporal.range(DAY_OF_MONTH).getMaximum();\n     *  temporal.with(DAY_OF_MONTH, lastDay);\n     * </pre>\n     *\n     * @return {TemporalAdjuster} the last day-of-month adjuster, not null\n     */\n    static lastDayOfMonth() {\n        return Impl.LAST_DAY_OF_MONTH;\n    }\n\n    /**\n     * Returns the 'first day of next month' adjuster, which returns a new date set to\n     * the first day of the next month.\n     *\n     * The ISO calendar system behaves as follows:\n     *\n     * * The input 2011-01-15 will return 2011-02-01.\n     * * The input 2011-02-15 will return 2011-03-01.\n     *\n     * The behavior is suitable for use with most calendar systems.\n     * It is equivalent to:\n     * <pre>\n     *  temporal.with(DAY_OF_MONTH, 1).plus(1, MONTHS);\n     * </pre>\n     *\n     * @return {TemporalAdjuster} the first day of next month adjuster, not null\n     */\n    static firstDayOfNextMonth() {\n        return Impl.FIRST_DAY_OF_NEXT_MONTH;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns the 'first day of year' adjuster, which returns a new date set to\n     * the first day of the current year.\n     *\n     * The ISO calendar system behaves as follows:\n     *\n     * * The input 2011-01-15 will return 2011-01-01.\n     * * The input 2011-02-15 will return 2011-01-01.\n     *\n     * The behavior is suitable for use with most calendar systems.\n     * It is equivalent to:\n     * <pre>\n     *  temporal.with(DAY_OF_YEAR, 1);\n     * </pre>\n     *\n     * @return {TemporalAdjuster} the first day-of-year adjuster, not null\n     */\n    static firstDayOfYear() {\n        return Impl.FIRST_DAY_OF_YEAR;\n    }\n\n    /**\n     * Returns the 'last day of year' adjuster, which returns a new date set to\n     * the last day of the current year.\n     *\n     * The ISO calendar system behaves as follows:\n     *\n     * * The input 2011-01-15 will return 2011-12-31.\n     * * The input 2011-02-15 will return 2011-12-31.\n     *\n     * The behavior is suitable for use with most calendar systems.\n     * It is equivalent to:\n     * <pre>\n     *  long lastDay = temporal.range(DAY_OF_YEAR).getMaximum();\n     *  temporal.with(DAY_OF_YEAR, lastDay);\n     * </pre>\n     *\n     * @return {TemporalAdjuster} the last day-of-year adjuster, not null\n     */\n    static lastDayOfYear() {\n        return Impl.LAST_DAY_OF_YEAR;\n    }\n\n    /**\n     * Returns the 'first day of next year' adjuster, which returns a new date set to\n     * the first day of the next year.\n     *\n     * The ISO calendar system behaves as follows:\n     *\n     * * The input 2011-01-15 will return 2012-01-01.\n     *\n     * The behavior is suitable for use with most calendar systems.\n     * It is equivalent to:\n     * <pre>\n     *  temporal.with(DAY_OF_YEAR, 1).plus(1, YEARS);\n     * </pre>\n     *\n     * @return {TemporalAdjuster} the first day of next month adjuster, not null\n     */\n    static firstDayOfNextYear() {\n        return Impl.FIRST_DAY_OF_NEXT_YEAR;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns the first in month adjuster, which returns a new date\n     * in the same month with the first matching day-of-week.\n     * This is used for expressions like 'first Tuesday in March'.\n     *\n     * The ISO calendar system behaves as follows:\n     *\n     * * The input 2011-12-15 for (MONDAY) will return 2011-12-05.\n     * * The input 2011-12-15 for (FRIDAY) will return 2011-12-02.\n     *\n     * The behavior is suitable for use with most calendar systems.\n     * It uses the {@link DAY_OF_WEEK} and {@link DAY_OF_MONTH} fields\n     * and the {@link DAYS} unit, and assumes a seven day week.\n     *\n     * @param {DayOfWeek} dayOfWeek  the day-of-week, not null\n     * @return {TemporalAdjuster} the first in month adjuster, not null\n     */\n    static firstInMonth(dayOfWeek) {\n        requireNonNull(dayOfWeek, 'dayOfWeek');\n        return new DayOfWeekInMonth(1, dayOfWeek);\n    }\n\n    /**\n     * Returns the last in month adjuster, which returns a new date\n     * in the same month with the last matching day-of-week.\n     * This is used for expressions like 'last Tuesday in March'.\n     *\n     * The ISO calendar system behaves as follows:\n     *\n     * * The input 2011-12-15 for (MONDAY) will return 2011-12-26.\n     * * The input 2011-12-15 for (FRIDAY) will return 2011-12-30.\n     *\n     * The behavior is suitable for use with most calendar systems.\n     * It uses the {@link DAY_OF_WEEK} and {@link DAY_OF_MONTH} fields\n     * and the {@link DAYS} unit, and assumes a seven day week.\n     *\n     * @param {DayOfWeek} dayOfWeek  the day-of-week, not null\n     * @return {TemporalAdjuster} the first in month adjuster, not null\n     */\n    static lastInMonth(dayOfWeek) {\n        requireNonNull(dayOfWeek, 'dayOfWeek');\n        return new DayOfWeekInMonth(-1, dayOfWeek);\n    }\n\n    /**\n     * Returns the day-of-week in month adjuster, which returns a new date\n     * in the same month with the ordinal day-of-week.\n     * This is used for expressions like the 'second Tuesday in March'.\n     *\n     * The ISO calendar system behaves as follows:\n     *\n     * * The input 2011-12-15 for (1,TUESDAY) will return 2011-12-06.\n     * * The input 2011-12-15 for (2,TUESDAY) will return 2011-12-13.\n     * * The input 2011-12-15 for (3,TUESDAY) will return 2011-12-20.\n     * * The input 2011-12-15 for (4,TUESDAY) will return 2011-12-27.\n     * * The input 2011-12-15 for (5,TUESDAY) will return 2012-01-03.\n     * * The input 2011-12-15 for (-1,TUESDAY) will return 2011-12-27 (last in month).\n     * * The input 2011-12-15 for (-4,TUESDAY) will return 2011-12-06 (3 weeks before last in month).\n     * * The input 2011-12-15 for (-5,TUESDAY) will return 2011-11-29 (4 weeks before last in month).\n     * * The input 2011-12-15 for (0,TUESDAY) will return 2011-11-29 (last in previous month).\n     *\n     * For a positive or zero ordinal, the algorithm is equivalent to finding the first\n     * day-of-week that matches within the month and then adding a number of weeks to it.\n     * For a negative ordinal, the algorithm is equivalent to finding the last\n     * day-of-week that matches within the month and then subtracting a number of weeks to it.\n     * The ordinal number of weeks is not validated and is interpreted leniently\n     * according to this algorithm. This definition means that an ordinal of zero finds\n     * the last matching day-of-week in the previous month.\n     *\n     * The behavior is suitable for use with most calendar systems.\n     * It uses the {@link DAY_OF_WEEK} and {@link DAY_OF_MONTH} fields\n     * and the {@link DAYS} unit, and assumes a seven day week.\n     *\n     * @param {Number} ordinal  the week within the month, unbounded but typically from -5 to 5\n     * @param {DayOfWeek} dayOfWeek  the day-of-week, not null\n     * @return {TemporalAdjuster} the day-of-week in month adjuster, not null\n     */\n    static dayOfWeekInMonth(ordinal, dayOfWeek) {\n        requireNonNull(dayOfWeek, 'dayOfWeek');\n        return new DayOfWeekInMonth(ordinal, dayOfWeek);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns the next day-of-week adjuster, which adjusts the date to the\n     * first occurrence of the specified day-of-week after the date being adjusted.\n     *\n     * The ISO calendar system behaves as follows:\n     *\n     * * The input 2011-01-15 (a Saturday) for parameter (MONDAY) will return 2011-01-17 (two days later).\n     * * The input 2011-01-15 (a Saturday) for parameter (WEDNESDAY) will return 2011-01-19 (four days later).\n     * * The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-22 (seven days later).\n     *\n     * The behavior is suitable for use with most calendar systems.\n     * It uses the {@link DAY_OF_WEEK} field and the {@link DAYS} unit,\n     * and assumes a seven day week.\n     *\n     * @param {DayOfWeek} dayOfWeek  the day-of-week to move the date to, not null\n     * @return {TemporalAdjuster} the next day-of-week adjuster, not null\n     */\n    static next(dayOfWeek) {\n        return new RelativeDayOfWeek(2, dayOfWeek);\n    }\n\n    /**\n     * Returns the next-or-same day-of-week adjuster, which adjusts the date to the\n     * first occurrence of the specified day-of-week after the date being adjusted\n     * unless it is already on that day in which case the same object is returned.\n     *\n     * The ISO calendar system behaves as follows:\n     *\n     * * The input 2011-01-15 (a Saturday) for parameter (MONDAY) will return 2011-01-17 (two days later).\n     * * The input 2011-01-15 (a Saturday) for parameter (WEDNESDAY) will return 2011-01-19 (four days later).\n     * * The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-15 (same as input).\n     *\n     * The behavior is suitable for use with most calendar systems.\n     * It uses the {@link DAY_OF_WEEK} field and the {@link DAYS} unit,\n     * and assumes a seven day week.\n     *\n     * @param {DayOfWeek} dayOfWeek  the day-of-week to check for or move the date to, not null\n     * @return {TemporalAdjuster} the next-or-same day-of-week adjuster, not null\n     */\n    static nextOrSame(dayOfWeek) {\n        return new RelativeDayOfWeek(0, dayOfWeek);\n    }\n\n    /**\n     * Returns the previous day-of-week adjuster, which adjusts the date to the\n     * first occurrence of the specified day-of-week before the date being adjusted.\n     *\n     * The ISO calendar system behaves as follows:\n     *\n     * * The input 2011-01-15 (a Saturday) for parameter (MONDAY) will return 2011-01-10 (five days earlier).\n     * * The input 2011-01-15 (a Saturday) for parameter (WEDNESDAY) will return 2011-01-12 (three days earlier).\n     * * The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-08 (seven days earlier).\n     *\n     * The behavior is suitable for use with most calendar systems.\n     * It uses the {@link DAY_OF_WEEK} field and the {@link DAYS} unit,\n     * and assumes a seven day week.\n     *\n     * @param {DayOfWeek} dayOfWeek  the day-of-week to move the date to, not null\n     * @return {TemporalAdjuster} the previous day-of-week adjuster, not null\n     */\n    static previous(dayOfWeek) {\n        return new RelativeDayOfWeek(3, dayOfWeek);\n    }\n\n    /**\n     * Returns the previous-or-same day-of-week adjuster, which adjusts the date to the\n     * first occurrence of the specified day-of-week before the date being adjusted\n     * unless it is already on that day in which case the same object is returned.\n     *\n     * The ISO calendar system behaves as follows:\n     *\n     * * The input 2011-01-15 (a Saturday) for parameter (MONDAY) will return 2011-01-10 (five days earlier).\n     * * The input 2011-01-15 (a Saturday) for parameter (WEDNESDAY) will return 2011-01-12 (three days earlier).\n     * * The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-15 (same as input).\n     *\n     * The behavior is suitable for use with most calendar systems.\n     * It uses the {@link DAY_OF_WEEK} field and the {@link DAYS} unit,\n     * and assumes a seven day week.\n     *\n     * @param {DayOfWeek} dayOfWeek the day-of-week to check for or move the date to, not null\n     * @return {TemporalAdjuster} the previous-or-same day-of-week adjuster, not null\n     */\n    static previousOrSame(dayOfWeek) {\n        return new RelativeDayOfWeek(1, dayOfWeek);\n    }\n\n}\n\n//-----------------------------------------------------------------------\n/**\n * Enum implementing the adjusters.\n */\nclass Impl extends TemporalAdjuster {\n\n    /**\n     *\n     * @param ordinal\n     * @private\n     */\n    constructor(ordinal) {\n        super();\n        this._ordinal = ordinal;\n    }\n\n    adjustInto(temporal) {\n        switch (this._ordinal) {\n            case 0: return temporal.with(ChronoField.DAY_OF_MONTH, 1);\n            case 1: return temporal.with(ChronoField.DAY_OF_MONTH, temporal.range(ChronoField.DAY_OF_MONTH).maximum());\n            case 2: return temporal.with(ChronoField.DAY_OF_MONTH, 1).plus(1, ChronoUnit.MONTHS);\n            case 3: return temporal.with(ChronoField.DAY_OF_YEAR, 1);\n            case 4: return temporal.with(ChronoField.DAY_OF_YEAR, temporal.range(ChronoField.DAY_OF_YEAR).maximum());\n            case 5: return temporal.with(ChronoField.DAY_OF_YEAR, 1).plus(1, ChronoUnit.YEARS);\n        }\n        throw new IllegalStateException('Unreachable');\n    }\n\n}\n\n/** First day of month adjuster. */\nImpl.FIRST_DAY_OF_MONTH = new Impl(0);\n/** Last day of month adjuster. */\nImpl.LAST_DAY_OF_MONTH = new Impl(1);\n/** First day of next month adjuster. */\nImpl.FIRST_DAY_OF_NEXT_MONTH = new Impl(2);\n/** First day of year adjuster. */\nImpl.FIRST_DAY_OF_YEAR = new Impl(3);\n/** Last day of year adjuster. */\nImpl.LAST_DAY_OF_YEAR = new Impl(4);\n/** First day of next month adjuster. */\nImpl.FIRST_DAY_OF_NEXT_YEAR = new Impl(5);\n\n\n/**\n * Class implementing day-of-week in month adjuster.\n */\nclass DayOfWeekInMonth extends TemporalAdjuster {\n\n    /**\n     *\n     * @param ordinal\n     * @param dow\n     * @private\n     */\n    constructor(ordinal, dow) {\n        super();\n        this._ordinal = ordinal;\n        this._dowValue = dow.value();\n    }\n\n    adjustInto(temporal) {\n        if (this._ordinal >= 0) {\n            const temp = temporal.with(ChronoField.DAY_OF_MONTH, 1);\n            const curDow = temp.get(ChronoField.DAY_OF_WEEK);\n            let dowDiff = MathUtil.intMod((this._dowValue - curDow + 7), 7);\n            dowDiff += (this._ordinal - 1) * 7;  // safe from overflow\n            return temp.plus(dowDiff, ChronoUnit.DAYS);\n        } else {\n            const temp = temporal.with(ChronoField.DAY_OF_MONTH, temporal.range(ChronoField.DAY_OF_MONTH).maximum());\n            const curDow = temp.get(ChronoField.DAY_OF_WEEK);\n            let daysDiff = this._dowValue - curDow;\n            daysDiff = (daysDiff === 0 ? 0 : (daysDiff > 0 ? daysDiff - 7 : daysDiff));\n            daysDiff -= (-this._ordinal - 1) * 7;  // safe from overflow\n            return temp.plus(daysDiff, ChronoUnit.DAYS);\n        }\n    }\n}\n\n/**\n * Implementation of next, previous or current day-of-week.\n */\nclass RelativeDayOfWeek extends TemporalAdjuster {\n\n    /**\n     *\n     * @param relative\n     * @param dayOfWeek\n     * @private\n     */\n    constructor(relative, dayOfWeek) {\n        super();\n        requireNonNull(dayOfWeek, 'dayOfWeek');\n        /** Whether the current date is a valid answer. */\n        this._relative = relative;\n        /** The day-of-week value, from 1 to 7. */\n        this._dowValue = dayOfWeek.value();\n    }\n\n    adjustInto(temporal) {\n        const calDow = temporal.get(ChronoField.DAY_OF_WEEK);\n        if (this._relative < 2 && calDow === this._dowValue) {\n            return temporal;\n        }\n        if ((this._relative & 1) === 0) {\n            const daysDiff = calDow - this._dowValue;\n            return temporal.plus(daysDiff >= 0 ? 7 - daysDiff : -daysDiff, ChronoUnit.DAYS);\n        } else {\n            const daysDiff = this._dowValue - calDow;\n            return temporal.minus(daysDiff >= 0 ? 7 - daysDiff : -daysDiff, ChronoUnit.DAYS);\n        }\n    }\n}\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { Enum } from '../Enum';\nimport { requireNonNull } from '../assert';\nimport { DateTimeException } from '../errors';\nimport { MathUtil } from '../MathUtil';\n\nimport { DayOfWeek } from '../DayOfWeek';\nimport { LocalDate } from '../LocalDate';\nimport { Month } from '../Month';\nimport { Year } from '../Year';\n\nimport { ChronoField } from '../temporal/ChronoField';\nimport { ResolverStyle } from '../format/ResolverStyle';\nimport { TemporalAdjusters } from '../temporal/TemporalAdjusters';\n\nexport class IsoChronology extends Enum{\n    /**\n     * Checks if the year is a leap year, according to the ISO proleptic\n     * calendar system rules.\n     *\n     * This method applies the current rules for leap years across the whole time-line.\n     * In general, a year is a leap year if it is divisible by four without\n     * remainder. However, years divisible by 100, are not leap years, with\n     * the exception of years divisible by 400 which are.\n     *\n     * For example, 1904 is a leap year it is divisible by 4.\n     * 1900 was not a leap year as it is divisible by 100, however 2000 was a\n     * leap year as it is divisible by 400.\n     *\n     * The calculation is proleptic - applying the same rules into the far future and far past.\n     * This is historically inaccurate, but is correct for the ISO-8601 standard.\n     *\n     * @param {number} prolepticYear - the ISO proleptic year to check\n     * @return {boolean} true if the year is leap, false otherwise\n     */\n    static isLeapYear(prolepticYear) {\n        return ((prolepticYear & 3) === 0) && ((prolepticYear % 100) !== 0 || (prolepticYear % 400) === 0);\n    }\n\n    /**\n     * Updates the map of field-values during resolution.\n     *\n     * @param {EnumMap} fieldValues  the fieldValues map to update, not null\n     * @param {ChronoField} field  the field to update, not null\n     * @param {number} value  the value to update, not null\n     * @throws DateTimeException if a conflict occurs\n     */\n    _updateResolveMap(fieldValues, field, value) {\n        // TODO: this function is in Chronology in threetenbp, maybe needs to be moved?\n        requireNonNull(fieldValues, 'fieldValues');\n        requireNonNull(field, 'field');\n        const current = fieldValues.get(field);\n        if (current != null && current !== value) {\n            throw new DateTimeException(`Invalid state, field: ${field} ${current} conflicts with ${field} ${value}`);\n        }\n        fieldValues.put(field, value);\n    }\n\n    resolveDate(fieldValues, resolverStyle) {\n        if (fieldValues.containsKey(ChronoField.EPOCH_DAY)) {\n            return LocalDate.ofEpochDay(fieldValues.remove(ChronoField.EPOCH_DAY));\n        }\n\n        // normalize fields\n        const prolepticMonth = fieldValues.remove(ChronoField.PROLEPTIC_MONTH);\n        if (prolepticMonth != null) {\n            if (resolverStyle !== ResolverStyle.LENIENT) {\n                ChronoField.PROLEPTIC_MONTH.checkValidValue(prolepticMonth);\n            }\n            this._updateResolveMap(fieldValues, ChronoField.MONTH_OF_YEAR, MathUtil.floorMod(prolepticMonth, 12) + 1);\n            this._updateResolveMap(fieldValues, ChronoField.YEAR, MathUtil.floorDiv(prolepticMonth, 12));\n        }\n\n        // eras\n        const yoeLong = fieldValues.remove(ChronoField.YEAR_OF_ERA);\n        if (yoeLong != null) {\n            if (resolverStyle !== ResolverStyle.LENIENT) {\n                ChronoField.YEAR_OF_ERA.checkValidValue(yoeLong);\n            }\n            const era = fieldValues.remove(ChronoField.ERA);\n            if (era == null) {\n                const year = fieldValues.get(ChronoField.YEAR);\n                if (resolverStyle === ResolverStyle.STRICT) {\n                    // do not invent era if strict, but do cross-check with year\n                    if (year != null) {\n                        this._updateResolveMap(fieldValues, ChronoField.YEAR, (year > 0 ? yoeLong: MathUtil.safeSubtract(1, yoeLong)));\n                    } else {\n                        // reinstate the field removed earlier, no cross-check issues\n                        fieldValues.put(ChronoField.YEAR_OF_ERA, yoeLong);\n                    }\n                } else {\n                    // invent era\n                    this._updateResolveMap(fieldValues, ChronoField.YEAR, (year == null || year > 0 ? yoeLong: MathUtil.safeSubtract(1, yoeLong)));\n                }\n            } else if (era === 1) {\n                this._updateResolveMap(fieldValues, ChronoField.YEAR, yoeLong);\n            } else if (era === 0) {\n                this._updateResolveMap(fieldValues, ChronoField.YEAR, MathUtil.safeSubtract(1, yoeLong));\n            } else {\n                throw new DateTimeException(`Invalid value for era: ${era}`);\n            }\n        } else if (fieldValues.containsKey(ChronoField.ERA)) {\n            ChronoField.ERA.checkValidValue(fieldValues.get(ChronoField.ERA));  // always validated\n        }\n\n        // build date\n        if (fieldValues.containsKey(ChronoField.YEAR)) {\n            if (fieldValues.containsKey(ChronoField.MONTH_OF_YEAR)) {\n                if (fieldValues.containsKey(ChronoField.DAY_OF_MONTH)) {\n                    const y = ChronoField.YEAR.checkValidIntValue(fieldValues.remove(ChronoField.YEAR));\n                    const moy = fieldValues.remove(ChronoField.MONTH_OF_YEAR);\n                    let dom = fieldValues.remove(ChronoField.DAY_OF_MONTH);\n                    if (resolverStyle === ResolverStyle.LENIENT) {\n                        const months = moy - 1;\n                        const days = dom - 1;\n                        return LocalDate.of(y, 1, 1).plusMonths(months).plusDays(days);\n                    } else if (resolverStyle === ResolverStyle.SMART){\n                        ChronoField.DAY_OF_MONTH.checkValidValue(dom);\n                        if (moy === 4 || moy === 6 || moy === 9 || moy === 11) {\n                            dom = Math.min(dom, 30);\n                        } else if (moy === 2) {\n                            dom = Math.min(dom, Month.FEBRUARY.length(Year.isLeap(y)));\n                        }\n                        return LocalDate.of(y, moy, dom);\n                    } else {\n                        return LocalDate.of(y, moy, dom);\n                    }\n                }\n                /*\n                if (fieldValues.containsKey(ALIGNED_WEEK_OF_MONTH)) {\n                    if (fieldValues.containsKey(ALIGNED_DAY_OF_WEEK_IN_MONTH)) {\n                        int y = ChronoField.YEAR.checkValidIntValue(fieldValues.remove(ChronoField.YEAR));\n                        if (resolverStyle == ResolverStyle.LENIENT) {\n                            long months = Jdk8Methods.safeSubtract(fieldValues.remove(ChronoField.MONTH_OF_YEAR), 1);\n                            long weeks = Jdk8Methods.safeSubtract(fieldValues.remove(ALIGNED_WEEK_OF_MONTH), 1);\n                            long days = Jdk8Methods.safeSubtract(fieldValues.remove(ALIGNED_DAY_OF_WEEK_IN_MONTH), 1);\n                            return LocalDate.of(y, 1, 1).plusMonths(months).plusWeeks(weeks).plusDays(days);\n                        }\n                        int moy = ChronoField.MONTH_OF_YEAR.checkValidIntValue(fieldValues.remove(ChronoField.MONTH_OF_YEAR));\n                        int aw = ALIGNED_WEEK_OF_MONTH.checkValidIntValue(fieldValues.remove(ALIGNED_WEEK_OF_MONTH));\n                        int ad = ALIGNED_DAY_OF_WEEK_IN_MONTH.checkValidIntValue(fieldValues.remove(ALIGNED_DAY_OF_WEEK_IN_MONTH));\n                        LocalDate date = LocalDate.of(y, moy, 1).plusDays((aw - 1) * 7 + (ad - 1));\n                        if (resolverStyle == ResolverStyle.STRICT && date.get(ChronoField.MONTH_OF_YEAR) != moy) {\n                            throw new DateTimeException(\"Strict mode rejected date parsed to a different month\");\n                        }\n                        return date;\n                    }\n                    if (fieldValues.containsKey(DAY_OF_WEEK)) {\n                        int y = ChronoField.YEAR.checkValidIntValue(fieldValues.remove(ChronoField.YEAR));\n                        if (resolverStyle == ResolverStyle.LENIENT) {\n                            long months = Jdk8Methods.safeSubtract(fieldValues.remove(ChronoField.MONTH_OF_YEAR), 1);\n                            long weeks = Jdk8Methods.safeSubtract(fieldValues.remove(ALIGNED_WEEK_OF_MONTH), 1);\n                            long days = Jdk8Methods.safeSubtract(fieldValues.remove(DAY_OF_WEEK), 1);\n                            return LocalDate.of(y, 1, 1).plusMonths(months).plusWeeks(weeks).plusDays(days);\n                        }\n                        int moy = ChronoField.MONTH_OF_YEAR.checkValidIntValue(fieldValues.remove(ChronoField.MONTH_OF_YEAR));\n                        int aw = ALIGNED_WEEK_OF_MONTH.checkValidIntValue(fieldValues.remove(ALIGNED_WEEK_OF_MONTH));\n                        int dow = DAY_OF_WEEK.checkValidIntValue(fieldValues.remove(DAY_OF_WEEK));\n                        LocalDate date = LocalDate.of(y, moy, 1).plusWeeks(aw - 1).with(nextOrSame(DayOfWeek.of(dow)));\n                        if (resolverStyle == ResolverStyle.STRICT && date.get(ChronoField.MONTH_OF_YEAR) != moy) {\n                            throw new DateTimeException(\"Strict mode rejected date parsed to a different month\");\n                        }\n                        return date;\n                    }\n                }\n*/\n            }\n            if (fieldValues.containsKey(ChronoField.DAY_OF_YEAR)) {\n                const y = ChronoField.YEAR.checkValidIntValue(fieldValues.remove(ChronoField.YEAR));\n                if (resolverStyle === ResolverStyle.LENIENT) {\n                    const days = MathUtil.safeSubtract(fieldValues.remove(ChronoField.DAY_OF_YEAR), 1);\n                    return LocalDate.ofYearDay(y, 1).plusDays(days);\n                }\n                const doy = ChronoField.DAY_OF_YEAR.checkValidIntValue(fieldValues.remove(ChronoField.DAY_OF_YEAR));\n                return LocalDate.ofYearDay(y, doy);\n            }\n            if (fieldValues.containsKey(ChronoField.ALIGNED_WEEK_OF_YEAR)) {\n                if (fieldValues.containsKey(ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR)) {\n                    const y = ChronoField.YEAR.checkValidIntValue(fieldValues.remove(ChronoField.YEAR));\n                    if (resolverStyle === ResolverStyle.LENIENT) {\n                        const weeks = MathUtil.safeSubtract(fieldValues.remove(ChronoField.ALIGNED_WEEK_OF_YEAR), 1);\n                        const days = MathUtil.safeSubtract(fieldValues.remove(ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR), 1);\n                        return LocalDate.of(y, 1, 1).plusWeeks(weeks).plusDays(days);\n                    }\n                    const aw = ChronoField.ALIGNED_WEEK_OF_YEAR.checkValidIntValue(fieldValues.remove(ChronoField.ALIGNED_WEEK_OF_YEAR));\n                    const ad = ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR.checkValidIntValue(fieldValues.remove(ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR));\n                    const date = LocalDate.of(y, 1, 1).plusDays((aw - 1) * 7 + (ad - 1));\n                    if (resolverStyle === ResolverStyle.STRICT && date.get(ChronoField.YEAR) !== y) {\n                        throw new DateTimeException('Strict mode rejected date parsed to a different year');\n                    }\n                    return date;\n                }\n                if (fieldValues.containsKey(ChronoField.DAY_OF_WEEK)) {\n                    const y = ChronoField.YEAR.checkValidIntValue(fieldValues.remove(ChronoField.YEAR));\n                    if (resolverStyle === ResolverStyle.LENIENT) {\n                        const weeks = MathUtil.safeSubtract(fieldValues.remove(ChronoField.ALIGNED_WEEK_OF_YEAR), 1);\n                        const days = MathUtil.safeSubtract(fieldValues.remove(ChronoField.DAY_OF_WEEK), 1);\n                        return LocalDate.of(y, 1, 1).plusWeeks(weeks).plusDays(days);\n                    }\n                    const aw = ChronoField.ALIGNED_WEEK_OF_YEAR.checkValidIntValue(fieldValues.remove(ChronoField.ALIGNED_WEEK_OF_YEAR));\n                    const dow = ChronoField.DAY_OF_WEEK.checkValidIntValue(fieldValues.remove(ChronoField.DAY_OF_WEEK));\n                    const date = LocalDate.of(y, 1, 1).plusWeeks(aw - 1).with(TemporalAdjusters.nextOrSame(DayOfWeek.of(dow)));\n                    if (resolverStyle === ResolverStyle.STRICT && date.get(ChronoField.YEAR) !== y) {\n                        throw new DateTimeException('Strict mode rejected date parsed to a different month');\n                    }\n                    return date;\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Obtains an ISO local date from another date-time object.\n     * <p>\n     * This is equivalent to {@link LocalDate#from(TemporalAccessor)}.\n     *\n     * @param temporal  the date-time object to convert, not null\n     * @return the ISO local date, not null\n     * @throws DateTimeException if unable to create the date\n     */\n    date(temporal) {\n        return LocalDate.from(temporal);\n    }\n\n}\n\nexport function _init() {\n    IsoChronology.INSTANCE = new IsoChronology('IsoChronology');\n}\n","/**\n * @copyright (c) 2016-present, Philipp Thürwächter & Pattrick Hüper  & js-joda contributors\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { ChronoField } from './temporal/ChronoField';\nimport { ChronoUnit } from './temporal/ChronoUnit';\nimport { Temporal } from './temporal/Temporal';\nimport { Clock } from './Clock';\nimport { DateTimeException, UnsupportedTemporalTypeException } from './errors';\nimport { DateTimeFormatter } from './format/DateTimeFormatter';\nimport { Instant, LocalTime } from './js-joda';\nimport { MathUtil } from './MathUtil';\nimport { OffsetDateTime } from './OffsetDateTime';\nimport { TemporalQueries } from './temporal/TemporalQueries';\nimport { ZoneId } from './ZoneId';\nimport { ZoneOffset } from './ZoneOffset';\n\nimport { createTemporalQuery } from './temporal/TemporalQuery';\nimport { requireInstance, requireNonNull } from './assert';\n\n/**\n * A time with an offset from UTC/Greenwich in the ISO-8601 calendar system, such as 10:15:30+01:00.\n */\nexport class OffsetTime extends Temporal {\n    /**\n     * @param {!TemporalAccessor} temporal\n     * @return {OffsetTime}\n     */\n    static from(temporal) {\n        requireNonNull(temporal, 'temporal');\n        if (temporal instanceof OffsetTime) {\n            return temporal;\n        } else if (temporal instanceof OffsetDateTime) {\n            return temporal.toOffsetTime();\n        }\n        try {\n            const time = LocalTime.from(temporal);\n            const offset = ZoneOffset.from(temporal);\n            return new OffsetTime(time, offset);\n        } catch(ex) {\n            throw new DateTimeException(`Unable to obtain OffsetTime TemporalAccessor: ${temporal}, type ${temporal.constructor != null ? temporal.constructor.name : ''}`);\n        }\n    }\n\n    /**\n     * @param {Clock|ZoneId} clockOrZone\n     * @return {OffsetTime}\n     */\n    static now(clockOrZone) {\n        if (arguments.length === 0){\n            return OffsetTime._now(Clock.systemDefaultZone());\n        } else if (clockOrZone instanceof Clock){\n            return OffsetTime._now(clockOrZone);\n        } else {\n            return OffsetTime._now(Clock.system(clockOrZone));\n        }\n    }\n\n    /**\n     * @param {Clock} clock - the clock to use, defaults to Clock.systemDefaultZone()\n     * @return {OffsetTime} the current offset date-time, not null\n     */\n    static _now(clock) {\n        requireNonNull(clock, 'clock');\n        const now = clock.instant();\n        return OffsetTime.ofInstant(now, clock.zone().rules().offset(now));\n    }\n\n    /**\n     * @return {OffsetTime}\n     */\n    static of(){\n        if (arguments.length <= 2) {\n            return OffsetTime.ofTimeAndOffset.apply(this, arguments);\n        } else {\n            return OffsetTime.ofNumbers.apply(this, arguments);\n        }\n    }\n\n    /**\n     * @param {int} hour\n     * @param {int} minute\n     * @param {int} second\n     * @param {int} nanoOfSecond\n     * @param {ZoneOffset} offset\n     * @return {OffsetTime}\n     */\n    static ofNumbers(hour, minute, second, nanoOfSecond, offset) {\n        const time = LocalTime.of(hour, minute, second, nanoOfSecond);\n        return new OffsetTime(time, offset);\n    }\n\n    /**\n     * @param {LocalTime} time\n     * @param {ZoneOffset} offset\n     * @return {OffsetTime}\n     */\n    static ofTimeAndOffset(time, offset) {\n        return new OffsetTime(time, offset);\n    }\n\n    /**\n     * @param {!Instant} instant\n     * @param {!ZoneId} zone\n     * @return {!OffsetTime}\n     */\n    static ofInstant( instant,  zone){\n        requireNonNull(instant, 'instant');\n        requireInstance(instant, Instant, 'instant');\n        requireNonNull(zone, 'zone');\n        requireInstance(zone, ZoneId, 'zone');\n\n        const rules = zone.rules();\n        const offset = rules.offset(instant);\n        let secsOfDay = instant.epochSecond() % LocalTime.SECONDS_PER_DAY;\n        secsOfDay = (secsOfDay + offset.totalSeconds()) % LocalTime.SECONDS_PER_DAY;\n        if (secsOfDay < 0) {\n            secsOfDay += LocalTime.SECONDS_PER_DAY;\n        }\n        const time = LocalTime.ofSecondOfDay(secsOfDay, instant.nano());\n        return new OffsetTime(time, offset);\n    }\n\n    /**\n     * @param {string} text\n     * @param {DateTimeFormatter} formatter\n     * @return {OffsetTime}\n     */\n    static parse(text, formatter= DateTimeFormatter.ISO_OFFSET_TIME) {\n        requireNonNull(formatter, 'formatter');\n        return formatter.parse(text, OffsetTime.FROM);\n    }\n    //-----------------------------------------------------------------------\n\n    /**\n     * @param {LocalTime} time\n     * @param {ZoneOffset} offset\n     * @private\n     */\n    constructor(time, offset) {\n        super();\n        requireNonNull(time, 'time');\n        requireInstance(time, LocalTime, 'time');\n        requireNonNull(offset, 'offset');\n        requireInstance(offset, ZoneOffset, 'offset');\n        this._time = time;\n        this._offset = offset;\n    }\n\n\n    /**\n     * @param {TemporalAdjuster} temporal - the target object to be adjusted, not null\n     * @return {Temporal} the adjusted object, not null\n     * @throws {DateTimeException} if unable to make the adjustment\n     * @throws {ArithmeticException} if numeric overflow occurs\n     */\n    adjustInto(temporal) {\n        return temporal\n            .with(ChronoField.NANO_OF_DAY, this._time.toNanoOfDay())\n            .with(ChronoField.OFFSET_SECONDS, this.offset().totalSeconds());\n    }\n\n    /**\n     * @param {LocalDate} date - the date to combine with, not null\n     * @return {OffsetDateTime} the offset date-time formed from this time and the specified date, not null\n     */\n    atDate(date) {\n        return OffsetDateTime.of(date, this._time, this._offset);\n    }\n\n    /**\n     * @param {DateTimeFormatter} formatter - the formatter to use, not null\n     * @return {string} the formatted time string, not null\n     * @throws {DateTimeException} if an error occurs during printing\n     */\n    format(formatter) {\n        requireNonNull(formatter, 'formatter');\n        return formatter.format(this, OffsetTime.FROM);\n    }\n\n\n    /**\n     * @param {TemporalField} field - the field to get, not null\n     * @return {number} the value for the field\n     * @throws {DateTimeException} if a value for the field cannot be obtained\n     * @throws {ArithmeticException} if numeric overflow occurs\n     */\n    get(field) {\n        return super.get(field);\n    }\n\n    /**\n     * @param {TemporalField} field - the field to get, not null\n     * @return {number} the value for the field\n     * @throws {DateTimeException} if a value for the field cannot be obtained\n     * @trhows {UnsupportedTemporalTypeException}\n     * @throws {ArithmeticException} if numeric overflow occurs\n     */\n    getLong(field) {\n        if (field instanceof ChronoField) {\n            if (field === ChronoField.OFFSET_SECONDS) {\n                return this._offset.totalSeconds();\n            }\n            return this._time.getLong(field);\n        }\n        return field.getFrom(this);\n    }\n\n    /**\n     * @return {int}\n     */\n    hour() {\n        return this._time.hour();\n    }\n\n    /**\n     * @return {int}\n     */\n    minute() {\n        return this._time.minute();\n    }\n\n    /**\n     * @return {int}\n     */\n    second() {\n        return this._time.second();\n    }\n\n    /**\n     * @return {int}\n     */\n    nano() {\n        return this._time.nano();\n    }\n\n    /**\n     * @return {ZoneOffset}\n     */\n    offset() {\n        return this._offset;\n    }\n\n    /**\n     * @param {OffsetTime} other - the other time to compare to, not null\n     * @return {boolean} true if this is after the specified time\n     * @throws {NullPointerException} if `other` is null\n     */\n    isAfter(other) {\n        requireNonNull(other, 'other');\n        return this._toEpochNano() > other._toEpochNano();\n    }\n\n    /**\n     * @param {OffsetTime} other - the other time to compare to, not null\n     * @return {boolean} true if this point is before the specified time\n     * @throws {NullPointerException} if `other` is null\n     */\n    isBefore(other) {\n        requireNonNull(other, 'other');\n        return this._toEpochNano() < other._toEpochNano();\n    }\n\n    /**\n     * @param {OffsetTime} other - the other time to compare to, not null\n     * @return {boolean}\n     * @throws {NullPointerException} if `other` is null\n     */\n    isEqual(other) {\n        requireNonNull(other, 'other');\n        return this._toEpochNano() === other._toEpochNano();\n    }\n\n    /**\n     * @param {TemporalField|TemporalUnit} fieldOrUnit - the field to check, null returns false\n     * @return {boolean} true if the field is supported on this time, false if not\n     */\n    isSupported(fieldOrUnit) {\n        if (fieldOrUnit instanceof ChronoField) {\n            return fieldOrUnit.isTimeBased() || fieldOrUnit === ChronoField.OFFSET_SECONDS;\n        } else if (fieldOrUnit instanceof ChronoUnit) {\n            return fieldOrUnit.isTimeBased();\n        }\n        return fieldOrUnit != null && fieldOrUnit.isSupportedBy(this);\n    }\n\n    /**\n     * @param {number} hours\n     * @return {OffsetTime}\n     */\n    minusHours(hours) {\n        return this._withLocalTimeOffset(this._time.minusHours(hours), this._offset);\n    }\n\n    /**\n     * @param {number} minutes\n     * @return {OffsetTime}\n     */\n    minusMinutes(minutes) {\n        return this._withLocalTimeOffset(this._time.minusMinutes(minutes), this._offset);\n    }\n\n    /**\n     * @param {number} seconds\n     * @return {OffsetTime}\n     */\n    minusSeconds(seconds) {\n        return this._withLocalTimeOffset(this._time.minusSeconds(seconds), this._offset);\n    }\n\n    /**\n     * @param {number} nanos\n     * @return {OffsetTime}\n     */\n    minusNanos(nanos) {\n        return this._withLocalTimeOffset(this._time.minusNanos(nanos), this._offset);\n    }\n\n    _minusAmount(amount) {\n        requireNonNull(amount);\n        return amount.subtractFrom(this);\n    }\n\n    _minusUnit(amountToSubtract, unit) {\n        return this.plus(-1 * amountToSubtract, unit);\n    }\n\n    _plusAmount(amount) {\n        requireNonNull(amount);\n        return amount.addTo(this);\n    }\n\n    /**\n     *\n     * @param amountToAdd\n     * @param unit\n     * @return {Temporal}\n     */\n    _plusUnit(amountToAdd, unit) {\n        if (unit instanceof ChronoUnit) {\n            return this._withLocalTimeOffset(this._time.plus(amountToAdd, unit), this._offset);\n        }\n        return unit.addTo(this, amountToAdd);\n    }\n\n    /**\n     * @param {int} hours\n     * @return {OffsetTime}\n     */\n    plusHours(hours) {\n        return this._withLocalTimeOffset(this._time.plusHours(hours), this._offset);\n    }\n\n    /**\n     * @param {int} minutes\n     * @return {OffsetTime}\n     */\n    plusMinutes(minutes) {\n        return this._withLocalTimeOffset(this._time.plusMinutes(minutes), this._offset);\n    }\n\n    /**\n     * @param {int} seconds\n     * @return {OffsetTime}\n     */\n    plusSeconds(seconds) {\n        return this._withLocalTimeOffset(this._time.plusSeconds(seconds), this._offset);\n    }\n\n    /**\n     * @param {int} nanos\n     * @return {OffsetTime}\n     */\n    plusNanos(nanos) {\n        return this._withLocalTimeOffset(this._time.plusNanos(nanos), this._offset);\n    }\n\n    /**\n     * @param {TemporalQuery} query - the query to invoke, not null\n     * @return {*} the query result, null may be returned (defined by the query)\n     * @throws {DateTimeException} if unable to query (defined by the query)\n     * @throws {ArithmeticException} if numeric overflow occurs (defined by the query)\n     */\n    query(query) {\n        requireNonNull(query, 'query');\n        if (query === TemporalQueries.precision()) {\n            return ChronoUnit.NANOS;\n        } else if (query === TemporalQueries.offset() || query === TemporalQueries.zone()) {\n            return this.offset();\n        } else if (query === TemporalQueries.localTime()) {\n            return this._time;\n        } else if (query === TemporalQueries.chronology() || query === TemporalQueries.localDate() || query === TemporalQueries.zoneId()) {\n            return null;\n        }\n        return super.query(query);\n    }\n\n    /**\n     * @param {TemporalField} field - the field to query the range for, not null\n     * @return {ValueRange} the range of valid values for the field, not null\n     * @throws {DateTimeException} if the range for the field cannot be obtained\n     */\n    range(field) {\n        if (field instanceof ChronoField) {\n            if (field === ChronoField.OFFSET_SECONDS) {\n                return field.range();\n            }\n            return this._time.range(field);\n        }\n        return field.rangeRefinedBy(this);\n    }\n\n    /**\n     * @return {LocalTime}\n     */\n    toLocalTime() {\n        return this._time;\n    }\n\n    /**\n     * @param {TemporalUnit} unit - the unit to truncate to, not null\n     * @return {OffsetTime} a {@link LocalTime} based on this time with the time truncated, not null\n     * @throws {DateTimeException} if unable to truncate\n     */\n    truncatedTo(unit) {\n        return this._withLocalTimeOffset(this._time.truncatedTo(unit), this._offset);\n    }\n\n    /**\n    * @param {Temporal} endExclusive - the end time, which is converted to a {@link LocalTime}, not null\n    * @param {TemporalUnit} unit - the unit to measure the period in, not null\n    * @return {number} the amount of the period between this time and the end time\n    * @throws {DateTimeException} if the period cannot be calculated\n    * @throws {ArithmeticException} if numeric overflow occurs\n    */\n    until(endExclusive, unit) {\n        requireNonNull(endExclusive, 'endExclusive');\n        requireNonNull(unit, 'unit');\n        const end = OffsetTime.from(endExclusive);\n        if (unit instanceof ChronoUnit) {\n            const nanosUntil = end._toEpochNano() - this._toEpochNano(); // no overflow\n            switch (unit) {\n                case ChronoUnit.NANOS: return nanosUntil;\n                case ChronoUnit.MICROS: return MathUtil.intDiv(nanosUntil, 1000);\n                case ChronoUnit.MILLIS: return MathUtil.intDiv(nanosUntil, 1000000);\n                case ChronoUnit.SECONDS: return MathUtil.intDiv(nanosUntil, LocalTime.NANOS_PER_SECOND);\n                case ChronoUnit.MINUTES: return MathUtil.intDiv(nanosUntil, LocalTime.NANOS_PER_MINUTE);\n                case ChronoUnit.HOURS: return MathUtil.intDiv(nanosUntil, LocalTime.NANOS_PER_HOUR);\n                case ChronoUnit.HALF_DAYS: return MathUtil.intDiv(nanosUntil, (12 * LocalTime.NANOS_PER_HOUR));\n            }\n            throw new UnsupportedTemporalTypeException(`Unsupported unit: ${unit}`);\n        }\n        return unit.between(this, end);\n    }\n\n    /**\n     * @param {int} hour\n     * @return {OffsetTime}\n     */\n    withHour(hour) {\n        return this._withLocalTimeOffset(this._time.withHour(hour), this._offset);\n    }\n\n    /**\n     * @param {int} minute\n     * @return {OffsetTime}\n     */\n    withMinute(minute) {\n        return this._withLocalTimeOffset(this._time.withMinute(minute), this._offset);\n    }\n\n    /**\n     * @param {int} second\n     * @return {OffsetTime}\n     */\n    withSecond(second) {\n        return this._withLocalTimeOffset(this._time.withSecond(second), this._offset);\n    }\n\n    /**\n     * @param {int} nano\n     * @return {OffsetTime}\n     */\n    withNano(nano) {\n        return this._withLocalTimeOffset(this._time.withNano(nano), this._offset);\n    }\n\n    /**\n     * @param {ZoneOffset} offset\n     * @return {OffsetTime}\n     */\n    withOffsetSameInstant(offset) {\n        requireNonNull(offset, 'offset');\n        if (offset.equals(this._offset)) {\n            return this;\n        }\n        const difference = offset.totalSeconds() - this._offset.totalSeconds();\n        const adjusted = this._time.plusSeconds(difference);\n        return new OffsetTime(adjusted, offset);\n    }\n\n    /**\n     * @param {ZoneOffset} offset\n     * @return {OffsetTime}\n     */\n    withOffsetSameLocal(offset) {\n        return offset != null && offset.equals(this._offset) ? this : new OffsetTime(this._time, offset);\n    }\n\n    _toEpochNano() {\n        const nod = this._time.toNanoOfDay();\n        const offsetNanos = this._offset.totalSeconds() * LocalTime.NANOS_PER_SECOND;\n        return nod - offsetNanos;\n    }\n\n    _withAdjuster(adjuster) {\n        requireNonNull(adjuster, 'adjuster');\n        // optimizations\n        if (adjuster instanceof LocalTime) {\n            return this._withLocalTimeOffset(adjuster, this._offset);\n        } else if (adjuster instanceof ZoneOffset) {\n            return this._withLocalTimeOffset(this._time, adjuster);\n        } else if (adjuster instanceof OffsetTime) {\n            return adjuster;\n        }\n        return adjuster.adjustInto(this);\n    }\n\n    _withField(field, newValue) {\n        requireNonNull(field, 'field');\n        if (field instanceof ChronoField) {\n            if (field === ChronoField.OFFSET_SECONDS) {\n                return this._withLocalTimeOffset(this._time, ZoneOffset.ofTotalSeconds(field.checkValidIntValue(newValue)));\n            }\n            return this._withLocalTimeOffset(this._time.with(field, newValue), this._offset);\n        }\n        return field.adjustInto(this, newValue);\n    }\n\n    /**\n     * @private\n     * @param {LocalTime} time\n     * @param {ZoneOffset} offset\n     * @return {OffsetTime}\n     */\n    _withLocalTimeOffset(time, offset) {\n        if (this._time === time && this._offset.equals(offset)) {\n            return this;\n        }\n        return new OffsetTime(time, offset);\n    }\n\n    //---------------------------------\n\n    /**\n     * @param {OffsetTime} other - the other time to compare to, not null\n     * @return {int} the comparator value, negative if less, positive if greater\n     * @throws {NullPointerException} if `other` is null\n     */\n    compareTo(other) {\n        requireNonNull(other, 'other');\n        requireInstance(other, OffsetTime, 'other');\n        if (this._offset.equals(other._offset)) {\n            return this._time.compareTo(other._time);\n        }\n        const compare = MathUtil.compareNumbers(this._toEpochNano(), other._toEpochNano());\n        if (compare === 0) {\n            return this._time.compareTo(other._time);\n        }\n        return compare;\n    }\n\n    /**\n     * @param {*} other - the object to check, null returns false\n     * @return {boolean} true if this is equal to the other time\n     */\n    equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof OffsetTime) {\n            return this._time.equals(other._time) && this._offset.equals(other._offset);\n        }\n        return false;\n    }\n\n    /**\n     * @return {number}\n     */\n    hashCode() {\n        return this._time.hashCode() ^ this._offset.hashCode();\n    }\n\n    /**\n     * @return {string}\n     */\n    toString() {\n        return this._time.toString() + this._offset.toString();\n    }\n\n    /**\n     *\n     * @return {string} same as {@link LocalDateTime.toString}\n     */\n    toJSON() {\n        return this.toString();\n    }\n}\n\n\nexport function _init() {\n    OffsetTime.MIN = OffsetTime.ofNumbers(0, 0, 0,0, ZoneOffset.MAX);\n\n    OffsetTime.MAX = OffsetTime.ofNumbers(23, 59, 59,999999999, ZoneOffset.MIN);\n\n    OffsetTime.FROM = createTemporalQuery('OffsetTime.FROM', (temporal) => {\n        return OffsetTime.from(temporal);\n    });\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { requireNonNull } from '../assert';\nimport { Instant } from '../Instant';\nimport { LocalDate } from '../LocalDate';\nimport { MathUtil } from '../MathUtil';\n\nimport { ChronoUnit } from '../temporal/ChronoUnit';\nimport { Temporal } from '../temporal/Temporal';\nimport { TemporalQueries } from '../temporal/TemporalQueries';\n\nexport class ChronoZonedDateTime extends Temporal {\n    query(query) {\n        if (query === TemporalQueries.zoneId() || query === TemporalQueries.zone()) {\n            return this.zone();\n        } else if (query === TemporalQueries.chronology()) {\n            return this.toLocalDate().chronology();\n        } else if (query === TemporalQueries.precision()) {\n            return ChronoUnit.NANOS;\n        } else if (query === TemporalQueries.offset()) {\n            return this.offset();\n        } else if (query === TemporalQueries.localDate()) {\n            return LocalDate.ofEpochDay(this.toLocalDate().toEpochDay());\n        } else if (query === TemporalQueries.localTime()) {\n            return this.toLocalTime();\n        }\n        return super.query(query);\n    }\n\n    /**\n     * Outputs this date-time as a string using the formatter.\n     *\n     * @param {DateTimeFormatter} formatter - the formatter to use, not null\n     * @return {string} the formatted date-time string, not null\n     * @throws DateTimeException if an error occurs during printing\n     */\n    format(formatter) {\n        requireNonNull(formatter, 'formatter');\n        return formatter.format(this);\n    }\n\n    /**\n     * Converts this date-time to an {@link Instant}.\n     *\n     * This returns an {@link Instant} representing the same point on the\n     * time-line as this date-time. The calculation combines the\n     * local date-time (see {@link toLocalDateTime}) and\n     * offset (see {@link getOffset}).\n     *\n     * @return {Instant} an {@link Instant} representing the same instant, not null\n     */\n    toInstant() {\n        return Instant.ofEpochSecond(this.toEpochSecond(), this.toLocalTime().nano());\n    }\n\n    /**\n     * Converts this date-time to the number of seconds from the epoch\n     * of 1970-01-01T00:00:00Z.\n     *\n     * This uses the local date-time (see {@link toLocalDateTime}) and\n     * offset (see {@link getOffset}) to calculate the epoch-second value,\n     * which is the number of elapsed seconds from 1970-01-01T00:00:00Z.\n     * Instants on the time-line after the epoch are positive, earlier are negative.\n     *\n     * @return {number} the number of seconds from the epoch of 1970-01-01T00:00:00Z\n     */\n    toEpochSecond() {\n        const epochDay = this.toLocalDate().toEpochDay();\n        let secs = epochDay * 86400 + this.toLocalTime().toSecondOfDay();\n        secs -= this.offset().totalSeconds();\n        return secs;\n    }\n\n    /**\n      * Compares this date-time to another date-time, including the chronology.\n      *\n      * The comparison is based first on the instant, then on the local date-time,\n      * then on the zone ID, then on the chronology.\n      * It is \"consistent with equals\", as defined by {@link Comparable}.\n      *\n      * If all the date-time objects being compared are in the same chronology, then the\n      * additional chronology stage is not required.\n      *\n      * @param {ChronoZonedDateTime} other - the other date-time to compare to, not null\n      * @return {number} the comparator value, negative if less, positive if greater\n      */\n    compareTo(other) {\n        requireNonNull(other, 'other');\n        let cmp = MathUtil.compareNumbers(this.toEpochSecond(), other.toEpochSecond());\n        if (cmp === 0) {\n            cmp = this.toLocalTime().nano() - other.toLocalTime().nano();\n            if (cmp === 0) {\n                cmp = this.toLocalDateTime().compareTo(other.toLocalDateTime());\n                if (cmp === 0) {\n                    cmp = strcmp(this.zone().id(), other.zone().id());\n                    // we only support iso for now\n                    //if (cmp === 0) {\n                    //    cmp = toLocalDate().getChronology().compareTo(other.toLocalDate().getChronology());\n                    //}\n                }\n            }\n        }\n        return cmp;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Checks if the instant of this date-time is after that of the specified date-time.\n     *\n     * This method differs from the comparison in {@link compareTo} in that it\n     * only compares the instant of the date-time. This is equivalent to using\n     * `dateTime1.toInstant().isAfter(dateTime2.toInstant())`.\n     *\n     * @param {!ChronoZonedDateTime} other - the other date-time to compare to, not null\n     * @return {boolean} true if this is after the specified date-time\n     */\n    isAfter(other) {\n        requireNonNull(other, 'other');\n        const thisEpochSec = this.toEpochSecond();\n        const otherEpochSec = other.toEpochSecond();\n        return thisEpochSec > otherEpochSec ||\n            (thisEpochSec === otherEpochSec && this.toLocalTime().nano() > other.toLocalTime().nano());\n    }\n\n    /**\n     * Checks if the instant of this date-time is before that of the specified date-time.\n     *\n     * This method differs from the comparison in {@link compareTo} in that it\n     * only compares the instant of the date-time. This is equivalent to using\n     * `dateTime1.toInstant().isBefore(dateTime2.toInstant())`.\n     *\n     * @param {!ChronoZonedDateTime} other - the other date-time to compare to, not null\n     * @return {boolean} true if this point is before the specified date-time\n     */\n    isBefore(other) {\n        requireNonNull(other, 'other');\n        const thisEpochSec = this.toEpochSecond();\n        const otherEpochSec = other.toEpochSecond();\n        return thisEpochSec < otherEpochSec ||\n            (thisEpochSec === otherEpochSec && this.toLocalTime().nano() < other.toLocalTime().nano());\n    }\n\n    /**\n     * Checks if the instant of this date-time is equal to that of the specified date-time.\n     *\n     * This method differs from the comparison in {@link compareTo} and {@link equals}\n     * in that it only compares the instant of the date-time. This is equivalent to using\n     * `dateTime1.toInstant().equals(dateTime2.toInstant())`.\n     *\n     * @param {!ChronoZonedDateTime} other - the other date-time to compare to, not null\n     * @return {boolean} true if the instant equals the instant of the specified date-time\n     */\n    isEqual(other) {\n        requireNonNull(other, 'other');\n        return this.toEpochSecond() === other.toEpochSecond() &&\n                this.toLocalTime().nano() === other.toLocalTime().nano();\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Checks if this date-time is equal to another date-time.\n     *\n     * The comparison is based on the offset date-time and the zone.\n     * To compare for the same instant on the time-line, use {@link compareTo}.\n     * Only objects of type {@link ChronoZoneDateTime} are compared, other types return false.\n     *\n     * @param {*} other  the object to check, null returns false\n     * @return {boolean} true if this is equal to the other date-time\n     */\n    equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof ChronoZonedDateTime) {\n            return this.compareTo(other) === 0;\n        }\n        return false;\n    }\n\n}\n\nfunction strcmp(a, b){\n    if (a < b) {\n        return -1;\n    }\n    if (a > b) {\n        return 1;\n    }\n    return 0;\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { requireNonNull } from './assert';\nimport { DateTimeException, IllegalArgumentException } from './errors';\nimport { MathUtil } from './MathUtil';\n\nimport { Clock } from './Clock';\nimport { Instant } from './Instant';\nimport { LocalDate } from './LocalDate';\nimport { LocalDateTime } from './LocalDateTime';\nimport { LocalTime } from './LocalTime';\nimport { OffsetDateTime } from './OffsetDateTime';\nimport { ZoneId } from './ZoneId';\nimport { ZoneOffset } from './ZoneOffset';\n\nimport { ChronoZonedDateTime } from './chrono/ChronoZonedDateTime';\nimport { DateTimeFormatter } from './format/DateTimeFormatter';\nimport { ChronoField } from './temporal/ChronoField';\nimport { ChronoUnit } from './temporal/ChronoUnit';\nimport { createTemporalQuery } from './temporal/TemporalQuery';\nimport { TemporalQueries } from './temporal/TemporalQueries';\n\n/**\n * A date-time with a time-zone in the ISO-8601 calendar system,\n * such as `2007-12-03T10:15:30+01:00 Europe/Paris`.\n *\n * `ZonedDateTime` is an immutable representation of a date-time with a time-zone.\n * This class stores all date and time fields, to a precision of nanoseconds,\n * and a time-zone, with a zone offset used to handle ambiguous local date-times.\n * For example, the value\n * '2nd October 2007 at 13:45.30.123456789 +02:00 in the Europe/Paris time-zone'\n * can be stored in a {@link ZonedDateTime}.\n *\n * This class handles conversion from the local time-line of {@link LocalDateTime}\n * to the instant time-line of {@link Instant}.\n * The difference between the two time-lines is the offset from UTC/Greenwich,\n * represented by a {@link ZoneOffset}.\n *\n * Converting between the two time-lines involves calculating the offset using the\n * {@link ZoneRules} rules accessed from the {@link ZoneId}.\n * Obtaining the offset for an instant is simple, as there is exactly one valid\n * offset for each instant. By contrast, obtaining the offset for a local date-time\n * is not straightforward. There are three cases:\n *\n * * Normal, with one valid offset. For the vast majority of the year, the normal\n *   case applies, where there is a single valid offset for the local date-time.\n * * Gap, with zero valid offsets. This is when clocks jump forward typically\n *   due to the spring daylight savings change from 'winter' to 'summer'.\n *   In a gap there are local date-time values with no valid offset.\n * * Overlap, with two valid offsets. This is when clocks are set back typically\n *   due to the autumn daylight savings change from 'summer' to 'winter'.\n *   In an overlap there are local date-time values with two valid offsets.\n *\n * Any method that converts directly or implicitly from a local date-time to an\n * instant by obtaining the offset has the potential to be complicated.\n *\n * For Gaps, the general strategy is that if the local date-time falls in the\n * middle of a Gap, then the resulting zoned date-time will have a local date-time\n * shifted forwards by the length of the Gap, resulting in a date-time in the later\n * offset, typically 'summer' time.\n *\n * For Overlaps, the general strategy is that if the local date-time falls in the\n * middle of an Overlap, then the previous offset will be retained. If there is no\n * previous offset, or the previous offset is invalid, then the earlier offset is\n * used, typically 'summer' time. Two additional methods,\n * {@link withEarlierOffsetAtOverlap} and {@link withLaterOffsetAtOverlap},\n * help manage the case of an overlap.\n *\n * ### Specification for implementors\n *\n * A {@link ZonedDateTime} holds state equivalent to three separate objects,\n * a {@link LocalDateTime}, a {@link ZoneId} and the resolved {@link ZoneOffset}.\n * The offset and local date-time are used to define an instant when necessary.\n * The zone ID is used to obtain the rules for how and when the offset changes.\n * The offset cannot be freely set, as the zone controls which offsets are valid.\n */\nexport class ZonedDateTime extends ChronoZonedDateTime {\n\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains the current date-time from the system clock in the specified time-zone or clock\n     * or default time zone.\n     *\n     * This will query the system clock (see {@link Clock#systemDefaultZone}) in the default\n     * time-zone to obtain the current date-time.\n     * The zone and offset will be set based on the time-zone in the clock.\n     *\n     * Using this method will prevent the ability to use an alternate clock for testing\n     * because the clock is hard-coded.\n     *\n     * @param {Clock|ZoneId} [clockOrZone=Clock.systemDefaultZone()]\n     * @return {ZonedDateTime} the current date-time using the system clock, not null\n     */\n    static now(clockOrZone) {\n        let clock;\n        if(clockOrZone instanceof ZoneId){\n            clock = Clock.system(clockOrZone);\n        } else {\n            clock = clockOrZone == null ? Clock.systemDefaultZone() : clockOrZone;\n        }\n        return ZonedDateTime.ofInstant(clock.instant(), clock.zone());\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * function overloading for static {@link ZonedDateTime.of}\n     *\n     * if called with 2 (or less) args {@link ZonedDateTime.of2} is called,\n     * if called with 3 args and the first arg is an instance of LocalDate {@link ZonedDateTime.of3} is called,\n     * otherwise {@link ZonedDateTime.of8} is called.\n     */\n    static of(){\n        if(arguments.length <= 2){\n            return ZonedDateTime.of2.apply(this, arguments);\n        } else if (arguments.length === 3 && arguments[0] instanceof LocalDate){\n            return ZonedDateTime.of3.apply(this, arguments);\n        } else {\n            return ZonedDateTime.of8.apply(this, arguments);\n        }\n    }\n    /**\n     * Obtains an instance of {@link ZonedDateTime} from a local date and time.\n     *\n     * This creates a zoned date-time matching the input local date and time as closely as possible.\n     * Time-zone rules, such as daylight savings, mean that not every local date-time\n     * is valid for the specified zone, thus the local date-time may be adjusted.\n     *\n     * The local date time and first combined to form a local date-time.\n     * The local date-time is then resolved to a single instant on the time-line.\n     * This is achieved by finding a valid offset from UTC/Greenwich for the local\n     * date-time as defined by the {@link ZoneRules} of the zone ID.\n     *\n     * In most cases, there is only one valid offset for a local date-time.\n     * In the case of an overlap, when clocks are set back, there are two valid offsets.\n     * This method uses the earlier offset typically corresponding to 'summer'.\n     *\n     * In the case of a gap, when clocks jump forward, there is no valid offset.\n     * Instead, the local date-time is adjusted to be later by the length of the gap.\n     * For a typical one hour daylight savings change, the local date-time will be\n     * moved one hour later into the offset typically corresponding to 'summer'.\n     *\n     * @param {LocalDate} date - the local date, not null\n     * @param {LocalTime} time - the local time, not null\n     * @param {ZoneId} zone - the time-zone, not null\n     * @return {ZonedDateTime} the offset date-time, not null\n     */\n    static of3(date, time, zone) {\n        return ZonedDateTime.of2(LocalDateTime.of(date, time), zone);\n    }\n\n    /**\n     * Obtains an instance of {@link ZonedDateTime} from a local date-time.\n     *\n     * This creates a zoned date-time matching the input local date-time as closely as possible.\n     * Time-zone rules, such as daylight savings, mean that not every local date-time\n     * is valid for the specified zone, thus the local date-time may be adjusted.\n     *\n     * The local date-time is resolved to a single instant on the time-line.\n     * This is achieved by finding a valid offset from UTC/Greenwich for the local\n     * date-time as defined by the {@link ZoneRules} of the zone ID.\n     *\n     * In most cases, there is only one valid offset for a local date-time.\n     * In the case of an overlap, when clocks are set back, there are two valid offsets.\n     * This method uses the earlier offset typically corresponding to 'summer'.\n     *\n     * In the case of a gap, when clocks jump forward, there is no valid offset.\n     * Instead, the local date-time is adjusted to be later by the length of the gap.\n     * For a typical one hour daylight savings change, the local date-time will be\n     * moved one hour later into the offset typically corresponding to 'summer'.\n     *\n     * @param {!LocalDateTime} localDateTime - the local date-time, not null\n     * @param {!ZoneId} zone - the time-zone, not null\n     * @return {ZonedDateTime} the zoned date-time, not null\n     */\n    static of2(localDateTime, zone) {\n        return ZonedDateTime.ofLocal(localDateTime, zone, null);\n    }\n\n    /**\n     * Obtains an instance of {@link ZonedDateTime} from a year, month, day,\n     * hour, minute, second, nanosecond and time-zone.\n     *\n     * This creates a zoned date-time matching the local date-time of the seven\n     * specified fields as closely as possible.\n     * Time-zone rules, such as daylight savings, mean that not every local date-time\n     * is valid for the specified zone, thus the local date-time may be adjusted.\n     *\n     * The local date-time is resolved to a single instant on the time-line.\n     * This is achieved by finding a valid offset from UTC/Greenwich for the local\n     * date-time as defined by the {@link ZoneRules} of the zone ID.\n     *\n     * In most cases, there is only one valid offset for a local date-time.\n     * In the case of an overlap, when clocks are set back, there are two valid offsets.\n     * This method uses the earlier offset typically corresponding to 'summer'.\n     *\n     * In the case of a gap, when clocks jump forward, there is no valid offset.\n     * Instead, the local date-time is adjusted to be later by the length of the gap.\n     * For a typical one hour daylight savings change, the local date-time will be\n     * moved one hour later into the offset typically corresponding to 'summer'.\n     *\n     * This method exists primarily for writing test cases.\n     * Non test-code will typically use other methods to create an offset time.\n     * {@link LocalDateTime} has five additional convenience variants of the\n     * equivalent factory method taking fewer arguments.\n     * They are not provided here to reduce the footprint of the API.\n     *\n     * @param {number} year - the year to represent, from MIN_YEAR to MAX_YEAR\n     * @param {number} month - the month-of-year to represent, from 1 (January) to 12 (December)\n     * @param {number} dayOfMonth - the day-of-month to represent, from 1 to 31\n     * @param {number} hour - the hour-of-day to represent, from 0 to 23\n     * @param {number} minute - the minute-of-hour to represent, from 0 to 59\n     * @param {number} second - the second-of-minute to represent, from 0 to 59\n     * @param {number} nanoOfSecond - the nano-of-second to represent, from 0 to 999,999,999\n     * @param {ZoneId} zone - the time-zone, not null\n     * @return {ZonedDateTime } the offset date-time, not null\n     * @throws DateTimeException if the value of any field is out of range, or\n     *  if the day-of-month is invalid for the month-year\n     */\n    static of8(\n        year, month, dayOfMonth,\n        hour, minute, second, nanoOfSecond, zone) {\n        const dt = LocalDateTime.of(year, month, dayOfMonth, hour, minute, second, nanoOfSecond);\n        return ZonedDateTime.ofLocal(dt, zone, null);\n    }\n\n    /**\n     * Obtains an instance of {@link ZonedDateTime} from a local date-time\n     * using the preferred offset if possible.\n     *\n     * The local date-time is resolved to a single instant on the time-line.\n     * This is achieved by finding a valid offset from UTC/Greenwich for the local\n     * date-time as defined by the {@link ZoneRules} of the zone ID.\n     *\n     * In most cases, there is only one valid offset for a local date-time.\n     * In the case of an overlap, where clocks are set back, there are two valid offsets.\n     * If the preferred offset is one of the valid offsets then it is used.\n     * Otherwise the earlier valid offset is used, typically corresponding to 'summer'.\n     *\n     * In the case of a gap, where clocks jump forward, there is no valid offset.\n     * Instead, the local date-time is adjusted to be later by the length of the gap.\n     * For a typical one hour daylight savings change, the local date-time will be\n     * moved one hour later into the offset typically corresponding to 'summer'.\n     *\n     * @param {!LocalDateTime} localDateTime - the local date-time, not null\n     * @param {!ZoneId} zone - the time-zone, not null\n     * @param {ZoneOffset} preferredOffset - the zone offset, null if no preference\n     * @return {ZonedDateTime} the zoned date-time, not null\n     */\n    static ofLocal(localDateTime, zone, preferredOffset) {\n        requireNonNull(localDateTime, 'localDateTime');\n        requireNonNull(zone, 'zone');\n        if (zone instanceof ZoneOffset) {\n            return new ZonedDateTime(localDateTime, zone, zone);\n        }\n        let offset = null;\n        const rules = zone.rules();\n        const validOffsets = rules.validOffsets(localDateTime);\n        if (validOffsets.length === 1) {\n            offset = validOffsets[0];\n        } else if (validOffsets.length === 0) {\n            const trans = rules.transition(localDateTime);\n            localDateTime = localDateTime.plusSeconds(trans.duration().seconds());\n            offset = trans.offsetAfter();\n        } else {\n            if (preferredOffset != null &&\n                    validOffsets.some((validOffset) => {return validOffset.equals(preferredOffset);})) {\n                offset = preferredOffset;\n            } else {\n                offset = requireNonNull(validOffsets[0], 'offset');  // protect against bad ZoneRules\n            }\n        }\n\n        return new ZonedDateTime(localDateTime, offset, zone);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * function overloading for {@link ZonedDateTime.ofInstant}.\n     * if called with 2 args {@link ZonedDateTime.ofInstant2} is called\n     * otherwise {@link ZonedDateTime.ofInstant3}.\n     */\n    static ofInstant(){\n        if (arguments.length === 2){\n            return ZonedDateTime.ofInstant2.apply(this, arguments);\n        } else {\n            return ZonedDateTime.ofInstant3.apply(this, arguments);\n        }\n    }\n    /**\n     * Obtains an instance of {@link ZonedDateTime} from an {@link Instant}.\n     *\n     * This creates a zoned date-time with the same instant as that specified.\n     * Calling {@link toInstant} will return an instant equal to the one used here.\n     *\n     * Converting an instant to a zoned date-time is simple as there is only one valid\n     * offset for each instant.\n     *\n     * @param {!Instant} instant - the instant to create the date-time from, not null\n     * @param {!ZoneId} zone - the time-zone, not null\n     * @return {ZonedDateTime} the zoned date-time, not null\n     * @throws DateTimeException if the result exceeds the supported range\n     */\n    static ofInstant2(instant, zone) {\n        requireNonNull(instant, 'instant');\n        requireNonNull(zone, 'zone');\n        return ZonedDateTime._create(instant.epochSecond(), instant.nano(), zone);\n    }\n\n    /**\n     * Obtains an instance of {@link ZonedDateTime} from the instant formed by combining\n     * the local date-time and offset.\n     *\n     * This creates a zoned date-time by combining the {@link LocalDateTime} and {@link ZoneOffset}.\n     * This combination uniquely specifies an instant without ambiguity.\n     *\n     * Converting an instant to a zoned date-time is simple as there is only one valid\n     * offset for each instant. If the valid offset is different to the offset specified,\n     * the the date-time and offset of the zoned date-time will differ from those specified.\n     *\n     * If the {@link ZoneId} to be used is a {@link ZoneOffset}, this method is equivalent\n     * to {@link of}.\n     *\n     * @param {LocalDateTime} localDateTime - the local date-time, not null\n     * @param {ZoneOffset} offset - the zone offset, not null\n     * @param {ZoneId} zone - the time-zone, not null\n     * @return {ZonedDateTime} the zoned date-time, not null\n     */\n    static ofInstant3(localDateTime, offset, zone) {\n        requireNonNull(localDateTime, 'localDateTime');\n        requireNonNull(offset, 'offset');\n        requireNonNull(zone, 'zone');\n        return ZonedDateTime._create(localDateTime.toEpochSecond(offset), localDateTime.nano(), zone);\n    }\n\n    /**\n     * Obtains an instance of {@link ZonedDateTime} using seconds from the\n     * epoch of 1970-01-01T00:00:00Z.\n     *\n     * @param {number} epochSecond - the number of seconds from the epoch of 1970-01-01T00:00:00Z\n     * @param {number} nanoOfSecond - the nanosecond within the second, from 0 to 999,999,999\n     * @param {ZoneId} zone - the time-zone, not null\n     * @return {ZonedDateTime} the zoned date-time, not null\n     * @throws DateTimeException if the result exceeds the supported range\n     */\n    static _create(epochSecond, nanoOfSecond, zone) {\n        const rules = zone.rules();\n        const instant = Instant.ofEpochSecond(epochSecond, nanoOfSecond);  // TODO: rules should be queryable by epochSeconds\n        const offset = rules.offset(instant);\n        const ldt = LocalDateTime.ofEpochSecond(epochSecond, nanoOfSecond, offset);\n        return new ZonedDateTime(ldt, offset, zone);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains an instance of {@link ZonedDateTime} strictly validating the\n     * combination of local date-time, offset and zone ID.\n     *\n     * This creates a zoned date-time ensuring that the offset is valid for the\n     * local date-time according to the rules of the specified zone.\n     * If the offset is invalid, an exception is thrown.\n     *\n     * @param {LocalDateTime} localDateTime - the local date-time, not null\n     * @param {ZoneOffset} offset - the zone offset, not null\n     * @param {ZoneId} zone - the time-zone, not null\n     * @return {ZonedDateTime} the zoned date-time, not null\n     */\n    static ofStrict(localDateTime, offset, zone) {\n        requireNonNull(localDateTime, 'localDateTime');\n        requireNonNull(offset, 'offset');\n        requireNonNull(zone, 'zone');\n        const rules = zone.rules();\n        if (rules.isValidOffset(localDateTime, offset) === false) {\n            const trans = rules.transition(localDateTime);\n            if (trans != null && trans.isGap()) {\n                // error message says daylight savings for simplicity\n                // even though there are other kinds of gaps\n                throw new DateTimeException(`LocalDateTime ${localDateTime \n                } does not exist in zone ${zone \n                } due to a gap in the local time-line, typically caused by daylight savings`);\n            }\n            throw new DateTimeException(`ZoneOffset \"${offset}\" is not valid for LocalDateTime \"${ \n                localDateTime}\" in zone \"${zone}\"`);\n        }\n        return new ZonedDateTime(localDateTime, offset, zone);\n    }\n\n    /**\n     * Obtains an instance of {@link ZonedDateTime} leniently, for advanced use cases,\n     * allowing any combination of local date-time, offset and zone ID.\n     *\n     * This creates a zoned date-time with no checks other than no nulls.\n     * This means that the resulting zoned date-time may have an offset that is in conflict\n     * with the zone ID.\n     *\n     * This method is intended for advanced use cases.\n     * For example, consider the case where a zoned date-time with valid fields is created\n     * and then stored in a database or serialization-based store. At some later point,\n     * the object is then re-loaded. However, between those points in time, the government\n     * that defined the time-zone has changed the rules, such that the originally stored\n     * local date-time now does not occur. This method can be used to create the object\n     * in an 'invalid' state, despite the change in rules.\n     *\n     * @param {LocalDateTime} localDateTime - the local date-time, not null\n     * @param {ZoneOffset} offset - the zone offset, not null\n     * @param {ZoneId} zone - the time-zone, not null\n     * @return {ZonedDateTime} the zoned date-time, not null\n     */\n    static ofLenient(localDateTime, offset, zone) {\n        requireNonNull(localDateTime, 'localDateTime');\n        requireNonNull(offset, 'offset');\n        requireNonNull(zone, 'zone');\n        if (zone instanceof ZoneOffset && offset.equals(zone) === false) {\n            throw new IllegalArgumentException('ZoneId must match ZoneOffset');\n        }\n        return new ZonedDateTime(localDateTime, offset, zone);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains an instance of {@link ZonedDateTime} from a temporal object.\n     *\n     * A {@link TemporalAccessor} represents some form of date and time information.\n     * This factory converts the arbitrary temporal object to an instance of {@link ZonedDateTime}.\n     *\n     * The conversion will first obtain a {@link ZoneId}. It will then try to obtain an instant.\n     * If that fails it will try to obtain a local date-time.\n     * The zoned date time will either be a combination of {@link ZoneId} and instant,\n     * or {@link ZoneId} and local date-time.\n     *\n     * This method matches the signature of the functional interface {@link TemporalQuery}\n     * allowing it to be used in queries via method reference, {@link ZonedDateTime::from}.\n     *\n     * @param {!TemporalAccessor} temporal - the temporal object to convert, not null\n     * @return {ZonedDateTime} the zoned date-time, not null\n     * @throws DateTimeException if unable to convert to an {@link ZonedDateTime}\n     */\n    static from(temporal) {\n        requireNonNull(temporal, 'temporal');\n        if (temporal instanceof ZonedDateTime) {\n            return temporal;\n        }\n        const zone = ZoneId.from(temporal);\n        if (temporal.isSupported(ChronoField.INSTANT_SECONDS)) {\n            const zdt = ZonedDateTime._from(temporal, zone);\n            if(zdt != null) return zdt;\n        }\n        const ldt = LocalDateTime.from(temporal);\n        return ZonedDateTime.of2(ldt, zone);\n    }\n\n    static _from(temporal, zone){\n        try {\n            return ZonedDateTime.__from(temporal, zone);\n        } catch (ex) {\n            if(!(ex instanceof DateTimeException)) throw ex;\n            // ignore\n        }\n    }\n\n    static __from(temporal, zone){\n        const epochSecond = temporal.getLong(ChronoField.INSTANT_SECONDS);\n        const nanoOfSecond = temporal.get(ChronoField.NANO_OF_SECOND);\n        return ZonedDateTime._create(epochSecond, nanoOfSecond, zone);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains an instance of {@link ZonedDateTime} from a text string such as\n     * `2007-12-03T10:15:30+01:00[Europe/Paris]`.\n     *\n     * The string must represent a valid date-time and is parsed using\n     * {@link org.threeten.bp.format.DateTimeFormatter#ISO_ZONED_DATE_TIME}.\n     *\n     * @param {!string} text - the text to parse such as '2007-12-03T10:15:30+01:00[Europe/Paris]', not null\n     * @param {!DateTimeFormatter} [formatter=DateTimeFormatter.ISO_ZONED_DATE_TIME] - the formatter to use\n     * @return {ZonedDateTime} the parsed zoned date-time, not null\n     * @throws DateTimeParseException if the text cannot be parsed\n     */\n    static parse(text, formatter = DateTimeFormatter.ISO_ZONED_DATE_TIME) {\n        requireNonNull(formatter, 'formatter');\n        return formatter.parse(text, ZonedDateTime.FROM);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Constructor.\n     *\n     * @param {LocalDateTime} dateTime - the date-time, validated as not null\n     * @param {ZoneOffset} offset - the zone offset, validated as not null\n     * @param {ZoneUd} zone - the time-zone, validated as not null\n     * @private\n     */\n    constructor(dateTime, offset, zone) {\n        requireNonNull(dateTime, 'dateTime');\n        requireNonNull(offset, 'offset');\n        requireNonNull(zone, 'zone');\n\n        super();\n\n        /**\n         * The local date-time.\n         */\n        this._dateTime = dateTime;\n        /**\n         * The offset from UTC/Greenwich.\n         */\n        this._offset = offset;\n        /**\n         * The time-zone.\n         */\n        this._zone = zone;\n    }\n\n    /**\n     * Resolves the new local date-time using this zone ID, retaining the offset if possible.\n     *\n     * @param {LocalDateTime} newDateTime - the new local date-time, not null\n     * @return {ZonedDateTime} the zoned date-time, not null\n     */\n    _resolveLocal(newDateTime) {\n        requireNonNull(newDateTime, 'newDateTime');\n        return ZonedDateTime.ofLocal(newDateTime, this._zone, this._offset);\n    }\n\n    /**\n     * Resolves the new local date-time using the offset to identify the instant.\n     *\n     * @param {LocalDateTime} newDateTime - the new local date-time, not null\n     * @return {ZonedDateTime} the zoned date-time, not null\n     */\n    _resolveInstant(newDateTime) {\n        return ZonedDateTime.ofInstant3(newDateTime, this._offset, this._zone);\n    }\n\n    /**\n     * Resolves the offset into this zoned date-time.\n     *\n     * This ignores the offset, unless it can be used in an overlap.\n     *\n     * @param {ZoneOffset} offset - the offset, not null\n     * @return {ZonedDateTime} the zoned date-time, not null\n     */\n    _resolveOffset(offset) {\n        if (offset.equals(this._offset) === false && this._zone.rules().isValidOffset(this._dateTime, offset)) {\n            return new ZonedDateTime(this._dateTime, offset, this._zone);\n        }\n        return this;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Checks if the specified field is supported.\n     *\n     * This checks if this date-time can be queried for the specified field.\n     * If false, then calling {@link range} and {@link get} will throw an exception.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields are:\n     *\n     * * {@link NANO_OF_SECOND}\n     * * {@link NANO_OF_DAY}\n     * * {@link MICRO_OF_SECOND}\n     * * {@link MICRO_OF_DAY}\n     * * {@link MILLI_OF_SECOND}\n     * * {@link MILLI_OF_DAY}\n     * * {@link SECOND_OF_MINUTE}\n     * * {@link SECOND_OF_DAY}\n     * * {@link MINUTE_OF_HOUR}\n     * * {@link MINUTE_OF_DAY}\n     * * {@link HOUR_OF_AMPM}\n     * * {@link CLOCK_HOUR_OF_AMPM}\n     * * {@link HOUR_OF_DAY}\n     * * {@link CLOCK_HOUR_OF_DAY}\n     * * {@link AMPM_OF_DAY}\n     * * {@link DAY_OF_WEEK}\n     * * {@link ALIGNED_DAY_OF_WEEK_IN_MONTH}\n     * * {@link ALIGNED_DAY_OF_WEEK_IN_YEAR}\n     * * {@link DAY_OF_MONTH}\n     * * {@link DAY_OF_YEAR}\n     * * {@link EPOCH_DAY}\n     * * {@link ALIGNED_WEEK_OF_MONTH}\n     * * {@link ALIGNED_WEEK_OF_YEAR}\n     * * {@link MONTH_OF_YEAR}\n     * * {@link EPOCH_MONTH}\n     * * {@link YEAR_OF_ERA}\n     * * {@link YEAR}\n     * * {@link ERA}\n     * * {@link INSTANT_SECONDS}\n     * * {@link OFFSET_SECONDS}\n     *\n     * All other {@link ChronoField} instances will return false.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.isSupportedBy}\n     * passing `this` as the argument.\n     * Whether the field is supported is determined by the field.\n     *\n     * @param {TemporalField|TemporalUnit} fieldOrUnit - the field to check, null returns false\n     * @return {boolean} true if the field is supported on this date-time, false if not\n     */\n    isSupported(fieldOrUnit) {\n        if(fieldOrUnit instanceof ChronoField){\n            return true;\n        } else if (fieldOrUnit instanceof ChronoUnit) {\n            return fieldOrUnit.isDateBased() || fieldOrUnit.isTimeBased();\n        }\n        return (fieldOrUnit != null && fieldOrUnit.isSupportedBy(this));\n    }\n\n\n    /**\n     * Gets the range of valid values for the specified field.\n     *\n     * The range object expresses the minimum and maximum valid values for a field.\n     * This date-time is used to enhance the accuracy of the returned range.\n     * If it is not possible to return the range, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return\n     * appropriate range instances.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.rangeRefinedBy}\n     * passing `this` as the argument.\n     * Whether the range can be obtained is determined by the field.\n     *\n     * @param {TemporalField} field - the field to query the range for, not null\n     * @return {ValueRange} the range of valid values for the field, not null\n     * @throws DateTimeException if the range for the field cannot be obtained\n     */\n    range(field) {\n        if (field instanceof ChronoField) {\n            if (field === ChronoField.INSTANT_SECONDS || field === ChronoField.OFFSET_SECONDS) {\n                return field.range();\n            }\n            return this._dateTime.range(field);\n        }\n        return field.rangeRefinedBy(this);\n    }\n\n    /**\n     * Gets the value of the specified field from this date-time as an `int`.\n     *\n     * This queries this date-time for the value for the specified field.\n     * The returned value will always be within the valid range of values for the field.\n     * If it is not possible to return the value, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return valid\n     * values based on this date-time, except {@link NANO_OF_DAY}, {@link MICRO_OF_DAY},\n     * {@link EPOCH_DAY}, {@link EPOCH_MONTH} and {@link INSTANT_SECONDS} which are too\n     * large to fit in an `int` and throw a {@link DateTimeException}.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.getFrom}\n     * passing `this` as the argument. Whether the value can be obtained,\n     * and what the value represents, is determined by the field.\n     *\n     * @param {!TemporalField} field - the field to get, not null\n     * @return {number} the value for the field\n     * @throws DateTimeException if a value for the field cannot be obtained\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    get(field) {\n        return this.getLong(field);\n    }\n\n    /**\n     * Gets the value of the specified field from this date-time as a `long`.\n     *\n     * This queries this date-time for the value for the specified field.\n     * If it is not possible to return the value, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return valid\n     * values based on this date-time.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.getFrom}\n     * passing `this` as the argument. Whether the value can be obtained,\n     * and what the value represents, is determined by the field.\n     *\n     * @param {!TemporalField} field  the field to get, not null\n     * @return {number} the value for the field\n     * @throws DateTimeException if a value for the field cannot be obtained\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    getLong(field) {\n        if (field instanceof ChronoField) {\n            switch (field) {\n                case ChronoField.INSTANT_SECONDS: return this.toEpochSecond();\n                case ChronoField.OFFSET_SECONDS: return this._offset.totalSeconds();\n            }\n            return this._dateTime.getLong(field);\n        }\n        requireNonNull(field, 'field');\n        return field.getFrom(this);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the zone offset, such as '+01:00'.\n     *\n     * This is the offset of the local date-time from UTC/Greenwich.\n     *\n     * @return {ZoneOffset}the zone offset, not null\n     */\n    offset() {\n        return this._offset;\n    }\n\n    /**\n     * Returns a copy of this date-time changing the zone offset to the\n     * earlier of the two valid offsets at a local time-line overlap.\n     *\n     * This method only has any effect when the local time-line overlaps, such as\n     * at an autumn daylight savings cutover. In this scenario, there are two\n     * valid offsets for the local date-time. Calling this method will return\n     * a zoned date-time with the earlier of the two selected.\n     *\n     * If this method is called when it is not an overlap, `this`\n     * is returned.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the earlier offset, not null\n     */\n    withEarlierOffsetAtOverlap() {\n        const trans = this._zone.rules().transition(this._dateTime);\n        if (trans != null && trans.isOverlap()) {\n            const earlierOffset = trans.offsetBefore();\n            if (earlierOffset.equals(this._offset) === false) {\n                return new ZonedDateTime(this._dateTime, earlierOffset, this._zone);\n            }\n        }\n        return this;\n    }\n\n    /**\n     * Returns a copy of this date-time changing the zone offset to the\n     * later of the two valid offsets at a local time-line overlap.\n     *\n     * This method only has any effect when the local time-line overlaps, such as\n     * at an autumn daylight savings cutover. In this scenario, there are two\n     * valid offsets for the local date-time. Calling this method will return\n     * a zoned date-time with the later of the two selected.\n     *\n     * If this method is called when it is not an overlap, `this`\n     * is returned.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the later offset, not null\n     */\n    withLaterOffsetAtOverlap() {\n        const trans = this._zone.rules().transition(this.toLocalDateTime());\n        if (trans != null) {\n            const laterOffset = trans.offsetAfter();\n            if (laterOffset.equals(this._offset) === false) {\n                return new ZonedDateTime(this._dateTime, laterOffset, this._zone);\n            }\n        }\n        return this;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the time-zone, such as 'Europe/Paris'.\n     *\n     * This returns the zone ID. This identifies the time-zone {@link ZoneRules}\n     * that determine when and how the offset from UTC/Greenwich changes.\n     *\n     * The zone ID may be same as the offset (see {@link getOffset}).\n     * If this is true, then any future calculations, such as addition or subtraction,\n     * have no complex edge cases due to time-zone rules.\n     * See also {@link withFixedOffsetZone}.\n     *\n     * @return {ZoneId} the time-zone, not null\n     */\n    zone() {\n        return this._zone;\n    }\n\n    /**\n     * Returns a copy of this date-time with a different time-zone,\n     * retaining the local date-time if possible.\n     *\n     * This method changes the time-zone and retains the local date-time.\n     * The local date-time is only changed if it is invalid for the new zone,\n     * determined using the same approach as\n     * {@link ofLocal}.\n     *\n     * To change the zone and adjust the local date-time,\n     * use {@link withZoneSameInstant}.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {ZoneId} zone - the time-zone to change to, not null\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the requested zone, not null\n     */\n    withZoneSameLocal(zone) {\n        requireNonNull(zone, 'zone');\n        return this._zone.equals(zone) ? this : ZonedDateTime.ofLocal(this._dateTime, zone, this._offset);\n    }\n\n    /**\n     * Returns a copy of this date-time with a different time-zone,\n     * retaining the instant.\n     *\n     * This method changes the time-zone and retains the instant.\n     * This normally results in a change to the local date-time.\n     *\n     * This method is based on retaining the same instant, thus gaps and overlaps\n     * in the local time-line have no effect on the result.\n     *\n     * To change the offset while keeping the local time,\n     * use {@link withZoneSameLocal}.\n     *\n     * @param {ZoneId} zone - the time-zone to change to, not null\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the requested zone, not null\n     * @throws DateTimeException if the result exceeds the supported date range\n     */\n    withZoneSameInstant(zone) {\n        requireNonNull(zone, 'zone');\n        return this._zone.equals(zone) ? this :\n            ZonedDateTime._create(this._dateTime.toEpochSecond(this._offset), this._dateTime.nano(), zone);\n    }\n\n    /**\n     * Returns a copy of this date-time with the zone ID set to the offset.\n     *\n     * This returns a zoned date-time where the zone ID is the same as {@link getOffset}.\n     * The local date-time, offset and instant of the result will be the same as in this date-time.\n     *\n     * Setting the date-time to a fixed single offset means that any future\n     * calculations, such as addition or subtraction, have no complex edge cases\n     * due to time-zone rules.\n     * This might also be useful when sending a zoned date-time across a network,\n     * as most protocols, such as ISO-8601, only handle offsets,\n     * and not region-based zone IDs.\n     *\n     * This is equivalent to {@link ZonedDateTime.of}.\n     *\n     * @return {ZonedDateTime} a {@link ZonedDateTime} with the zone ID set to the offset, not null\n     */\n    withFixedOffsetZone() {\n        return this._zone.equals(this._offset) ? this : new ZonedDateTime(this._dateTime, this._offset, this._offset);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the year field.\n     *\n     * This method returns the primitive `int` value for the year.\n     *\n     * The year returned by this method is proleptic as per {@link get}.\n     * To obtain the year-of-era, use `get(YEAR_OF_ERA)`.\n     *\n     * @return {number} the year, from MIN_YEAR to MAX_YEAR\n     */\n    year() {\n        return this._dateTime.year();\n    }\n\n    /**\n     * Gets the month-of-year field from 1 to 12.\n     *\n     * This method returns the month as an `int` from 1 to 12.\n     * Application code is frequently clearer if the enum {@link Month}\n     * is used by calling {@link getMonth}.\n     *\n     * @return {number} the month-of-year, from 1 to 12\n     * @see #month()\n     */\n    monthValue() {\n        return this._dateTime.monthValue();\n    }\n\n    /**\n     * Gets the month-of-year field using the {@link Month} enum.\n     *\n     * This method returns the enum {@link Month} for the month.\n     * This avoids confusion as to what `int` values mean.\n     * If you need access to the primitive `int` value, use {@link Month#getValue}.\n     *\n     * @return {Month} the month-of-year, not null\n     * @see #getMonthValue()\n     */\n    month() {\n        return this._dateTime.month();\n    }\n\n    /**\n     * Gets the day-of-month field.\n     *\n     * This method returns the primitive `int` value for the day-of-month.\n     *\n     * @return {number} the day-of-month, from 1 to 31\n     */\n    dayOfMonth() {\n        return this._dateTime.dayOfMonth();\n    }\n\n    /**\n     * Gets the day-of-year field.\n     *\n     * This method returns the primitive `int` value for the day-of-year.\n     *\n     * @return {number} the day-of-year, from 1 to 365, or 366 in a leap year\n     */\n    dayOfYear() {\n        return this._dateTime.dayOfYear();\n    }\n\n    /**\n     * Gets the day-of-week field, which is an enum {@link DayOfWeek}.\n     *\n     * This method returns the enum {@link DayOfWeek} for the day-of-week.\n     * This avoids confusion as to what `int` values mean.\n     * If you need access to the primitive `int` value, use {@link DayOfWeek#getValue}.\n     *\n     * Additional information can be obtained from the {@link DayOfWeek}.\n     * This includes textual names of the values.\n     *\n     * @return {DayOfWeek} the day-of-week, not null\n     */\n    dayOfWeek() {\n        return this._dateTime.dayOfWeek();\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the hour-of-day field.\n     *\n     * @return {number} the hour-of-day, from 0 to 23\n     */\n    hour() {\n        return this._dateTime.hour();\n    }\n\n    /**\n     * Gets the minute-of-hour field.\n     *\n     * @return {number} the minute-of-hour, from 0 to 59\n     */\n    minute() {\n        return this._dateTime.minute();\n    }\n\n    /**\n     * Gets the second-of-minute field.\n     *\n     * @return {number} the second-of-minute, from 0 to 59\n     */\n    second() {\n        return this._dateTime.second();\n    }\n\n    /**\n     * Gets the nano-of-second field.\n     *\n     * @return {number} the nano-of-second, from 0 to 999,999,999\n     */\n    nano() {\n        return this._dateTime.nano();\n    }\n\n    //-----------------------------------------------------------------------\n\n    /**\n     * Returns an adjusted copy of this date-time.\n     *\n     * This returns a new {@link ZonedDateTime}, based on this one, with the date-time adjusted.\n     * The adjustment takes place using the specified adjuster strategy object.\n     * Read the documentation of the adjuster to understand what adjustment will be made.\n     *\n     * A simple adjuster might simply set the one of the fields, such as the year field.\n     * A more complex adjuster might set the date to the last day of the month.\n     * A selection of common adjustments is provided in {@link TemporalAdjusters}.\n     * These include finding the 'last day of the month' and 'next Wednesday'.\n     * Key date-time classes also implement the {@link TemporalAdjuster} interface,\n     * such as {@link Month} and {@link MonthDay}.\n     * The adjuster is responsible for handling special cases, such as the varying\n     * lengths of month and leap years.\n     *\n     * For example this code returns a date on the last day of July:\n     * <pre>\n     *  import static org.threeten.bp.Month.*;\n     *  import static org.threeten.bp.temporal.Adjusters.*;\n     *\n     *  result = zonedDateTime.with(JULY).with(lastDayOfMonth());\n     * </pre>\n     *\n     * The classes {@link LocalDate} and {@link LocalTime} implement {@link TemporalAdjuster},\n     * thus this method can be used to change the date, time or offset:\n     * <pre>\n     *  result = zonedDateTime.with(date);\n     *  result = zonedDateTime.with(time);\n     * </pre>\n     *\n     * {@link ZoneOffset} also implements {@link TemporalAdjuster} however it is less likely\n     * that setting the offset will have the effect you expect. When an offset is passed in,\n     * the local date-time is combined with the new offset to form an {@link Instant}.\n     * The instant and original zone are then used to create the result.\n     * This algorithm means that it is quite likely that the output has a different offset\n     * to the specified offset. It will however work correctly when passing in the offset\n     * applicable for the instant of the zoned date-time, and will work correctly if passing\n     * one of the two valid offsets during a daylight savings overlap when the same local time\n     * occurs twice.\n     *\n     * The result of this method is obtained by invoking the\n     * {@link TemporalAdjuster#adjustInto} method on the\n     * specified adjuster passing `this` as the argument.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {TemporalAdjuster} adjuster - the adjuster to use, not null\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on `this` with the adjustment made, not null\n     * @throws DateTimeException if the adjustment cannot be made\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    _withAdjuster(adjuster) {\n        // optimizations\n        if (adjuster instanceof LocalDate) {\n            return this._resolveLocal(LocalDateTime.of(adjuster, this._dateTime.toLocalTime()));\n        } else if (adjuster instanceof LocalTime) {\n            return this._resolveLocal(LocalDateTime.of(this._dateTime.toLocalDate(), adjuster));\n        } else if (adjuster instanceof LocalDateTime) {\n            return this._resolveLocal(adjuster);\n        } else if (adjuster instanceof Instant) {\n            const instant = adjuster;\n            return ZonedDateTime._create(instant.epochSecond(), instant.nano(), this._zone);\n        } else if (adjuster instanceof ZoneOffset) {\n            return this._resolveOffset(adjuster);\n        }\n        return super._withAdjuster(adjuster);\n    }\n\n    /**\n     * Returns a copy of this date-time with the specified field set to a new value.\n     *\n     * This returns a {@link ZonedDateTime}, based on this one, with the value\n     * for the specified field changed.\n     * This can be used to change any supported field, such as the year, month or day-of-month.\n     * If it is not possible to set the value, because the field is not supported or for\n     * some other reason, an exception is thrown.\n     *\n     * In some cases, changing the specified field can cause the resulting date-time to become invalid,\n     * such as changing the month from 31st January to February would make the day-of-month invalid.\n     * In cases like this, the field is responsible for resolving the date. Typically it will choose\n     * the previous valid date, which would be the last valid day of February in this example.\n     *\n     * If the field is a {@link ChronoField} then the adjustment is implemented here.\n     *\n     * The {@link INSTANT_SECONDS} field will return a date-time with the specified instant.\n     * The zone and nano-of-second are unchanged.\n     * The result will have an offset derived from the new instant and original zone.\n     * If the new instant value is outside the valid range then a {@link DateTimeException} will be thrown.\n     *\n     * The {@link OFFSET_SECONDS} field will typically be ignored.\n     * The offset of a {@link ZonedDateTime} is controlled primarily by the time-zone.\n     * As such, changing the offset does not generally make sense, because there is only\n     * one valid offset for the local date-time and zone.\n     * If the zoned date-time is in a daylight savings overlap, then the offset is used\n     * to switch between the two valid offsets. In all other cases, the offset is ignored.\n     * If the new offset value is outside the valid range then a {@link DateTimeException} will be thrown.\n     *\n     * The other supported fields (see {@link isSupported}) will behave as in {@link LocalDateTime#with}.\n     * The zone is not part of the calculation and will be unchanged.\n     * When converting back to {@link ZonedDateTime}, if the local date-time is in an overlap,\n     * then the offset will be retained if possible, otherwise the earlier offset will be used.\n     * If in a gap, the local date-time will be adjusted forward by the length of the gap.\n     *\n     * All other {@link ChronoField} instances will throw an {@link UnsupportedTemporalTypeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.adjustInto}\n     * passing `this` as the argument. In this case, the field determines\n     * whether and how to adjust the instant.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {TemporalField} field - the field to set in the result, not null\n     * @param {number} newValue - the new value of the field in the result\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on `this` with the specified field set, not null\n     * @throws DateTimeException if the field cannot be set\n     * @throws UnsupportedTemporalTypeException if the field is not supported\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    _withField(field, newValue) {\n        if (field instanceof ChronoField) {\n            switch (field) {\n                case ChronoField.INSTANT_SECONDS: return ZonedDateTime._create(newValue, this.nano(), this._zone);\n                case ChronoField.OFFSET_SECONDS: {\n                    const offset = ZoneOffset.ofTotalSeconds(field.checkValidIntValue(newValue));\n                    return this._resolveOffset(offset);\n                }\n            }\n            return this._resolveLocal(this._dateTime.with(field, newValue));\n        }\n        return field.adjustInto(this, newValue);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the year value altered.\n     *\n     * This operates on the local time-line,\n     * changing the year (see {@link LocalDateTime#withYear}) of the local date-time.\n     * This is then converted back to a {@link ZonedDateTime}, using the zone ID\n     * to obtain the offset.\n     *\n     * When converting back to {@link ZonedDateTime}, if the local date-time is in an overlap,\n     * then the offset will be retained if possible, otherwise the earlier offset will be used.\n     * If in a gap, the local date-time will be adjusted forward by the length of the gap.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} year - the year to set in the result, from MIN_YEAR to MAX_YEAR\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the requested year, not null\n     * @throws DateTimeException if the year value is invalid\n     */\n    withYear(year) {\n        return this._resolveLocal(this._dateTime.withYear(year));\n    }\n\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the month-of-year value altered.\n     *\n     * This operates on the local time-line,\n     * changing the month (see {@link LocalDateTime#withMonth}) of the local date-time.\n     * This is then converted back to a {@link ZonedDateTime}, using the zone ID\n     * to obtain the offset.\n     *\n     * When converting back to {@link ZonedDateTime}, if the local date-time is in an overlap,\n     * then the offset will be retained if possible, otherwise the earlier offset will be used.\n     * If in a gap, the local date-time will be adjusted forward by the length of the gap.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} month - the month-of-year to set in the result, from 1 (January) to 12 (December)\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the requested month, not null\n     * @throws DateTimeException if the month-of-year value is invalid\n     */\n    withMonth(month) {\n        return this._resolveLocal(this._dateTime.withMonth(month));\n    }\n\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the day-of-month value altered.\n     *\n     * This operates on the local time-line,\n     * changing the day-of-month (see {@link LocalDateTime#withDayOfMonth}) of the local date-time.\n     * This is then converted back to a {@link ZonedDateTime}, using the zone ID\n     * to obtain the offset.\n     *\n     * When converting back to {@link ZonedDateTime}, if the local date-time is in an overlap,\n     * then the offset will be retained if possible, otherwise the earlier offset will be used.\n     * If in a gap, the local date-time will be adjusted forward by the length of the gap.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} dayOfMonth - the day-of-month to set in the result, from 1 to 28-31\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the requested day, not null\n     * @throws DateTimeException if the day-of-month value is invalid\n     * @throws DateTimeException if the day-of-month is invalid for the month-year\n     */\n    withDayOfMonth(dayOfMonth) {\n        return this._resolveLocal(this._dateTime.withDayOfMonth(dayOfMonth));\n    }\n\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the day-of-year altered.\n     *\n     * This operates on the local time-line,\n     * changing the day-of-year (see {@link LocalDateTime#withDayOfYear}) of the local date-time.\n     * This is then converted back to a {@link ZonedDateTime}, using the zone ID\n     * to obtain the offset.\n     *\n     * When converting back to {@link ZonedDateTime}, if the local date-time is in an overlap,\n     * then the offset will be retained if possible, otherwise the earlier offset will be used.\n     * If in a gap, the local date-time will be adjusted forward by the length of the gap.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} dayOfYear - the day-of-year to set in the result, from 1 to 365-366\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date with the requested day, not null\n     * @throws DateTimeException if the day-of-year value is invalid\n     * @throws DateTimeException if the day-of-year is invalid for the year\n     */\n    withDayOfYear(dayOfYear) {\n        return this._resolveLocal(this._dateTime.withDayOfYear(dayOfYear));\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the hour-of-day value altered.\n     *\n     * This operates on the local time-line,\n     * changing the time (see {@link LocalDateTime#withHour}) of the local date-time.\n     * This is then converted back to a {@link ZonedDateTime}, using the zone ID\n     * to obtain the offset.\n     *\n     * When converting back to {@link ZonedDateTime}, if the local date-time is in an overlap,\n     * then the offset will be retained if possible, otherwise the earlier offset will be used.\n     * If in a gap, the local date-time will be adjusted forward by the length of the gap.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} hour - the hour-of-day to set in the result, from 0 to 23\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the requested hour, not null\n     * @throws DateTimeException if the hour value is invalid\n     */\n    withHour(hour) {\n        return this._resolveLocal(this._dateTime.withHour(hour));\n    }\n\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the minute-of-hour value altered.\n     *\n     * This operates on the local time-line,\n     * changing the time (see {@link LocalDateTime#withMinute}) of the local date-time.\n     * This is then converted back to a {@link ZonedDateTime}, using the zone ID\n     * to obtain the offset.\n     *\n     * When converting back to {@link ZonedDateTime}, if the local date-time is in an overlap,\n     * then the offset will be retained if possible, otherwise the earlier offset will be used.\n     * If in a gap, the local date-time will be adjusted forward by the length of the gap.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} minute - the minute-of-hour to set in the result, from 0 to 59\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the requested minute, not null\n     * @throws DateTimeException if the minute value is invalid\n     */\n    withMinute(minute) {\n        return this._resolveLocal(this._dateTime.withMinute(minute));\n    }\n\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the second-of-minute value altered.\n     *\n     * This operates on the local time-line,\n     * changing the time (see {@link LocalDateTime#withSecond}) of the local date-time.\n     * This is then converted back to a {@link ZonedDateTime}, using the zone ID\n     * to obtain the offset.\n     *\n     * When converting back to {@link ZonedDateTime}, if the local date-time is in an overlap,\n     * then the offset will be retained if possible, otherwise the earlier offset will be used.\n     * If in a gap, the local date-time will be adjusted forward by the length of the gap.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} second - the second-of-minute to set in the result, from 0 to 59\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the requested second, not null\n     * @throws DateTimeException if the second value is invalid\n     */\n    withSecond(second) {\n        return this._resolveLocal(this._dateTime.withSecond(second));\n    }\n\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the nano-of-second value altered.\n     *\n     * This operates on the local time-line,\n     * changing the time (see {@link LocalDateTime#withNano}) of the local date-time.\n     * This is then converted back to a {@link ZonedDateTime}, using the zone ID\n     * to obtain the offset.\n     *\n     * When converting back to {@link ZonedDateTime}, if the local date-time is in an overlap,\n     * then the offset will be retained if possible, otherwise the earlier offset will be used.\n     * If in a gap, the local date-time will be adjusted forward by the length of the gap.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} nanoOfSecond - the nano-of-second to set in the result, from 0 to 999,999,999\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the requested nanosecond, not null\n     * @throws DateTimeException if the nano value is invalid\n     */\n    withNano(nanoOfSecond) {\n        return this._resolveLocal(this._dateTime.withNano(nanoOfSecond));\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the time truncated.\n     *\n     * Truncation returns a copy of the original date-time with fields\n     * smaller than the specified unit set to zero.\n     * For example, truncating with {@link ChronoUnit#MINUTES}\n     * will set the second-of-minute and nano-of-second field to zero.\n     *\n     * The unit must have a duration (see {@link TemporalUnit#getDuration})\n     * that divides into the length of a standard day without remainder.\n     * This includes all supplied time units on {@link ChronoUnit} and\n     * {@link ChronoUnit#DAYS}. Other units throw an exception.\n     *\n     * This operates on the local time-line, truncating the underlying local date-time.\n     * This is then converted back to a {@link ZonedDateTime}, using the zone ID to obtain the offset.\n     *\n     * When converting back to {@link ZonedDateTime}, if the local date-time is in an overlap,\n     * then the offset will be retained if possible, otherwise the earlier offset will be used.\n     * If in a gap, the local date-time will be adjusted forward by the length of the gap.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {TemporalUnit} unit - the unit to truncate to, not null\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the time truncated, not null\n     * @throws DateTimeException if unable to truncate\n     */\n    truncatedTo(unit) {\n        return this._resolveLocal(this._dateTime.truncatedTo(unit));\n    }\n\n    //-----------------------------------------------------------------------\n\n    /**\n     * Returns a copy of this date-time with the specified period added.\n     *\n     * This method returns a new date-time based on this date-time with the specified period added.\n     * This can be used to add any period that is defined by a unit, for example to add years, months or days.\n     * The unit is responsible for the details of the calculation, including the resolution\n     * of any edge cases in the calculation.\n     *\n     * The calculation for date and time units differ.\n     *\n     * Date units operate on the local time-line.\n     * The period is first added to the local date-time, then converted back\n     * to a zoned date-time using the zone ID.\n     * The conversion uses {@link ofLocal}\n     * with the offset before the addition.\n     *\n     * Time units operate on the instant time-line.\n     * The period is first added to the local date-time, then converted back to\n     * a zoned date-time using the zone ID.\n     * The conversion uses {@link ofInstant}\n     * with the offset before the addition.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} amountToAdd - the amount of the unit to add to the result, may be negative\n     * @param {TemporalUnit} unit - the unit of the period to add, not null\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the specified period added, not null\n     * @throws DateTimeException if the unit cannot be added to this type\n     */\n    _plusUnit(amountToAdd, unit) {\n        if (unit instanceof ChronoUnit) {\n            if (unit.isDateBased()) {\n                return this._resolveLocal(this._dateTime.plus(amountToAdd, unit));\n            } else {\n                return this._resolveInstant(this._dateTime.plus(amountToAdd, unit));\n            }\n        }\n        requireNonNull(unit, 'unit');\n        return unit.addTo(this, amountToAdd);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the specified period in years added.\n     *\n     * This operates on the local time-line, adding years to the local date-time.\n     * This is then converted back to a {@link ZonedDateTime}, using the zone ID\n     * to obtain the offset.\n     *\n     * When converting back to {@link ZonedDateTime}, if the local date-time is in an overlap,\n     * then the offset will be retained if possible, otherwise the earlier offset will be used.\n     * If in a gap, the local date-time will be adjusted forward by the length of the gap.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} years - the years to add, may be negative\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the years added, not null\n     * @throws DateTimeException if the result exceeds the supported date range\n     */\n    plusYears(years) {\n        return this._resolveLocal(this._dateTime.plusYears(years));\n    }\n\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the specified period in months added.\n     *\n     * This operates on the local time-line, adding months to the local date-time.\n     * This is then converted back to a {@link ZonedDateTime}, using the zone ID\n     * to obtain the offset.\n     *\n     * When converting back to {@link ZonedDateTime}, if the local date-time is in an overlap,\n     * then the offset will be retained if possible, otherwise the earlier offset will be used.\n     * If in a gap, the local date-time will be adjusted forward by the length of the gap.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} months - the months to add, may be negative\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the months added, not null\n     * @throws DateTimeException if the result exceeds the supported date range\n     */\n    plusMonths(months) {\n        return this._resolveLocal(this._dateTime.plusMonths(months));\n    }\n\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the specified period in weeks added.\n     *\n     * This operates on the local time-line, adding weeks to the local date-time.\n     * This is then converted back to a {@link ZonedDateTime}, using the zone ID\n     * to obtain the offset.\n     *\n     * When converting back to {@link ZonedDateTime}, if the local date-time is in an overlap,\n     * then the offset will be retained if possible, otherwise the earlier offset will be used.\n     * If in a gap, the local date-time will be adjusted forward by the length of the gap.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} weeks - the weeks to add, may be negative\n     * @return {ZonedDateTime}a {@link ZonedDateTime} based on this date-time with the weeks added, not null\n     * @throws DateTimeException if the result exceeds the supported date range\n     */\n    plusWeeks(weeks) {\n        return this._resolveLocal(this._dateTime.plusWeeks(weeks));\n    }\n\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the specified period in days added.\n     *\n     * This operates on the local time-line, adding days to the local date-time.\n     * This is then converted back to a {@link ZonedDateTime}, using the zone ID\n     * to obtain the offset.\n     *\n     * When converting back to {@link ZonedDateTime}, if the local date-time is in an overlap,\n     * then the offset will be retained if possible, otherwise the earlier offset will be used.\n     * If in a gap, the local date-time will be adjusted forward by the length of the gap.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} days - the days to add, may be negative\n     * @return {ZonedDateTime}a {@link ZonedDateTime} based on this date-time with the days added, not null\n     * @throws DateTimeException if the result exceeds the supported date range\n     */\n    plusDays(days) {\n        return this._resolveLocal(this._dateTime.plusDays(days));\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the specified period in hours added.\n     *\n     * This operates on the instant time-line, such that adding one hour will\n     * always be a duration of one hour later.\n     * This may cause the local date-time to change by an amount other than one hour.\n     * Note that this is a different approach to that used by days, months and years,\n     * thus adding one day is not the same as adding 24 hours.\n     *\n     * For example, consider a time-zone where the spring DST cutover means that the\n     * local times 01:00 to 01:59 occur twice changing from offset +02:00 to +01:00.\n     *\n     * * Adding one hour to 00:30+02:00 will result in 01:30+02:00\n     * * Adding one hour to 01:30+02:00 will result in 01:30+01:00\n     * * Adding one hour to 01:30+01:00 will result in 02:30+01:00\n     * * Adding three hours to 00:30+02:00 will result in 02:30+01:00\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} hours - the hours to add, may be negative\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the hours added, not null\n     * @throws DateTimeException if the result exceeds the supported date range\n     */\n    plusHours(hours) {\n        return this._resolveInstant(this._dateTime.plusHours(hours));\n    }\n\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the specified period in minutes added.\n     *\n     * This operates on the instant time-line, such that adding one minute will\n     * always be a duration of one minute later.\n     * This may cause the local date-time to change by an amount other than one minute.\n     * Note that this is a different approach to that used by days, months and years.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} minutes - the minutes to add, may be negative\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the minutes added, not null\n     * @throws DateTimeException if the result exceeds the supported date range\n     */\n    plusMinutes(minutes) {\n        return this._resolveInstant(this._dateTime.plusMinutes(minutes));\n    }\n\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the specified period in seconds added.\n     *\n     * This operates on the instant time-line, such that adding one second will\n     * always be a duration of one second later.\n     * This may cause the local date-time to change by an amount other than one second.\n     * Note that this is a different approach to that used by days, months and years.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} seconds - the seconds to add, may be negative\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the seconds added, not null\n     * @throws DateTimeException if the result exceeds the supported date range\n     */\n    plusSeconds(seconds) {\n        return this._resolveInstant(this._dateTime.plusSeconds(seconds));\n    }\n\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the specified period in nanoseconds added.\n     *\n     * This operates on the instant time-line, such that adding one nano will\n     * always be a duration of one nano later.\n     * This may cause the local date-time to change by an amount other than one nano.\n     * Note that this is a different approach to that used by days, months and years.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} nanos - the nanos to add, may be negative\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the nanoseconds added, not null\n     * @throws DateTimeException if the result exceeds the supported date range\n     */\n    plusNanos(nanos) {\n        return this._resolveInstant(this._dateTime.plusNanos(nanos));\n    }\n\n    //-----------------------------------------------------------------------\n\n    /**\n     * Returns a copy of this date-time with the specified period subtracted.\n     *\n     * This method returns a new date-time based on this date-time with the specified period subtracted.\n     * This can be used to subtract any period that is defined by a unit, for example to subtract years, months or days.\n     * The unit is responsible for the details of the calculation, including the resolution\n     * of any edge cases in the calculation.\n     *\n     * The calculation for date and time units differ.\n     *\n     * Date units operate on the local time-line.\n     * The period is first subtracted from the local date-time, then converted back\n     * to a zoned date-time using the zone ID.\n     * The conversion uses {@link ofLocal}\n     * with the offset before the subtraction.\n     *\n     * Time units operate on the instant time-line.\n     * The period is first subtracted from the local date-time, then converted back to\n     * a zoned date-time using the zone ID.\n     * The conversion uses {@link ofInstant}\n     * with the offset before the subtraction.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} amountToSubtract - the amount of the unit to subtract from the result, may be negative\n     * @param {TemporalUnit} unit - the unit of the period to subtract, not null\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the specified period subtracted, not null\n     * @throws DateTimeException if the unit cannot be added to this type\n     */\n    _minusUnit(amountToSubtract, unit) {\n        return this._plusUnit(-1 * amountToSubtract, unit);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the specified period in years subtracted.\n     *\n     * This operates on the local time-line, subtracting years from the local date-time.\n     * This is then converted back to a {@link ZonedDateTime}, using the zone ID\n     * to obtain the offset.\n     *\n     * When converting back to {@link ZonedDateTime}, if the local date-time is in an overlap,\n     * then the offset will be retained if possible, otherwise the earlier offset will be used.\n     * If in a gap, the local date-time will be adjusted forward by the length of the gap.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} years - the years to subtract, may be negative\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the years subtracted, not null\n     * @throws DateTimeException if the result exceeds the supported date range\n     */\n    minusYears(years) {\n        return this.plusYears(-1 * years);\n    }\n\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the specified period in months subtracted.\n     *\n     * This operates on the local time-line, subtracting months from the local date-time.\n     * This is then converted back to a {@link ZonedDateTime}, using the zone ID\n     * to obtain the offset.\n     *\n     * When converting back to {@link ZonedDateTime}, if the local date-time is in an overlap,\n     * then the offset will be retained if possible, otherwise the earlier offset will be used.\n     * If in a gap, the local date-time will be adjusted forward by the length of the gap.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} months - the months to subtract, may be negative\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the months subtracted, not null\n     * @throws DateTimeException if the result exceeds the supported date range\n     */\n    minusMonths(months) {\n        return this.plusMonths(-1 * months);\n    }\n\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the specified period in weeks subtracted.\n     *\n     * This operates on the local time-line, subtracting weeks from the local date-time.\n     * This is then converted back to a {@link ZonedDateTime}, using the zone ID\n     * to obtain the offset.\n     *\n     * When converting back to {@link ZonedDateTime}, if the local date-time is in an overlap,\n     * then the offset will be retained if possible, otherwise the earlier offset will be used.\n     * If in a gap, the local date-time will be adjusted forward by the length of the gap.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} weeks - the weeks to subtract, may be negative\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the weeks subtracted, not null\n     * @throws DateTimeException if the result exceeds the supported date range\n     */\n    minusWeeks(weeks) {\n        return this.plusWeeks(-1 * weeks);\n    }\n\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the specified period in days subtracted.\n     *\n     * This operates on the local time-line, subtracting days from the local date-time.\n     * This is then converted back to a {@link ZonedDateTime}, using the zone ID\n     * to obtain the offset.\n     *\n     * When converting back to {@link ZonedDateTime}, if the local date-time is in an overlap,\n     * then the offset will be retained if possible, otherwise the earlier offset will be used.\n     * If in a gap, the local date-time will be adjusted forward by the length of the gap.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} days - the days to subtract, may be negative\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the days subtracted, not null\n     * @throws DateTimeException if the result exceeds the supported date range\n     */\n    minusDays(days) {\n        return this.plusDays(-1 * days);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the specified period in hours subtracted.\n     *\n     * This operates on the instant time-line, such that subtracting one hour will\n     * always be a duration of one hour earlier.\n     * This may cause the local date-time to change by an amount other than one hour.\n     * Note that this is a different approach to that used by days, months and years,\n     * thus subtracting one day is not the same as adding 24 hours.\n     *\n     * For example, consider a time-zone where the spring DST cutover means that the\n     * local times 01:00 to 01:59 occur twice changing from offset +02:00 to +01:00.\n     *\n     * * Subtracting one hour from 02:30+01:00 will result in 01:30+02:00\n     * * Subtracting one hour from 01:30+01:00 will result in 01:30+02:00\n     * * Subtracting one hour from 01:30+02:00 will result in 00:30+01:00\n     * * Subtracting three hours from 02:30+01:00 will result in 00:30+02:00\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} hours - the hours to subtract, may be negative\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the hours subtracted, not null\n     * @throws DateTimeException if the result exceeds the supported date range\n     */\n    minusHours(hours) {\n        return this.plusHours(-1 * hours);\n    }\n\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the specified period in minutes subtracted.\n     *\n     * This operates on the instant time-line, such that subtracting one minute will\n     * always be a duration of one minute earlier.\n     * This may cause the local date-time to change by an amount other than one minute.\n     * Note that this is a different approach to that used by days, months and years.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} minutes - the minutes to subtract, may be negative\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the minutes subtracted, not null\n     * @throws DateTimeException if the result exceeds the supported date range\n     */\n    minusMinutes(minutes) {\n        return this.plusMinutes(-1 * minutes);\n    }\n\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the specified period in seconds subtracted.\n     *\n     * This operates on the instant time-line, such that subtracting one second will\n     * always be a duration of one second earlier.\n     * This may cause the local date-time to change by an amount other than one second.\n     * Note that this is a different approach to that used by days, months and years.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} seconds - the seconds to subtract, may be negative\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the seconds subtracted, not null\n     * @throws DateTimeException if the result exceeds the supported date range\n     */\n    minusSeconds(seconds) {\n        return this.plusSeconds(-1 * seconds);\n    }\n\n    /**\n     * Returns a copy of this {@link ZonedDateTime} with the specified period in nanoseconds subtracted.\n     *\n     * This operates on the instant time-line, such that subtracting one nano will\n     * always be a duration of one nano earlier.\n     * This may cause the local date-time to change by an amount other than one nano.\n     * Note that this is a different approach to that used by days, months and years.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} nanos - the nanos to subtract, may be negative\n     * @return {ZonedDateTime} a {@link ZonedDateTime} based on this date-time with the nanoseconds subtracted, not null\n     * @throws DateTimeException if the result exceeds the supported date range\n     */\n    minusNanos(nanos) {\n        return this.plusNanos(-1 * nanos);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Queries this date-time using the specified query.\n     *\n     * This queries this date-time using the specified query strategy object.\n     * The {@link TemporalQuery} object defines the logic to be used to\n     * obtain the result. Read the documentation of the query to understand\n     * what the result of this method will be.\n     *\n     * The result of this method is obtained by invoking the\n     * {@link TemporalQuery#queryFrom} method on the\n     * specified query passing `this` as the argument.\n     *\n     * @param {TemporalQuery} query - the query to invoke, not null\n     * @return {*} the query result, null may be returned (defined by the query)\n     * @throws DateTimeException if unable to query (defined by the query)\n     * @throws ArithmeticException if numeric overflow occurs (defined by the query)\n     */\n    query(query) {\n        if (query === TemporalQueries.localDate()) {\n            return this.toLocalDate();\n        }\n        requireNonNull(query, 'query');\n        return super.query(query);\n    }\n\n    /**\n     * Calculates the period between this date-time and another date-time in\n     * terms of the specified unit.\n     *\n     * This calculates the period between two date-times in terms of a single unit.\n     * The start and end points are `this` and the specified date-time.\n     * The result will be negative if the end is before the start.\n     * For example, the period in days between two date-times can be calculated\n     * using {@link startDateTime.until}.\n     *\n     * The {@link Temporal} passed to this method must be a {@link ZonedDateTime}.\n     * If the time-zone differs between the two zoned date-times, the specified\n     * end date-time is normalized to have the same zone as this date-time.\n     *\n     * The calculation returns a whole number, representing the number of\n     * complete units between the two date-times.\n     * For example, the period in months between 2012-06-15T00:00Z and 2012-08-14T23:59Z\n     * will only be one month as it is one minute short of two months.\n     *\n     * This method operates in association with {@link TemporalUnit#between}.\n     * The result of this method is a `long` representing the amount of\n     * the specified unit. By contrast, the result of {@link between} is an\n     * object that can be used directly in addition/subtraction:\n     * <pre>\n     *   long period = start.until(end, MONTHS);   // this method\n     *   dateTime.plus(MONTHS.between(start, end));      // use in plus/minus\n     * </pre>\n     *\n     * The calculation is implemented in this method for {@link ChronoUnit}.\n     * The units {@link NANOS}, {@link MICROS}, {@link MILLIS}, {@link SECONDS},\n     * {@link MINUTES}, {@link HOURS} and {@link HALF_DAYS}, {@link DAYS},\n     * {@link WEEKS}, {@link MONTHS}, {@link YEARS}, {@link DECADES},\n     * {@link CENTURIES}, {@link MILLENNIA} and {@link ERAS} are supported.\n     * Other {@link ChronoUnit} values will throw an exception.\n     *\n     * The calculation for date and time units differ.\n     *\n     * Date units operate on the local time-line, using the local date-time.\n     * For example, the period from noon on day 1 to noon the following day\n     * in days will always be counted as exactly one day, irrespective of whether\n     * there was a daylight savings change or not.\n     *\n     * Time units operate on the instant time-line.\n     * The calculation effectively converts both zoned date-times to instants\n     * and then calculates the period between the instants.\n     * For example, the period from noon on day 1 to noon the following day\n     * in hours may be 23, 24 or 25 hours (or some other amount) depending on\n     * whether there was a daylight savings change or not.\n     *\n     * If the unit is not a {@link ChronoUnit}, then the result of this method\n     * is obtained by invoking {@link TemporalUnit.between}\n     * passing `this` as the first argument and the input temporal as\n     * the second argument.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Temporal} endExclusive  the end date-time, which is converted to a {@link ZonedDateTime}, not null\n     * @param {TemporalUnit} unit  the unit to measure the period in, not null\n     * @return {number} the amount of the period between this date-time and the end date-time\n     * @throws DateTimeException if the period cannot be calculated\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    until(endExclusive, unit) {\n        let end = ZonedDateTime.from(endExclusive);\n        if (unit instanceof ChronoUnit) {\n            end = end.withZoneSameInstant(this._zone);\n            if (unit.isDateBased()) {\n                return this._dateTime.until(end._dateTime, unit);\n            } else {\n                const difference = this._offset.totalSeconds() - end._offset.totalSeconds();\n                const adjustedEnd = end._dateTime.plusSeconds(difference);\n                return this._dateTime.until(adjustedEnd, unit);\n            }\n        }\n        return unit.between(this, end);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the {@link LocalDateTime} part of this date-time.\n     *\n     * This returns a {@link LocalDateTime} with the same year, month, day and time\n     * as this date-time.\n     *\n     * @return {LocalDateTime} the local date-time part of this date-time, not null\n     */\n    toLocalDateTime() {\n        return this._dateTime;\n    }\n\n    /**\n     * Gets the {@link LocalDate} part of this date-time.\n     *\n     * This returns a {@link LocalDate} with the same year, month and day\n     * as this date-time.\n     *\n     * @return {LocalDate} the date part of this date-time, not null\n     */\n    toLocalDate() {\n        return this._dateTime.toLocalDate();\n    }\n\n    /**\n     * Gets the {@link LocalTime} part of this date-time.\n     *\n     * This returns a {@link LocalTime} with the same hour, minute, second and\n     * nanosecond as this date-time.\n     *\n     * @return {LocalTime} the time part of this date-time, not null\n     */\n    toLocalTime() {\n        return this._dateTime.toLocalTime();\n    }\n\n    /**\n     * Converts this date-time to an {@link OffsetDateTime}.\n     *\n     * This creates an offset date-time using the local date-time and offset.\n     * The zone ID is ignored.\n     *\n     * @return {OffsetDateTime} an offset date-time representing the same local date-time and offset, not null\n     */\n    toOffsetDateTime() {\n        return OffsetDateTime.of(this._dateTime, this._offset);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Checks if this date-time is equal to another date-time.\n     *\n     * The comparison is based on the offset date-time and the zone.\n     * Only objects of type {@link ZonedDateTime} are compared, other types return false.\n     *\n     * @param {*} other  the object to check, null returns false\n     * @return {boolean} true if this is equal to the other date-time\n     */\n    equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof ZonedDateTime) {\n            return this._dateTime.equals(other._dateTime) &&\n                this._offset.equals(other._offset) &&\n                this._zone.equals(other._zone);\n        }\n        return false;\n    }\n\n    /**\n     * A hash code for this date-time.\n     *\n     * @return {number} a suitable hash code\n     */\n    hashCode() {\n        return MathUtil.hashCode(this._dateTime.hashCode(), this._offset.hashCode(), this._zone.hashCode());\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Outputs this date-time as a string, such as\n     * `2007-12-03T10:15:30+01:00[Europe/Paris]`.\n     *\n     * The format consists of the {@link LocalDateTime} followed by the {@link ZoneOffset}.\n     * If the {@link ZoneId} is not the same as the offset, then the ID is output.\n     * The output is compatible with ISO-8601 if the offset and ID are the same.\n     *\n     * @return {string} a string representation of this date-time, not null\n     */\n    toString() {\n        let str = this._dateTime.toString() + this._offset.toString();\n        if (this._offset !== this._zone) {\n            str += `[${this._zone.toString()}]`;\n        }\n        return str;\n    }\n\n    /**\n     *\n     * @return {string} same as {@link ZonedDateTime.toString}\n     */\n    toJSON() {\n        return this.toString();\n    }\n\n    /**\n     * Outputs this date-time as a string using the formatter.\n     *\n     * @param {DateTimeFormatter} formatter  the formatter to use, not null\n     * @return {string} the formatted date-time string, not null\n     * @throws DateTimeException if an error occurs during printing\n     */\n    format(formatter) {\n        return super.format(formatter);\n    }\n\n}\n\nexport function _init(){\n    ZonedDateTime.FROM = createTemporalQuery('ZonedDateTime.FROM', (temporal) => {\n        return ZonedDateTime.from(temporal);\n    });\n}\n","/**\n * @copyright (c) 2016-present, Philipp Thürwächter & Pattrick Hüper  & js-joda contributors\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { ChronoField } from './temporal/ChronoField';\nimport { ChronoUnit } from './temporal/ChronoUnit';\nimport { Temporal } from './temporal/Temporal';\nimport { Clock } from './Clock';\nimport { DateTimeFormatter } from './format/DateTimeFormatter';\nimport { Instant } from './Instant';\nimport { IsoChronology } from './chrono/IsoChronology';\nimport { LocalDateTime } from './LocalDateTime';\nimport { LocalDate } from './LocalDate';\nimport { LocalTime } from './LocalTime';\nimport { MathUtil } from './MathUtil';\nimport { OffsetTime } from './OffsetTime';\nimport { TemporalQueries } from './temporal/TemporalQueries';\nimport { ZonedDateTime } from './ZonedDateTime';\nimport { ZoneId } from './ZoneId';\nimport { ZoneOffset } from './ZoneOffset';\nimport { DateTimeException, IllegalArgumentException } from './errors';\n\nimport { createTemporalQuery } from './temporal/TemporalQuery';\nimport { requireInstance, requireNonNull } from './assert';\n\n/**\n * A date-time with an offset from UTC/Greenwich in the ISO-8601 calendar system,\n * such as 2007-12-23T10:15:30+01:00.\n */\nexport class OffsetDateTime extends Temporal {\n    /**\n     * @param {TemporaroAccessor} temporal\n     * @return {OffsetDateTime}\n     */\n    static from(temporal) {\n        requireNonNull(temporal, 'temporal');\n        if (temporal instanceof OffsetDateTime) {\n            return temporal;\n        }\n        try {\n            const offset = ZoneOffset.from(temporal);\n            try {\n                const ldt = LocalDateTime.from(temporal);\n                return OffsetDateTime.of(ldt, offset);\n            } catch (_) {\n                const instant = Instant.from(temporal);\n                return OffsetDateTime.ofInstant(instant, offset);\n            }\n        } catch (ex) {\n            throw new DateTimeException(`Unable to obtain OffsetDateTime TemporalAccessor: ${temporal}, type ${temporal.constructor != null ? temporal.constructor.name : ''}`);\n        }\n    }\n\n    /**\n     * @param {Clock|ZoneId|null} clockOrZone\n     * @return {OffsetDateTime}\n     */\n    static now(clockOrZone) {\n        if (arguments.length === 0) {\n            return OffsetDateTime.now(Clock.systemDefaultZone());\n        } else {\n            requireNonNull(clockOrZone, 'clockOrZone');\n            if (clockOrZone instanceof ZoneId) {\n                return OffsetDateTime.now(Clock.system(clockOrZone));\n            } else if (clockOrZone instanceof Clock) {\n                const now = clockOrZone.instant(); // called once\n                return OffsetDateTime.ofInstant(now, clockOrZone.zone().rules().offset(now));\n            } else {\n                throw new IllegalArgumentException('clockOrZone must be an instance of ZoneId or Clock');\n            }\n        }\n    }\n\n    /**\n     * @return {OffsetDateTime}\n     */\n    static of() {\n        if (arguments.length <= 2) {\n            return OffsetDateTime.ofDateTime.apply(this, arguments);\n        } else if (arguments.length === 3) {\n            return OffsetDateTime.ofDateAndTime.apply(this, arguments);\n        } else {\n            return OffsetDateTime.ofNumbers.apply(this, arguments);\n        }\n    }\n\n    static ofDateTime(dateTime, offset) {\n        return new OffsetDateTime(dateTime, offset);\n    }\n\n    static ofDateAndTime(date, time, offset) {\n        const dt = LocalDateTime.of(date, time);\n        return new OffsetDateTime(dt, offset);\n    }\n\n    static ofNumbers(year, month, dayOfMonth, hour=0, minute=0, second=0, nanoOfSecond=0, offset) {\n        const dt = LocalDateTime.of(year, month, dayOfMonth, hour, minute, second, nanoOfSecond);\n        return new OffsetDateTime(dt, offset);\n    }\n\n    /**\n     * @param {Instant} instant\n     * @param {ZoneId} zone\n     * @return {OffsetDateTime}\n     */\n    static ofInstant(instant,  zone){\n        requireNonNull(instant, 'instant');\n        requireNonNull(zone, 'zone');\n        const rules = zone.rules();\n        const offset = rules.offset(instant);\n        const ldt = LocalDateTime.ofEpochSecond(instant.epochSecond(), instant.nano(), offset);\n        return new OffsetDateTime(ldt, offset);\n    }\n\n    /**\n     * @param {string} text\n     * @param {DateTimeFormatter|undefined} formatter\n     * @return {OffsetTime}\n     */\n    static parse(text, formatter = DateTimeFormatter.ISO_OFFSET_DATE_TIME){\n        requireNonNull(formatter, 'formatter');\n        return formatter.parse(text, OffsetDateTime.FROM);\n    }\n\n    // TODO: Need java.util.Comparater interface.\n    // static timeLineOrder() {\n    //\n    // }\n\n    //-----------------------------------------------------------------------\n\n\n    /**\n     * @param {LocalDateTime} dateTime\n     * @param {ZoneOffset} offset\n     * @private\n     */\n    constructor(dateTime, offset) {\n        super();\n        requireNonNull(dateTime, 'dateTime');\n        requireInstance(dateTime, LocalDateTime, 'dateTime');\n        requireNonNull(offset, 'offset');\n        requireInstance(offset, ZoneOffset, 'offset');\n        this._dateTime = dateTime;\n        this._offset = offset;\n    }\n\n    /**\n     *\n     * @param {Temporal} temporal\n     * @return {Temporal}\n     */\n    adjustInto(temporal) {\n        return temporal\n            .with(ChronoField.EPOCH_DAY, this.toLocalDate().toEpochDay())\n            .with(ChronoField.NANO_OF_DAY, this.toLocalTime().toNanoOfDay())\n            .with(ChronoField.OFFSET_SECONDS, this.offset().totalSeconds());\n    }\n\n    until(endExclusive, unit) {\n        let end = OffsetDateTime.from(endExclusive);\n        if (unit instanceof ChronoUnit) {\n            end = end.withOffsetSameInstant(this._offset);\n            return this._dateTime.until(end._dateTime, unit);\n        }\n        return unit.between(this, end);\n    }\n\n    /**\n     * @param {ZoneId} zone\n     * @return {ZonedDateTime}\n     */\n    atZoneSameInstant(zone) {\n        return ZonedDateTime.ofInstant(this._dateTime, this._offset, zone);\n    }\n\n    /**\n     * @param {ZoneId} zone\n     * @return {ZonedDateTime}\n     */\n    atZoneSimilarLocal(zone) {\n        return ZonedDateTime.ofLocal(this._dateTime, zone, this._offset);\n    }\n\n    query(query) {\n        requireNonNull(query, 'query');\n        if (query === TemporalQueries.chronology()) {\n            return IsoChronology.INSTANCE;\n        } else if (query === TemporalQueries.precision()) {\n            return ChronoUnit.NANOS;\n        } else if (query === TemporalQueries.offset() || query === TemporalQueries.zone()) {\n            return this.offset();\n        } else if (query === TemporalQueries.localDate()) {\n            return this.toLocalDate();\n        } else if (query === TemporalQueries.localTime()) {\n            return this.toLocalTime();\n        } else if (query === TemporalQueries.zoneId()) {\n            return null;\n        }\n        return super.query(query);\n    }\n\n    get(field) {\n        if (field instanceof ChronoField) {\n            switch (field) {\n                case ChronoField.INSTANT_SECONDS: throw new DateTimeException(`Field too large for an int: ${field}`);\n                case ChronoField.OFFSET_SECONDS: return this.offset().totalSeconds();\n            }\n            return this._dateTime.get(field);\n        }\n        return super.get(field);\n    }\n\n    getLong(field) {\n        if (field instanceof ChronoField) {\n            switch (field) {\n                case ChronoField.INSTANT_SECONDS: return this.toEpochSecond();\n                case ChronoField.OFFSET_SECONDS: return this.offset().totalSeconds();\n            }\n            return this._dateTime.getLong(field);\n        }\n        return field.getFrom(this);\n    }\n\n    /**\n     * @return {ZoneOffset}\n     */\n    offset() {\n        return this._offset;\n    }\n\n    /**\n     * @return {number} the year, from MIN_YEAR to MAX_YEAR\n     */\n    year() {\n        return this._dateTime.year();\n    }\n\n    /**\n     * @return {number} the month-of-year, from 1 to 12\n     * @see #month()\n     */\n    monthValue() {\n        return this._dateTime.monthValue();\n    }\n\n    /**\n     * @return {{number} }the month-of-year, not null\n     * @see #monthValue()\n     */\n    month() {\n        return this._dateTime.month();\n    }\n\n    /**\n     * @return {number} the day-of-month, from 1 to 31\n     */\n    dayOfMonth() {\n        return this._dateTime.dayOfMonth();\n    }\n\n    /**\n     * @return {number} the day-of-year, from 1 to 365, or 366 in a leap year\n     */\n    dayOfYear() {\n        return this._dateTime.dayOfYear();\n    }\n\n    /**\n     * @return {number} the day-of-week, not null\n     */\n    dayOfWeek() {\n        return this._dateTime.dayOfWeek();\n    }\n\n    /**\n     * @return {number} the hour-of-day, from 0 to 23\n     */\n    hour() {\n        return this._dateTime.hour();\n    }\n\n    /**\n     * @return {number} the minute-of-hour, from 0 to 59\n     */\n    minute() {\n        return this._dateTime.minute();\n    }\n\n    /**\n     * @return {number} the second-of-minute, from 0 to 59\n     */\n    second() {\n        return this._dateTime.second();\n    }\n\n    /**\n     * @return {number} the nano-of-second, from 0 to 999,999,999\n     */\n    nano() {\n        return this._dateTime.nano();\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * @return {LocalDateTime}the local date-time part of this date-time, not null\n     */\n    toLocalDateTime() {\n        return this._dateTime;\n    }\n\n    /**\n     * @return {LocalDate} the date part of this date-time, not null\n     */\n    toLocalDate() {\n        return this._dateTime.toLocalDate();\n    }\n\n    /**\n     * @return {LocalTime} the time part of this date-time, not null\n     */\n    toLocalTime() {\n        return this._dateTime.toLocalTime();\n    }\n\n    /**\n     * @return {OffsetTime} an OffsetTime representing the time and offset, not null\n     */\n    toOffsetTime() {\n        return OffsetTime.of(this._dateTime.toLocalTime(), this._offset);\n    }\n\n    /**\n     * @return {ZonedDateTime}a zoned date-time representing the same local date-time and offset, not null\n     */\n    toZonedDateTime() {\n        return ZonedDateTime.of(this._dateTime, this._offset);\n    }\n\n    /**\n     * @return {Instant} an {@code Instant} representing the same instant, not null\n     */\n    toInstant() {\n        return this._dateTime.toInstant(this._offset);\n    }\n\n    /**\n     * @return {number} the number of seconds from the epoch of 1970-01-01T00:00:00Z\n     */\n    toEpochSecond() {\n        return this._dateTime.toEpochSecond(this._offset);\n    }\n\n    isSupported(fieldOrUnit) {\n        if (fieldOrUnit instanceof ChronoField) {\n            return fieldOrUnit.isDateBased() || fieldOrUnit.isTimeBased();\n        }\n        if (fieldOrUnit instanceof ChronoUnit) {\n            return fieldOrUnit.isDateBased() || fieldOrUnit.isTimeBased();\n        }\n        return fieldOrUnit != null && fieldOrUnit.isSupportedBy(this);\n    }\n\n    range(field) {\n        if (field instanceof ChronoField) {\n            if (field === ChronoField.INSTANT_SECONDS || field === ChronoField.OFFSET_SECONDS) {\n                return field.range();\n            }\n            return this._dateTime.range(field);\n        }\n        return field.rangeRefinedBy(this);\n    }\n\n    _withAdjuster(adjuster) {\n        requireNonNull(adjuster);\n        // optimizations\n        if (adjuster instanceof LocalDate || adjuster instanceof LocalTime || adjuster instanceof LocalDateTime) {\n            return this._withDateTimeOffset(this._dateTime.with(adjuster), this._offset);\n        } else if (adjuster instanceof Instant) {\n            return OffsetDateTime.ofInstant(adjuster, this._offset);\n        } else if (adjuster instanceof ZoneOffset) {\n            return this._withDateTimeOffset(this._dateTime, adjuster);\n        } else if (adjuster instanceof OffsetDateTime) {\n            return adjuster;\n        }\n        return adjuster.adjustInto(this);\n    }\n\n    _withField(field, newValue) {\n        requireNonNull(field);\n        if (field instanceof ChronoField) {\n            const f = field;\n            switch (f) {\n                case ChronoField.INSTANT_SECONDS: return OffsetDateTime.ofInstant(Instant.ofEpochSecond(newValue, this.nano()), this._offset);\n                case ChronoField.OFFSET_SECONDS: {\n                    return this._withDateTimeOffset(this._dateTime, ZoneOffset.ofTotalSeconds(f.checkValidIntValue(newValue)));\n                }\n            }\n            return this._withDateTimeOffset(this._dateTime.with(field, newValue), this._offset);\n        }\n        return field.adjustInto(this, newValue);\n    }\n\n    _withDateTimeOffset(dateTime, offset) {\n        if (this._dateTime === dateTime && this._offset.equals(offset)) {\n            return this;\n        }\n        return new OffsetDateTime(dateTime, offset);\n    }\n\n    /**\n     * @param {int} year\n     * @return {OffsetDateTime}\n     */\n    withYear(year) {\n        return this._withDateTimeOffset(this._dateTime.withYear(year), this._offset);\n    }\n\n    /**\n     * @param {int} month\n     * @return {OffsetDateTime}\n     */\n    withMonth(month) {\n        return this._withDateTimeOffset(this._dateTime.withMonth(month), this._offset);\n    }\n\n    /**\n     * @param {int} dayOfMonth\n     * @return {OffsetDateTime}\n     */\n    withDayOfMonth(dayOfMonth) {\n        return this._withDateTimeOffset(this._dateTime.withDayOfMonth(dayOfMonth), this._offset);\n    }\n\n    /**\n     * @param {int} dayOfYear\n     * @return {OffsetDateTime}\n     */\n    withDayOfYear(dayOfYear) {\n        return this._withDateTimeOffset(this._dateTime.withDayOfYear(dayOfYear), this._offset);\n    }\n\n    /**\n     * @param {int} hour\n     * @return {OffsetDateTime}\n     */\n    withHour(hour) {\n        return this._withDateTimeOffset(this._dateTime.withHour(hour), this._offset);\n    }\n\n    /**\n     * @param {int} minute\n     * @return {OffsetDateTime}\n     */\n    withMinute(minute) {\n        return this._withDateTimeOffset(this._dateTime.withMinute(minute), this._offset);\n    }\n\n    /**\n     * @param {int} second\n     * @return {OffsetDateTime}\n     */\n    withSecond(second) {\n        return this._withDateTimeOffset(this._dateTime.withSecond(second), this._offset);\n    }\n\n    /**\n     * @param {int} nanoOfSecond\n     * @return {OffsetDateTime}\n     */\n    withNano(nanoOfSecond) {\n        return this._withDateTimeOffset(this._dateTime.withNano(nanoOfSecond), this._offset);\n    }\n\n    /**\n     * @param {ZoneOffset} offset\n     * @return {OffsetDateTime}\n     */\n    withOffsetSameLocal(offset) {\n        requireNonNull(offset, 'offset');\n        return this._withDateTimeOffset(this._dateTime, offset);\n    }\n\n    /**\n     * @param {ZoneOffset} offset\n     * @return {OffsetDateTime}\n     */\n    withOffsetSameInstant(offset) {\n        requireNonNull(offset, 'offset');\n        if (offset.equals(this._offset)) {\n            return this;\n        }\n        const difference = offset.totalSeconds() - this._offset.totalSeconds();\n        const adjusted = this._dateTime.plusSeconds(difference);\n        return new OffsetDateTime(adjusted, offset);\n    }\n\n    /**\n     * @param {TemporalUnit} unit\n     * @return {OffsetDateTime}\n     */\n    truncatedTo(unit) {\n        return this._withDateTimeOffset(this._dateTime.truncatedTo(unit), this._offset);\n    }\n\n    _plusAmount(amount) {\n        requireNonNull(amount, 'amount');\n        return amount.addTo(this);\n    }\n\n    _plusUnit(amountToAdd, unit) {\n        if (unit instanceof ChronoUnit) {\n            return this._withDateTimeOffset(this._dateTime.plus(amountToAdd, unit), this._offset);\n        }\n        return unit.addTo(this, amountToAdd);\n    }\n\n    /**\n     * @param {int} years\n     * @return {OffsetTime}\n     */\n    plusYears(years) {\n        return this._withDateTimeOffset(this._dateTime.plusYears(years), this._offset);\n    }\n\n    /**\n     * @param {int} months\n     * @return {OffsetTime}\n     */\n    plusMonths(months) {\n        return this._withDateTimeOffset(this._dateTime.plusMonths(months), this._offset);\n    }\n\n    /**\n     * @param {int} weeks\n     * @return {OffsetTime}\n     */\n    plusWeeks(weeks) {\n        return this._withDateTimeOffset(this._dateTime.plusWeeks(weeks), this._offset);\n    }\n\n    /**\n     * @param {int} days\n     * @return {OffsetTime}\n     */\n    plusDays(days) {\n        return this._withDateTimeOffset(this._dateTime.plusDays(days), this._offset);\n    }\n\n    /**\n     * @param {int} hours\n     * @return {OffsetTime}\n     */\n    plusHours(hours) {\n        return this._withDateTimeOffset(this._dateTime.plusHours(hours), this._offset);\n    }\n\n    /**\n     * @param {int} minutes\n     * @return {OffsetTime}\n     */\n    plusMinutes(minutes) {\n        return this._withDateTimeOffset(this._dateTime.plusMinutes(minutes), this._offset);\n    }\n\n    /**\n     * @param {int} seconds\n     * @return {OffsetTime}\n     */\n    plusSeconds(seconds) {\n        return this._withDateTimeOffset(this._dateTime.plusSeconds(seconds), this._offset);\n    }\n\n    /**\n     * @param {int} nanos\n     * @return {OffsetTime}\n     */\n    plusNanos(nanos) {\n        return this._withDateTimeOffset(this._dateTime.plusNanos(nanos), this._offset);\n    }\n\n    _minusAmount(amount) {\n        requireNonNull(amount);\n        return amount.subtractFrom(this);\n    }\n\n    _minusUnit(amountToSubtract, unit) {\n        return this.plus(-1 * amountToSubtract, unit);\n    }\n\n    /**\n     * @param {int} years\n     * @return {OffsetTime}\n     */\n    minusYears(years) {\n        return this._withDateTimeOffset(this._dateTime.minusYears(years), this._offset);\n    }\n\n    /**\n     * @param {int} months\n     * @return {OffsetTime}\n     */\n    minusMonths(months) {\n        return this._withDateTimeOffset(this._dateTime.minusMonths(months), this._offset);\n    }\n\n    /**\n     * @param {int} weeks\n     * @return {OffsetTime}\n     */\n    minusWeeks(weeks) {\n        return this._withDateTimeOffset(this._dateTime.minusWeeks(weeks), this._offset);\n    }\n\n    /**\n     * @param {int} days\n     * @return {OffsetTime}\n     */\n    minusDays(days) {\n        return this._withDateTimeOffset(this._dateTime.minusDays(days), this._offset);\n    }\n\n    /**\n     * @param {int} hours\n     * @return {OffsetTime}\n     */\n    minusHours(hours) {\n        return this._withDateTimeOffset(this._dateTime.minusHours(hours), this._offset);\n    }\n\n    /**\n     * @param {int} minutes\n     * @return {OffsetTime}\n     */\n    minusMinutes(minutes) {\n        return this._withDateTimeOffset(this._dateTime.minusMinutes(minutes), this._offset);\n    }\n\n    /**\n     * @param {int} seconds\n     * @return {OffsetTime}\n     */\n    minusSeconds(seconds) {\n        return this._withDateTimeOffset(this._dateTime.minusSeconds(seconds), this._offset);\n    }\n\n    /**\n     * @param {int} nanos\n     * @return {OffsetTime}\n     */\n    minusNanos(nanos) {\n        return this._withDateTimeOffset(this._dateTime.minusNanos(nanos), this._offset);\n    }\n\n    compareTo(other) {\n        requireNonNull(other, 'other');\n        requireInstance(other, OffsetDateTime, 'other');\n        if (this.offset().equals(other.offset())) {\n            return this.toLocalDateTime().compareTo(other.toLocalDateTime());\n        }\n        let cmp = MathUtil.compareNumbers(this.toEpochSecond(), other.toEpochSecond());\n        if (cmp === 0) {\n            cmp = this.toLocalTime().nano() - other.toLocalTime().nano();\n            if (cmp === 0) {\n                cmp = this.toLocalDateTime().compareTo(other.toLocalDateTime());\n            }\n        }\n        return cmp;\n    }\n\n    /**\n     * @param {OffsetDateTime} other\n     * @return {boolean}\n     */\n    isAfter(other) {\n        requireNonNull(other, 'other');\n        const thisEpochSec = this.toEpochSecond();\n        const otherEpochSec = other.toEpochSecond();\n        return thisEpochSec > otherEpochSec || (thisEpochSec === otherEpochSec && this.toLocalTime().nano() > other.toLocalTime().nano());\n    }\n\n    /**\n     * @param {OffsetDateTime} other\n     * @return {boolean}\n     */\n    isBefore(other) {\n        requireNonNull(other, 'other');\n        const thisEpochSec = this.toEpochSecond();\n        const otherEpochSec = other.toEpochSecond();\n        return thisEpochSec < otherEpochSec || (thisEpochSec === otherEpochSec && this.toLocalTime().nano() < other.toLocalTime().nano());\n    }\n\n    /**\n     * @param {OffsetDateTime} other\n     * @return {boolean}\n     */\n    isEqual(other) {\n        requireNonNull(other, 'other');\n        return this.toEpochSecond() === other.toEpochSecond() && this.toLocalTime().nano() === other.toLocalTime().nano();\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * @param other\n     * @return {boolean}\n     */\n    equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof OffsetDateTime) {\n            return this._dateTime.equals(other._dateTime) && this._offset.equals(other._offset);\n        }\n        return false;\n    }\n\n    /**\n     * @return {number}\n     */\n    hashCode() {\n        return this._dateTime.hashCode() ^ this._offset.hashCode();\n    }\n\n    toString() {\n        return this._dateTime.toString() + this._offset.toString();\n    }\n\n    /**\n     *\n     * @return {string} same as {@link LocalDateTime.toString}\n     */\n    toJSON() {\n        return this.toString();\n    }\n\n    /**\n     * @param {DateTimeFormatter} formatter\n     * @return {string}\n     */\n    format(formatter) {\n        requireNonNull(formatter, 'formatter');\n        return formatter.format(this);\n    }\n}\n\n\nexport function _init() {\n    OffsetDateTime.MIN = LocalDateTime.MIN.atOffset(ZoneOffset.MAX);\n\n    OffsetDateTime.MAX = LocalDateTime.MAX.atOffset(ZoneOffset.MIN);\n\n    OffsetDateTime.FROM = createTemporalQuery('OffsetDateTime.FROM', (temporal) => {\n        return OffsetDateTime.from(temporal);\n    });\n}\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { assert, requireNonNull, requireInstance } from './assert';\n\nimport { MathUtil } from './MathUtil';\nimport { DateTimeException, UnsupportedTemporalTypeException, NullPointerException, IllegalArgumentException } from './errors';\n\nimport { IsoChronology } from './chrono/IsoChronology';\nimport { ChronoField } from './temporal/ChronoField';\nimport { ChronoUnit } from './temporal/ChronoUnit';\nimport { ChronoLocalDate } from './chrono/ChronoLocalDate';\nimport { TemporalQueries } from './temporal/TemporalQueries';\nimport { createTemporalQuery } from './temporal/TemporalQuery';\nimport { ValueRange } from './temporal/ValueRange';\nimport { DateTimeFormatter } from './format/DateTimeFormatter';\n\nimport { Clock } from './Clock';\nimport { DayOfWeek } from './DayOfWeek';\nimport { OffsetDateTime } from './OffsetDateTime';\nimport { OffsetTime } from './OffsetTime';\nimport { Month } from './Month';\nimport { Period } from './Period';\nimport { YearConstants } from './YearConstants';\nimport { LocalTime } from './LocalTime';\nimport { LocalDateTime } from './LocalDateTime';\nimport { Year } from './Year';\nimport { ZoneId } from './ZoneId';\nimport { ZoneOffset } from './ZoneOffset';\nimport { ZonedDateTime } from './ZonedDateTime';\n\n/**\n * The number of days in a 400 year cycle.\n */\nconst  DAYS_PER_CYCLE = 146097;\n\n/**\n* The number of days from year zero to year 1970.\n* There are five 400 year cycles from year zero to 2000.\n* There are 7 leap years from 1970 to 2000.\n*/\nconst  DAYS_0000_TO_1970 = (DAYS_PER_CYCLE * 5) - (30 * 365 + 7);\n\n/**\n * A date without a time-zone in the ISO-8601 calendar system,\n * such as 2007-12-03.\n *\n * LocalDate is an immutable date-time object that represents a date,\n * often viewed as year-month-day. Other date fields, such as day-of-year,\n * day-of-week and week-of-year, can also be accessed.\n * For example, the value \"2nd October 2007\" can be stored in a LocalDate.\n *\n * This class does not store or represent a time or time-zone.\n * Instead, it is a description of the date, as used for birthdays.\n * It cannot represent an instant on the time-line without additional information\n * such as an offset or time-zone.\n *\n * The ISO-8601 calendar system is the modern civil calendar system used today\n * in most of the world. It is equivalent to the proleptic Gregorian calendar\n * system, in which today's rules for leap years are applied for all time.\n * For most applications written today, the ISO-8601 rules are entirely suitable.\n * However, any application that makes use of historical dates, and requires them\n * to be accurate will find the ISO-8601 approach unsuitable.\n *\n * ### Static properties of Class {@link LocalDate}\n *\n * LocalDate.MIN = LocalDate.of(Year.MIN_VALUE, 1, 1);\n *\n * The minimum supported {@link LocalDate}\n * This could be used by an application as a \"far past\" date.\n *\n * LocalDate.MAX = LocalDate.of(Year.MAX_VALUE, 12, 31);\n *\n * The maximum supported {@link LocalDate}\n * This could be used by an application as a \"far future\" date.\n *\n * LocalDate.EPOCH_0\n *\n * The date at epoch day 0, that is 1970-01-01.\n */\n\nexport class LocalDate extends ChronoLocalDate{\n\n    /**\n     * Obtains the current date from the system clock in the default time-zone or\n     * if specified, the current date from the specified clock or\n     * if argument is a ZoneId this will query a clock with the specified ZoneId.\n     *\n     * This will query the specified clock to obtain the current date - today.\n     * Using this method allows the use of an alternate clock for testing.\n     *\n     * @param {Clock|ZoneId} [clockOrZone=Clock.systemDefaultZone()] - the clock or zone to use,\n     * if null, the system clock and default time-zone is used.\n     * @return {LocalDate} the current date, not null\n     */\n    static now(clockOrZone) {\n        let clock;\n        if(clockOrZone == null){\n            clock = Clock.systemDefaultZone();\n        } else if(clockOrZone instanceof ZoneId){\n            clock = Clock.system(clockOrZone);\n        } else {\n            clock = clockOrZone;\n        }\n        return LocalDate.ofInstant(clock.instant(), clock.zone());\n    }\n\n    /**\n     * obtain a LocalDate from an Instant in the specified time-zone or, if null\n     * in the system default time-zone\n     *\n     * @param {!Instant} instant\n     * @param {ZoneId} [zone=ZoneId.systemDefault()], defaults to ZoneId.systemDefault()\n     * @returns {LocalDate} the current date, not null\n     */\n    static ofInstant(instant, zone=ZoneId.systemDefault()){\n        requireNonNull(instant, 'instant');\n        const offset = zone.rules().offset(instant);\n        const epochSec = instant.epochSecond() + offset.totalSeconds();\n        const epochDay = MathUtil.floorDiv(epochSec, LocalTime.SECONDS_PER_DAY);\n        return LocalDate.ofEpochDay(epochDay);\n    }\n\n    /**\n     * Obtains an instance of {@link LocalDate} from a year, month and day.\n     *\n     * This returns a {@link LocalDate} with the specified year, month and day-of-month.\n     * The day must be valid for the year and month, otherwise an exception will be thrown.\n     *\n     * @param {!number} year - the year to represent, from {@link Year.MIN_VALUE} to {@link Year.MAX_VALUE}\n     * @param {!(Month|Number)} month - the month-of-year to represent, from 1 (January) to 12 (December)\n     * @param {!number} dayOfMonth - the day-of-month to represent, from 1 to 31\n     * @return {LocalDate} the local date, not null\n     * @throws {DateTimeException} if the value of any field is out of range,\n     *  or if the day-of-month is invalid for the month-year\n     */\n    static of(year, month, dayOfMonth) {\n        return new LocalDate(year, month, dayOfMonth);\n    }\n\n    /**\n     * Obtains an instance of {@link LocalDate} from a year and day-of-year.\n     *\n     * This returns a {@link LocalDate} with the specified year and day-of-year.\n     * The day-of-year must be valid for the year, otherwise an exception will be thrown.\n     *\n     * @param {!number} year - the year to represent, from {@link Year.MIN_VALUE} to {@link Year.MAX_VALUE}\n     * @param {!number} dayOfYear - the day-of-year to represent, from 1 to 366\n     * @return {LocalDate} the local date, not null\n     * @throws {DateTimeException} if the value of any field is out of range,\n     *  or if the day-of-year is invalid for the year\n     */\n    static ofYearDay(year, dayOfYear) {\n        ChronoField.YEAR.checkValidValue(year);\n        //TODO: ChronoField.DAY_OF_YEAR.checkValidValue(dayOfYear);\n        const leap = IsoChronology.isLeapYear(year);\n        if (dayOfYear === 366 && leap === false) {\n            assert(false, `Invalid date 'DayOfYear 366' as '${year}' is not a leap year`, DateTimeException);\n        }\n        let moy = Month.of(Math.floor((dayOfYear - 1) / 31 + 1));\n        const monthEnd = moy.firstDayOfYear(leap) + moy.length(leap) - 1;\n        if (dayOfYear > monthEnd) {\n            moy = moy.plus(1);\n        }\n        const dom = dayOfYear - moy.firstDayOfYear(leap) + 1;\n        return new LocalDate(year, moy.value(), dom);\n    }\n\n    /**\n     * Obtains an instance of LocalDate from the epoch day count.\n     *\n     * This returns a LocalDate with the specified epoch-day.\n     * The {@link ChronoField.EPOCH_DAY} is a simple incrementing count\n     * of days where day 0 is 1970-01-01. Negative numbers represent earlier days.\n     *\n     * @param {number} [epochDay=0] - the Epoch Day to convert, based on the epoch 1970-01-01\n     * @return {LocalDate} the local date, not null\n     * @throws {AssertionError} if the epoch days exceeds the supported date range\n     */\n    static ofEpochDay(epochDay=0) {\n        let adjust, adjustCycles, doyEst, yearEst, zeroDay;\n        zeroDay = epochDay + DAYS_0000_TO_1970;\n        zeroDay -= 60;\n        adjust = 0;\n        if (zeroDay < 0) {\n            adjustCycles = MathUtil.intDiv(zeroDay + 1, DAYS_PER_CYCLE) - 1;\n            adjust = adjustCycles * 400;\n            zeroDay += -adjustCycles * DAYS_PER_CYCLE;\n        }\n        yearEst = MathUtil.intDiv(400 * zeroDay + 591, DAYS_PER_CYCLE);\n        doyEst = zeroDay - (365 * yearEst + MathUtil.intDiv(yearEst, 4) - MathUtil.intDiv(yearEst, 100) + MathUtil.intDiv(yearEst, 400));\n        if (doyEst < 0) {\n            yearEst--;\n            doyEst = zeroDay - (365 * yearEst + MathUtil.intDiv(yearEst, 4) - MathUtil.intDiv(yearEst, 100) + MathUtil.intDiv(yearEst, 400));\n        }\n        yearEst += adjust;\n        const marchDoy0 = doyEst;\n        const marchMonth0 = MathUtil.intDiv(marchDoy0 * 5 + 2, 153);\n        const month = (marchMonth0 + 2) % 12 + 1;\n        const dom = marchDoy0 - MathUtil.intDiv(marchMonth0 * 306 + 5, 10) + 1;\n        yearEst += MathUtil.intDiv(marchMonth0, 10);\n        const year = yearEst;\n        return new LocalDate(year, month, dom);\n    }\n\n    /**\n     * Obtains an instance of {@link LocalDate} from a temporal object.\n     *\n     * A {@link TemporalAccessor} represents some form of date and time information.\n     * This factory converts the arbitrary temporal object to an instance of {@link LocalDate}.\n     *\n     * The conversion uses the {@link TemporalQueries.localDate} query, which relies\n     * on extracting the {@link ChronoField.EPOCH_DAY} field.\n     *\n     * This method matches the signature of the functional interface {@link TemporalQuery}\n     * allowing it to be used as a query via method reference, {@link LocalDate::from}.\n     *\n     * @param {!TemporalAccessor} temporal - the temporal object to convert, not null\n     * @return {LocalDate} the local date, not null\n     * @throws {DateTimeException} if unable to convert to a {@link LocalDate}\n     */\n    static from(temporal) {\n        requireNonNull(temporal, 'temporal');\n        const date = temporal.query(TemporalQueries.localDate());\n        if (date == null) {\n            throw new DateTimeException(\n                `Unable to obtain LocalDate from TemporalAccessor: ${temporal}, type ${temporal.constructor != null ? temporal.constructor.name : ''}`);\n        }\n        return date;\n    }\n\n    /**\n     * Obtains an instance of {@link LocalDate} from a text string using a specific formatter.\n     *\n     * The text is parsed using the formatter, returning a date.\n     *\n     * @param {!string} text - the text to parse, not null\n     * @param {DateTimeFormatter} [formatter=DateTimeFormatter.ISO_LOCAL_DATE] - the formatter to use, default is\n     * {@link DateTimeFormatter.ISO_LOCAL_DATE}\n     * @return {LocalDate} the parsed local date, not null\n     * @throws {DateTimeParseException} if the text cannot be parsed\n     */\n    static parse(text, formatter = DateTimeFormatter.ISO_LOCAL_DATE){\n        assert(formatter != null, 'formatter', NullPointerException);\n        return formatter.parse(text, LocalDate.FROM);\n    }\n\n    /**\n     * Resolves the date, resolving days past the end of month.\n     *\n     * @param {!number} year - the year to represent, validated from {@link Year.MIN_VALUE} to {@link Year.MAX_VALUE}\n     * @param {!number} month - the month-of-year to represent, validated from 1 to 12\n     * @param {!number} day - the day-of-month to represent, validated from 1 to 31\n     * @return {LocalDate} resolved date, not null\n     */\n    static _resolvePreviousValid(year, month, day) {\n        switch (month) {\n            case 2:\n                day = Math.min(day, IsoChronology.isLeapYear(year) ? 29 : 28);\n                break;\n            case 4:\n            case 6:\n            case 9:\n            case 11:\n                day = Math.min(day, 30);\n                break;\n        }\n        return LocalDate.of(year, month, day);\n    }\n\n    /**\n     * Do not call the constructor directly, use the of*() factories instead like {@link LocalDate.of}\n     *\n     * @param {!number} year\n     * @param {!(Month|number)} month\n     * @param {!number} dayOfMonth\n     * @private\n     */\n    constructor(year, month, dayOfMonth){\n        super();\n        requireNonNull(year, 'year');\n        requireNonNull(month, 'month');\n        requireNonNull(dayOfMonth, 'dayOfMonth');\n\n        if (month instanceof Month) {\n            month = month.value();\n        }\n        this._year = MathUtil.safeToInt(year);\n        this._month = MathUtil.safeToInt(month);\n        this._day = MathUtil.safeToInt(dayOfMonth);\n        LocalDate._validate(this._year, this._month, this._day);\n    }\n\n\n    /**\n     *\n     * @param {!number} year\n     * @param {!number} month\n     * @param {!number} dayOfMonth\n     * @throws {DateTimeException} if date values are invalid\n     * @private\n     */\n    static _validate(year, month, dayOfMonth) {\n        let dom;\n        ChronoField.YEAR.checkValidValue(year);\n        ChronoField.MONTH_OF_YEAR.checkValidValue(month);\n        ChronoField.DAY_OF_MONTH.checkValidValue(dayOfMonth);\n\n        if (dayOfMonth > 28) {\n            dom = 31;\n            switch (month) {\n                case 2:\n                    dom = IsoChronology.isLeapYear(year) ? 29 : 28;\n                    break;\n                case 4:\n                case 6:\n                case 9:\n                case 11:\n                    dom = 30;\n            }\n            if (dayOfMonth > dom) {\n                if (dayOfMonth === 29) {\n                    assert(false, `Invalid date 'February 29' as '${year}' is not a leap year`, DateTimeException);\n                } else {\n                    assert(false, `Invalid date '${year}' '${month}' '${dayOfMonth}'`, DateTimeException);\n                }\n            }\n        }\n    }\n\n    /**\n     * Checks if the specified field is supported.\n     *\n     * This checks if this date can be queried for the specified field.\n     * If false, then calling the {@link LocalDate.range} range and\n     * {@link LocalDate.get} get methods will throw an exception.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The {@link LocalDate.isSupported} supported fields will return valid\n     * values based on this date-time.\n     * The supported fields are:\n     *\n     * * {@link ChronoField.DAY_OF_WEEK}\n     * * {@link ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH}\n     * * {@link ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR}\n     * * {@link ChronoField.DAY_OF_MONTH}\n     * * {@link ChronoField.DAY_OF_YEAR}\n     * * {@link ChronoField.EPOCH_DAY}\n     * * {@link ChronoField.ALIGNED_WEEK_OF_MONTH}\n     * * {@link ChronoField.ALIGNED_WEEK_OF_YEAR}\n     * * {@link ChronoField.MONTH_OF_YEAR}\n     * * {@link ChronoField.EPOCH_MONTH}\n     * * {@link ChronoField.YEAR_OF_ERA}\n     * * {@link ChronoField.YEAR}\n     * * {@link ChronoField.ERA}\n     *\n     * All other {@link ChronoField} instances will return false.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.isSupportedBy}\n     * passing this as the argument.\n     * Whether the field is supported is determined by the field.\n     *\n     * @param {TemporalField} field  the field to check, null returns false\n     * @return {boolean} true if the field is supported on this date, false if not\n     */\n    isSupported(field) {\n        return super.isSupported(field);\n    }\n\n    /**\n     * Gets the range of valid values for the specified field.\n     *\n     * The range object expresses the minimum and maximum valid values for a field.\n     * This date is used to enhance the accuracy of the returned range.\n     * If it is not possible to return the range, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The {@link LocalDate.isSupported} supported fields will return\n     * appropriate range instances.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.rangeRefinedBy}\n     * passing this as the argument.\n     * Whether the range can be obtained is determined by the field.\n     *\n     * @param {TemporalField} field  the field to query the range for, not null\n     * @return {ValueRange} the range of valid values for the field, not null\n     * @throws {DateTimeException} if the range for the field cannot be obtained\n     */\n    range(field) {\n        if (field instanceof ChronoField) {\n            if (field.isDateBased()) {\n                switch (field) {\n                    case ChronoField.DAY_OF_MONTH: return ValueRange.of(1, this.lengthOfMonth());\n                    case ChronoField.DAY_OF_YEAR: return ValueRange.of(1, this.lengthOfYear());\n                    case ChronoField.ALIGNED_WEEK_OF_MONTH: return ValueRange.of(1, this.month() === Month.FEBRUARY && this.isLeapYear() === false ? 4 : 5);\n                    case ChronoField.YEAR_OF_ERA:\n                        return (this._year <= 0 ? ValueRange.of(1, Year.MAX_VALUE + 1) : ValueRange.of(1, Year.MAX_VALUE));\n                }\n                return field.range();\n            }\n            throw new UnsupportedTemporalTypeException(`Unsupported field: ${field}`);\n        }\n        return field.rangeRefinedBy(this);\n    }\n\n    /**\n     * Gets the value of the specified field from this date as an `int`.\n     *\n     * This queries this date for the value for the specified field.\n     * The returned value will always be within the valid range of values for the field.\n     * If it is not possible to return the value, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The {@link LocalDate.isSupported} supported fields will return valid\n     * values based on this date, except {@link ChronoField.EPOCH_DAY} and {@link ChronoField.EPOCH_MONTH}\n     * which are too large to fit in an `int` and throw a {@link DateTimeException}.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.getFrom}\n     * passing this as the argument. Whether the value can be obtained,\n     * and what the value represents, is determined by the field.\n     *\n     * @param {!TemporalField} field  the field to get, not null\n     * @return the value for the field\n     * @throws {DateTimeException} if a value for the field cannot be obtained\n     * @throws {ArithmeticException} if numeric overflow occurs\n     */\n    get(field) {\n        return this.getLong(field);\n    }\n\n    /**\n     * see {LocalDate.get}, get and getLong are identical in javascript, because we are only limited by\n     * {@link MathUtil.MIN_SAFE_INTEGER}/ {@link MathUtil.MAX_SAFE_INTEGER}\n     *\n     * @param {!TemporalField} field\n     * @returns {*}\n     */\n    getLong(field) {\n        assert(field != null, '', NullPointerException);\n        if (field instanceof ChronoField) {\n            return this._get0(field);\n        }\n        return field.getFrom(this);\n    }\n\n    /**\n     * TODO tests are missing for the ALIGNED_* ChronoFields\n     *\n     * @param {!TemporalField} field\n     * @returns {*}\n     * @private\n     */\n    _get0(field) {\n        switch (field) {\n            case ChronoField.DAY_OF_WEEK: return this.dayOfWeek().value();\n            case ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH: return MathUtil.intMod((this._day - 1), 7) + 1;\n            case ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR: return MathUtil.intMod((this.dayOfYear() - 1), 7) + 1;\n            case ChronoField.DAY_OF_MONTH: return this._day;\n            case ChronoField.DAY_OF_YEAR: return this.dayOfYear();\n            case ChronoField.EPOCH_DAY: return this.toEpochDay();\n            case ChronoField.ALIGNED_WEEK_OF_MONTH: return MathUtil.intDiv((this._day - 1), 7) + 1;\n            case ChronoField.ALIGNED_WEEK_OF_YEAR: return MathUtil.intDiv((this.dayOfYear() - 1), 7) + 1;\n            case ChronoField.MONTH_OF_YEAR: return this._month;\n            case ChronoField.PROLEPTIC_MONTH: return this._prolepticMonth();\n            case ChronoField.YEAR_OF_ERA: return (this._year >= 1 ? this._year : 1 - this._year);\n            case ChronoField.YEAR: return this._year;\n            case ChronoField.ERA: return (this._year >= 1 ? 1 : 0);\n        }\n        throw new UnsupportedTemporalTypeException(`Unsupported field: ${field}`);\n    }\n\n    /**\n     *\n     * @return {number}\n     * @private\n     */\n    _prolepticMonth() {\n        return (this._year * 12) + (this._month - 1);\n    }\n\n    /**\n     * Gets the chronology of this date, which is the ISO calendar system.\n     *\n     * The {@link Chronology} represents the calendar system in use.\n     * The ISO-8601 calendar system is the modern civil calendar system used today\n     * in most of the world. It is equivalent to the proleptic Gregorian calendar\n     * system, in which today's rules for leap years are applied for all time.\n     *\n     * @return {Chronology} the ISO chronology, not null\n     */\n    chronology() {\n        return IsoChronology.INSTANCE;\n    }\n\n    /**\n     *\n     * @return {number} gets the year\n     */\n    year() {\n        return this._year;\n    }\n\n    /**\n     *\n     * @return {number} gets the month value\n     */\n    monthValue() {\n        return this._month;\n    }\n\n    /**\n     *\n     * @returns {Month} month\n     */\n    month() {\n        return Month.of(this._month);\n    }\n\n    /**\n     *\n     * @return {number} gets the day of month\n     */\n    dayOfMonth() {\n        return this._day;\n    }\n\n    /**\n      * Gets the day-of-year field.\n      *\n      * This method returns the primitive int value for the day-of-year.\n      *\n      * @return {number} the day-of-year, from 1 to 365, or 366 in a leap year\n      */\n    dayOfYear() {\n        return this.month().firstDayOfYear(this.isLeapYear()) + this._day - 1;\n    }\n\n    /**\n     * Gets the day-of-week field, which is an enum {@link DayOfWeek}.\n     *\n     * This method returns the enum {@link DayOfWeek} for the day-of-week.\n     * This avoids confusion as to what `int` values mean.\n     * If you need access to the primitive `int` value then the enum\n     * provides the {@link DayOfWeek.value} int value.\n     *\n     * Additional information can be obtained from the {@link DayOfWeek}.\n     * This includes textual names of the values.\n     *\n     * @return {DayOfWeek} the day-of-week, not null\n     */\n    dayOfWeek() {\n        const dow0 = MathUtil.floorMod(this.toEpochDay() + 3, 7);\n        return DayOfWeek.of(dow0 + 1);\n    }\n\n    /**\n     * Checks if the year is a leap year, according to the ISO proleptic\n     * calendar system rules.\n     *\n     * This method applies the current rules for leap years across the whole time-line.\n     * In general, a year is a leap year if it is divisible by four without\n     * remainder. However, years divisible by 100, are not leap years, with\n     * the exception of years divisible by 400 which are.\n     *\n     * For example, 1904 is a leap year it is divisible by 4.\n     * 1900 was not a leap year as it is divisible by 100, however 2000 was a\n     * leap year as it is divisible by 400.\n     *\n     * The calculation is proleptic - applying the same rules into the far future and far past.\n     * This is historically inaccurate, but is correct for the ISO-8601 standard.\n     *\n     * @return {boolean} true if the year is leap, false otherwise\n     */\n    isLeapYear() {\n        return IsoChronology.isLeapYear(this._year);\n    }\n\n    /**\n     * Returns the length of the month represented by this date.\n     *\n     * This returns the length of the month in days.\n     * For example, a date in January would return 31.\n     *\n     * @return {number} the length of the month in days\n     */\n    lengthOfMonth() {\n        switch (this._month) {\n            case 2:\n                return (this.isLeapYear() ? 29 : 28);\n            case 4:\n            case 6:\n            case 9:\n            case 11:\n                return 30;\n            default:\n                return 31;\n        }\n    }\n\n    /**\n     * Returns the length of the year represented by this date.\n     *\n     * This returns the length of the year in days, either 365 or 366.\n     *\n     * @return {number} 366 if the year is leap, 365 otherwise\n     */\n    lengthOfYear() {\n        return (this.isLeapYear() ? 366 : 365);\n    }\n\n    /**\n     * Returns an adjusted copy of this date.\n     *\n     * This returns a new {@link LocalDate}, based on this one, with the date adjusted.\n     * The adjustment takes place using the specified adjuster strategy object.\n     * Read the documentation of the adjuster to understand what adjustment will be made.\n     *\n     * A simple adjuster might simply set the one of the fields, such as the year field.\n     * A more complex adjuster might set the date to the last day of the month.\n     * A selection of common adjustments is provided in {@link TemporalAdjusters}.\n     * These include finding the \"last day of the month\" and \"next Wednesday\".\n     * Key date-time classes also implement the {@link TemporalAdjuster} interface,\n     * such as {@link Month} and {@link MonthDay}.\n     * The adjuster is responsible for handling special cases, such as the varying\n     * lengths of month and leap years.\n     *\n     * For example this code returns a date on the last day of July:\n     * <pre>\n     *  import static org.threeten.bp.Month.*;\n     *  import static org.threeten.bp.temporal.Adjusters.*;\n     *\n     *  result = localDate.with(JULY).with(lastDayOfMonth());\n     * </pre>\n     *\n     * The result of this method is obtained by invoking the\n     * {@link TemporalAdjuster.adjustInto} method on the\n     * specified adjuster passing `this` as the argument.\n     *\n     * @param {!TemporalAdjuster} adjuster - the adjuster to use, not null\n     * @return {LocalDate} a {@link LocalDate} based on `this` with the adjustment made, not null\n     * @throws {DateTimeException} if the adjustment cannot be made\n     * @throws {ArithmeticException} if numeric overflow occurs\n     */\n    _withAdjuster(adjuster) {\n        requireNonNull(adjuster, 'adjuster');\n        // optimizations\n        if (adjuster instanceof LocalDate) {\n            return adjuster;\n        }\n        return super._withAdjuster(adjuster);\n    }\n\n    /**\n     * Returns a copy of this date with the specified field set to a new value.\n     *\n     * This returns a new {@link LocalDate}, based on this one, with the value\n     * for the specified field changed.\n     * This can be used to change any supported field, such as the year, month or day-of-month.\n     * If it is not possible to set the value, because the field is not supported or for\n     * some other reason, an exception is thrown.\n     *\n     * In some cases, changing the specified field can cause the resulting date to become invalid,\n     * such as changing the month from 31st January to February would make the day-of-month invalid.\n     * In cases like this, the field is responsible for resolving the date. Typically it will choose\n     * the previous valid date, which would be the last valid day of February in this example.\n     *\n     * If the field is a {@link ChronoField} then the adjustment is implemented here.\n     * The supported fields behave as follows:\n     *\n     * * {@link DAY_OF_WEEK} -\n     *   Returns a {@link LocalDate} with the specified day-of-week.\n     *   The date is adjusted up to 6 days forward or backward within the boundary\n     *   of a Monday to Sunday week.\n     * * {@link ALIGNED_DAY_OF_WEEK_IN_MONTH} -\n     *   Returns a {@link LocalDate} with the specified aligned-day-of-week.\n     *   The date is adjusted to the specified month-based aligned-day-of-week.\n     *   Aligned weeks are counted such that the first week of a given month starts\n     *   on the first day of that month.\n     *   This may cause the date to be moved up to 6 days into the following month.\n     * * {@link ALIGNED_DAY_OF_WEEK_IN_YEAR} -\n     *   Returns a {@link LocalDate} with the specified aligned-day-of-week.\n     *   The date is adjusted to the specified year-based aligned-day-of-week.\n     *   Aligned weeks are counted such that the first week of a given year starts\n     *   on the first day of that year.\n     *   This may cause the date to be moved up to 6 days into the following year.\n     * * {@link DAY_OF_MONTH} -\n     *   Returns a {@link LocalDate} with the specified day-of-month.\n     *   The month and year will be unchanged. If the day-of-month is invalid for the\n     *   year and month, then a {@link DateTimeException} is thrown.\n     * * {@link DAY_OF_YEAR} -\n     *   Returns a {@link LocalDate} with the specified day-of-year.\n     *   The year will be unchanged. If the day-of-year is invalid for the\n     *   year, then a {@link DateTimeException} is thrown.\n     * * {@link EPOCH_DAY} -\n     *   Returns a {@link LocalDate} with the specified epoch-day.\n     *   This completely replaces the date and is equivalent to {@link ofEpochDay}.\n     * * {@link ALIGNED_WEEK_OF_MONTH} -\n     *   Returns a {@link LocalDate} with the specified aligned-week-of-month.\n     *   Aligned weeks are counted such that the first week of a given month starts\n     *   on the first day of that month.\n     *   This adjustment moves the date in whole week chunks to match the specified week.\n     *   The result will have the same day-of-week as this date.\n     *   This may cause the date to be moved into the following month.\n     * * {@link ALIGNED_WEEK_OF_YEAR} -\n     *   Returns a {@link LocalDate} with the specified aligned-week-of-year.\n     *   Aligned weeks are counted such that the first week of a given year starts\n     *   on the first day of that year.\n     *   This adjustment moves the date in whole week chunks to match the specified week.\n     *   The result will have the same day-of-week as this date.\n     *   This may cause the date to be moved into the following year.\n     * * {@link MONTH_OF_YEAR} -\n     *   Returns a {@link LocalDate} with the specified month-of-year.\n     *   The year will be unchanged. The day-of-month will also be unchanged,\n     *   unless it would be invalid for the new month and year. In that case, the\n     *   day-of-month is adjusted to the maximum valid value for the new month and year.\n     * * {@link PROLEPTIC_MONTH} -\n     *   Returns a {@link LocalDate} with the specified proleptic-month.\n     *   The day-of-month will be unchanged, unless it would be invalid for the new month\n     *   and year. In that case, the day-of-month is adjusted to the maximum valid value\n     *   for the new month and year.\n     * * {@link YEAR_OF_ERA} -\n     *   Returns a {@link LocalDate} with the specified year-of-era.\n     *   The era and month will be unchanged. The day-of-month will also be unchanged,\n     *   unless it would be invalid for the new month and year. In that case, the\n     *   day-of-month is adjusted to the maximum valid value for the new month and year.\n     * * {@link YEAR} -\n     *   Returns a {@link LocalDate} with the specified year.\n     *   The month will be unchanged. The day-of-month will also be unchanged,\n     *   unless it would be invalid for the new month and year. In that case, the\n     *   day-of-month is adjusted to the maximum valid value for the new month and year.\n     * * {@link ERA} -\n     *   Returns a {@link LocalDate} with the specified era.\n     *   The year-of-era and month will be unchanged. The day-of-month will also be unchanged,\n     *   unless it would be invalid for the new month and year. In that case, the\n     *   day-of-month is adjusted to the maximum valid value for the new month and year.\n     *\n     * In all cases, if the new value is outside the valid range of values for the field\n     * then a {@link DateTimeException} will be thrown.\n     *\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.adjustInto}\n     * passing `this` as the argument. In this case, the field determines\n     * whether and how to adjust the instant.\n     *\n     * @param {TemporalField} field - the field to set in the result, not null\n     * @param {number} newValue - the new value of the field in the result\n     * @return {LocalDate} a {@link LocalDate} based on `this` with the specified field set, not null\n     * @throws {DateTimeException} if the field cannot be set\n     * @throws {ArithmeticException} if numeric overflow occurs\n     */\n    _withField(field, newValue) {\n        assert(field != null, 'field', NullPointerException);\n        if (field instanceof ChronoField) {\n            const f = field;\n            f.checkValidValue(newValue);\n            switch (f) {\n                case ChronoField.DAY_OF_WEEK: return this.plusDays(newValue - this.dayOfWeek().value());\n                case ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH: return this.plusDays(newValue - this.getLong(ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH));\n                case ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR: return this.plusDays(newValue - this.getLong(ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR));\n                case ChronoField.DAY_OF_MONTH: return this.withDayOfMonth(newValue);\n                case ChronoField.DAY_OF_YEAR: return this.withDayOfYear(newValue);\n                case ChronoField.EPOCH_DAY: return LocalDate.ofEpochDay(newValue);\n                case ChronoField.ALIGNED_WEEK_OF_MONTH: return this.plusWeeks(newValue - this.getLong(ChronoField.ALIGNED_WEEK_OF_MONTH));\n                case ChronoField.ALIGNED_WEEK_OF_YEAR: return this.plusWeeks(newValue - this.getLong(ChronoField.ALIGNED_WEEK_OF_YEAR));\n                case ChronoField.MONTH_OF_YEAR: return this.withMonth(newValue);\n                case ChronoField.PROLEPTIC_MONTH: return this.plusMonths(newValue - this.getLong(ChronoField.PROLEPTIC_MONTH));\n                case ChronoField.YEAR_OF_ERA: return this.withYear((this._year >= 1 ? newValue : 1 - newValue));\n                case ChronoField.YEAR: return this.withYear(newValue);\n                case ChronoField.ERA: return (this.getLong(ChronoField.ERA) === newValue ? this : this.withYear(1 - this._year));\n            }\n            throw new UnsupportedTemporalTypeException(`Unsupported field: ${field}`);\n        }\n        return field.adjustInto(this, newValue);\n    }\n\n    /**\n     * Returns a copy of this date with the year altered.\n     * If the day-of-month is invalid for the year, it will be changed to the last valid day of the month.\n     *\n     * @param {!number} year  the year to set in the result, from {@link Year.MIN_VALUE} to {@link Year.MAX_VALUE}\n     * @return {LocalDate} a {@link LocalDate} based on this date with the requested year, not null\n     * @throws {DateTimeException} if the year value is invalid\n     */\n    withYear(year) {\n        if (this._year === year) {\n            return this;\n        }\n        ChronoField.YEAR.checkValidValue(year);\n        return LocalDate._resolvePreviousValid(year, this._month, this._day);\n    }\n\n    /**\n     * Returns a copy of this date with the month-of-year altered.\n     * If the day-of-month is invalid for the year, it will be changed to the last valid day of the month.\n     *\n     * @param {!(Month|number)} month - the month-of-year to set in the result, from 1 (January) to 12 (December)\n     * @return {LocalDate} a {@link LocalDate} based on this date with the requested month, not null\n     * @throws {DateTimeException} if the month-of-year value is invalid\n     */\n    withMonth(month) {\n        const m = (month instanceof Month) ? month.value() : month;\n        if (this._month === m) {\n            return this;\n        }\n        ChronoField.MONTH_OF_YEAR.checkValidValue(m);\n        return LocalDate._resolvePreviousValid(this._year, m, this._day);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDate} with the day-of-month altered.\n     *\n     * If the resulting date is invalid, an exception is thrown.\n     *\n     * @param {!number} dayOfMonth - the day-of-month to set in the result, from 1 to 28-31\n     * @return {LocalDate} based on this date with the requested day, not null\n     * @throws {DateTimeException} if the day-of-month value is invalid,\n     *  or if the day-of-month is invalid for the month-year\n     */\n    withDayOfMonth(dayOfMonth) {\n        if (this._day === dayOfMonth) {\n            return this;\n        }\n        return LocalDate.of(this._year, this._month, dayOfMonth);\n    }\n\n    /**\n     * Returns a copy of this date with the day-of-year altered.\n     * If the resulting date is invalid, an exception is thrown.\n     *\n     * @param dayOfYear  the day-of-year to set in the result, from 1 to 365-366\n     * @return {LocalDate} a {@link LocalDate} based on this date with the requested day, not null\n     * @throws {DateTimeException} if the day-of-year value is invalid\n     * @throws {DateTimeException} if the day-of-year is invalid for the year\n     */\n    withDayOfYear(dayOfYear) {\n        if (this.dayOfYear() === dayOfYear) {\n            return this;\n        }\n        return LocalDate.ofYearDay(this._year, dayOfYear);\n    }\n\n    /**\n     * Returns a copy of this date with the specified period added.\n     *\n     * This method returns a new date based on this date with the specified period added.\n     * This can be used to add any period that is defined by a unit, for example to add years, months or days.\n     * The unit is responsible for the details of the calculation, including the resolution\n     * of any edge cases in the calculation.\n     *\n     * @param {!number} amountToAdd - the amount of the unit to add to the result, may be negative\n     * @param {!TemporalUnit} unit - the unit of the period to add, not null\n     * @return {LocalDate} a {@link LocalDate} based on this date with the specified period added, not null\n     * @throws {DateTimeException} if the unit cannot be added to this type\n     */\n    _plusUnit(amountToAdd, unit) {\n        requireNonNull(amountToAdd, 'amountToAdd');\n        requireNonNull(unit, 'unit');\n        if (unit instanceof ChronoUnit) {\n            switch (unit) {\n                case ChronoUnit.DAYS: return this.plusDays(amountToAdd);\n                case ChronoUnit.WEEKS: return this.plusWeeks(amountToAdd);\n                case ChronoUnit.MONTHS: return this.plusMonths(amountToAdd);\n                case ChronoUnit.YEARS: return this.plusYears(amountToAdd);\n                case ChronoUnit.DECADES: return this.plusYears(MathUtil.safeMultiply(amountToAdd, 10));\n                case ChronoUnit.CENTURIES: return this.plusYears(MathUtil.safeMultiply(amountToAdd, 100));\n                case ChronoUnit.MILLENNIA: return this.plusYears(MathUtil.safeMultiply(amountToAdd, 1000));\n                case ChronoUnit.ERAS: return this.with(ChronoField.ERA, MathUtil.safeAdd(this.getLong(ChronoField.ERA), amountToAdd));\n            }\n            throw new UnsupportedTemporalTypeException(`Unsupported unit: ${unit}`);\n        }\n        return unit.addTo(this, amountToAdd);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDate} with the specified period in years added.\n     *\n     * This method adds the specified amount to the years field in three steps:\n     *\n     * 1. Add the input years to the year field\n     * 2. Check if the resulting date would be invalid\n     * 3. Adjust the day-of-month to the last valid day if necessary\n     *\n     * For example, 2008-02-29 (leap year) plus one year would result in the\n     * invalid date 2009-02-29 (standard year). Instead of returning an invalid\n     * result, the last valid day of the month, 2009-02-28, is selected instead.\n     *\n     * @param {!number} yearsToAdd - the years to add, may be negative\n     * @return {LocalDate} a {@link LocalDate} based on this date with the years added, not null\n     * @throws {DateTimeException} if the result exceeds the supported date range\n     */\n    plusYears(yearsToAdd) {\n        if (yearsToAdd === 0) {\n            return this;\n        }\n        const newYear = ChronoField.YEAR.checkValidIntValue(this._year + yearsToAdd);  // safe overflow\n        return LocalDate._resolvePreviousValid(newYear, this._month, this._day);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDate} with the specified period in months added.\n     *\n     * This method adds the specified amount to the months field in three steps:\n     *\n     * 1. Add the input months to the month-of-year field\n     * 2. Check if the resulting date would be invalid\n     * 3. Adjust the day-of-month to the last valid day if necessary\n     *\n     * For example, 2007-03-31 plus one month would result in the invalid date\n     * 2007-04-31. Instead of returning an invalid result, the last valid day\n     * of the month, 2007-04-30, is selected instead.\n     *\n     * @param {number} monthsToAdd - the months to add, may be negative\n     * @return {LocalDate} a {@link LocalDate} based on this date with the months added, not null\n     * @throws {DateTimeException} if the result exceeds the supported date range\n     */\n    plusMonths(monthsToAdd) {\n        if (monthsToAdd === 0) {\n            return this;\n        }\n        const monthCount = this._year * 12 + (this._month - 1);\n        const calcMonths = monthCount + monthsToAdd;  // safe overflow\n        const newYear = ChronoField.YEAR.checkValidIntValue(MathUtil.floorDiv(calcMonths, 12));\n        const newMonth = MathUtil.floorMod(calcMonths, 12) + 1;\n        return LocalDate._resolvePreviousValid(newYear, newMonth, this._day);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDate} with the specified period in weeks added.\n     *\n     * This method adds the specified amount in weeks to the days field incrementing\n     * the month and year fields as necessary to ensure the result remains valid.\n     * The result is only invalid if the maximum/minimum year is exceeded.\n     *\n     * For example, 2008-12-31 plus one week would result in 2009-01-07.\n     *\n     * @param {!number} weeksToAdd - the weeks to add, may be negative\n     * @return {LocalDate} a {@link LocalDate} based on this date with the weeks added, not null\n     * @throws {DateTimeException} if the result exceeds the supported date range\n     */\n    plusWeeks(weeksToAdd) {\n        return this.plusDays(MathUtil.safeMultiply(weeksToAdd, 7));\n    }\n\n\n    /**\n     * Returns a copy of this LocalDate with the specified number of days added.\n     *\n     * This method adds the specified amount to the days field incrementing the\n     * month and year fields as necessary to ensure the result remains valid.\n     * The result is only invalid if the maximum/minimum year is exceeded.\n     *\n     * For example, 2008-12-31 plus one day would result in 2009-01-01.\n     *\n     * @param {number} daysToAdd - the days to add, may be negative\n     * @return {LocalDate} a LocalDate based on this date with the days added, not null\n     * @throws AssertionError if the result exceeds the supported date range\n     */\n    plusDays(daysToAdd) {\n        if (daysToAdd === 0) {\n            return this;\n        }\n        const mjDay = MathUtil.safeAdd(this.toEpochDay(), daysToAdd);\n        return LocalDate.ofEpochDay(mjDay);\n    }\n\n    /**\n     * Returns a copy of this date with the specified period subtracted.\n     *\n     * This method returns a new date based on this date with the specified period subtracted.\n     * This can be used to subtract any period that is defined by a unit, for example to subtract years, months or days.\n     * The unit is responsible for the details of the calculation, including the resolution\n     * of any edge cases in the calculation.\n     *\n     * @param {!number} amountToSubtract - the amount of the unit to subtract from the result, may be negative\n     * @param {!TemporalUnit} unit  the unit of the period to subtract, not null\n     * @return {LocalDate} a {@link LocalDate} based on this date with the specified period subtracted, not null\n     * @throws {DateTimeException} if the unit cannot be added to this type\n     */\n    _minusUnit(amountToSubtract, unit) {\n        requireNonNull(amountToSubtract, 'amountToSubtract');\n        requireNonNull(unit, 'unit');\n        return this._plusUnit(-1 * amountToSubtract, unit);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDate} with the specified period in years subtracted.\n     *\n     * This method subtracts the specified amount from the years field in three steps:\n     *\n     * 1. Subtract the input years to the year field\n     * 2. Check if the resulting date would be invalid\n     * 3. Adjust the day-of-month to the last valid day if necessary\n     *\n     * For example, 2008-02-29 (leap year) minus one year would result in the\n     * invalid date 2007-02-29 (standard year). Instead of returning an invalid\n     * result, the last valid day of the month, 2007-02-28, is selected instead.\n     *\n     * @param {!number} yearsToSubtract - the years to subtract, may be negative\n     * @return {LocalDate} a {@link LocalDate} based on this date with the years subtracted, not null\n     * @throws {DateTimeException} if the result exceeds the supported date range\n     */\n    minusYears(yearsToSubtract) {\n        return this.plusYears(yearsToSubtract * -1);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDate} with the specified period in months subtracted.\n     *\n     * This method subtracts the specified amount from the months field in three steps:\n     *\n     * 1. Subtract the input months to the month-of-year field\n     * 2. Check if the resulting date would be invalid\n     * 3. Adjust the day-of-month to the last valid day if necessary\n     *\n     * For example, 2007-03-31 minus one month would result in the invalid date\n     * 2007-02-31. Instead of returning an invalid result, the last valid day\n     * of the month, 2007-02-28, is selected instead.\n     *\n     * @param {!number} monthsToSubtract - the months to subtract, may be negative\n     * @return {LocalDate} a {@link LocalDate} based on this date with the months subtracted, not null\n     * @throws {DateTimeException} if the result exceeds the supported date range\n     */\n    minusMonths(monthsToSubtract) {\n        return this.plusMonths(monthsToSubtract * -1);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDate} with the specified period in weeks subtracted.\n     *\n     * This method subtracts the specified amount in weeks from the days field decrementing\n     * the month and year fields as necessary to ensure the result remains valid.\n     * The result is only invalid if the maximum/minimum year is exceeded.\n     *\n     * For example, 2009-01-07 minus one week would result in 2008-12-31.\n     *\n     * @param {!number} weeksToSubtract - the weeks to subtract, may be negative\n     * @return {LocalDate} a {@link LocalDate} based on this date with the weeks subtracted, not null\n     * @throws {DateTimeException} if the result exceeds the supported date range\n     */\n    minusWeeks(weeksToSubtract) {\n        return this.plusWeeks(weeksToSubtract * -1);\n    }\n\n    /*\n     * Returns a copy of this LocalDate with the specified number of days subtracted.\n     *\n     * This method subtracts the specified amount from the days field decrementing the\n     * month and year fields as necessary to ensure the result remains valid.\n     * The result is only invalid if the maximum/minimum year is exceeded.\n     *\n     * For example, 2009-01-01 minus one day would result in 2008-12-31.\n     *\n     * @param {number} daysToSubtract - the days to subtract, may be negative\n     * @return {LocalDate} a LocalDate based on this date with the days subtracted, not null\n     * @throws AssertionError if the result exceeds the supported date range\n     */\n    minusDays(daysToSubtract) {\n        return this.plusDays(daysToSubtract * -1);\n    }\n\n    /**\n     * Queries this date using the specified query.\n     *\n     * This queries this date using the specified query strategy object.\n     * The {@link TemporalQuery} object defines the logic to be used to\n     * obtain the result. Read the documentation of the query to understand\n     * what the result of this method will be.\n     *\n     * The result of this method is obtained by invoking the\n     * {@link TemporalQuery#queryFrom} method on the\n     * specified query passing `this` as the argument.\n     *\n     * @param {TemporalQuery} query - the query to invoke, not null\n     * @return the query result, null may be returned (defined by the query)\n     * @throws {DateTimeException} if unable to query (defined by the query)\n     * @throws {ArithmeticException} if numeric overflow occurs (defined by the query)\n     */\n    query(query) {\n        requireNonNull(query, 'query');\n        if (query === TemporalQueries.localDate()) {\n            return this;\n        }\n        return super.query(query);\n    }\n\n    /**\n     * Adjusts the specified temporal object to have the same date as this object.\n     *\n     * This returns a temporal object of the same observable type as the input\n     * with the date changed to be the same as this.\n     *\n     * The adjustment is equivalent to using {@link Temporal#with}\n     * passing {@link ChronoField.EPOCH_DAY} as the field.\n     *\n     * In most cases, it is clearer to reverse the calling pattern by using\n     * {@link Temporal#with}:\n     * <pre>\n     *   // these two lines are equivalent, but the second approach is recommended\n     *   temporal = thisLocalDate.adjustInto(temporal);\n     *   temporal = temporal.with(thisLocalDate);\n     * </pre>\n     *\n     * @param {!TemporalAdjuster} temporal - the target object to be adjusted, not null\n     * @return the adjusted object, not null\n     * @throws {DateTimeException} if unable to make the adjustment\n     * @throws {ArithmeticException} if numeric overflow occurs\n     */\n    adjustInto(temporal) {\n        return super.adjustInto(temporal);\n    }\n\n    /**\n     * function overloading for {@link LocalDate.until}\n     *\n     * called with 1 (or less) arguments {{@link LocalDate.until1}} is called\n     * otherwise {@link LocalDate.until2}\n     *\n     * @param {!TemporalAccessor} p1\n     * @param {TemporalUnit} p2 - not null if called with 2 arguments\n     * @return {number|Period}\n     */\n    until(p1, p2){\n        if(arguments.length < 2){\n            return this.until1(p1);\n        } else {\n            return this.until2(p1, p2);\n        }\n    }\n\n    /**\n     * Calculates the period between this date and another date in\n     * terms of the specified unit.\n     *\n     * This calculates the period between two dates in terms of a single unit.\n     * The start and end points are `this` and the specified date.\n     * The result will be negative if the end is before the start.\n     * The {@link Temporal} passed to this method must be a {@link LocalDate}.\n     * For example, the period in days between two dates can be calculated\n     * using {@link startDate.until}.\n     *\n     * The calculation returns a whole number, representing the number of\n     * complete units between the two dates.\n     * For example, the period in months between 2012-06-15 and 2012-08-14\n     * will only be one month as it is one day short of two months.\n     *\n     * This method operates in association with {@link TemporalUnit#between}.\n     * The result of this method is a `long` representing the amount of\n     * the specified unit. By contrast, the result of {@link between} is an\n     * object that can be used directly in addition/subtraction:\n     * <pre>\n     *   long period = start.until(end, MONTHS);   // this method\n     *   dateTime.plus(MONTHS.between(start, end));      // use in plus/minus\n     * </pre>\n     *\n     * The calculation is implemented in this method for {@link ChronoUnit}.\n     * The units {@link DAYS}, {@link WEEKS}, {@link MONTHS}, {@link YEARS},\n     * {@link DECADES}, {@link CENTURIES}, {@link MILLENNIA} and {@link ERAS}\n     * are supported. Other {@link ChronoUnit} values will throw an exception.\n     *\n     * If the unit is not a {@link ChronoUnit}, then the result of this method\n     * is obtained by invoking {@link TemporalUnit.between}\n     * passing `this` as the first argument and the input temporal as\n     * the second argument.\n     *\n     * @param {!TemporalAccessor} endExclusive - the end date, which is converted to a {@link LocalDate}, not null\n     * @param {!TemporalUnit} unit - the unit to measure the period in, not null\n     * @return {number} the amount of the period between this date and the end date\n     * @throws {DateTimeException} if the period cannot be calculated\n     * @throws {ArithmeticException} if numeric overflow occurs\n     */\n    until2(endExclusive, unit) {\n        const end = LocalDate.from(endExclusive);\n        if (unit instanceof ChronoUnit) {\n            switch (unit) {\n                case ChronoUnit.DAYS: return this.daysUntil(end);\n                case ChronoUnit.WEEKS: return MathUtil.intDiv(this.daysUntil(end), 7);\n                case ChronoUnit.MONTHS: return this._monthsUntil(end);\n                case ChronoUnit.YEARS: return MathUtil.intDiv(this._monthsUntil(end), 12);\n                case ChronoUnit.DECADES: return MathUtil.intDiv(this._monthsUntil(end), 120);\n                case ChronoUnit.CENTURIES: return MathUtil.intDiv(this._monthsUntil(end), 1200);\n                case ChronoUnit.MILLENNIA: return MathUtil.intDiv(this._monthsUntil(end), 12000);\n                case ChronoUnit.ERAS: return end.getLong(ChronoField.ERA) - this.getLong(ChronoField.ERA);\n            }\n            throw new UnsupportedTemporalTypeException(`Unsupported unit: ${unit}`);\n        }\n        return unit.between(this, end);\n    }\n\n    /**\n     *\n     * @param {!LocalDate} end\n     * @returns {number}\n     * @protected\n     */\n    daysUntil(end) {\n        return end.toEpochDay() - this.toEpochDay();  // no overflow\n    }\n\n    /**\n     *\n     * @param {!LocalDate} end\n     * @returns {number}\n     * @private\n     */\n    _monthsUntil(end) {\n        const packed1 = this._prolepticMonth() * 32 + this.dayOfMonth();  // no overflow\n        const packed2 = end._prolepticMonth() * 32 + end.dayOfMonth();  // no overflow\n        return MathUtil.intDiv((packed2 - packed1), 32);\n    }\n\n    /**\n     * Calculates the period between this date and another date as a {@link Period}.\n     *\n     * This calculates the period between two dates in terms of years, months and days.\n     * The start and end points are `this` and the specified date.\n     * The result will be negative if the end is before the start.\n     *\n     * The calculation is performed using the ISO calendar system.\n     * If necessary, the input date will be converted to ISO.\n     *\n     * The start date is included, but the end date is not.\n     * The period is calculated by removing complete months, then calculating\n     * the remaining number of days, adjusting to ensure that both have the same sign.\n     * The number of months is then normalized into years and months based on a 12 month year.\n     * A month is considered to be complete if the end day-of-month is greater\n     * than or equal to the start day-of-month.\n     * For example, from `2010-01-15` to `2011-03-18` is \"1 year, 2 months and 3 days\".\n     *\n     * The result of this method can be a negative period if the end is before the start.\n     * The negative sign will be the same in each of year, month and day.\n     *\n     * There are two equivalent ways of using this method.\n     * The first is to invoke this method.\n     * The second is to use {@link Period#between}:\n     * <pre>\n     *   // these two lines are equivalent\n     *   period = start.until(end);\n     *   period = Period.between(start, end);\n     * </pre>\n     * The choice should be made based on which makes the code more readable.\n     *\n     * @param {!TemporalAccessor} endDate - the end date, exclusive, which may be in any chronology, not null\n     * @return {Period} the period between this date and the end date, not null\n     */\n    until1(endDate) {\n        const end = LocalDate.from(endDate);\n        let totalMonths = end._prolepticMonth() - this._prolepticMonth();  // safe\n        let days = end._day - this._day;\n        if (totalMonths > 0 && days < 0) {\n            totalMonths--;\n            const calcDate = this.plusMonths(totalMonths);\n            days = (end.toEpochDay() - calcDate.toEpochDay());  // safe\n        } else if (totalMonths < 0 && days > 0) {\n            totalMonths++;\n            days -= end.lengthOfMonth();\n        }\n        const years = MathUtil.intDiv(totalMonths, 12);  // safe\n        const months = MathUtil.intMod(totalMonths, 12);  // safe\n        return Period.of(years, months, days);\n    }\n\n\n    //-----------------------------------------------------------------------\n    /**\n     * function overloading for {@link LocalDate.atTime}\n     *\n     * if called with 1 argument {@link LocalDate.atTime1} is called\n     * otherwise {@link LocalDate.atTime4}\n     *\n     * @return {LocalDateTime|OffsetDateTime} the local date-time formed from this date and the specified params\n     */\n    atTime(){\n        if(arguments.length===1){\n            return this.atTime1.apply(this, arguments);\n        } else {\n            return this.atTime4.apply(this, arguments);\n        }\n    }\n\n    /**\n     * Combines this date with a time to create a {@link LocalDateTime}.\n     *\n     * This returns a {@link LocalDateTime} formed from this date at the specified time.\n     * All possible combinations of date and time are valid.\n     *\n     * @param {LocalTime} time - the time to combine with, not null\n     * @return {LocalDateTime|OffsetDateTime} the date-time formed from this date and the specified time, not null\n     */\n    atTime1(time) {\n        requireNonNull(time, 'time');\n        if (time instanceof LocalTime) {\n            return LocalDateTime.of(this, time);\n        } else if (time instanceof OffsetTime) {\n            return this._atTimeOffsetTime(time);\n        } else {\n            throw new IllegalArgumentException(`time must be an instance of LocalTime or OffsetTime${ \n                time && time.constructor && time.constructor.name ? `, but is ${time.constructor.name}` : ''}`);\n        }\n    }\n\n    /**\n     * Combines this date with a time to create a {@link LocalDateTime}.\n     *\n     * This returns a {@link LocalDateTime} formed from this date at the\n     * specified hour, minute, second and nanosecond.\n     * The individual time fields must be within their valid range.\n     * All possible combinations of date and time are valid.\n     *\n     * @param {!number} hour - the hour-of-day to use, from 0 to 23\n     * @param {!number} minute - the minute-of-hour to use, from 0 to 59\n     * @param {number} [second=0] - the second-of-minute to represent, from 0 to 59\n     * @param {number} [nanoOfSecond=0] - the nano-of-second to represent, from 0 to 999,999,999\n     * @return {LocalDateTime} the local date-time formed from this date and the specified time, not null\n     * @throws {DateTimeException} if the value of any field is out of range\n     */\n    atTime4(hour, minute, second=0, nanoOfSecond=0) {\n        return this.atTime1(LocalTime.of(hour, minute, second, nanoOfSecond));\n    }\n\n    /**\n     * Combines this date with an offset time to create an {@link OffsetDateTime}.\n     *\n     * This returns an {@link OffsetDateTime} formed from this date at the specified time.\n     * All possible combinations of date and time are valid.\n     *\n     * @param {OffsetTime} time - the time to combine with, not null\n     * @return {OffsetDateTime} the offset date-time formed from this date and the specified time, not null\n     */\n    _atTimeOffsetTime(time) { // atTime(offsetTime)\n        return OffsetDateTime.of(LocalDateTime.of(this, time.toLocalTime()), time.offset());\n    }\n\n    /**\n     * Combines this date with the time of midnight to create a {@link LocalDateTime}\n     * at the start of this date.\n     *\n     * This returns a {@link LocalDateTime} formed from this date at the time of\n     * midnight, 00:00, at the start of this date.\n     *\n     * If zone is not null, this returns a {@link ZonedDateTime} formed from this date at the\n     * specified zone, with the time set to be the earliest valid time according\n     * to the rules in the time-zone.\n     *\n     * Time-zone rules, such as daylight savings, mean that not every local date-time\n     * is valid for the specified zone, thus the local date-time may not be midnight.\n     *\n     * In most cases, there is only one valid offset for a local date-time.\n     * In the case of an overlap, there are two valid offsets, and the earlier one is used,\n     * corresponding to the first occurrence of midnight on the date.\n     * In the case of a gap, the zoned date-time will represent the instant just after the gap.\n     *\n     * If the zone ID is a {@link ZoneOffset}, then the result always has a time of midnight.\n     *\n     * To convert to a specific time in a given time-zone call {@link atTime}\n     * followed by {@link LocalDateTime#atZone}.\n     *\n     * @param {ZoneId} zone - optional ZoneId or ZoneOffset\n     * @return {LocalDateTime|ZonedDateTime} the local date-time of midnight at the start of this date, not null\n     */\n    atStartOfDay(zone) {\n        if(zone != null){\n            return this._atStartOfDayWithZone(zone);\n        } else {\n            return LocalDateTime.of(this, LocalTime.MIDNIGHT);\n        }\n    }\n\n    /**\n     * Combines this date with a time-zone to create a {@link ZonedDateTime}\n     * at the start of the day\n     *\n     * This returns a {@link ZonedDateTime} formed from this date at the\n     * specified zone, with the time set to be the earliest valid time according\n     * to the rules in the time-zone.\n     *\n     * Time-zone rules, such as daylight savings, mean that not every local date-time\n     * is valid for the specified zone, thus the local date-time may not be midnight.\n     *\n     * In most cases, there is only one valid offset for a local date-time.\n     * In the case of an overlap, there are two valid offsets, and the earlier one is used,\n     * corresponding to the first occurrence of midnight on the date.\n     * In the case of a gap, the zoned date-time will represent the instant just after the gap.\n     *\n     * If the zone ID is a {@link ZoneOffset}, then the result always has a time of midnight.\n     *\n     * To convert to a specific time in a given time-zone call {@link atTime}\n     * followed by {@link LocalDateTime#atZone}.\n     *\n     * @param {!ZoneId} zone - the zone ID to use, not null\n     * @return {ZonedDateTime} the zoned date-time formed from this date and the earliest valid time for the zone, not null\n     */\n    _atStartOfDayWithZone(zone) {\n        requireNonNull(zone, 'zone');\n        let ldt = this.atTime(LocalTime.MIDNIGHT);\n        // need to handle case where there is a gap from 11:30 to 00:30\n        // standard ZDT factory would result in 01:00 rather than 00:30\n        if (zone instanceof ZoneOffset === false) {\n            const trans = zone.rules().transition(ldt);\n            if (trans != null && trans.isGap()) {\n                ldt = trans.dateTimeAfter();\n            }\n        }\n        return ZonedDateTime.of(ldt, zone);\n    }\n\n\n    /**\n     * Converts this date to the Epoch Day.\n     *\n     * The Epoch Day count is a simple incrementing count of days where day 0 is 1970-01-01 (ISO).\n     * This definition is the same for all chronologies, enabling conversion.\n     *\n     * @return {number} the Epoch Day equivalent to this date\n     */\n    toEpochDay() {\n        const y = this._year;\n        const m = this._month;\n        let total = 0;\n        total += 365 * y;\n        if (y >= 0) {\n            total += MathUtil.intDiv(y + 3, 4) - MathUtil.intDiv(y + 99, 100) + MathUtil.intDiv(y + 399, 400);\n        } else {\n            total -= MathUtil.intDiv(y, -4) - MathUtil.intDiv(y, -100) + MathUtil.intDiv(y, -400);\n        }\n        total += MathUtil.intDiv(367 * m - 362, 12);\n        total += this.dayOfMonth() - 1;\n        if (m > 2) {\n            total--;\n            if (!IsoChronology.isLeapYear(y)) {\n                total--;\n            }\n        }\n        return total - DAYS_0000_TO_1970;\n    }\n\n    /**\n     * Compares this date to another date.\n     *\n     * The comparison is primarily based on the date, from earliest to latest.\n     * It is \"consistent with equals\", as defined by {@link Comparable}.\n     *\n     * If all the dates being compared are instances of {@link LocalDate},\n     * then the comparison will be entirely based on the date.\n     * If some dates being compared are in different chronologies, then the\n     * chronology is also considered, see {@link ChronoLocalDate.compareTo}.\n     *\n     * @param {!LocalDate} other - the other date to compare to, not null\n     * @return {number} the comparator value, negative if less, positive if greater\n     */\n    compareTo(other) {\n        requireNonNull(other, 'other');\n        requireInstance(other, LocalDate, 'other');\n        return this._compareTo0(other);\n        // return super.compareTo(other);  if not instanceof LocalDate\n    }\n\n    /**\n     *\n     * @param {!LocalDate} otherDate\n     * @returns {number}\n     * @private\n     */\n    _compareTo0(otherDate) {\n        let cmp = (this._year - otherDate._year);\n        if (cmp === 0) {\n            cmp = (this._month - otherDate._month);\n            if (cmp === 0) {\n                cmp = (this._day - otherDate._day);\n            }\n        }\n        return cmp;\n    }\n\n    /**\n     * Checks if this date is after the specified date.\n     *\n     * This checks to see if this date represents a point on the\n     * local time-line after the other date.\n     * <pre>\n     *   LocalDate a = LocalDate.of(2012, 6, 30);\n     *   LocalDate b = LocalDate.of(2012, 7, 1);\n     *   a.isAfter(b) == false\n     *   a.isAfter(a) == false\n     *   b.isAfter(a) == true\n     * </pre>\n     *\n     * This method only considers the position of the two dates on the local time-line.\n     * It does not take into account the chronology, or calendar system.\n     * This is different from the comparison in {@link compareTo},\n     * but is the same approach as {@link DATE_COMPARATOR}.\n     *\n     * @param {!LocalDate} other - the other date to compare to, not null\n     * @return {boolean} true if this date is after the specified date\n     */\n    isAfter(other) {\n        return this.compareTo(other) > 0;\n        // return super.isAfter(other) if not instanceof LocalDate\n    }\n\n    /**\n     * Checks if this date is before the specified date.\n     *\n     * This checks to see if this date represents a point on the\n     * local time-line before the other date.\n     * <pre>\n     *   LocalDate a = LocalDate.of(2012, 6, 30);\n     *   LocalDate b = LocalDate.of(2012, 7, 1);\n     *   a.isBefore(b) == true\n     *   a.isBefore(a) == false\n     *   b.isBefore(a) == false\n     * </pre>\n     *\n     * This method only considers the position of the two dates on the local time-line.\n     * It does not take into account the chronology, or calendar system.\n     * This is different from the comparison in {@link compareTo},\n     * but is the same approach as {@link DATE_COMPARATOR}.\n     *\n     * @param {!LocalDate} other - the other date to compare to, not null\n     * @return {boolean} true if this date is before the specified date\n     */\n    isBefore(other) {\n        return this.compareTo(other) < 0;\n        // return super.isBefore(other) if not instanceof LocalDate\n    }\n\n    /**\n     * Checks if this date is equal to the specified date.\n     *\n     * This checks to see if this date represents the same point on the\n     * local time-line as the other date.\n     * <pre>\n     *   LocalDate a = LocalDate.of(2012, 6, 30);\n     *   LocalDate b = LocalDate.of(2012, 7, 1);\n     *   a.isEqual(b) == false\n     *   a.isEqual(a) == true\n     *   b.isEqual(a) == false\n     * </pre>\n     *\n     * This method only considers the position of the two dates on the local time-line.\n     * It does not take into account the chronology, or calendar system.\n     * This is different from the comparison in {@link compareTo}\n     * but is the same approach as {@link DATE_COMPARATOR}.\n     *\n     * @param {!LocalDate} other - the other date to compare to, not null\n     * @return {boolean} true if this date is equal to the specified date\n     */\n    isEqual(other) {\n        return this.compareTo(other) === 0;\n        // return super.isEqual(other) if not instanceof LocalDate\n    }\n\n    /**\n     * Checks if this date is equal to another date.\n     *\n     * Compares this LocalDate with another ensuring that the date is the same.\n     *\n     * Only objects of type LocalDate are compared, other types return false.\n     *\n     * @param {*} other - the object to check, null returns false\n     * @return {boolean} true if this is equal to the other date\n     */\n    equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof LocalDate) {\n            return this._compareTo0(other) === 0;\n        }\n        return false;\n    }\n\n    /**\n     * A hash code for this date.\n     *\n     * @return {number} a suitable hash code\n     */\n    hashCode() {\n        const yearValue = this._year;\n        const monthValue = this._month;\n        const dayValue = this._day;\n        return MathUtil.hash((yearValue & 0xFFFFF800) ^ ((yearValue << 11) + (monthValue << 6) + (dayValue)));\n    }\n\n    /**\n     * Outputs this date as a String, such as 2007-12-03.\n     * The output will be in the ISO-8601 format uuuu-MM-dd.\n     *\n     * @return {string} a string representation of this date, not null\n     */\n    toString() {\n        let dayString, monthString, yearString;\n\n        const yearValue = this._year;\n        const monthValue = this._month;\n        const dayValue = this._day;\n\n        const absYear = Math.abs(yearValue);\n\n        if (absYear < 1000) {\n            if (yearValue < 0) {\n                yearString = `-${(`${yearValue - 10000}`).slice(-4)}`;\n            } else {\n                yearString = (`${yearValue + 10000}`).slice(-4);\n            }\n        } else {\n            if (yearValue > 9999) {\n                yearString = `+${yearValue}`;\n            } else {\n                yearString = `${yearValue}`;\n            }\n        }\n\n        if (monthValue < 10) {\n            monthString = `-0${monthValue}`;\n        } else {\n            monthString = `-${monthValue}`;\n        }\n\n        if (dayValue < 10) {\n            dayString = `-0${dayValue}`;\n        } else {\n            dayString = `-${dayValue}`;\n        }\n\n        return yearString + monthString + dayString;\n    }\n\n    /**\n     *\n     * @return {string} same as {@link LocalDate.toString}\n     */\n    toJSON() {\n        return this.toString();\n    }\n\n    /**\n     * Outputs this date as a string using the formatter.\n     *\n     * @param {DateTimeFormatter} formatter  the formatter to use, not null\n     * @return {String} the formatted date string, not null\n     * @throws DateTimeException if an error occurs during printing\n     */\n    format(formatter) {\n        requireNonNull(formatter, 'formatter');\n        requireInstance(formatter, DateTimeFormatter, 'formatter');\n        return super.format(formatter);\n    }\n}\n\nexport function _init() {\n    /**\n     * The minimum supported {@link LocalDate}\n     * This could be used by an application as a \"far past\" date.\n     */\n    LocalDate.MIN = LocalDate.of(YearConstants.MIN_VALUE, 1, 1);\n    /**\n     * The maximum supported {@link LocalDate}\n     * This could be used by an application as a \"far future\" date.\n     */\n    LocalDate.MAX = LocalDate.of(YearConstants.MAX_VALUE, 12, 31);\n    /**\n     * The date at epoch day 0, that is 1970-01-01.\n     */\n    LocalDate.EPOCH_0 = LocalDate.ofEpochDay(0);\n\n    LocalDate.FROM = createTemporalQuery('LocalDate.FROM', (temporal) => {\n        return LocalDate.from(temporal);\n    });\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { requireNonNull, requireInstance } from '../assert';\nimport { MathUtil } from '../MathUtil';\n\nimport { LocalDate } from '../LocalDate';\nimport { Instant } from '../Instant';\nimport { ZoneOffset } from '../ZoneOffset';\nimport { ChronoUnit } from '../temporal/ChronoUnit';\nimport { ChronoField } from '../temporal/ChronoField';\nimport { Temporal } from '../temporal/Temporal';\nimport { TemporalQueries } from '../temporal/TemporalQueries';\n\n/**\n * A date-time without a time-zone in an arbitrary chronology, intended\n * for advanced globalization use cases.\n *\n * **Most applications should declare method signatures, fields and variables\n * as {@link LocalDateTime}, not this interface.**\n *\n * A {@link ChronoLocalDateTime} is the abstract representation of a local date-time\n * where the {@link Chronology}, or calendar system, is pluggable.\n * The date-time is defined in terms of fields expressed by {@link TemporalField},\n * where most common implementations are defined in {@link ChronoField}.\n * The chronology defines how the calendar system operates and the meaning of\n * the standard fields.\n *\n * #### When to use this interface\n *\n * The design of the API encourages the use of {@link LocalDateTime} rather than this\n * interface, even in the case where the application needs to deal with multiple\n * calendar systems. The rationale for this is explored in detail in {@link ChronoLocalDate}.\n *\n * Ensure that the discussion in {@link ChronoLocalDate} has been read and understood\n * before using this interface.\n *\n * ### Specification for implementors\n *\n * This interface must be implemented with care to ensure other classes operate correctly.\n * All implementations that can be instantiated must be final, immutable and thread-safe.\n * Subclasses should be Serializable wherever possible.\n *\n * In JDK 8, this is an interface with default methods.\n * Since there are no default methods in JDK 7, an abstract class is used.\n *\n * @param D the date type\n */\nexport class ChronoLocalDateTime extends Temporal {\n    /* <D extends ChronoLocalDate>\n        extends DefaultInterfaceTemporal\n        implements Temporal, TemporalAdjuster, Comparable<ChronoLocalDateTime<?>> */\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the chronology of this date-time.\n     *\n     * The {@link Chronology} represents the calendar system in use.\n     * The era and other fields in {@link ChronoField} are defined by the chronology.\n     *\n     * @return the chronology, not null\n     */\n    chronology() {\n        return this.toLocalDate().chronology();\n    }\n\n    /**\n     *\n     * @param {TemporalQuery} query\n     * @returns {*}\n     */\n    query(query) {\n        if (query === TemporalQueries.chronology()) {\n            return this.chronology();\n        } else if (query === TemporalQueries.precision()) {\n            return ChronoUnit.NANOS;\n        } else if (query === TemporalQueries.localDate()) {\n            return LocalDate.ofEpochDay(this.toLocalDate().toEpochDay());\n        } else if (query === TemporalQueries.localTime()) {\n            return this.toLocalTime();\n        } else if (query === TemporalQueries.zone() || query === TemporalQueries.zoneId() || query === TemporalQueries.offset()) {\n            return null;\n        }\n        return super.query(query);\n    }\n\n    adjustInto(temporal) {\n        return temporal\n            .with(ChronoField.EPOCH_DAY, this.toLocalDate().toEpochDay())\n            .with(ChronoField.NANO_OF_DAY, this.toLocalTime().toNanoOfDay());\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Converts this date-time to an {@link Instant}.\n     *\n     * This combines this local date-time and the specified offset to form\n     * an {@link Instant}.\n     *\n     * @param {ZoneOffset} offset  the offset to use for the conversion, not null\n     * @return {Instant} an {@link Instant} representing the same instant, not null\n     */\n    toInstant(offset) {\n        requireInstance(offset, ZoneOffset, 'zoneId');\n        return Instant.ofEpochSecond(this.toEpochSecond(offset), this.toLocalTime().nano());\n    }\n\n    /**\n     * Converts this date-time to the number of seconds from the epoch\n     * of 1970-01-01T00:00:00Z.\n     *\n     * This combines this local date-time and the specified offset to calculate the\n     * epoch-second value, which is the number of elapsed seconds from 1970-01-01T00:00:00Z.\n     * Instants on the time-line after the epoch are positive, earlier are negative.\n     *\n     * @param {ZoneOffset} offset  the offset to use for the conversion, not null\n     * @return {number} the number of seconds from the epoch of 1970-01-01T00:00:00Z\n     */\n    toEpochSecond(offset) {\n        requireNonNull(offset, 'offset');\n        const epochDay = this.toLocalDate().toEpochDay();\n        let secs = epochDay * 86400 + this.toLocalTime().toSecondOfDay();\n        secs -= offset.totalSeconds();\n        return MathUtil.safeToInt(secs);\n    }\n\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { MathUtil } from './MathUtil';\nimport { requireNonNull, requireInstance } from './assert';\nimport { DateTimeException, UnsupportedTemporalTypeException } from './errors';\n\nimport { Clock } from './Clock';\nimport { Instant } from './Instant';\nimport { LocalDate } from './LocalDate';\nimport { LocalTime } from './LocalTime';\nimport { OffsetDateTime } from './OffsetDateTime';\nimport { ZonedDateTime } from './ZonedDateTime';\nimport { ZoneId } from './ZoneId';\nimport { ZoneOffset } from './ZoneOffset';\n\n\nimport { DateTimeFormatter } from './format/DateTimeFormatter';\nimport { ChronoField } from './temporal/ChronoField';\nimport { ChronoUnit } from './temporal/ChronoUnit';\nimport { TemporalQueries } from './temporal/TemporalQueries';\nimport { createTemporalQuery } from './temporal/TemporalQuery';\n\nimport { ChronoLocalDateTime } from './chrono/ChronoLocalDateTime';\n\n/**\n * A date-time without a time-zone in the ISO-8601 calendar system,\n * such as `2007-12-03T10:15:30`.\n *\n * {@link LocalDateTime} is an immutable date-time object that represents a date-time,\n * often viewed as year-month-day-hour-minute-second. Other date and time fields,\n * such as day-of-year, day-of-week and week-of-year, can also be accessed.\n * Time is represented to nanosecond precision.\n * For example, the value '2nd October 2007 at 13:45.30.123456789' can be\n * stored in a {@link LocalDateTime}.\n *\n * This class does not store or represent a time-zone.\n * Instead, it is a description of the date, as used for birthdays, combined with\n * the local time as seen on a wall clock.\n * It cannot represent an instant on the time-line without additional information\n * such as an offset or time-zone.\n *\n * The ISO-8601 calendar system is the modern civil calendar system used today\n * in most of the world. It is equivalent to the proleptic Gregorian calendar\n * system, in which today's rules for leap years are applied for all time.\n * For most applications written today, the ISO-8601 rules are entirely suitable.\n * However, any application that makes use of historical dates, and requires them\n * to be accurate will find the ISO-8601 approach unsuitable.\n *\n * ### Static properties of Class {@link LocalTime}\n *\n * LocalDateTime.MIN\n *\n * The minimum supported {@link LocalDateTime}, '-999999999-01-01T00:00:00'.\n * This is the local date-time of midnight at the start of the minimum date.\n * This combines {@link LocalDate#MIN} and {@link LocalTime#MIN}.\n * This could be used by an application as a 'far past' date-time.\n *\n * LocalDateTime.MAX\n *\n * The maximum supported {@link LocalDateTime}, '+999999999-12-31T23:59:59.999999999'.\n * This is the local date-time just before midnight at the end of the maximum date.\n * This combines {@link LocalDate#MAX} and {@link LocalTime#MAX}.\n * This could be used by an application as a 'far future' date-time.\n *\n */\nexport class LocalDateTime extends ChronoLocalDateTime\n/** extends ChronoLocalDateTime<LocalDate>\nimplements Temporal, TemporalAdjuster, Serializable */ {\n\n\n    /**\n     * Obtains the current date-time from from the specified clock or the system clock in the specified time-zone.\n     *\n     * If the argument is an instance of Clock this will query the specified clock to obtain the current date-time.\n     * Using this method allows the use of an alternate clock for testing.\n     * The alternate clock may be introduced using dependency injection.\n     *\n     * If the argument is an instance of ZoneId this will query the system clock (see {@link Clock#system}) to obtain the current date-time.\n     * Specifying the time-zone avoids dependence on the default time-zone.\n     *\n     * If nor argument is applied, the system default time zone is used to obtain the current date-time.\n     *\n     * Using this method will prevent the ability to use an alternate clock for testing\n     * because the clock is hard-coded.\n     *\n     * @param {Clock|ZoneId} clockOrZone - the zone ID or clock to use, if null Clock.systemDefaultZone() is used.\n     * @return {LocalDateTime} the current date-time using the system clock, not null\n     */\n    static now(clockOrZone) {\n        if (clockOrZone == null){\n            return LocalDateTime._now(Clock.systemDefaultZone());\n        } else if (clockOrZone instanceof Clock){\n            return LocalDateTime._now(clockOrZone);\n        } else {\n            return LocalDateTime._now(Clock.system(clockOrZone));\n        }\n    }\n\n    /**\n     * Obtains the current date-time from the specified clock.\n     *\n     * This will query the specified clock to obtain the current date-time.\n     * Using this method allows the use of an alternate clock for testing.\n     * The alternate clock may be introduced using dependency injection.\n     *\n     * @param {Clock} clock - the clock to use, defaults to Clock.systemDefaultZone()\n     * @return {LocalDateTime} the current date-time, not null\n     */\n    static _now(clock) {\n        requireNonNull(clock, 'clock');\n        return LocalDateTime.ofInstant(clock.instant(), clock.zone());\n\n        // this is an alternative implementation with better performance.\n        // const epochMilli = clock.millis();\n        // const offset = clock.zone().rules().offsetOfEpochMilli(epochMilli);\n        // return LocalDateTime._ofEpochMillis(epochMilli, offset);\n\n    }\n\n    /**\n     * @see comment at {LocalDateTime._now}\n     * @param {number} epochMilli\n     * @param {ZoneOffset} offset\n     * @return {LocalDateTime} the  date-time, not null\n     *\n     */\n    static _ofEpochMillis(epochMilli, offset){\n        const localSecond = MathUtil.floorDiv(epochMilli, 1000) + offset.totalSeconds();\n        const localEpochDay = MathUtil.floorDiv(localSecond, LocalTime.SECONDS_PER_DAY);\n        const secsOfDay = MathUtil.floorMod(localSecond, LocalTime.SECONDS_PER_DAY);\n        const nanoOfSecond = MathUtil.floorMod(epochMilli, 1000) * 1000000;\n        const date = LocalDate.ofEpochDay(localEpochDay);\n        const time = LocalTime.ofSecondOfDay(secsOfDay, nanoOfSecond);\n        return new LocalDateTime(date, time);\n\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * function overloading for {@link LocalDateTime.of}\n     *\n     * if called with 2 arguments and first argument is an instance of LocalDate and second is an\n     * instance of LocalTime, then {@link LocalDateTime.ofDateAndTime} is executed.\n     *\n     * Otherwise {@link LocalDateTime.ofNumbers} is executed.\n     *\n     * @returns {LocalDateTime}\n     */\n    static of(){\n        if (arguments.length <= 2){\n            return LocalDateTime.ofDateAndTime.apply(this, arguments);\n        } else {\n            return LocalDateTime.ofNumbers.apply(this, arguments);\n        }\n    }\n    /**\n     * Obtains an instance of {@link LocalDateTime} from year, month,\n     * day, hour, minute, second and nanosecond.\n     *\n     * The day must be valid for the year and month, otherwise an exception will be thrown.\n     *\n     * @param {number} [year] - the year to represent, from MIN_YEAR to MAX_YEAR\n     * @param {number} [month] - the month-of-year to represent, from 1 to 12 or from a Month\n     * @param {number} [dayOfMonth] - the day-of-month to represent, from 1 to 31\n     * @param {number} [hour=0] - the hour-of-day to represent, from 0 to 23\n     * @param {number} [minute=0] - the minute-of-hour to represent, from 0 to 59\n     * @param {number} [second=0] - the second-of-minute to represent, from 0 to 59\n     * @param {number} [nanoOfSecond=0] - the nano-of-second to represent, from 0 to 999,999,999\n     * @return {LocalDateTime} the local date-time, not null\n     * @throws {DateTimeException} if the value of any field is out of range\n     * @throws {DateTimeException} if the day-of-month is invalid for the month-year\n     */\n    static ofNumbers(year, month, dayOfMonth, hour=0, minute=0, second=0, nanoOfSecond=0) {\n        const date = LocalDate.of(year, month, dayOfMonth);\n        const time = LocalTime.of(hour, minute, second, nanoOfSecond);\n        return new LocalDateTime(date, time);\n    }\n\n    /**\n     * Obtains an instance of {@link LocalDateTime} from a date and time.\n     *\n     * @param {!LocalDate} date - the local date, not null\n     * @param {!LocalTime} time - the local time, not null\n     * @return {LocalDateTime} the local date-time, not null\n     */\n    static ofDateAndTime(date, time) {\n        requireNonNull(date, 'date');\n        requireNonNull(time, 'time');\n        return new LocalDateTime(date, time);\n    }\n\n    //-------------------------------------------------------------------------\n    /**\n     * Obtains an instance of {@link LocalDateTime} from an {@link Instant} and zone ID.\n     *\n     * This creates a local date-time based on the specified instant.\n     * First, the offset from UTC/Greenwich is obtained using the zone ID and instant,\n     * which is simple as there is only one valid offset for each instant.\n     * Then, the instant and offset are used to calculate the local date-time.\n     *\n     * @param {!Instant} instant  the instant to create the date-time from, not null\n     * @param {!ZoneId} [zone=ZoneId.systemDefault()]  the time-zone, which may be an offset, defaults to ZoneId.systemDefault()\n     * @return {LocalDateTime} the local date-time, not null\n     * @throws {DateTimeException} if the result exceeds the supported range\n     */\n    static ofInstant(instant, zone=ZoneId.systemDefault()) {\n        requireNonNull(instant, 'instant');\n        requireInstance(instant, Instant, 'instant');\n        requireNonNull(zone, 'zone');\n        const offset = zone.rules().offset(instant);\n        return LocalDateTime.ofEpochSecond(instant.epochSecond(), instant.nano(), offset);\n    }\n\n    /**\n     * Obtains an instance of {@link LocalDateTime} using seconds from the\n     * epoch of 1970-01-01T00:00:00Z.\n     *\n     * This allows the {@link ChronoField.INSTANT_SECONDS} epoch-second field\n     * to be converted to a local date-time. This is primarily intended for\n     * low-level conversions rather than general application usage.\n     *\n     * @param {number} epochSecond - the number of seconds from the epoch of 1970-01-01T00:00:00Z\n     * @param {number|!ZoneOffset} nanoOfSecond - the nanosecond within the second, from 0 to 999,999,999\n     * @param {ZoneOffset} offset - the zone offset, not null if called with 3 arguments\n     * @return {LocalDateTime} the local date-time, not null\n     * @throws {DateTimeException} if the result exceeds the supported range\n     */\n    static ofEpochSecond(epochSecond=0, nanoOfSecond=0, offset) {\n        if(arguments.length === 2 && nanoOfSecond instanceof ZoneOffset){\n            offset = nanoOfSecond;\n            nanoOfSecond = 0;\n        }\n        requireNonNull(offset, 'offset');\n        const localSecond = epochSecond + offset.totalSeconds();  // overflow caught later\n        const localEpochDay = MathUtil.floorDiv(localSecond, LocalTime.SECONDS_PER_DAY);\n        const secsOfDay = MathUtil.floorMod(localSecond, LocalTime.SECONDS_PER_DAY);\n        const date = LocalDate.ofEpochDay(localEpochDay);\n        const time = LocalTime.ofSecondOfDay(secsOfDay, nanoOfSecond);\n        return new LocalDateTime(date, time);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains an instance of {@link LocalDateTime} from a temporal object.\n     *\n     * A {@link TemporalAccessor} represents some form of date and time information.\n     * This factory converts the arbitrary temporal object to an instance of {@link LocalDateTime}.\n     *\n     * The conversion extracts and combines {@link LocalDate} and {@link LocalTime}.\n     *\n     * This method matches the signature of the functional interface {@link TemporalQuery}\n     * allowing it to be used as a query via method reference, {@link LocalDateTime::from}.\n     *\n     * @param {!TemporalAccessor} temporal - the temporal object to convert, not null\n     * @return {LocalDateTime} {LocalDateTime} the local date-time, not null\n     * @throws {DateTimeException} if unable to convert to a {@link LocalDateTime}\n     */\n    static from(temporal) {\n        requireNonNull(temporal, 'temporal');\n        if (temporal instanceof LocalDateTime) {\n            return temporal;\n        } else if (temporal instanceof ZonedDateTime) {\n            return temporal.toLocalDateTime();\n        }\n        try {\n            const date = LocalDate.from(temporal);\n            const time = LocalTime.from(temporal);\n            return new LocalDateTime(date, time);\n        } catch (ex) {\n            throw new DateTimeException(`Unable to obtain LocalDateTime TemporalAccessor: ${temporal}, type ${temporal.constructor != null ? temporal.constructor.name : ''}`);\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains an instance of {@link LocalDateTime} from a text string using a specific formatter.\n     *\n     * The text is parsed using the formatter, returning a date-time.\n     *\n     * @param {!string} text - the text to parse, not null\n     * @param {DateTimeFormatter} [formatter=DateTimeFormatter.ISO_LOCAL_DATE_TIME] - the formatter to use,\n     * defaults to DateTimeFormatter.ISO_LOCAL_DATE_TIME\n     * @return {LocalDateTime} the parsed local date-time, not null\n     * @throws {DateTimeParseException} if the text cannot be parsed\n     */\n    static parse(text, formatter = DateTimeFormatter.ISO_LOCAL_DATE_TIME) {\n        requireNonNull(formatter, 'formatter');\n        return formatter.parse(text, LocalDateTime.FROM);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Constructor.\n     *\n     * @param {LocalDate} date - the date part of the date-time, validated not null\n     * @param {LocalTime} time - the time part of the date-time, validated not null\n     * @private\n     */\n    constructor(date, time) {\n        super();\n        requireInstance(date, LocalDate, 'date');\n        requireInstance(time, LocalTime, 'time');\n        this._date = date;\n        this._time = time;\n    }\n\n    /**\n     * Returns a copy of this date-time with the new date and time, checking\n     * to see if a new object is in fact required.\n     *\n     * @param {LocalDate} newDate - the date of the new date-time, not null\n     * @param {LocalTime} newTime - the time of the new date-time, not null\n     * @return {LocalDateTime} the date-time, not null\n     */\n    _withDateTime(newDate, newTime) {\n        if (this._date.equals(newDate) && this._time.equals(newTime)) {\n            return this;\n        }\n        return new LocalDateTime(newDate, newTime);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Checks if the specified field is supported.\n     *\n     * This checks if this date-time can be queried for the specified field.\n     * If false, then calling the {@link LocalDateTime.range} range and\n     * {@link LocalDateTime.get} get methods will throw an exception.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields are:\n     *\n     * * {@link ChronoField.NANO_OF_SECOND}\n     * * {@link ChronoField.NANO_OF_DAY}\n     * * {@link ChronoField.MICRO_OF_SECOND}\n     * * {@link ChronoField.MICRO_OF_DAY}\n     * * {@link ChronoField.MILLI_OF_SECOND}\n     * * {@link ChronoField.MILLI_OF_DAY}\n     * * {@link ChronoField.SECOND_OF_MINUTE}\n     * * {@link ChronoField.SECOND_OF_DAY}\n     * * {@link ChronoField.MINUTE_OF_HOUR}\n     * * {@link ChronoField.MINUTE_OF_DAY}\n     * * {@link ChronoField.HOUR_OF_AMPM}\n     * * {@link ChronoField.CLOCK_HOUR_OF_AMPM}\n     * * {@link ChronoField.HOUR_OF_DAY}\n     * * {@link ChronoField.CLOCK_HOUR_OF_DAY}\n     * * {@link ChronoField.AMPM_OF_DAY}\n     * * {@link ChronoField.DAY_OF_WEEK}\n     * * {@link ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH}\n     * * {@link ChronoField.ALIGNED_DAY_OF_WEEK_IN_YEAR}\n     * * {@link ChronoField.DAY_OF_MONTH}\n     * * {@link ChronoField.DAY_OF_YEAR}\n     * * {@link ChronoField.EPOCH_DAY}\n     * * {@link ChronoField.ALIGNED_WEEK_OF_MONTH}\n     * * {@link ChronoField.ALIGNED_WEEK_OF_YEAR}\n     * * {@link ChronoField.MONTH_OF_YEAR}\n     * * {@link ChronoField.EPOCH_MONTH}\n     * * {@link ChronoField.YEAR_OF_ERA}\n     * * {@link ChronoField.YEAR}\n     * * {@link ChronoField.ERA}\n     *\n     * All other {@link ChronoField} instances will return false.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.isSupportedBy}\n     * passing `this` as the argument.\n     * Whether the field is supported is determined by the field.\n     *\n     * @param {TemporalField|TemporalUnit} fieldOrUnit - the field to check, null returns false\n     * @return {boolean} true if the field is supported on this date-time, false if not\n     */\n    isSupported(fieldOrUnit) {\n        if (fieldOrUnit instanceof ChronoField) {\n            return fieldOrUnit.isDateBased() || fieldOrUnit.isTimeBased();\n        } else if (fieldOrUnit instanceof ChronoUnit) {\n            return fieldOrUnit.isDateBased() || fieldOrUnit.isTimeBased();\n        }\n        return fieldOrUnit != null && fieldOrUnit.isSupportedBy(this);\n    }\n\n    /**\n     * Gets the range of valid values for the specified field.\n     *\n     * The range object expresses the minimum and maximum valid values for a field.\n     * This date-time is used to enhance the accuracy of the returned range.\n     * If it is not possible to return the range, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return\n     * appropriate range instances.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.rangeRefinedBy}\n     * passing `this` as the argument.\n     * Whether the range can be obtained is determined by the field.\n     *\n     * @param {!TemporalField} field - the field to query the range for, not null\n     * @return {ValueRange} the range of valid values for the field, not null\n     * @throws {DateTimeException} if the range for the field cannot be obtained\n     */\n    range(field) {\n        if (field instanceof ChronoField) {\n            return (field.isTimeBased() ? this._time.range(field) : this._date.range(field));\n        }\n        return field.rangeRefinedBy(this);\n    }\n\n    /**\n     * Gets the value of the specified field from this date-time as an `int`.\n     *\n     * This queries this date-time for the value for the specified field.\n     * The returned value will always be within the valid range of values for the field.\n     * If it is not possible to return the value, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return valid\n     * values based on this date-time, except {@link NANO_OF_DAY}, {@link MICRO_OF_DAY},\n     * {@link EPOCH_DAY} and {@link EPOCH_MONTH} which are too large to fit in\n     * an `int` and throw a {@link DateTimeException}.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.getFrom}\n     * passing `this` as the argument. Whether the value can be obtained,\n     * and what the value represents, is determined by the field.\n     *\n     * @param {!TemporalField} field - the field to get, not null\n     * @return {number} the value for the field\n     * @throws {DateTimeException} if a value for the field cannot be obtained\n     * @throws {ArithmeticException} if numeric overflow occurs\n     */\n    get(field) {\n        if (field instanceof ChronoField) {\n            return (field.isTimeBased() ? this._time.get(field) : this._date.get(field));\n        }\n        return super.get(field);\n    }\n\n    /**\n     * Gets the value of the specified field from this date-time as a `long`.\n     *\n     * This queries this date-time for the value for the specified field.\n     * If it is not possible to return the value, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return valid\n     * values based on this date-time.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.getFrom}\n     * passing `this` as the argument. Whether the value can be obtained,\n     * and what the value represents, is determined by the field.\n     *\n     * @param {!TemporalField} field - the field to get, not null\n     * @return {number} the value for the field\n     * @throws {DateTimeException} if a value for the field cannot be obtained\n     * @throws {ArithmeticException} if numeric overflow occurs\n     */\n    getLong(field) {\n        requireNonNull(field, 'field');\n        if (field instanceof ChronoField) {\n            return (field.isTimeBased() ? this._time.getLong(field) : this._date.getLong(field));\n        }\n        return field.getFrom(this);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the year field.\n     *\n     * This method returns the primitive `int` value for the year.\n     *\n     * The year returned by this method is proleptic as per `get(YEAR)`.\n     * To obtain the year-of-era, use `get(YEAR_OF_ERA)`.\n     *\n     * @return {number} the year, from MIN_YEAR to MAX_YEAR\n     */\n    year() {\n        return this._date.year();\n    }\n\n    /**\n     * Gets the month-of-year field from 1 to 12.\n     *\n     * This method returns the month as an `int` from 1 to 12.\n     * Application code is frequently clearer if the enum {@link Month}\n     * is used by calling {@link getMonth}.\n     *\n     * @return {number} the month-of-year, from 1 to 12\n     * @see #getMonth()\n     */\n    monthValue() {\n        return this._date.monthValue();\n    }\n\n    /**\n     * Gets the month-of-year field using the {@link Month} enum.\n     *\n     * This method returns the enum {@link Month} for the month.\n     * This avoids confusion as to what `int` values mean.\n     * If you need access to the primitive `int` value, use\n     * {@link Month#getValue}.\n     *\n     * @return {Month} the month-of-year, not null\n     * @see #getMonthValue()\n     */\n    month() {\n        return this._date.month();\n    }\n\n    /**\n     * Gets the day-of-month field.\n     *\n     * This method returns the primitive `int` value for the day-of-month.\n     *\n     * @return {number} the day-of-month, from 1 to 31\n     */\n    dayOfMonth() {\n        return this._date.dayOfMonth();\n    }\n\n    /**\n     * Gets the day-of-year field.\n     *\n     * This method returns the primitive `int` value for the day-of-year.\n     *\n     * @return {number} the day-of-year, from 1 to 365, or 366 in a leap year\n     */\n    dayOfYear() {\n        return this._date.dayOfYear();\n    }\n\n    /**\n     * Gets the day-of-week field, which is an enum {@link DayOfWeek}.\n     *\n     * This method returns the enum {@link DayOfWeek} for the day-of-week.\n     * This avoids confusion as to what `int` values mean.\n     * If you need access to the primitive `int` value, use\n     * {@link DayOfWeek#getValue}.\n     *\n     * Additional information can be obtained from the {@link DayOfWeek}.\n     * This includes textual names of the values.\n     *\n     * @return {DayOfWeek} the day-of-week, not null\n     */\n    dayOfWeek() {\n        return this._date.dayOfWeek();\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the hour-of-day field.\n     *\n     * @return {number} the hour-of-day, from 0 to 23\n     */\n    hour() {\n        return this._time.hour();\n    }\n\n    /**\n     * Gets the minute-of-hour field.\n     *\n     * @return {number} the minute-of-hour, from 0 to 59\n     */\n    minute() {\n        return this._time.minute();\n    }\n\n    /**\n     * Gets the second-of-minute field.\n     *\n     * @return {number} the second-of-minute, from 0 to 59\n     */\n    second() {\n        return this._time.second();\n    }\n\n    /**\n     * Gets the nano-of-second field.\n     *\n     * @return {number} the nano-of-second, from 0 to 999,999,999\n     */\n    nano() {\n        return this._time.nano();\n    }\n\n    //-----------------------------------------------------------------------\n\n    /**\n     * Returns an adjusted copy of this date-time.\n     *\n     * This returns a new {@link LocalDateTime}, based on this one, with the date-time adjusted.\n     * The adjustment takes place using the specified adjuster strategy object.\n     * Read the documentation of the adjuster to understand what adjustment will be made.\n     *\n     * A simple adjuster might simply set the one of the fields, such as the year field.\n     * A more complex adjuster might set the date to the last day of the month.\n     * A selection of common adjustments is provided in {@link TemporalAdjusters}.\n     * These include finding the 'last day of the month' and 'next Wednesday'.\n     * Key date-time classes also implement the {@link TemporalAdjuster} interface,\n     * such as {@link Month} and {@link MonthDay}.\n     * The adjuster is responsible for handling special cases, such as the varying\n     * lengths of month and leap years.\n     *\n     * For example this code returns a date on the last day of July:\n     * <pre>\n     *  import static org.threeten.bp.Month.*;\n     *  import static org.threeten.bp.temporal.Adjusters.*;\n     *\n     *  result = localDateTime.with(JULY).with(lastDayOfMonth());\n     * </pre>\n     *\n     * The classes {@link LocalDate} and {@link LocalTime} implement {@link TemporalAdjuster},\n     * thus this method can be used to change the date, time or offset:\n     * <pre>\n     *  result = localDateTime.with(date);\n     *  result = localDateTime.with(time);\n     * </pre>\n     *\n     * The result of this method is obtained by invoking the\n     * {@link TemporalAdjuster#adjustInto} method on the\n     * specified adjuster passing `this` as the argument.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {TemporalAdjuster} adjuster the adjuster to use, not null\n     * @return {LocalDateTime} a {@link LocalDateTime} based on `this` with the adjustment made, not null\n     * @throws {DateTimeException} if the adjustment cannot be made\n     * @throws {ArithmeticException} if numeric overflow occurs\n     */\n    _withAdjuster(adjuster) {\n        requireNonNull(adjuster, 'adjuster');\n        // optimizations\n        if (adjuster instanceof LocalDate) {\n            return this._withDateTime(adjuster, this._time);\n        } else if (adjuster instanceof LocalTime) {\n            return this._withDateTime(this._date, adjuster);\n        } else if (adjuster instanceof LocalDateTime) {\n            return adjuster;\n        }\n        return super._withAdjuster(adjuster);\n    }\n\n    /**\n     * Returns a copy of this date-time with the specified field set to a new value.\n     *\n     * This returns a new {@link LocalDateTime}, based on this one, with the value\n     * for the specified field changed.\n     * This can be used to change any supported field, such as the year, month or day-of-month.\n     * If it is not possible to set the value, because the field is not supported or for\n     * some other reason, an exception is thrown.\n     *\n     * In some cases, changing the specified field can cause the resulting date-time to become invalid,\n     * such as changing the month from 31st January to February would make the day-of-month invalid.\n     * In cases like this, the field is responsible for resolving the date. Typically it will choose\n     * the previous valid date, which would be the last valid day of February in this example.\n     *\n     * If the field is a {@link ChronoField} then the adjustment is implemented here.\n     * The supported fields (see {@link isSupported}) will behave as in\n     * {@link LocalDate#with} or {@link LocalTime#with}.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.adjustInto}\n     * passing `this` as the argument. In this case, the field determines\n     * whether and how to adjust the instant.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {TemporalField} field - the field to set in the result, not null\n     * @param {number} newValue - the new value of the field in the result\n     * @return {LocalDateTime} a {@link LocalDateTime} based on `this` with the specified field set, not null\n     * @throws {DateTimeException} if the field cannot be set\n     * @throws {ArithmeticException} if numeric overflow occurs\n     */\n    _withField(field, newValue) {\n        requireNonNull(field, 'field');\n        if (field instanceof ChronoField) {\n            if (field.isTimeBased()) {\n                return this._withDateTime(this._date, this._time.with(field, newValue));\n            } else {\n                return this._withDateTime(this._date.with(field, newValue), this._time);\n            }\n        }\n        return field.adjustInto(this, newValue);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the year altered.\n     * The time does not affect the calculation and will be the same in the result.\n     * If the day-of-month is invalid for the year, it will be changed to the last valid day of the month.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} year - the year to set in the result, from MIN_YEAR to MAX_YEAR\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the requested year, not null\n     * @throws {DateTimeException} if the year value is invalid\n     */\n    withYear(year) {\n        return this._withDateTime(this._date.withYear(year), this._time);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the month-of-year altered.\n     * The time does not affect the calculation and will be the same in the result.\n     * If the day-of-month is invalid for the year, it will be changed to the last valid day of the month.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {!(number|Month)} month - the month-of-year to set in the result, from 1 (January) to 12 (December)\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the requested month, not null\n     * @throws {DateTimeException} if the month-of-year value is invalid\n     */\n    withMonth(month) {\n        return this._withDateTime(this._date.withMonth(month), this._time);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the day-of-month altered.\n     * If the resulting {@link LocalDateTime} is invalid, an exception is thrown.\n     * The time does not affect the calculation and will be the same in the result.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} dayOfMonth - the day-of-month to set in the result, from 1 to 28-31\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the requested day, not null\n     * @throws {DateTimeException} if the day-of-month value is invalid\n     * @throws {DateTimeException} if the day-of-month is invalid for the month-year\n     */\n    withDayOfMonth(dayOfMonth) {\n        return this._withDateTime(this._date.withDayOfMonth(dayOfMonth), this._time);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the day-of-year altered.\n     * If the resulting {@link LocalDateTime} is invalid, an exception is thrown.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} dayOfYear - the day-of-year to set in the result, from 1 to 365-366\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date with the requested day, not null\n     * @throws {DateTimeException} if the day-of-year value is invalid\n     * @throws {DateTimeException} if the day-of-year is invalid for the year\n     */\n    withDayOfYear(dayOfYear) {\n        return this._withDateTime(this._date.withDayOfYear(dayOfYear), this._time);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the hour-of-day value altered.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} hour - the hour-of-day to set in the result, from 0 to 23\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the requested hour, not null\n     * @throws {DateTimeException} if the hour value is invalid\n     */\n    withHour(hour) {\n        const newTime = this._time.withHour(hour);\n        return this._withDateTime(this._date, newTime);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the minute-of-hour value altered.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} minute - the minute-of-hour to set in the result, from 0 to 59\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the requested minute, not null\n     * @throws {DateTimeException} if the minute value is invalid\n     */\n    withMinute(minute) {\n        const newTime = this._time.withMinute(minute);\n        return this._withDateTime(this._date, newTime);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the second-of-minute value altered.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} second - the second-of-minute to set in the result, from 0 to 59\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the requested second, not null\n     * @throws {DateTimeException} if the second value is invalid\n     */\n    withSecond(second) {\n        const newTime = this._time.withSecond(second);\n        return this._withDateTime(this._date, newTime);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the nano-of-second value altered.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} nanoOfSecond - the nano-of-second to set in the result, from 0 to 999,999,999\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the requested nanosecond, not null\n     * @throws {DateTimeException} if the nano value is invalid\n     */\n    withNano(nanoOfSecond) {\n        const newTime = this._time.withNano(nanoOfSecond);\n        return this._withDateTime(this._date, newTime);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the time truncated.\n     *\n     * Truncation returns a copy of the original date-time with fields\n     * smaller than the specified unit set to zero.\n     * For example, truncating with {@link ChronoUnit#MINUTES}\n     * will set the second-of-minute and nano-of-second field to zero.\n     *\n     * The unit must have a duration (see {@link TemporalUnit#getDuration})\n     * that divides into the length of a standard day without remainder.\n     * This includes all supplied time units on {@link ChronoUnit} and\n     * {@link ChronoUnit#DAYS}. Other units throw an exception.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {TemporalUnit} unit - the unit to truncate to, not null\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the time truncated, not null\n     * @throws {DateTimeException} if unable to truncate\n     */\n    truncatedTo(unit) {\n        return this._withDateTime(this._date, this._time.truncatedTo(unit));\n    }\n\n    //-----------------------------------------------------------------------\n\n    /**\n     * Returns a copy of this date-time with the specified period added.\n     *\n     * This method returns a new date-time based on this date-time with the specified period added.\n     * This can be used to add any period that is defined by a unit, for example to add years, months or days.\n     * The unit is responsible for the details of the calculation, including the resolution\n     * of any edge cases in the calculation.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} amountToAdd - the amount of the unit to add to the result, may be negative\n     * @param {!TemporalUnit} unit - the unit of the period to add, not null\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the specified period added, not null\n     * @throws {DateTimeException} if the unit cannot be added to this type\n     */\n    _plusUnit(amountToAdd, unit) {\n        requireNonNull(unit, 'unit');\n        if (unit instanceof ChronoUnit) {\n            switch (unit) {\n                case ChronoUnit.NANOS: return this.plusNanos(amountToAdd);\n                case ChronoUnit.MICROS: return this.plusDays(MathUtil.intDiv(amountToAdd, LocalTime.MICROS_PER_DAY)).plusNanos(MathUtil.intMod(amountToAdd, LocalTime.MICROS_PER_DAY) * 1000);\n                case ChronoUnit.MILLIS: return this.plusDays(MathUtil.intDiv(amountToAdd, LocalTime.MILLIS_PER_DAY)).plusNanos(MathUtil.intMod(amountToAdd, LocalTime.MILLIS_PER_DAY) * 1000000);\n                case ChronoUnit.SECONDS: return this.plusSeconds(amountToAdd);\n                case ChronoUnit.MINUTES: return this.plusMinutes(amountToAdd);\n                case ChronoUnit.HOURS: return this.plusHours(amountToAdd);\n                case ChronoUnit.HALF_DAYS: return this.plusDays(MathUtil.intDiv(amountToAdd, 256)).plusHours(MathUtil.intMod(amountToAdd, 256) * 12);  // no overflow (256 is multiple of 2)\n            }\n            return this._withDateTime(this._date.plus(amountToAdd, unit), this._time);\n        }\n        return unit.addTo(this, amountToAdd);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the specified period in years added.\n     *\n     * This method adds the specified amount to the years field in three steps:\n     *\n     * 1. Add the input years to the year field\n     * 2. Check if the resulting date would be invalid\n     * 3. Adjust the day-of-month to the last valid day if necessary\n     *\n     * For example, 2008-02-29 (leap year) plus one year would result in the\n     * invalid date 2009-02-29 (standard year). Instead of returning an invalid\n     * result, the last valid day of the month, 2009-02-28, is selected instead.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} years - the years to add, may be negative\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the years added, not null\n     * @throws {DateTimeException} if the result exceeds the supported date range\n     */\n    plusYears(years) {\n        const newDate = this._date.plusYears(years);\n        return this._withDateTime(newDate, this._time);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the specified period in months added.\n     *\n     * This method adds the specified amount to the months field in three steps:\n     *\n     * 1. Add the input months to the month-of-year field\n     * 2. Check if the resulting date would be invalid\n     * 3. Adjust the day-of-month to the last valid day if necessary\n     *\n     * For example, 2007-03-31 plus one month would result in the invalid date\n     * 2007-04-31. Instead of returning an invalid result, the last valid day\n     * of the month, 2007-04-30, is selected instead.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} months - the months to add, may be negative\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the months added, not null\n     * @throws {DateTimeException} if the result exceeds the supported date range\n     */\n    plusMonths(months) {\n        const newDate = this._date.plusMonths(months);\n        return this._withDateTime(newDate, this._time);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the specified period in weeks added.\n     *\n     * This method adds the specified amount in weeks to the days field incrementing\n     * the month and year fields as necessary to ensure the result remains valid.\n     * The result is only invalid if the maximum/minimum year is exceeded.\n     *\n     * For example, 2008-12-31 plus one week would result in 2009-01-07.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} weeks - the weeks to add, may be negative\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the weeks added, not null\n     * @throws {DateTimeException} if the result exceeds the supported date range\n     */\n    plusWeeks(weeks) {\n        const newDate = this._date.plusWeeks(weeks);\n        return this._withDateTime(newDate, this._time);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the specified period in days added.\n     *\n     * This method adds the specified amount to the days field incrementing the\n     * month and year fields as necessary to ensure the result remains valid.\n     * The result is only invalid if the maximum/minimum year is exceeded.\n     *\n     * For example, 2008-12-31 plus one day would result in 2009-01-01.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} days - the days to add, may be negative\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the days added, not null\n     * @throws {DateTimeException} if the result exceeds the supported date range\n     */\n    plusDays(days) {\n        const newDate = this._date.plusDays(days);\n        return this._withDateTime(newDate, this._time);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the specified period in hours added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} hours - the hours to add, may be negative\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the hours added, not null\n     * @throws {DateTimeException} if the result exceeds the supported date range\n     */\n    plusHours(hours) {\n        return this._plusWithOverflow(this._date, hours, 0, 0, 0, 1);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the specified period in minutes added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} minutes - the minutes to add, may be negative\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the minutes added, not null\n     * @throws {DateTimeException} if the result exceeds the supported date range\n     */\n    plusMinutes(minutes) {\n        return this._plusWithOverflow(this._date, 0, minutes, 0, 0, 1);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the specified period in seconds added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} seconds - the seconds to add, may be negative\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the seconds added, not null\n     * @throws {DateTimeException} if the result exceeds the supported date range\n     */\n    plusSeconds(seconds) {\n        return this._plusWithOverflow(this._date, 0, 0, seconds, 0, 1);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the specified period in nanoseconds added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} nanos - the nanos to add, may be negative\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the nanoseconds added, not null\n     * @throws {DateTimeException} if the result exceeds the supported date range\n     */\n    plusNanos(nanos) {\n        return this._plusWithOverflow(this._date, 0, 0, 0, nanos, 1);\n    }\n\n    //-----------------------------------------------------------------------\n\n    /**\n     * Returns a copy of this date-time with the specified period subtracted.\n     *\n     * This method returns a new date-time based on this date-time with the specified period subtracted.\n     * This can be used to subtract any period that is defined by a unit, for example to subtract years, months or days.\n     * The unit is responsible for the details of the calculation, including the resolution\n     * of any edge cases in the calculation.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} amountToSubtract - the amount of the unit to subtract from the result, may be negative\n     * @param {TemporalUnit} unit - the unit of the period to subtract, not null\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the specified period subtracted, not null\n     * @throws {DateTimeException} if the unit cannot be added to this type\n     */\n    _minusUnit(amountToSubtract, unit) {\n        requireNonNull(unit, 'unit');\n        return this._plusUnit(-1 * amountToSubtract, unit);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the specified period in years subtracted.\n     *\n     * This method subtracts the specified amount from the years field in three steps:\n     *\n     * 1. Subtract the input years from the year field\n     * 2. Check if the resulting date would be invalid\n     * 3. Adjust the day-of-month to the last valid day if necessary\n     *\n     * For example, 2008-02-29 (leap year) minus one year would result in the\n     * invalid date 2009-02-29 (standard year). Instead of returning an invalid\n     * result, the last valid day of the month, 2009-02-28, is selected instead.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} years - the years to subtract, may be negative\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the years subtracted, not null\n     * @throws {DateTimeException} if the result exceeds the supported date range\n     */\n    minusYears(years) {\n        return this.plusYears(-1 * years);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the specified period in months subtracted.\n     *\n     * This method subtracts the specified amount from the months field in three steps:\n     *\n     * 1. Subtract the input months from the month-of-year field\n     * 2. Check if the resulting date would be invalid\n     * 3. Adjust the day-of-month to the last valid day if necessary\n     *\n     * For example, 2007-03-31 minus one month would result in the invalid date\n     * 2007-04-31. Instead of returning an invalid result, the last valid day\n     * of the month, 2007-04-30, is selected instead.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} months - the months to subtract, may be negative\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the months subtracted, not null\n     * @throws {DateTimeException} if the result exceeds the supported date range\n     */\n    minusMonths(months) {\n        return this.plusMonths(-1 * months);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the specified period in weeks subtracted.\n     *\n     * This method subtracts the specified amount in weeks from the days field decrementing\n     * the month and year fields as necessary to ensure the result remains valid.\n     * The result is only invalid if the maximum/minimum year is exceeded.\n     *\n     * For example, 2009-01-07 minus one week would result in 2008-12-31.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} weeks - the weeks to subtract, may be negative\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the weeks subtracted, not null\n     * @throws {DateTimeException} if the result exceeds the supported date range\n     */\n    minusWeeks(weeks) {\n        return this.plusWeeks(-1 * weeks);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the specified period in days subtracted.\n     *\n     * This method subtracts the specified amount from the days field incrementing the\n     * month and year fields as necessary to ensure the result remains valid.\n     * The result is only invalid if the maximum/minimum year is exceeded.\n     *\n     * For example, 2009-01-01 minus one day would result in 2008-12-31.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} days - the days to subtract, may be negative\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the days subtracted, not null\n     * @throws {DateTimeException} if the result exceeds the supported date range\n     */\n    minusDays(days) {\n        return this.plusDays(-1 * days);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the specified period in hours subtracted.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} hours - the hours to subtract, may be negative\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the hours subtracted, not null\n     * @throws {DateTimeException} if the result exceeds the supported date range\n     */\n    minusHours(hours) {\n        return this._plusWithOverflow(this._date, hours, 0, 0, 0, -1);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the specified period in minutes subtracted.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} minutes - the minutes to subtract, may be negative\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the minutes subtracted, not null\n     * @throws {DateTimeException} if the result exceeds the supported date range\n     */\n    minusMinutes(minutes) {\n        return this._plusWithOverflow(this._date, 0, minutes, 0, 0, -1);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the specified period in seconds subtracted.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} seconds - the seconds to subtract, may be negative\n     * @return {LocalDateTime} a {@link LocalDateTime} based on this date-time with the seconds subtracted, not null\n     * @throws {DateTimeException} if the result exceeds the supported date range\n     */\n    minusSeconds(seconds) {\n        return this._plusWithOverflow(this._date, 0, 0, seconds, 0, -1);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the specified period in nanoseconds subtracted.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Number} nanos - the nanos to subtract, may be negative\n     * @return {LocalDateTime} based on this date-time with the nanoseconds subtracted, not null\n     * @throws {DateTimeException} if the result exceeds the supported date range\n     */\n    minusNanos(nanos) {\n        return this._plusWithOverflow(this._date, 0, 0, 0, nanos, -1);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this {@link LocalDateTime} with the specified period added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {LocalDate} newDate  the new date to base the calculation on, not null\n     * @param {Number} hours - the hours to add, may be negative\n     * @param {Number} minutes - the minutes to add, may be negative\n     * @param {Number} seconds - the seconds to add, may be negative\n     * @param {Number} nanos - the nanos to add, may be negative\n     * @param {Number} sign - the sign to determine add or subtract\n     * @return {LocalDateTime} the combined result, not null\n     */\n    _plusWithOverflow(newDate, hours, minutes, seconds, nanos, sign) {\n        // 9223372036854775808 long, 2147483648 int\n        if (hours === 0 && minutes === 0 && seconds === 0 && nanos === 0) {\n            return this._withDateTime(newDate, this._time);\n        }\n        let totDays = MathUtil.intDiv(nanos, LocalTime.NANOS_PER_DAY) +             //   max/24*60*60*1B\n                MathUtil.intDiv(seconds, LocalTime.SECONDS_PER_DAY) +                //   max/24*60*60\n                MathUtil.intDiv(minutes, LocalTime.MINUTES_PER_DAY) +                //   max/24*60\n                MathUtil.intDiv(hours, LocalTime.HOURS_PER_DAY);                     //   max/24\n        totDays *= sign;                                   // total max*0.4237...\n        let totNanos = MathUtil.intMod(nanos, LocalTime.NANOS_PER_DAY) +                    //   max  86400000000000\n                (MathUtil.intMod(seconds, LocalTime.SECONDS_PER_DAY)) * LocalTime.NANOS_PER_SECOND +   //   max  86400000000000\n                (MathUtil.intMod(minutes, LocalTime.MINUTES_PER_DAY)) * LocalTime.NANOS_PER_MINUTE +   //   max  86400000000000\n                (MathUtil.intMod(hours, LocalTime.HOURS_PER_DAY)) * LocalTime.NANOS_PER_HOUR;          //   max  86400000000000\n        const curNoD = this._time.toNanoOfDay();                       //   max  86400000000000\n        totNanos = totNanos * sign + curNoD;                    // total 432000000000000\n        totDays += MathUtil.floorDiv(totNanos, LocalTime.NANOS_PER_DAY);\n        const newNoD = MathUtil.floorMod(totNanos, LocalTime.NANOS_PER_DAY);\n        const newTime = (newNoD === curNoD ? this._time : LocalTime.ofNanoOfDay(newNoD));\n        return this._withDateTime(newDate.plusDays(totDays), newTime);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Queries this date-time using the specified query.\n     *\n     * This queries this date-time using the specified query strategy object.\n     * The {@link TemporalQuery} object defines the logic to be used to\n     * obtain the result. Read the documentation of the query to understand\n     * what the result of this method will be.\n     *\n     * The result of this method is obtained by invoking the\n     * {@link TemporalQuery#queryFrom} method on the\n     * specified query passing `this` as the argument.\n     *\n     * @param {TemporalQuery} query  the query to invoke, not null\n     * @return {*} the query result, null may be returned (defined by the query)\n     * @throws {DateTimeException} if unable to query (defined by the query)\n     * @throws {ArithmeticException} if numeric overflow occurs (defined by the query)\n     */\n    query(query) {\n        requireNonNull(query, 'query');\n        if (query === TemporalQueries.localDate()) {\n            return this.toLocalDate();\n        }\n        return super.query(query);\n    }\n\n    /**\n     * Adjusts the specified temporal object to have the same date and time as this object.\n     *\n     * This returns a temporal object of the same observable type as the input\n     * with the date and time changed to be the same as this.\n     *\n     * The adjustment is equivalent to using {@link Temporal#with}\n     * twice, passing {@link ChronoField#EPOCH_DAY} and\n     * {@link ChronoField#NANO_OF_DAY} as the fields.\n     *\n     * In most cases, it is clearer to reverse the calling pattern by using\n     * {@link Temporal#with}:\n     * <pre>\n     *   // these two lines are equivalent, but the second approach is recommended\n     *   temporal = thisLocalDateTime.adjustInto(temporal);\n     *   temporal = temporal.with(thisLocalDateTime);\n     * </pre>\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {TemporalAdjuster} temporal - the target object to be adjusted, not null\n     * @return {LocalDateTime} the adjusted object, not null\n     * @throws {DateTimeException} if unable to make the adjustment\n     * @throws {ArithmeticException} if numeric overflow occurs\n     */\n    adjustInto(temporal) {\n        return super.adjustInto(temporal);\n    }\n\n    /**\n     * Calculates the period between this date-time and another date-time in\n     * terms of the specified unit.\n     *\n     * This calculates the period between two date-times in terms of a single unit.\n     * The start and end points are `this` and the specified date-time.\n     * The result will be negative if the end is before the start.\n     * The {@link Temporal} passed to this method must be a {@link LocalDateTime}.\n     * For example, the period in days between two date-times can be calculated\n     * using `startDateTime.until(endDateTime, DAYS)`.\n     *\n     * The calculation returns a whole number, representing the number of\n     * complete units between the two date-times.\n     * For example, the period in months between 2012-06-15T00:00 and 2012-08-14T23:59\n     * will only be one month as it is one minute short of two months.\n     *\n     * This method operates in association with {@link TemporalUnit#between}.\n     * The result of this method is a `long` representing the amount of\n     * the specified unit. By contrast, the result of {@link between} is an\n     * object that can be used directly in addition/subtraction:\n     * <pre>\n     *   long period = start.until(end, MONTHS);   // this method\n     *   dateTime.plus(MONTHS.between(start, end));      // use in plus/minus\n     * </pre>\n     *\n     * The calculation is implemented in this method for {@link ChronoUnit}.\n     * The units {@link NANOS}, {@link MICROS}, {@link MILLIS}, {@link SECONDS},\n     * {@link MINUTES}, {@link HOURS} and {@link HALF_DAYS}, {@link DAYS},\n     * {@link WEEKS}, {@link MONTHS}, {@link YEARS}, {@link DECADES},\n     * {@link CENTURIES}, {@link MILLENNIA} and {@link ERAS} are supported.\n     * Other {@link ChronoUnit} values will throw an exception.\n     *\n     * If the unit is not a {@link ChronoUnit}, then the result of this method\n     * is obtained by invoking {@link TemporalUnit.between}\n     * passing `this` as the first argument and the input temporal as\n     * the second argument.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Temporal} endExclusive - the end date-time, which is converted to a {@link LocalDateTime}, not null\n     * @param {TemporalUnit} unit - the unit to measure the period in, not null\n     * @return {number} the amount of the period between this date-time and the end date-time\n     * @throws {DateTimeException} if the period cannot be calculated\n     * @throws {ArithmeticException} if numeric overflow occurs\n     */\n    until(endExclusive, unit) {\n        requireNonNull(endExclusive, 'endExclusive');\n        requireNonNull(unit, 'unit');\n        const end = LocalDateTime.from(endExclusive);\n        if (unit instanceof ChronoUnit) {\n            if (unit.isTimeBased()) {\n                let daysUntil = this._date.daysUntil(end._date);\n                let timeUntil = end._time.toNanoOfDay() - this._time.toNanoOfDay();\n                if (daysUntil > 0 && timeUntil < 0) {\n                    daysUntil--;\n                    timeUntil += LocalTime.NANOS_PER_DAY;\n                } else if (daysUntil < 0 && timeUntil > 0) {\n                    daysUntil++;\n                    timeUntil -= LocalTime.NANOS_PER_DAY;\n                }\n                let amount = daysUntil;\n                switch (unit) {\n                    case ChronoUnit.NANOS:\n                        amount = MathUtil.safeMultiply(amount, LocalTime.NANOS_PER_DAY);\n                        return MathUtil.safeAdd(amount, timeUntil);\n                    case ChronoUnit.MICROS:\n                        amount = MathUtil.safeMultiply(amount, LocalTime.MICROS_PER_DAY);\n                        return MathUtil.safeAdd(amount, MathUtil.intDiv(timeUntil, 1000));\n                    case ChronoUnit.MILLIS:\n                        amount = MathUtil.safeMultiply(amount, LocalTime.MILLIS_PER_DAY);\n                        return MathUtil.safeAdd(amount, MathUtil.intDiv(timeUntil, 1000000));\n                    case ChronoUnit.SECONDS:\n                        amount = MathUtil.safeMultiply(amount, LocalTime.SECONDS_PER_DAY);\n                        return MathUtil.safeAdd(amount, MathUtil.intDiv(timeUntil, LocalTime.NANOS_PER_SECOND));\n                    case ChronoUnit.MINUTES:\n                        amount = MathUtil.safeMultiply(amount, LocalTime.MINUTES_PER_DAY);\n                        return MathUtil.safeAdd(amount, MathUtil.intDiv(timeUntil, LocalTime.NANOS_PER_MINUTE));\n                    case ChronoUnit.HOURS:\n                        amount = MathUtil.safeMultiply(amount, LocalTime.HOURS_PER_DAY);\n                        return MathUtil.safeAdd(amount, MathUtil.intDiv(timeUntil, LocalTime.NANOS_PER_HOUR));\n                    case ChronoUnit.HALF_DAYS:\n                        amount = MathUtil.safeMultiply(amount, 2);\n                        return MathUtil.safeAdd(amount, MathUtil.intDiv(timeUntil, (LocalTime.NANOS_PER_HOUR * 12)));\n                }\n                throw new UnsupportedTemporalTypeException(`Unsupported unit: ${unit}`);\n            }\n            let endDate = end._date;\n            const endTime = end._time;\n            if (endDate.isAfter(this._date) && endTime.isBefore(this._time)) {\n                endDate = endDate.minusDays(1);\n            } else if (endDate.isBefore(this._date) && endTime.isAfter(this._time)) {\n                endDate = endDate.plusDays(1);\n            }\n            return this._date.until(endDate, unit);\n        }\n        return unit.between(this, end);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Combines this date-time with an offset to create an {@link OffsetDateTime}.\n     *\n     * This returns an {@link OffsetDateTime} formed from this date-time at the specified offset.\n     * All possible combinations of date-time and offset are valid.\n     *\n     * @param {ZoneOffset} offset  the offset to combine with, not null\n     * @return {OffsetDateTime} the offset date-time formed from this date-time and the specified offset, not null\n     */\n    atOffset(offset) {\n        return OffsetDateTime.of(this, offset);\n    }\n\n    /**\n     * Combines this date-time with a time-zone to create a {@link ZonedDateTime}.\n     *\n     * This returns a {@link ZonedDateTime} formed from this date-time at the\n     * specified time-zone. The result will match this date-time as closely as possible.\n     * Time-zone rules, such as daylight savings, mean that not every local date-time\n     * is valid for the specified zone, thus the local date-time may be adjusted.\n     *\n     * The local date-time is resolved to a single instant on the time-line.\n     * This is achieved by finding a valid offset from UTC/Greenwich for the local\n     * date-time as defined by the {@link ZoneRules} of the zone ID.\n     *\n     * In most cases, there is only one valid offset for a local date-time.\n     * In the case of an overlap, where clocks are set back, there are two valid offsets.\n     * This method uses the earlier offset typically corresponding to 'summer'.\n     *\n     * In the case of a gap, where clocks jump forward, there is no valid offset.\n     * Instead, the local date-time is adjusted to be later by the length of the gap.\n     * For a typical one hour daylight savings change, the local date-time will be\n     * moved one hour later into the offset typically corresponding to 'summer'.\n     *\n     * To obtain the later offset during an overlap, call\n     * {@link ZonedDateTime#withLaterOffsetAtOverlap} on the result of this method.\n     * To throw an exception when there is a gap or overlap, use\n     * {@link ZonedDateTime#ofStrict}.\n     *\n     * @param {ZoneId} zone  the time-zone to use, not null\n     * @return {ZonedDateTime} the zoned date-time formed from this date-time, not null\n     */\n    atZone(zone) {\n        return ZonedDateTime.of(this, zone);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the {@link LocalDate} part of this date-time.\n     *\n     * This returns a {@link LocalDate} with the same year, month and day\n     * as this date-time.\n     *\n     * @return {LocalDate} the date part of this date-time, not null\n     */\n    toLocalDate() {\n        return this._date;\n    }\n\n    /**\n     * Gets the {@link LocalTime} part of this date-time.\n     *\n     * This returns a {@link LocalTime} with the same hour, minute, second and\n     * nanosecond as this date-time.\n     *\n     * @return {LocalTime} the time part of this date-time, not null\n     */\n    toLocalTime() {\n        return this._time;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Compares this date-time to another date-time.\n     *\n     * The comparison is primarily based on the date-time, from earliest to latest.\n     * It is 'consistent with equals', as defined by {@link Comparable}.\n     *\n     * If all the date-times being compared are instances of {@link LocalDateTime},\n     * then the comparison will be entirely based on the date-time.\n     * If some dates being compared are in different chronologies, then the\n     * chronology is also considered, see {@link ChronoLocalDateTime#compareTo}.\n     *\n     * @param {!LocalDateTime} other - the other date-time to compare to, not null\n     * @return {number} the comparator value, negative if less, positive if greater\n     */\n    compareTo(other) {\n        requireNonNull(other, 'other');\n        requireInstance(other, LocalDateTime, 'other');\n        return this._compareTo0(other);\n        // return super.compareTo(other); if not instance of  LocalDateTime\n    }\n\n    /**\n     *\n     * @param {!LocalDateTime} other\n     * @returns {number}\n     * @private\n     */\n    _compareTo0(other) {\n        let cmp = this._date.compareTo(other.toLocalDate());\n        if (cmp === 0) {\n            cmp = this._time.compareTo(other.toLocalTime());\n        }\n        return cmp;\n    }\n\n    /**\n     * Checks if this date-time is after the specified date-time.\n     *\n     * This checks to see if this date-time represents a point on the\n     * local time-line after the other date-time.\n     * <pre>\n     *   LocalDate a = LocalDateTime.of(2012, 6, 30, 12, 00);\n     *   LocalDate b = LocalDateTime.of(2012, 7, 1, 12, 00);\n     *   a.isAfter(b) == false\n     *   a.isAfter(a) == false\n     *   b.isAfter(a) == true\n     * </pre>\n     *\n     * This method only considers the position of the two date-times on the local time-line.\n     * It does not take into account the chronology, or calendar system.\n     * This is different from the comparison in {@link compareTo},\n     * but is the same approach as {@link DATE_TIME_COMPARATOR}.\n     *\n     * @param {LocalDateTime} other - the other date-time to compare to, not null\n     * @return {boolean} true if this date-time is after the specified date-time\n     */\n    isAfter(other) {\n        return this.compareTo(other) > 0;\n        // return super.isAfter(other);  if not instance of LocalDateTime\n    }\n\n    /**\n     * Checks if this date-time is before the specified date-time.\n     *\n     * This checks to see if this date-time represents a point on the\n     * local time-line before the other date-time.\n     * <pre>\n     *   LocalDate a = LocalDateTime.of(2012, 6, 30, 12, 00);\n     *   LocalDate b = LocalDateTime.of(2012, 7, 1, 12, 00);\n     *   a.isBefore(b) == true\n     *   a.isBefore(a) == false\n     *   b.isBefore(a) == false\n     * </pre>\n     *\n     * This method only considers the position of the two date-times on the local time-line.\n     * It does not take into account the chronology, or calendar system.\n     * This is different from the comparison in {@link compareTo},\n     * but is the same approach as {@link DATE_TIME_COMPARATOR}.\n     *\n     * @param {LocalDateTime} other - the other date-time to compare to, not null\n     * @return {boolean} true if this date-time is before the specified date-time\n     */\n    isBefore(other) {\n        return this.compareTo(other) < 0;\n        // return super.isBefore(other);  if not instance of LocalDateTime\n    }\n\n    /**\n     * Checks if this date-time is equal to the specified date-time.\n     *\n     * This checks to see if this date-time represents the same point on the\n     * local time-line as the other date-time.\n     * <pre>\n     *   LocalDate a = LocalDateTime.of(2012, 6, 30, 12, 00);\n     *   LocalDate b = LocalDateTime.of(2012, 7, 1, 12, 00);\n     *   a.isEqual(b) == false\n     *   a.isEqual(a) == true\n     *   b.isEqual(a) == false\n     * </pre>\n     *\n     * This method only considers the position of the two date-times on the local time-line.\n     * It does not take into account the chronology, or calendar system.\n     * This is different from the comparison in {@link compareTo},\n     * but is the same approach as {@link DATE_TIME_COMPARATOR}.\n     *\n     * @param {LocalDateTime} other - the other date-time to compare to, not null\n     * @return {boolean} true if this date-time is equal to the specified date-time\n     */\n    isEqual(other) {\n        return this.compareTo(other) === 0;\n        // return super.isEqual(other); if not instance of LocalDateTime\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Checks if this date-time is equal to another date-time.\n     *\n     * Compares this {@link LocalDateTime} with another ensuring that the date-time is the same.\n     * Only objects of type {@link LocalDateTime} are compared, other types return false.\n     *\n     * @param {*} other - the object to check, null returns false\n     * @return {boolean} true if this is equal to the other date-time\n     */\n    equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof LocalDateTime) {\n            return this._date.equals(other._date) && this._time.equals(other._time);\n        }\n        return false;\n    }\n\n    /**\n     * A hash code for this date-time.\n     *\n     * @return {number} a suitable hash code\n     */\n    hashCode() {\n        return this._date.hashCode() ^ this._time.hashCode();\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Outputs this date-time as a string, such as `2007-12-03T10:15:30`.\n     *\n     * The output will be one of the following ISO-8601 formats:\n     *\n     * * `yyyy-MM-dd'T'HH:mm`\n     * * `yyyy-MM-dd'T'HH:mm:ss`\n     * * `yyyy-MM-dd'T'HH:mm:ss.SSS`\n     * * `yyyy-MM-dd'T'HH:mm:ss.SSSSSS`\n     * * `yyyy-MM-dd'T'HH:mm:ss.SSSSSSSSS`\n     *\n     * The format used will be the shortest that outputs the full value of\n     * the time where the omitted parts are implied to be zero.\n     *\n     * @return {string} a string representation of this date-time, not null\n     */\n    toString() {\n        return `${this._date.toString()}T${this._time.toString()}`;\n    }\n\n    /**\n     *\n     * @return {string} same as {@link LocalDateTime.toString}\n     */\n    toJSON() {\n        return this.toString();\n    }\n\n    /**\n     * Outputs this date-time as a string using the formatter.\n     *\n     * @param {!DateTimeFormatter} formatter  the formatter to use, not null\n     * @return {String} the formatted date-time string, not null\n     * @throws {DateTimeException} if an error occurs during printing\n     */\n    format(formatter) {\n        requireNonNull(formatter, 'formatter');\n        return formatter.format(this);\n    }\n\n}\n\nexport function _init(){\n    /**\n     * The minimum supported {@link LocalDateTime}, '-999999999-01-01T00:00:00'.\n     * This is the local date-time of midnight at the start of the minimum date.\n     * This combines {@link LocalDate#MIN} and {@link LocalTime#MIN}.\n     * This could be used by an application as a 'far past' date-time.\n     */\n    LocalDateTime.MIN = LocalDateTime.of(LocalDate.MIN, LocalTime.MIN);\n\n    /**\n     * The maximum supported {@link LocalDateTime}, '+999999999-12-31T23:59:59.999999999'.\n     * This is the local date-time just before midnight at the end of the maximum date.\n     * This combines {@link LocalDate#MAX} and {@link LocalTime#MAX}.\n     * This could be used by an application as a 'far future' date-time.\n     */\n    LocalDateTime.MAX = LocalDateTime.of(LocalDate.MAX, LocalTime.MAX);\n\n    LocalDateTime.FROM = createTemporalQuery('LocalDateTime.FROM', (temporal) => {\n        return LocalDateTime.from(temporal);\n    });\n}\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\n\nimport { MathUtil } from './MathUtil';\nimport { requireNonNull, requireInstance } from './assert';\nimport { DateTimeException, UnsupportedTemporalTypeException } from './errors';\n\nimport { Clock } from './Clock';\nimport { LocalDateTime } from './LocalDateTime';\nimport { ZoneId } from './ZoneId';\nimport { OffsetTime } from './OffsetTime';\n\nimport { DateTimeFormatter } from './format/DateTimeFormatter';\n\nimport { ChronoField } from './temporal/ChronoField';\nimport { ChronoUnit } from './temporal/ChronoUnit';\nimport { Temporal } from './temporal/Temporal';\nimport { TemporalField } from './temporal/TemporalField';\nimport { TemporalQueries } from './temporal/TemporalQueries';\nimport { createTemporalQuery } from './temporal/TemporalQuery';\n\n/**\n * A time without time-zone in the ISO-8601 calendar system,\n * such as `10:15:30`.\n *\n * {@link LocalTime} is an immutable date-time object that represents a time,\n * often viewed as hour-minute-second.\n * Time is represented to nanosecond precision.\n * For example, the value '13:45.30.123456789' can be stored in a {@link LocalTime}.\n *\n * It does not store or represent a date or time-zone.\n * Instead, it is a description of the local time as seen on a wall clock.\n * It cannot represent an instant on the time-line without additional information\n * such as an offset or time-zone.\n *\n * The ISO-8601 calendar system is the modern civil calendar system used today\n * in most of the world. This API assumes that all calendar systems use the same\n * representation, this class, for time-of-day.\n *\n * ### Static properties of Class {@link LocalTime}\n *\n * LocalTime.MIN\n *\n * The minimum supported {@link LocalTime}, '00:00'.\n * This is the time of midnight at the start of the day.\n *\n * LocalTime.MAX\n *\n * The maximum supported {@link LocalTime}, '23:59:59.999999999'.\n * This is the time just before midnight at the end of the day.\n *\n * LocalTime.MIDNIGHT\n *\n * The time of midnight at the start of the day, '00:00'.\n *\n * LocalTime.NOON\n *\n * The time of noon in the middle of the day, '12:00'.\n *\n * LocalTime.HOURS_PER_DAY\n *\n * Hours per day.\n *\n * LocalTime.MINUTES_PER_HOUR\n *\n * Minutes per hour.\n *\n * LocalTime.MINUTES_PER_DAY\n *\n * Minutes per day.\n *\n * LocalTime.SECONDS_PER_MINUTE\n *\n * Seconds per minute.\n *\n * LocalTime.SECONDS_PER_HOUR\n *\n * Seconds per hour.\n *\n * LocalTime.SECONDS_PER_DAY\n *\n * Seconds per day.\n *\n * LocalTime.MILLIS_PER_DAY\n *\n * Milliseconds per day.\n *\n * LocalTime.MICROS_PER_DAY\n *\n * Microseconds per day.\n *\n * LocalTime.NANOS_PER_SECOND\n *\n * Nanos per second.\n *\n * LocalTime.NANOS_PER_MINUTE\n *\n * Nanos per minute.\n *\n * LocalTime.NANOS_PER_HOUR\n *\n * Nanos per hour.\n *\n * LocalTime.NANOS_PER_DAY\n *\n * Nanos per day.\n *\n */\nexport class LocalTime extends Temporal /** implements Temporal, TemporalAdjuster */ {\n    /**\n     * Obtains the current time from the specified clock.\n     * If no argument is specified the system default clock is queried,\n     * if a zone-id is passed a system clock with the specified zone is queried.\n     *\n     * This will query the specified clock to obtain the current time.\n     * Using this method allows the use of an alternate clock for testing.\n     * The alternate clock may be introduced using dependency injection.\n     *\n     * @param {Clock|ZoneId} clockOrZone - the zone ID or clock to use, if null Clock.systemDefaultZone() is used.\n     * @return {LocalTime} the current time using the system clock, not null\n     */\n    static now(clockOrZone) {\n        if (clockOrZone == null){\n            return LocalTime._now(Clock.systemDefaultZone());\n        } else if (clockOrZone instanceof Clock){\n            return LocalTime._now(clockOrZone);\n        } else {\n            return LocalTime._now(Clock.system(clockOrZone));\n        }\n    }\n\n    /**\n     * Obtains the current time from the specified clock.\n     *\n     * This will query the specified clock to obtain the current time.\n     * Using this method allows the use of an alternate clock for testing.\n     * The alternate clock may be introduced using dependency injection (see {@link Clock}).\n     *\n     * @param {Clock} [clock=Clock.systemDefaultZone()] - the clock to use, not null\n     * @return {LocalTime} the current time, not null\n     */\n    static _now(clock = Clock.systemDefaultZone()) {\n        requireNonNull(clock, 'clock');// inline OffsetTime factory to avoid creating object and InstantProvider checks\n        return LocalTime.ofInstant(clock.instant(), clock.zone());\n    }\n\n    /**\n     * obtain a LocalTime from an Instant in the specified time-zone or, if null\n     * in the system default time-zone\n     *\n     * @param {!Instant} instant\n     * @param {ZoneId} [zone=ZoneId.systemDefault()], defaults to ZoneId.systemDefault()\n     * @returns {LocalTime} the current date, not null\n     */\n    static ofInstant(instant, zone=ZoneId.systemDefault()){\n        const offset = zone.rules().offset(instant);\n        let secsOfDay = MathUtil.intMod(instant.epochSecond(), LocalTime.SECONDS_PER_DAY);\n        secsOfDay = MathUtil.intMod((secsOfDay + offset.totalSeconds()), LocalTime.SECONDS_PER_DAY);\n        if (secsOfDay < 0) {\n            secsOfDay += LocalTime.SECONDS_PER_DAY;\n        }\n        return LocalTime.ofSecondOfDay(secsOfDay, instant.nano());\n    }\n\n    /**\n     * Obtains an instance of {@link LocalTime} from an hour, minute, second and nanosecond.\n     *\n     * This factory may return a cached value, but applications must not rely on this.\n     *\n     * @param {number} [hour=0] - the hour-of-day to represent, from 0 to 23\n     * @param {number} [minute=0] - the minute-of-hour to represent, from 0 to 59\n     * @param {number} [second=0] - the second-of-minute to represent, from 0 to 59\n     * @param {number} [nanoOfSecond=0] - the nano-of-second to represent, from 0 to 999,999,999\n     * @return {LocalTime} the local time, not null\n     * @throws {DateTimeException} if the value of any field is out of range\n     */\n    static of(hour, minute, second, nanoOfSecond) {\n        return new LocalTime(hour, minute, second, nanoOfSecond);\n    }\n\n    /**\n     * Obtains an instance of {@link LocalTime} from a second-of-day value, with\n     * associated nanos of second.\n     *\n     * This factory may return a cached value, but applications must not rely on this.\n     *\n     * @param {number} [secondOfDay=0] - the second-of-day, from `0` to `24 * 60 * 60 - 1`\n     * @param {number} [nanoOfSecond=0] - the nano-of-second, from `0` to `999,999,999`\n     * @return {LocalTime} the local time, not null\n     * @throws {DateTimeException} if the either input value is invalid\n     */\n    static ofSecondOfDay(secondOfDay=0, nanoOfSecond=0) {\n        ChronoField.SECOND_OF_DAY.checkValidValue(secondOfDay);\n        ChronoField.NANO_OF_SECOND.checkValidValue(nanoOfSecond);\n        const hours = MathUtil.intDiv(secondOfDay, LocalTime.SECONDS_PER_HOUR);\n        secondOfDay -= hours * LocalTime.SECONDS_PER_HOUR;\n        const minutes = MathUtil.intDiv(secondOfDay, LocalTime.SECONDS_PER_MINUTE);\n        secondOfDay -= minutes * LocalTime.SECONDS_PER_MINUTE;\n        return new LocalTime(hours, minutes, secondOfDay, nanoOfSecond);\n    }\n\n    /**\n     * Obtains an instance of {@link LocalTime} from a nanos-of-day value.\n     *\n     * This factory may return a cached value, but applications must not rely on this.\n     *\n     * @param {number} [nanoOfDay=0] - the nano of day, from `0` to `24 * 60 * 60 * 1,000,000,000 - 1`\n     * @return {LocalTime} the local time, not null\n     * @throws {DateTimeException} if the nanos of day value is invalid\n     */\n    static ofNanoOfDay(nanoOfDay=0) {\n        ChronoField.NANO_OF_DAY.checkValidValue(nanoOfDay);\n        const hours = MathUtil.intDiv(nanoOfDay, LocalTime.NANOS_PER_HOUR);\n        nanoOfDay -= hours * LocalTime.NANOS_PER_HOUR;\n        const minutes = MathUtil.intDiv(nanoOfDay, LocalTime.NANOS_PER_MINUTE);\n        nanoOfDay -= minutes * LocalTime.NANOS_PER_MINUTE;\n        const seconds = MathUtil.intDiv(nanoOfDay, LocalTime.NANOS_PER_SECOND);\n        nanoOfDay -= seconds * LocalTime.NANOS_PER_SECOND;\n        return new LocalTime(hours, minutes, seconds, nanoOfDay);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains an instance of {@link LocalTime} from a temporal object.\n     *\n     * A {@link TemporalAccessor} represents some form of date and time information.\n     * This factory converts the arbitrary temporal object to an instance of {@link LocalTime}.\n     *\n     * The conversion uses the {@link TemporalQueries#localTime} query, which relies\n     * on extracting {@link ChronoField#NANO_OF_DAY}.\n     *\n     * This method matches the signature of the functional interface {@link TemporalQuery}\n     * allowing it to be used in queries via method reference, {@link LocalTime::from}.\n     *\n     * @param {!TemporalAccessor} temporal - the temporal object to convert, not null\n     * @return {LocalTime} the local time, not null\n     * @throws {DateTimeException} if unable to convert to a {@link LocalTime}\n     */\n    static from(temporal) {\n        requireNonNull(temporal, 'temporal');\n        const time = temporal.query(TemporalQueries.localTime());\n        if (time == null) {\n            throw new DateTimeException(`Unable to obtain LocalTime TemporalAccessor: ${temporal}, type ${temporal.constructor != null ? temporal.constructor.name : ''}`);\n        }\n        return time;\n    }\n\n    /**\n     * Obtains an instance of {@link LocalTime} from a text string using a specific formatter.\n     *\n     * The text is parsed using the formatter, returning a time.\n     *\n     * @param {!String} text - the text to parse, not null\n     * @param {DateTimeFormatter} [formatter=DateTimeFormatter.ISO_LOCAL_TIME] - the formatter to use, default is\n     * {@link DateTimeFormatter.ISO_LOCAL_TIME}\n     * @return {LocalTime} the parsed local time, not null\n     * @throws {DateTimeParseException} if the text cannot be parsed\n     */\n    static parse(text, formatter=DateTimeFormatter.ISO_LOCAL_TIME) {\n        requireNonNull(formatter, 'formatter');\n        return formatter.parse(text, LocalTime.FROM);\n    }\n\n    /**\n     * Constructor, previously validated.\n     *\n     * @param {number} [hour=0] - the hour-of-day to represent, validated from 0 to 23\n     * @param {number} [minute=0] - the minute-of-hour to represent, validated from 0 to 59\n     * @param {number} [second=0] - the second-of-minute to represent, validated from 0 to 59\n     * @param {number} [nanoOfSecond=0] - the nano-of-second to represent, validated from 0 to 999,999,999\n     * @private\n     */\n    constructor(hour=0, minute=0, second=0, nanoOfSecond=0) {\n        super();\n        const _hour = MathUtil.safeToInt(hour);\n        const _minute = MathUtil.safeToInt(minute);\n        const _second = MathUtil.safeToInt(second);\n        const _nanoOfSecond = MathUtil.safeToInt(nanoOfSecond);\n        LocalTime._validate(_hour, _minute, _second, _nanoOfSecond);\n        if (_minute === 0 && _second === 0 && _nanoOfSecond === 0) {\n            if (!LocalTime.HOURS[_hour]) {\n                this._hour = _hour;\n                this._minute = _minute;\n                this._second = _second;\n                this._nano = _nanoOfSecond;\n                LocalTime.HOURS[_hour] = this;\n            }\n            return LocalTime.HOURS[_hour];\n        }\n        this._hour = _hour;\n        this._minute = _minute;\n        this._second = _second;\n        this._nano = _nanoOfSecond;\n    }\n\n    static _validate(hour, minute, second, nanoOfSecond){\n        ChronoField.HOUR_OF_DAY.checkValidValue(hour);\n        ChronoField.MINUTE_OF_HOUR.checkValidValue(minute);\n        ChronoField.SECOND_OF_MINUTE.checkValidValue(second);\n        ChronoField.NANO_OF_SECOND.checkValidValue(nanoOfSecond);\n\n    }\n    //-----------------------------------------------------------------------\n    /**\n     * Checks if the specified field is supported.\n     *\n     * This checks if this time can be queried for the specified field.\n     * If false, then calling {@link range} and {@link get} will throw an exception.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields are:\n     *\n     * * {@link ChronoField.NANO_OF_SECOND}\n     * * {@link ChronoField.NANO_OF_DAY}\n     * * {@link ChronoField.MICRO_OF_SECOND}\n     * * {@link ChronoField.MICRO_OF_DAY}\n     * * {@link ChronoField.MILLI_OF_SECOND}\n     * * {@link ChronoField.MILLI_OF_DAY}\n     * * {@link ChronoField.SECOND_OF_MINUTE}\n     * * {@link ChronoField.SECOND_OF_DAY}\n     * * {@link ChronoField.MINUTE_OF_HOUR}\n     * * {@link ChronoField.MINUTE_OF_DAY}\n     * * {@link ChronoField.HOUR_OF_AMPM}\n     * * {@link ChronoField.CLOCK_HOUR_OF_AMPM}\n     * * {@link ChronoField.HOUR_OF_DAY}\n     * * {@link ChronoField.CLOCK_HOUR_OF_DAY}\n     * * {@link ChronoField.AMPM_OF_DAY}\n     *\n     * All other {@link ChronoField} instances will return false.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.isSupportedBy}\n     * passing this as the argument.\n     * Whether the field is supported is determined by the field.\n     *\n     * @param {ChronoField|ChronoUnit} fieldOrUnit - the field to check, null returns false\n     * @return {boolean} true if the field is supported on this time, false if not\n     */\n    isSupported(fieldOrUnit) {\n        if (fieldOrUnit instanceof ChronoField) {\n            return fieldOrUnit.isTimeBased();\n        } else if (fieldOrUnit instanceof ChronoUnit) {\n            return fieldOrUnit.isTimeBased();\n        }\n        return fieldOrUnit != null && fieldOrUnit.isSupportedBy(this);\n    }\n\n    /**\n     * Gets the range of valid values for the specified field.\n     *\n     * The range object expresses the minimum and maximum valid values for a field.\n     * This time is used to enhance the accuracy of the returned range.\n     * If it is not possible to return the range, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return\n     * appropriate range instances.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.rangeRefinedBy}\n     * passing this as the argument.\n     * Whether the range can be obtained is determined by the field.\n     *\n     * @param {ChronoField} field - the field to query the range for, not null\n     * @return {ValueRange} the range of valid values for the field, not null\n     * @throws {DateTimeException} if the range for the field cannot be obtained\n     */\n    range(field) {\n        requireNonNull(field);\n        return super.range(field);\n    }\n\n    /**\n     * Gets the value of the specified field from this time as an `int`.\n     *\n     * This queries this time for the value for the specified field.\n     * The returned value will always be within the valid range of values for the field.\n     * If it is not possible to return the value, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return valid\n     * values based on this time, except {@link ChronoField.NANO_OF_DAY} and {@link ChronoField.MICRO_OF_DAY}\n     * which are too large to fit in an `int` and throw a {@link DateTimeException}.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.getFrom}\n     * passing this as the argument. Whether the value can be obtained,\n     * and what the value represents, is determined by the field.\n     *\n     * @param {ChronoField} field - the field to get, not null\n     * @return {number} the value for the field\n     * @throws {DateTimeException} if a value for the field cannot be obtained\n     * @throws {ArithmeticException} if numeric overflow occurs\n     */\n    get(field) {\n        return this.getLong(field);\n    }\n\n    /**\n     * Gets the value of the specified field from this time as a `long`.\n     *\n     * This queries this time for the value for the specified field.\n     * If it is not possible to return the value, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return valid\n     * values based on this time.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.from}\n     * passing this as the argument. Whether the value can be obtained,\n     * and what the value represents, is determined by the field.\n     *\n     * @param {ChronoField} field - the field to get, not null\n     * @return {number} the value for the field\n     * @throws {DateTimeException} if a value for the field cannot be obtained\n     * @throws {ArithmeticException} if numeric overflow occurs\n     */\n    getLong(field) {\n        requireNonNull(field, 'field');\n        if (field instanceof ChronoField) {\n            return this._get0(field);\n        }\n        return field.getFrom(this);\n    }\n\n    /**\n     *\n     * @param {ChronoField} field\n     * @returns {number}\n     * @private\n     */\n    _get0(field) {\n        switch (field) {\n            case ChronoField.NANO_OF_SECOND: return this._nano;\n            case ChronoField.NANO_OF_DAY: return this.toNanoOfDay();\n            case ChronoField.MICRO_OF_SECOND: return MathUtil.intDiv(this._nano, 1000);\n            case ChronoField.MICRO_OF_DAY: return MathUtil.intDiv(this.toNanoOfDay(), 1000);\n            case ChronoField.MILLI_OF_SECOND: return MathUtil.intDiv(this._nano, 1000000);\n            case ChronoField.MILLI_OF_DAY: return MathUtil.intDiv(this.toNanoOfDay(), 1000000);\n            case ChronoField.SECOND_OF_MINUTE: return this._second;\n            case ChronoField.SECOND_OF_DAY: return this.toSecondOfDay();\n            case ChronoField.MINUTE_OF_HOUR: return this._minute;\n            case ChronoField.MINUTE_OF_DAY: return this._hour * 60 + this._minute;\n            case ChronoField.HOUR_OF_AMPM: return MathUtil.intMod(this._hour, 12);\n            case ChronoField.CLOCK_HOUR_OF_AMPM: {\n                const ham = MathUtil.intMod(this._hour, 12);\n                return (ham % 12 === 0 ? 12 : ham);\n            }\n            case ChronoField.HOUR_OF_DAY: return this._hour;\n            case ChronoField.CLOCK_HOUR_OF_DAY: return (this._hour === 0 ? 24 : this._hour);\n            case ChronoField.AMPM_OF_DAY: return MathUtil.intDiv(this._hour, 12);\n        }\n        throw new UnsupportedTemporalTypeException(`Unsupported field: ${field}`);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the hour-of-day field.\n     *\n     * @return {number} the hour-of-day, from 0 to 23\n     */\n    hour() {\n        return this._hour;\n    }\n\n    /**\n     * Gets the minute-of-hour field.\n     *\n     * @return {number} the minute-of-hour, from 0 to 59\n     */\n    minute() {\n        return this._minute;\n    }\n\n    /**\n     * Gets the second-of-minute field.\n     *\n     * @return {number} the second-of-minute, from 0 to 59\n     */\n    second() {\n        return this._second;\n    }\n\n    /**\n     * Gets the nano-of-second field.\n     *\n     * @return {number} the nano-of-second, from 0 to 999,999,999\n     */\n    nano() {\n        return this._nano;\n    }\n\n    /**\n     * Returns an adjusted copy of this time.\n     *\n     * This returns a new {@link LocalTime}, based on this one, with the time adjusted.\n     * The adjustment takes place using the specified adjuster strategy object.\n     * Read the documentation of the adjuster to understand what adjustment will be made.\n     *\n     * A simple adjuster might simply set the one of the fields, such as the hour field.\n     * A more complex adjuster might set the time to the last hour of the day.\n     *\n     * The result of this method is obtained by invoking the\n     * {@link TemporalAdjuster.adjustInto} method on the\n     * specified adjuster passing this as the argument.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {TemporalAdjuster} adjuster - the adjuster to use, not null\n     * @return {LocalTime} a {@link LocalTime} based on this with the adjustment made, not null\n     * @throws {DateTimeException} if the adjustment cannot be made\n     * @throws {ArithmeticException} if numeric overflow occurs\n     */\n    _withAdjuster(adjuster) {\n        requireNonNull(adjuster, 'adjuster');\n        // optimizations\n        if (adjuster instanceof LocalTime) {\n            return adjuster;\n        }\n        return super._withAdjuster(adjuster);\n    }\n\n    /**\n     * Returns a copy of this time with the specified field set to a new value.\n     *\n     * This returns a new {@link LocalTime}, based on this one, with the value\n     * for the specified field changed.\n     * This can be used to change any supported field, such as the hour, minute or second.\n     * If it is not possible to set the value, because the field is not supported or for\n     * some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the adjustment is implemented here.\n     * The supported fields behave as follows:\n     *\n     * * {@link ChronoField.NANO_OF_SECOND} -\n     *   Returns a {@link LocalTime} with the specified nano-of-second.\n     *  The hour, minute and second will be unchanged.\n     * * {@link ChronoField.NANO_OF_DAY} -\n     *   Returns a {@link LocalTime} with the specified nano-of-day.\n     *   This completely replaces the time and is equivalent to {@link ofNanoOfDay}.\n     * * {@link ChronoField.MICRO_OF_SECOND} -\n     *   Returns a {@link LocalTime} with the nano-of-second replaced by the specified\n     *   micro-of-second multiplied by 1,000.\n     *   The hour, minute and second will be unchanged.\n     * * {@link ChronoField.MICRO_OF_DAY} -\n     *   Returns a {@link LocalTime} with the specified micro-of-day.\n     *   This completely replaces the time and is equivalent to using {@link ofNanoOfDay}\n     *   with the micro-of-day multiplied by 1,000.\n     * * {@link ChronoField.MILLI_OF_SECOND} -\n     *   Returns a {@link LocalTime} with the nano-of-second replaced by the specified\n     *   milli-of-second multiplied by 1,000,000.\n     *   The hour, minute and second will be unchanged.\n     * * {@link ChronoField.MILLI_OF_DAY} -\n     *   Returns a {@link LocalTime} with the specified milli-of-day.\n     *   This completely replaces the time and is equivalent to using {@link ofNanoOfDay}\n     *   with the milli-of-day multiplied by 1,000,000.\n     * * {@link ChronoField.SECOND_OF_MINUTE} -\n     *   Returns a {@link LocalTime} with the specified second-of-minute.\n     *   The hour, minute and nano-of-second will be unchanged.\n     * * {@link ChronoField.SECOND_OF_DAY} -\n     *   Returns a {@link LocalTime} with the specified second-of-day.\n     *   The nano-of-second will be unchanged.\n     * * {@link ChronoField.MINUTE_OF_HOUR} -\n     *   Returns a {@link LocalTime} with the specified minute-of-hour.\n     *   The hour, second-of-minute and nano-of-second will be unchanged.\n     * * {@link ChronoField.MINUTE_OF_DAY} -\n     *   Returns a {@link LocalTime} with the specified minute-of-day.\n     *   The second-of-minute and nano-of-second will be unchanged.\n     * * {@link ChronoField.HOUR_OF_AMPM} -\n     *   Returns a {@link LocalTime} with the specified hour-of-am-pm.\n     *   The AM/PM, minute-of-hour, second-of-minute and nano-of-second will be unchanged.\n     * * {@link ChronoField.CLOCK_HOUR_OF_AMPM} -\n     *   Returns a {@link LocalTime} with the specified clock-hour-of-am-pm.\n     *   The AM/PM, minute-of-hour, second-of-minute and nano-of-second will be unchanged.\n     * * {@link ChronoField.HOUR_OF_DAY} -\n     *   Returns a {@link LocalTime} with the specified hour-of-day.\n     *   The minute-of-hour, second-of-minute and nano-of-second will be unchanged.\n     * * {@link ChronoField.CLOCK_HOUR_OF_DAY} -\n     *   Returns a {@link LocalTime} with the specified clock-hour-of-day.\n     *   The minute-of-hour, second-of-minute and nano-of-second will be unchanged.\n     * * {@link ChronoField.AMPM_OF_DAY} -\n     *   Returns a {@link LocalTime} with the specified AM/PM.\n     *   The hour-of-am-pm, minute-of-hour, second-of-minute and nano-of-second will be unchanged.\n     *\n     * In all cases, if the new value is outside the valid range of values for the field\n     * then a {@link DateTimeException} will be thrown.\n     *\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.adjustInto}\n     * passing this as the argument. In this case, the field determines\n     * whether and how to adjust the instant.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {!TemporalField} field - the field to set in the result, not null\n     * @param {number} newValue - the new value of the field in the result\n     * @return {LocalTime} a {@link LocalTime} based on this with the specified field set, not null\n     * @throws {DateTimeException} if the field cannot be set\n     * @throws {ArithmeticException} if numeric overflow occurs\n     */\n    _withField(field, newValue) {\n        requireNonNull(field, 'field');\n        requireInstance(field, TemporalField, 'field');\n        if (field instanceof ChronoField) {\n            field.checkValidValue(newValue);\n            switch (field) {\n                case ChronoField.NANO_OF_SECOND: return this.withNano(newValue);\n                case ChronoField.NANO_OF_DAY: return LocalTime.ofNanoOfDay(newValue);\n                case ChronoField.MICRO_OF_SECOND: return this.withNano(newValue * 1000);\n                case ChronoField.MICRO_OF_DAY: return LocalTime.ofNanoOfDay(newValue * 1000);\n                case ChronoField.MILLI_OF_SECOND: return this.withNano( newValue * 1000000);\n                case ChronoField.MILLI_OF_DAY: return LocalTime.ofNanoOfDay(newValue * 1000000);\n                case ChronoField.SECOND_OF_MINUTE: return this.withSecond(newValue);\n                case ChronoField.SECOND_OF_DAY: return this.plusSeconds(newValue - this.toSecondOfDay());\n                case ChronoField.MINUTE_OF_HOUR: return this.withMinute(newValue);\n                case ChronoField.MINUTE_OF_DAY: return this.plusMinutes(newValue - (this._hour * 60 + this._minute));\n                case ChronoField.HOUR_OF_AMPM: return this.plusHours(newValue - MathUtil.intMod(this._hour, 12));\n                case ChronoField.CLOCK_HOUR_OF_AMPM: return this.plusHours((newValue === 12 ? 0 : newValue) - MathUtil.intMod(this._hour, 12));\n                case ChronoField.HOUR_OF_DAY: return this.withHour(newValue);\n                case ChronoField.CLOCK_HOUR_OF_DAY: return this.withHour((newValue === 24 ? 0 : newValue));\n                case ChronoField.AMPM_OF_DAY: return this.plusHours((newValue - MathUtil.intDiv(this._hour, 12)) * 12);\n            }\n            throw new UnsupportedTemporalTypeException(`Unsupported field: ${field}`);\n        }\n        return field.adjustInto(this, newValue);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this {@link LocalTime} with the hour-of-day value altered.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} [hour=0] - the hour-of-day to set in the result, from 0 to 23\n     * @return {LocalTime} a {@link LocalTime} based on this time with the requested hour, not null\n     * @throws {DateTimeException} if the hour value is invalid\n     */\n    withHour(hour=0) {\n        if (this._hour === hour) {\n            return this;\n        }\n        return new LocalTime(hour, this._minute, this._second, this._nano);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalTime} with the minute-of-hour value altered.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} [minute=0] - the minute-of-hour to set in the result, from 0 to 59\n     * @return {LocalTime} a {@link LocalTime} based on this time with the requested minute, not null\n     * @throws {DateTimeException} if the minute value is invalid\n     */\n    withMinute(minute=0) {\n        if (this._minute === minute) {\n            return this;\n        }\n        return new LocalTime(this._hour, minute, this._second, this._nano);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalTime} with the second-of-minute value altered.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} [second=0] - the second-of-minute to set in the result, from 0 to 59\n     * @return {LocalTime} a {@link LocalTime} based on this time with the requested second, not null\n     * @throws {DateTimeException} if the second value is invalid\n     */\n    withSecond(second=0) {\n        if (this._second === second) {\n            return this;\n        }\n        return new LocalTime(this._hour, this._minute, second, this._nano);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalTime} with the nano-of-second value altered.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} [nanoOfSecond=0] - the nano-of-second to set in the result, from 0 to 999,999,999\n     * @return {LocalTime} a {@link LocalTime} based on this time with the requested nanosecond, not null\n     * @throws {DateTimeException} if the nanos value is invalid\n     */\n    withNano(nanoOfSecond=0) {\n        if (this._nano === nanoOfSecond) {\n            return this;\n        }\n        return new LocalTime(this._hour, this._minute, this._second, nanoOfSecond);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this {@link LocalTime} with the time truncated.\n     *\n     * Truncating the time returns a copy of the original time with fields\n     * smaller than the specified unit set to zero.\n     * For example, truncating with the {@link ChronoUnit.MINUTES} minutes unit\n     * will set the second-of-minute and nano-of-second field to zero.\n     *\n     * The unit must have a duration (see {@link TemporalUnit#getDuration})\n     * that divides into the length of a standard day without remainder.\n     * This includes all supplied time units on {@link ChronoUnit} and\n     * {@link ChronoUnit.DAYS}. Other units throw an exception.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {!ChronoUnit} unit - the unit to truncate to, not null\n     * @return {LocalTime} a {@link LocalTime} based on this time with the time truncated, not null\n     * @throws {DateTimeException} if unable to truncate\n     */\n    truncatedTo(unit) {\n        requireNonNull(unit, 'unit');\n        if (unit === ChronoUnit.NANOS) {\n            return this;\n        }\n        const unitDur = unit.duration();\n        if (unitDur.seconds() > LocalTime.SECONDS_PER_DAY) {\n            throw new DateTimeException('Unit is too large to be used for truncation');\n        }\n        const dur = unitDur.toNanos();\n        if (MathUtil.intMod(LocalTime.NANOS_PER_DAY, dur) !== 0) {\n            throw new DateTimeException('Unit must divide into a standard day without remainder');\n        }\n        const nod = this.toNanoOfDay();\n        return LocalTime.ofNanoOfDay(MathUtil.intDiv(nod, dur) * dur);\n    }\n\n    //-----------------------------------------------------------------------\n\n    /**\n     * Returns a copy of this time with the specified period added.\n     *\n     * This method returns a new time based on this time with the specified period added.\n     * This can be used to add any period that is defined by a unit, for example to add hours, minutes or seconds.\n     * The unit is responsible for the details of the calculation, including the resolution\n     * of any edge cases in the calculation.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} amountToAdd - the amount of the unit to add to the result, may be negative\n     * @param {TemporalUnit} unit - the unit of the period to add, not null\n     * @return {LocalTime} a {@link LocalTime} based on this time with the specified period added, not null\n     * @throws {DateTimeException} if the unit cannot be added to this type\n     */\n    _plusUnit(amountToAdd, unit) {\n        requireNonNull(unit, 'unit');\n        if (unit instanceof ChronoUnit) {\n            switch (unit) {\n                case ChronoUnit.NANOS: return this.plusNanos(amountToAdd);\n                case ChronoUnit.MICROS: return this.plusNanos(MathUtil.intMod(amountToAdd, LocalTime.MICROS_PER_DAY) * 1000);\n                case ChronoUnit.MILLIS: return this.plusNanos(MathUtil.intMod(amountToAdd, LocalTime.MILLIS_PER_DAY) * 1000000);\n                case ChronoUnit.SECONDS: return this.plusSeconds(amountToAdd);\n                case ChronoUnit.MINUTES: return this.plusMinutes(amountToAdd);\n                case ChronoUnit.HOURS: return this.plusHours(amountToAdd);\n                case ChronoUnit.HALF_DAYS: return this.plusHours(MathUtil.intMod(amountToAdd, 2) * 12);\n            }\n            throw new UnsupportedTemporalTypeException(`Unsupported unit: ${unit}`);\n        }\n        return unit.addTo(this, amountToAdd);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this {@link LocalTime} with the specified period in hours added.\n     *\n     * This adds the specified number of hours to this time, returning a new time.\n     * The calculation wraps around midnight.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} hoursToAdd - the hours to add, may be negative\n     * @return {LocalTime} a {@link LocalTime} based on this time with the hours added, not null\n     */\n    plusHours(hoursToAdd) {\n        if (hoursToAdd === 0) {\n            return this;\n        }\n\n        const newHour = MathUtil.intMod(MathUtil.intMod(hoursToAdd, LocalTime.HOURS_PER_DAY) + this._hour + LocalTime.HOURS_PER_DAY, LocalTime.HOURS_PER_DAY);\n        return new LocalTime(newHour, this._minute, this._second, this._nano);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalTime} with the specified period in minutes added.\n     *\n     * This adds the specified number of minutes to this time, returning a new time.\n     * The calculation wraps around midnight.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} minutesToAdd - the minutes to add, may be negative\n     * @return {LocalTime} a {@link LocalTime} based on this time with the minutes added, not null\n     */\n    plusMinutes(minutesToAdd) {\n        if (minutesToAdd === 0) {\n            return this;\n        }\n        const mofd = this._hour * LocalTime.MINUTES_PER_HOUR + this._minute;\n        const newMofd = MathUtil.intMod(MathUtil.intMod(minutesToAdd, LocalTime.MINUTES_PER_DAY) + mofd + LocalTime.MINUTES_PER_DAY, LocalTime.MINUTES_PER_DAY);\n        if (mofd === newMofd) {\n            return this;\n        }\n        const newHour = MathUtil.intDiv(newMofd, LocalTime.MINUTES_PER_HOUR);\n        const newMinute = MathUtil.intMod(newMofd, LocalTime.MINUTES_PER_HOUR);\n        return new LocalTime(newHour, newMinute, this._second, this._nano);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalTime} with the specified period in seconds added.\n     *\n     * This adds the specified number of seconds to this time, returning a new time.\n     * The calculation wraps around midnight.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} secondsToAdd - the seconds to add, may be negative\n     * @return {LocalTime} a {@link LocalTime} based on this time with the seconds added, not null\n     */\n    plusSeconds(secondsToAdd) {\n        if (secondsToAdd === 0) {\n            return this;\n        }\n        const sofd = this._hour * LocalTime.SECONDS_PER_HOUR +\n                    this._minute * LocalTime.SECONDS_PER_MINUTE + this._second;\n        const newSofd = MathUtil.intMod((MathUtil.intMod(secondsToAdd, LocalTime.SECONDS_PER_DAY) + sofd + LocalTime.SECONDS_PER_DAY), LocalTime.SECONDS_PER_DAY);\n        if (sofd === newSofd) {\n            return this;\n        }\n        const newHour = MathUtil.intDiv(newSofd, LocalTime.SECONDS_PER_HOUR);\n        const newMinute = MathUtil.intMod(MathUtil.intDiv(newSofd, LocalTime.SECONDS_PER_MINUTE), LocalTime.MINUTES_PER_HOUR);\n        const newSecond = MathUtil.intMod(newSofd, LocalTime.SECONDS_PER_MINUTE);\n        return new LocalTime(newHour, newMinute, newSecond, this._nano);\n    }\n\n    /**\n     * Returns a copy of this {@link LocalTime} with the specified period in nanoseconds added.\n     *\n     * This adds the specified number of nanoseconds to this time, returning a new time.\n     * The calculation wraps around midnight.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} nanosToAdd - the nanos to add, may be negative\n     * @return {LocalTime} a {@link LocalTime} based on this time with the nanoseconds added, not null\n     */\n    plusNanos(nanosToAdd) {\n        if (nanosToAdd === 0) {\n            return this;\n        }\n        const nofd = this.toNanoOfDay();\n        const newNofd = MathUtil.intMod((MathUtil.intMod(nanosToAdd, LocalTime.NANOS_PER_DAY) + nofd + LocalTime.NANOS_PER_DAY), LocalTime.NANOS_PER_DAY);\n        if (nofd === newNofd) {\n            return this;\n        }\n        const newHour = MathUtil.intDiv(newNofd, LocalTime.NANOS_PER_HOUR);\n        const newMinute = MathUtil.intMod(MathUtil.intDiv(newNofd, LocalTime.NANOS_PER_MINUTE), LocalTime.MINUTES_PER_HOUR);\n        const newSecond = MathUtil.intMod(MathUtil.intDiv(newNofd, LocalTime.NANOS_PER_SECOND), LocalTime.SECONDS_PER_MINUTE);\n        const newNano = MathUtil.intMod(newNofd, LocalTime.NANOS_PER_SECOND);\n        return new LocalTime(newHour, newMinute, newSecond, newNano);\n    }\n\n    //-----------------------------------------------------------------------\n\n    /**\n     * Returns a copy of this time with the specified period subtracted.\n     *\n     * This method returns a new time based on this time with the specified period subtracted.\n     * This can be used to subtract any period that is defined by a unit, for example to subtract hours, minutes or seconds.\n     * The unit is responsible for the details of the calculation, including the resolution\n     * of any edge cases in the calculation.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} amountToSubtract - the amount of the unit to subtract from the result, may be negative\n     * @param {ChronoUnit} unit - the unit of the period to subtract, not null\n     * @return {LocalTime} a {@link LocalTime} based on this time with the specified period subtracted, not null\n     * @throws {DateTimeException} if the unit cannot be added to this type\n     */\n    _minusUnit(amountToSubtract, unit) {\n        requireNonNull(unit, 'unit');\n        return this._plusUnit(-1 * amountToSubtract, unit);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this {@link LocalTime} with the specified period in hours subtracted.\n     *\n     * This subtracts the specified number of hours from this time, returning a new time.\n     * The calculation wraps around midnight.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} hoursToSubtract - the hours to subtract, may be negative\n     * @return {LocalTime} a {@link LocalTime} based on this time with the hours subtracted, not null\n     */\n    minusHours(hoursToSubtract) {\n        return this.plusHours(-1 * MathUtil.intMod(hoursToSubtract, LocalTime.HOURS_PER_DAY));\n    }\n\n    /**\n     * Returns a copy of this {@link LocalTime} with the specified period in minutes subtracted.\n     *\n     * This subtracts the specified number of minutes from this time, returning a new time.\n     * The calculation wraps around midnight.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} minutesToSubtract - the minutes to subtract, may be negative\n     * @return {LocalTime} a {@link LocalTime} based on this time with the minutes subtracted, not null\n     */\n    minusMinutes(minutesToSubtract) {\n        return this.plusMinutes(-1 * MathUtil.intMod(minutesToSubtract, LocalTime.MINUTES_PER_DAY));\n    }\n\n    /**\n     * Returns a copy of this {@link LocalTime} with the specified period in seconds subtracted.\n     *\n     * This subtracts the specified number of seconds from this time, returning a new time.\n     * The calculation wraps around midnight.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} secondsToSubtract - the seconds to subtract, may be negative\n     * @return {LocalTime} a {@link LocalTime} based on this time with the seconds subtracted, not null\n     */\n    minusSeconds(secondsToSubtract) {\n        return this.plusSeconds(-1 * MathUtil.intMod(secondsToSubtract, LocalTime.SECONDS_PER_DAY));\n    }\n\n    /**\n     * Returns a copy of this {@link LocalTime} with the specified period in nanoseconds subtracted.\n     *\n     * This subtracts the specified number of nanoseconds from this time, returning a new time.\n     * The calculation wraps around midnight.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} nanosToSubtract - the nanos to subtract, may be negative\n     * @return {LocalTime} a {@link LocalTime} based on this time with the nanoseconds subtracted, not null\n     */\n    minusNanos(nanosToSubtract) {\n        return this.plusNanos(-1 * MathUtil.intMod(nanosToSubtract, LocalTime.NANOS_PER_DAY));\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Queries this time using the specified query.\n     *\n     * This queries this time using the specified query strategy object.\n     * The {@link TemporalQuery} object defines the logic to be used to\n     * obtain the result. Read the documentation of the query to understand\n     * what the result of this method will be.\n     *\n     * The result of this method is obtained by invoking the\n     * {@link TemporalQuery#queryFrom} method on the\n     * specified query passing this as the argument.\n     *\n     * @param {TemporalQuery} query - the query to invoke, not null\n     * @return {*} the query result, null may be returned (defined by the query)\n     * @throws {DateTimeException} if unable to query (defined by the query)\n     * @throws {ArithmeticException} if numeric overflow occurs (defined by the query)\n     */\n    query(query) {\n        requireNonNull(query, 'query');\n        if (query === TemporalQueries.precision()) {\n            return ChronoUnit.NANOS;\n        } else if (query === TemporalQueries.localTime()) {\n            return this;\n        }\n        // inline TemporalAccessor.super.query(query) as an optimization\n        if (query === TemporalQueries.chronology() || query === TemporalQueries.zoneId() ||\n                query === TemporalQueries.zone() || query === TemporalQueries.offset() ||\n                query === TemporalQueries.localDate()) {\n            return null;\n        }\n        return query.queryFrom(this);\n    }\n\n    /**\n     * Adjusts the specified temporal object to have the same time as this object.\n     *\n     * This returns a temporal object of the same observable type as the input\n     * with the time changed to be the same as this.\n     *\n     * The adjustment is equivalent to using {@link Temporal.with}\n     * passing {@link ChronoField.NANO_OF_DAY} as the field.\n     *\n     * In most cases, it is clearer to reverse the calling pattern by using\n     * {@link Temporal.with}:\n     * <pre>\n     *   // these two lines are equivalent, but the second approach is recommended\n     *   temporal = thisLocalTime.adjustInto(temporal);\n     *   temporal = temporal.with(thisLocalTime);\n     * </pre>\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {TemporalAdjuster} temporal - the target object to be adjusted, not null\n     * @return {Temporal} the adjusted object, not null\n     * @throws {DateTimeException} if unable to make the adjustment\n     * @throws {ArithmeticException} if numeric overflow occurs\n     */\n    adjustInto(temporal) {\n        return temporal.with(LocalTime.NANO_OF_DAY, this.toNanoOfDay());\n    }\n\n    /**\n     * Calculates the period between this time and another time in\n     * terms of the specified unit.\n     *\n     * This calculates the period between two times in terms of a single unit.\n     * The start and end points are this and the specified time.\n     * The result will be negative if the end is before the start.\n     * The {@link Temporal} passed to this method must be a {@link LocalTime}.\n     * For example, the period in hours between two times can be calculated\n     * using {@link startTime.until}.\n     *\n     * The calculation returns a whole number, representing the number of\n     * complete units between the two times.\n     * For example, the period in hours between 11:30 and 13:29 will only\n     * be one hour as it is one minute short of two hours.\n     *\n     * This method operates in association with {@link TemporalUnit.between}.\n     * The result of this method is a `long` representing the amount of\n     * the specified unit. By contrast, the result of {@link between} is an\n     * object that can be used directly in addition/subtraction:\n     * <pre>\n     *   long period = start.until(end, HOURS);   // this method\n     *   dateTime.plus(HOURS.between(start, end));      // use in plus/minus\n     * </pre>\n     *\n     * The calculation is implemented in this method for {@link ChronoUnit}.\n     * The units {@link ChronoUnit.NANOS}, {@link ChronoUnit.MICROS}, {@link ChronoUnit.MILLIS}, {@link ChronoUnit.SECONDS},\n     * {@link ChronoUnit.MINUTES}, {@link ChronoUnit.HOURS} and {@link ChronoUnit.HALF_DAYS} are supported.\n     * Other {@link ChronoUnit} values will throw an exception.\n     *\n     * If the unit is not a {@link ChronoUnit}, then the result of this method\n     * is obtained by invoking {@link TemporalUnit.between}\n     * passing this as the first argument and the input temporal as\n     * the second argument.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {TemporalAccessor} endExclusive - the end time, which is converted to a {@link LocalTime}, not null\n     * @param {TemporalUnit} unit - the unit to measure the period in, not null\n     * @return {number} the amount of the period between this time and the end time\n     * @throws {DateTimeException} if the period cannot be calculated\n     * @throws {ArithmeticException} if numeric overflow occurs\n     */\n    until(endExclusive, unit) {\n        requireNonNull(endExclusive, 'endExclusive');\n        requireNonNull(unit, 'unit');\n        const end = LocalTime.from(endExclusive);\n        if (unit instanceof ChronoUnit) {\n            const nanosUntil = end.toNanoOfDay() - this.toNanoOfDay();  // no overflow\n            switch (unit) {\n                case ChronoUnit.NANOS: return nanosUntil;\n                case ChronoUnit.MICROS: return MathUtil.intDiv(nanosUntil, 1000);\n                case ChronoUnit.MILLIS: return MathUtil.intDiv(nanosUntil, 1000000);\n                case ChronoUnit.SECONDS: return MathUtil.intDiv(nanosUntil, LocalTime.NANOS_PER_SECOND);\n                case ChronoUnit.MINUTES: return MathUtil.intDiv(nanosUntil, LocalTime.NANOS_PER_MINUTE);\n                case ChronoUnit.HOURS: return MathUtil.intDiv(nanosUntil, LocalTime.NANOS_PER_HOUR);\n                case ChronoUnit.HALF_DAYS: return MathUtil.intDiv(nanosUntil, (12 * LocalTime.NANOS_PER_HOUR));\n            }\n            throw new UnsupportedTemporalTypeException(`Unsupported unit: ${unit}`);\n        }\n        return unit.between(this, end);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Combines this time with a date to create a {@link LocalDateTime}.\n     *\n     * This returns a {@link LocalDateTime} formed from this time at the specified date.\n     * All possible combinations of date and time are valid.\n     *\n     * @param {LocalDate} date - the date to combine with, not null\n     * @return {LocalDateTime} the local date-time formed from this time and the specified date, not null\n     */\n    atDate(date) {\n        return LocalDateTime.of(date, this);\n    }\n\n    /**\n     * Combines this time with an offset to create an {@link OffsetTime}.\n     *\n     * This returns an {@link OffsetTime} formed from this time at the specified offset.\n     * All possible combinations of time and offset are valid.\n     *\n     * @param {OffsetTime} offset - the offset to combine with, not null\n     * @return {OffsetTime} the offset time formed from this time and the specified offset, not null\n     */\n    atOffset(offset) {\n        return OffsetTime.of(this, offset);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Extracts the time as seconds of day, from `0` to `24 * 60 * 60 - 1`.\n     *\n     * @return {number} the second-of-day equivalent to this time\n     */\n    toSecondOfDay() {\n        let total = this._hour * LocalTime.SECONDS_PER_HOUR;\n        total += this._minute * LocalTime.SECONDS_PER_MINUTE;\n        total += this._second;\n        return total;\n    }\n\n    /**\n     * Extracts the time as nanos of day, from `0` to `24 * 60 * 60 * 1,000,000,000 - 1`.\n     *\n     * @return {number} the nano of day equivalent to this time\n     */\n    toNanoOfDay() {\n        let total = this._hour * LocalTime.NANOS_PER_HOUR;\n        total += this._minute * LocalTime.NANOS_PER_MINUTE;\n        total += this._second * LocalTime.NANOS_PER_SECOND;\n        total += this._nano;\n        return total;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Compares this {@link LocalTime} to another time.\n     *\n     * The comparison is based on the time-line position of the local times within a day.\n     * It is 'consistent with equals', as defined by {@link Comparable}.\n     *\n     * @param {LocalTime} other - the other time to compare to, not null\n     * @return {number} the comparator value, negative if less, positive if greater\n     * @throws {NullPointerException} if `other` is null\n     */\n    compareTo(other) {\n        requireNonNull(other, 'other');\n        requireInstance(other, LocalTime, 'other');\n        let cmp = MathUtil.compareNumbers(this._hour, other._hour);\n        if (cmp === 0) {\n            cmp = MathUtil.compareNumbers(this._minute, other._minute);\n            if (cmp === 0) {\n                cmp = MathUtil.compareNumbers(this._second, other._second);\n                if (cmp === 0) {\n                    cmp = MathUtil.compareNumbers(this._nano, other._nano);\n                }\n            }\n        }\n        return cmp;\n    }\n\n    /**\n     * Checks if this {@link LocalTime} is after the specified time.\n     *\n     * The comparison is based on the time-line position of the time within a day.\n     *\n     * @param {LocalTime} other - the other time to compare to, not null\n     * @return {boolean} true if this is after the specified time\n     * @throws {NullPointerException} if `other` is null\n     */\n    isAfter(other) {\n        return this.compareTo(other) > 0;\n    }\n\n    /**\n     * Checks if this {@link LocalTime} is before the specified time.\n     *\n     * The comparison is based on the time-line position of the time within a day.\n     *\n     * @param {LocalTime} other - the other time to compare to, not null\n     * @return {boolean} true if this point is before the specified time\n     * @throws {NullPointerException} if `other` is null\n     */\n    isBefore(other) {\n        return this.compareTo(other) < 0;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Checks if this time is equal to another time.\n     *\n     * The comparison is based on the time-line position of the time within a day.\n     *\n     * Only objects of type {@link LocalTime} are compared, other types return false.\n     * To compare the date of two {@link TemporalAccessor} instances, use\n     * {@link ChronoField#NANO_OF_DAY} as a comparator.\n     *\n     * @param {*} other - the object to check, null returns false\n     * @return {boolean} true if this is equal to the other time\n     */\n    equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof LocalTime) {\n            return this._hour === other._hour && this._minute === other._minute &&\n                this._second === other._second && this._nano === other._nano;\n        }\n        return false;\n    }\n\n    /**\n     * A hash code for this time.\n     *\n     * @return {number} a suitable hash code\n     */\n    hashCode() {\n        const nod = this.toNanoOfDay();\n        return MathUtil.hash(nod);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Outputs this time as a string, such as `10:15`.\n     *\n     * The output will be one of the following ISO-8601 formats:\n     *\n     * * {@link HH:mm}\n     * * {@link HH:mm:ss}\n     * * {@link HH:mm:ss.SSS}\n     * * {@link HH:mm:ss.SSSSSS}\n     * * {@link HH:mm:ss.SSSSSSSSS}\n     *\n     * The format used will be the shortest that outputs the full value of\n     * the time where the omitted parts are implied to be zero.\n     *\n     * @return {string} a string representation of this time, not null\n     */\n    toString() {\n        let buf = '';\n        const hourValue = this._hour;\n        const minuteValue = this._minute;\n        const secondValue = this._second;\n        const nanoValue = this._nano;\n        buf += hourValue < 10 ? '0' : '';\n        buf += hourValue;\n        buf += minuteValue < 10 ? ':0' : ':';\n        buf += minuteValue;\n        if (secondValue > 0 || nanoValue > 0) {\n            buf += secondValue < 10 ? ':0' : ':';\n            buf += secondValue;\n            if (nanoValue > 0) {\n                buf += '.';\n                if(MathUtil.intMod(nanoValue, 1000000) === 0) {\n                    buf += (`${MathUtil.intDiv(nanoValue, 1000000) + 1000}`).substring(1);\n                } else if (MathUtil.intMod(nanoValue, 1000) === 0) {\n                    buf += (`${MathUtil.intDiv(nanoValue, 1000) + 1000000}`).substring(1);\n                } else {\n                    buf += (`${nanoValue + 1000000000}`).substring(1);\n                }\n            }\n        }\n        return buf;\n    }\n\n    /**\n     *\n     * @return {string} same as {@link LocalTime.toString}\n     */\n    toJSON() {\n        return this.toString();\n    }\n\n    /**\n     * Outputs this time as a string using the formatter.\n     *\n     * @param {DateTimeFormatter} formatter - the formatter to use, not null\n     * @return {string} the formatted time string, not null\n     * @throws {DateTimeException} if an error occurs during printing\n     */\n    format(formatter) {\n        requireNonNull(formatter, 'formatter');\n        return formatter.format(this);\n    }\n}\n\nexport function _init() {\n    /**\n     * Constants for the local time of each hour.\n     */\n    LocalTime.HOURS = [];\n    for (let hour = 0; hour < 24; hour++) {\n        LocalTime.of(hour, 0, 0, 0);\n    }\n\n    /**\n     * The minimum supported {@link LocalTime}, '00:00'.\n     * This is the time of midnight at the start of the day.\n     */\n    LocalTime.MIN = LocalTime.HOURS[0];\n    /**\n     * The maximum supported {@link LocalTime}, '23:59:59.999999999'.\n     * This is the time just before midnight at the end of the day.\n     */\n    LocalTime.MAX = new LocalTime(23, 59, 59, 999999999);\n    /**\n     * The time of midnight at the start of the day, '00:00'.\n     */\n    LocalTime.MIDNIGHT = LocalTime.HOURS[0];\n    /**\n     * The time of noon in the middle of the day, '12:00'.\n     */\n    LocalTime.NOON = LocalTime.HOURS[12];\n\n    LocalTime.FROM = createTemporalQuery('LocalTime.FROM', (temporal) => {\n        return LocalTime.from(temporal);\n    });\n}\n\n/**\n * Hours per day.\n */\nLocalTime.HOURS_PER_DAY = 24;\n/**\n * Minutes per hour.\n */\nLocalTime.MINUTES_PER_HOUR = 60;\n/**\n * Minutes per day.\n */\nLocalTime.MINUTES_PER_DAY = LocalTime.MINUTES_PER_HOUR * LocalTime.HOURS_PER_DAY;\n/**\n * Seconds per minute.\n */\nLocalTime.SECONDS_PER_MINUTE = 60;\n/**\n * Seconds per hour.\n */\nLocalTime.SECONDS_PER_HOUR = LocalTime.SECONDS_PER_MINUTE * LocalTime.MINUTES_PER_HOUR;\n/**\n * Seconds per day.\n */\nLocalTime.SECONDS_PER_DAY = LocalTime.SECONDS_PER_HOUR * LocalTime.HOURS_PER_DAY;\n/**\n * Milliseconds per day.\n */\nLocalTime.MILLIS_PER_DAY = LocalTime.SECONDS_PER_DAY * 1000;\n/**\n * Microseconds per day.\n */\nLocalTime.MICROS_PER_DAY = LocalTime.SECONDS_PER_DAY * 1000000;\n/**\n * Nanos per second.\n */\nLocalTime.NANOS_PER_SECOND = 1000000000;\n/**\n * Nanos per minute.\n */\nLocalTime.NANOS_PER_MINUTE = LocalTime.NANOS_PER_SECOND * LocalTime.SECONDS_PER_MINUTE;\n/**\n * Nanos per hour.\n */\nLocalTime.NANOS_PER_HOUR = LocalTime.NANOS_PER_MINUTE * LocalTime.MINUTES_PER_HOUR;\n/**\n * Nanos per day.\n */\nLocalTime.NANOS_PER_DAY = LocalTime.NANOS_PER_HOUR * LocalTime.HOURS_PER_DAY;\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { requireNonNull, requireInstance } from './assert';\nimport { DateTimeException, UnsupportedTemporalTypeException } from './errors';\n\nimport { Clock } from './Clock';\nimport { LocalTime } from './LocalTime';\nimport { ZonedDateTime } from './ZonedDateTime';\nimport { MathUtil } from './MathUtil';\nimport { OffsetDateTime } from './OffsetDateTime';\n\nimport { Temporal } from './temporal/Temporal';\nimport { ChronoField } from './temporal/ChronoField';\nimport { ChronoUnit } from './temporal/ChronoUnit';\nimport { TemporalQueries } from './temporal/TemporalQueries';\nimport { TemporalUnit } from './temporal/TemporalUnit';\nimport { createTemporalQuery } from './temporal/TemporalQuery';\nimport { DateTimeFormatter } from './format/DateTimeFormatter';\n\nconst NANOS_PER_MILLI = 1000000;\n\n/**\n * An instantaneous point on the time-line.\n *\n * This class models a single instantaneous point on the time-line.\n * This might be used to record event time-stamps in the application.\n *\n * Time-scale\n *\n * The length of the solar day is the standard way that humans measure time.\n * This has traditionally been subdivided into 24 hours of 60 minutes of 60 seconds,\n * forming a 86400 second day.\n *\n * Modern timekeeping is based on atomic clocks which precisely define an SI second\n * relative to the transitions of a Caesium atom. The length of an SI second was defined\n * to be very close to the 86400th fraction of a day.\n *\n * Unfortunately, as the Earth rotates the length of the day varies.\n * In addition, over time the average length of the day is getting longer as the Earth slows.\n * As a result, the length of a solar day in 2012 is slightly longer than 86400 SI seconds.\n * The actual length of any given day and the amount by which the Earth is slowing\n * are not predictable and can only be determined by measurement.\n * The UT1 time-scale captures the accurate length of day, but is only available some\n * time after the day has completed.\n *\n * The UTC time-scale is a standard approach to bundle up all the additional fractions\n * of a second from UT1 into whole seconds, known as *leap-seconds*.\n * A leap-second may be added or removed depending on the Earth's rotational changes.\n * As such, UTC permits a day to have 86399 SI seconds or 86401 SI seconds where\n * necessary in order to keep the day aligned with the Sun.\n *\n * The modern UTC time-scale was introduced in 1972, introducing the concept of whole leap-seconds.\n * Between 1958 and 1972, the definition of UTC was complex, with minor sub-second leaps and\n * alterations to the length of the notional second. As of 2012, discussions are underway\n * to change the definition of UTC again, with the potential to remove leap seconds or\n * introduce other changes.\n *\n * Given the complexity of accurate timekeeping described above, this Java API defines\n * its own time-scale, the *Java Time-Scale*.\n *\n * The Java Time-Scale divides each calendar day into exactly 86400\n * subdivisions, known as seconds.  These seconds may differ from the\n * SI second.  It closely matches the de facto international civil time\n * scale, the definition of which changes from time to time.\n *\n * The Java Time-Scale has slightly different definitions for different\n * segments of the time-line, each based on the consensus international\n * time scale that is used as the basis for civil time. Whenever the\n * internationally-agreed time scale is modified or replaced, a new\n * segment of the Java Time-Scale must be defined for it.  Each segment\n * must meet these requirements:\n *\n * * the Java Time-Scale shall closely match the underlying international\n *   civil time scale;\n * * the Java Time-Scale shall exactly match the international civil\n *   time scale at noon each day;\n * * the Java Time-Scale shall have a precisely-defined relationship to\n *   the international civil time scale.\n *\n * There are currently, as of 2013, two segments in the Java time-scale.\n *\n * For the segment from 1972-11-03 (exact boundary discussed below) until\n * further notice, the consensus international time scale is UTC (with\n * leap seconds).  In this segment, the Java Time-Scale is identical to\n * [UTC-SLS](http://www.cl.cam.ac.uk/~mgk25/time/utc-sls/).\n * This is identical to UTC on days that do not have a leap second.\n * On days that do have a leap second, the leap second is spread equally\n * over the last 1000 seconds of the day, maintaining the appearance of\n * exactly 86400 seconds per day.\n *\n * For the segment prior to 1972-11-03, extending back arbitrarily far,\n * the consensus international time scale is defined to be UT1, applied\n * proleptically, which is equivalent to the (mean) solar time on the\n * prime meridian (Greenwich). In this segment, the Java Time-Scale is\n * identical to the consensus international time scale. The exact\n * boundary between the two segments is the instant where UT1 = UTC\n * between 1972-11-03T00:00 and 1972-11-04T12:00.\n *\n * Implementations of the Java time-scale using the JSR-310 API are not\n * required to provide any clock that is sub-second accurate, or that\n * progresses monotonically or smoothly. Implementations are therefore\n * not required to actually perform the UTC-SLS slew or to otherwise be\n * aware of leap seconds. JSR-310 does, however, require that\n * implementations must document the approach they use when defining a\n * clock representing the current instant.\n * See {@link Clock} for details on the available clocks.\n *\n * The Java time-scale is used for all date-time classes.\n * This includes {@link Instant}, {@link LocalDate}, {@link LocalTime}, {@link OffsetDateTime},\n * {@link ZonedDateTime} and {@link Duration}.\n *\n * ### Static properties of Class {@link Instant}\n *\n * Instant.EPOCH\n *\n * Instant.MIN\n *\n * Instant.MAX\n *\n * Instant.MIN_SECONDS\n *\n * Instant.MAX_SECONDS\n *\n */\nexport class Instant extends Temporal {\n\n    /**\n     * Obtains the current instant from the system clock, or if specified\n     * the current instant from the specified clock.\n     *\n     * This will query the specified clock to obtain the current time.\n     *\n     * @param {Clock} [clock=Clock.systemUTC()] - the clock to use, defaults to the system clock\n     * @return {Instant} the current instant, not null\n     */\n    static now(clock = Clock.systemUTC()){\n        return clock.instant();\n    }\n\n    /**\n     * Obtains an instance of {@link Instant} using seconds from the\n     * epoch of 1970-01-01T00:00:00Z.\n     *\n     * @param {number} epochSecond - the number of seconds from 1970-01-01T00:00:00Z\n     * @param {number} nanoAdjustment nanoseconds start from the start of epochSecond, if null the nanosecond field is set to zero.\n     * @return {Instant} an instant, not null\n     * @throws DateTimeException if the instant exceeds the maximum or minimum instant\n     */\n    static ofEpochSecond(epochSecond, nanoAdjustment=0){\n        const secs = epochSecond + MathUtil.floorDiv(nanoAdjustment, LocalTime.NANOS_PER_SECOND);\n        const nos = MathUtil.floorMod(nanoAdjustment, LocalTime.NANOS_PER_SECOND);\n        return Instant._create(secs, nos);\n    }\n\n    /**\n     * Obtains an instance of {@link Instant} using milliseconds from the\n     * epoch of 1970-01-01T00:00:00Z.\n     *\n     * The seconds and nanoseconds are extracted from the specified milliseconds.\n     *\n     * @param {number} epochMilli - the number of milliseconds from 1970-01-01T00:00:00Z\n     * @return {Instant} an instant, not null\n     * @throws DateTimeException if the instant exceeds the maximum or minimum instant\n     */\n    static ofEpochMilli(epochMilli) {\n        const secs = MathUtil.floorDiv(epochMilli, 1000);\n        const mos = MathUtil.floorMod(epochMilli, 1000);\n        return Instant._create(secs, mos * 1000000);\n    }\n\n    /**\n     * Obtains an instance of {@link Instant} using microseconds from the\n     * epoch of 1970-01-01T00:00:00Z.\n     *\n     * @param {number} epochMicro - the number of microseconds from 1970-01-01T00:00:00Z\n     * @return {Instant} an instant, not null\n     * @throws DateTimeException if the instant exceeds the maximum or minimum instant\n     */\n    static ofEpochMicro(epochMicro) {\n        const secs = MathUtil.floorDiv(epochMicro, 1000000);\n        const mos = MathUtil.floorMod(epochMicro, 1000000);\n        return Instant._create(secs, mos * 1000);\n    }\n\n    /**\n     * Obtains an instance of {@link Instant} from a temporal object.\n     *\n     * A {@link TemporalAccessor} represents some form of date and time information.\n     * This factory converts the arbitrary temporal object to an instance of {@link Instant}.\n     *\n     * The conversion extracts the {@link ChronoField#INSTANT_SECONDS}\n     * and {@link ChronoField#NANO_OF_SECOND} fields.\n     *\n     * This method matches the signature of the functional interface {@link TemporalQuery}\n     * allowing it to be used as a query via method reference, {@link Instant::from}.\n     *\n     * @param {TemporalAccessor} temporal - the temporal object to convert, not null\n     * @return {Instant} the instant, not null\n     * @throws DateTimeException if unable to convert to an {@link Instant}\n     */\n    static from(temporal) {\n        try {\n            const instantSecs = temporal.getLong(ChronoField.INSTANT_SECONDS);\n            const nanoOfSecond = temporal.get(ChronoField.NANO_OF_SECOND);\n            return Instant.ofEpochSecond(instantSecs, nanoOfSecond);\n        } catch (ex) {\n            throw new DateTimeException(`Unable to obtain Instant from TemporalAccessor: ${ \n                temporal}, type ${typeof temporal}`, ex);\n        }\n    }\n\n    /**\n     * Obtains an instance of {@link Instant} from a text string such as\n     * `2007-12-03T10:15:30.000Z`.\n     *\n     * The string must represent a valid instant in UTC and is parsed using\n     * {@link DateTimeFormatter#ISO_INSTANT}.\n     *\n     * @param {string} text - the text to parse, not null\n     * @return {Instant} the parsed instant, not null\n     * @throws DateTimeParseException if the text cannot be parsed\n     */\n    static parse(text) {\n        return DateTimeFormatter.ISO_INSTANT.parse(text, Instant.FROM);\n    }\n\n    /**\n     *\n     * @param {number} seconds\n     * @param {number} nanoOfSecond\n     * @returns {Instant}\n     * @private\n     */\n    static _create(seconds, nanoOfSecond){\n        if(seconds === 0 && nanoOfSecond === 0){\n            return Instant.EPOCH;\n        }\n        return new Instant(seconds, nanoOfSecond);\n    }\n\n    /**\n     *\n     * @param {number} seconds\n     * @param {number} nanoOfSecond\n     * @private\n     */\n    static _validate(seconds, nanoOfSecond){\n        if (seconds < Instant.MIN_SECONDS || seconds > Instant.MAX_SECONDS) {\n            throw new DateTimeException('Instant exceeds minimum or maximum instant');\n        }\n        if (nanoOfSecond < 0 || nanoOfSecond > LocalTime.NANOS_PER_SECOND) {\n            throw new DateTimeException('Instant exceeds minimum or maximum instant');\n        }\n    }\n\n    /**\n     *\n     * @param {number} seconds\n     * @param {number} nanoOfSecond\n     * @private\n     */\n    constructor(seconds, nanoOfSecond){\n        super();\n        Instant._validate(seconds, nanoOfSecond);\n        this._seconds = MathUtil.safeToInt(seconds);\n        this._nanos = MathUtil.safeToInt(nanoOfSecond);\n    }\n\n    /**\n     * Checks if the specified field is supported.\n     *\n     * This checks if this instant can be queried for the specified field.\n     * If false, then calling {@link range} and {@link get} will throw an exception.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields are:\n     *\n     * * {@link NANO_OF_SECOND}\n     * * {@link MICRO_OF_SECOND}\n     * * {@link MILLI_OF_SECOND}\n     * * {@link INSTANT_SECONDS}\n     *\n     * All other {@link ChronoField} instances will return false.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.isSupportedBy}\n     * passing `this` as the argument.\n     * Whether the field is supported is determined by the field.\n     *\n     * @param {TemporalField|TemporalUnit} fieldOrUnit - the field to check, null returns false\n     * @return {boolean} true if the field is supported on this instant, false if not\n     */\n    isSupported(fieldOrUnit) {\n        if (fieldOrUnit instanceof ChronoField) {\n            return fieldOrUnit === ChronoField.INSTANT_SECONDS || fieldOrUnit === ChronoField.NANO_OF_SECOND || fieldOrUnit === ChronoField.MICRO_OF_SECOND || fieldOrUnit === ChronoField.MILLI_OF_SECOND;\n        }\n        if (fieldOrUnit instanceof ChronoUnit) {\n            return fieldOrUnit.isTimeBased() || fieldOrUnit === ChronoUnit.DAYS;\n        }\n        return fieldOrUnit != null && fieldOrUnit.isSupportedBy(this);\n    }\n\n    /**\n     * Gets the range of valid values for the specified field.\n     *\n     * The range object expresses the minimum and maximum valid values for a field.\n     * This instant is used to enhance the accuracy of the returned range.\n     * If it is not possible to return the range, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return\n     * appropriate range instances.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.rangeRefinedBy}\n     * passing `this` as the argument.\n     * Whether the range can be obtained is determined by the field.\n     *\n     * @param {TemporalField} field - the field to query the range for, not null\n     * @return {ValueRange} the range of valid values for the field, not null\n     * @throws DateTimeException if the range for the field cannot be obtained\n     */\n    range(field) {\n        return super.range(field);\n    }\n\n    /**\n     * Gets the value of the specified field from this instant as an `int`.\n     *\n     * This queries this instant for the value for the specified field.\n     * The returned value will always be within the valid range of values for the field.\n     * If it is not possible to return the value, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return valid\n     * values based on this date-time, except {@link INSTANT_SECONDS} which is too\n     * large to fit in an `int` and throws a {@link DateTimeException}.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.getFrom}\n     * passing `this` as the argument. Whether the value can be obtained,\n     * and what the value represents, is determined by the field.\n     *\n     * @param {TemporalField} field - the field to get, not null\n     * @return {number} the value for the field\n     * @throws DateTimeException if a value for the field cannot be obtained\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    get(field) {\n        return this.getLong(field);\n    }\n\n    /**\n     * Gets the value of the specified field from this instant as a `long`.\n     *\n     * This queries this instant for the value for the specified field.\n     * If it is not possible to return the value, because the field is not supported\n     * or for some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the query is implemented here.\n     * The supported fields (see {@link isSupported}) will return valid\n     * values based on this date-time.\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.getFrom}\n     * passing `this` as the argument. Whether the value can be obtained,\n     * and what the value represents, is determined by the field.\n     *\n     * @param {TemporalField} field - the field to get, not null\n     * @return {number} the value for the field\n     * @throws DateTimeException if a value for the field cannot be obtained\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    getLong(field) {\n        if (field instanceof ChronoField) {\n            switch (field) {\n                case ChronoField.NANO_OF_SECOND: return this._nanos;\n                case ChronoField.MICRO_OF_SECOND: return MathUtil.intDiv(this._nanos, 1000);\n                case ChronoField.MILLI_OF_SECOND: return MathUtil.intDiv(this._nanos, NANOS_PER_MILLI);\n                case ChronoField.INSTANT_SECONDS: return this._seconds;\n            }\n            throw new UnsupportedTemporalTypeException(`Unsupported field: ${field}`);\n        }\n        return field.getFrom(this);\n    }\n\n    /**\n     * Gets the number of seconds from the Java epoch of 1970-01-01T00:00:00Z.\n     *\n     * The epoch second count is a simple incrementing count of seconds where\n     * second 0 is 1970-01-01T00:00:00Z.\n     * The nanosecond part of the day is returned by {@link getNanosOfSecond}.\n     *\n     * @return {number} the seconds from the epoch of 1970-01-01T00:00:00Z\n     */\n    epochSecond(){\n        return this._seconds;\n    }\n\n    /**\n     * Gets the number of nanoseconds, later along the time-line, from the start\n     * of the second.\n     *\n     * The nanosecond-of-second value measures the total number of nanoseconds from\n     * the second returned by {@link getEpochSecond}.\n     *\n     * @return {number} the nanoseconds within the second, always positive, never exceeds 999,999,999\n     */\n    nano(){\n        return this._nanos;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this instant with the specified field set to a new value.\n     *\n     * This returns a new {@link Instant}, based on this one, with the value\n     * for the specified field changed.\n     * If it is not possible to set the value, because the field is not supported or for\n     * some other reason, an exception is thrown.\n     *\n     * If the field is a {@link ChronoField} then the adjustment is implemented here.\n     * The supported fields behave as follows:\n     *\n     * * {@link NANO_OF_SECOND} -\n     *  Returns an {@link Instant} with the specified nano-of-second.\n     *  The epoch-second will be unchanged.\n     * * {@link MICRO_OF_SECOND} -\n     *  Returns an {@link Instant} with the nano-of-second replaced by the specified\n     *  micro-of-second multiplied by 1,000. The epoch-second will be unchanged.\n     * * {@link MILLI_OF_SECOND} -\n     *  Returns an {@link Instant} with the nano-of-second replaced by the specified\n     *  milli-of-second multiplied by 1,000,000. The epoch-second will be unchanged.\n     * * {@link INSTANT_SECONDS} -\n     *  Returns an {@link Instant} with the specified epoch-second.\n     *  The nano-of-second will be unchanged.\n     *\n     *\n     * In all cases, if the new value is outside the valid range of values for the field\n     * then a {@link DateTimeException} will be thrown.\n     *\n     * All other {@link ChronoField} instances will throw a {@link DateTimeException}.\n     *\n     * If the field is not a {@link ChronoField}, then the result of this method\n     * is obtained by invoking {@link TemporalField.adjustInto}\n     * passing `this` as the argument. In this case, the field determines\n     * whether and how to adjust the instant.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {TemporalField} field - the field to set in the result, not null\n     * @param {number} newValue - the new value of the field in the result\n     * @return {Instant} an {@link Instant} based on `this` with the specified field set, not null\n     * @throws DateTimeException if the field cannot be set\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    _withField(field, newValue) {\n        requireNonNull(field, 'field');\n        if (field instanceof ChronoField) {\n            field.checkValidValue(newValue);\n            switch (field) {\n                case ChronoField.MILLI_OF_SECOND: {\n                    const nval = newValue * NANOS_PER_MILLI;\n                    return (nval !== this._nanos? Instant._create(this._seconds, nval) : this);\n                }\n                case ChronoField.MICRO_OF_SECOND: {\n                    const nval = newValue * 1000;\n                    return (nval !== this._nanos? Instant._create(this._seconds, nval) : this);\n                }\n                case ChronoField.NANO_OF_SECOND: return (newValue !== this._nanos? Instant._create(this._seconds, newValue) : this);\n                case ChronoField.INSTANT_SECONDS: return (newValue !== this._seconds ? Instant._create(newValue, this._nanos) : this);\n            }\n            throw new UnsupportedTemporalTypeException(`Unsupported field: ${field}`);\n        }\n        return field.adjustInto(this, newValue);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a copy of this {@link Instant} truncated to the specified unit.\n     *\n     * Truncating the instant returns a copy of the original with fields\n     * smaller than the specified unit set to zero.\n     * The fields are calculated on the basis of using a UTC offset as seen\n     * in {@link toString}.\n     * For example, truncating with {@link ChronoUnit#MINUTES} will\n     * round down to the nearest minute, setting the seconds and nanoseconds to zero.\n     *\n     * The unit must have a duration (see {@link TemporalUnit#getDuration})\n     * that divides into the length of a standard day without remainder.\n     * This includes all supplied time units on {@link ChronoUnit} and\n     * {@link ChronoUnit#DAYS}. Other units throw an exception.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {!TemporalUnit} unit - the unit to truncate to, not null\n     * @return {Instant} an {@link Instant} based on this instant with the time truncated, not null\n     * @throws DateTimeException if the unit is invalid for truncation\n     */\n    truncatedTo(unit) {\n        requireNonNull(unit, 'unit');\n        if (unit === ChronoUnit.NANOS) {\n            return this;\n        }\n        const unitDur = unit.duration();\n        if (unitDur.seconds() > LocalTime.SECONDS_PER_DAY) {\n            throw new DateTimeException('Unit is too large to be used for truncation');\n        }\n        const dur = unitDur.toNanos();\n        if (MathUtil.intMod(LocalTime.NANOS_PER_DAY, dur) !== 0) {\n            throw new DateTimeException('Unit must divide into a standard day without remainder');\n        }\n        const nod = MathUtil.intMod(this._seconds, LocalTime.SECONDS_PER_DAY) * LocalTime.NANOS_PER_SECOND + this._nanos;\n        const result = MathUtil.intDiv(nod, dur) * dur;\n        return this.plusNanos(result - nod);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * @param {!number} amountToAdd\n     * @param {!TemporalUnit} unit\n     * @return {Instant}\n     * @throws DateTimeException\n     * @throws ArithmeticException\n     */\n    _plusUnit(amountToAdd, unit) {\n        requireNonNull(amountToAdd, 'amountToAdd');\n        requireNonNull(unit, 'unit');\n        requireInstance(unit, TemporalUnit);\n        if (unit instanceof ChronoUnit) {\n            switch (unit) {\n                case ChronoUnit.NANOS: return this.plusNanos(amountToAdd);\n                case ChronoUnit.MICROS: return this.plusMicros(amountToAdd);\n                case ChronoUnit.MILLIS: return this.plusMillis(amountToAdd);\n                case ChronoUnit.SECONDS: return this.plusSeconds(amountToAdd);\n                case ChronoUnit.MINUTES: return this.plusSeconds(MathUtil.safeMultiply(amountToAdd, LocalTime.SECONDS_PER_MINUTE));\n                case ChronoUnit.HOURS: return this.plusSeconds(MathUtil.safeMultiply(amountToAdd, LocalTime.SECONDS_PER_HOUR));\n                case ChronoUnit.HALF_DAYS: return this.plusSeconds(MathUtil.safeMultiply(amountToAdd, LocalTime.SECONDS_PER_DAY / 2));\n                case ChronoUnit.DAYS: return this.plusSeconds(MathUtil.safeMultiply(amountToAdd, LocalTime.SECONDS_PER_DAY));\n            }\n            throw new UnsupportedTemporalTypeException(`Unsupported unit: ${unit}`);\n        }\n        return unit.addTo(this, amountToAdd);\n    }\n\n    /**\n     * Returns a copy of this instant with the specified duration in seconds added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} secondsToAdd  the seconds to add, positive or negative\n     * @return {Instant} an {@link Instant} based on this instant with the specified seconds added, not null\n     * @throws DateTimeException if the result exceeds the maximum or minimum instant\n     */\n    plusSeconds(secondsToAdd) {\n        return this._plus(secondsToAdd, 0);\n    }\n\n    /**\n     * Returns a copy of this instant with the specified duration in milliseconds added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} millisToAdd - the milliseconds to add, positive or negative\n     * @return {Instant} an {@link Instant} based on this instant with the specified milliseconds added, not null\n     * @throws DateTimeException if the result exceeds the maximum or minimum instant\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    plusMillis(millisToAdd) {\n        return this._plus(MathUtil.intDiv(millisToAdd, 1000), MathUtil.intMod(millisToAdd, 1000) * NANOS_PER_MILLI);\n    }\n\n    /**\n     * Returns a copy of this instant with the specified duration in nanoseconds added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} nanosToAdd - the nanoseconds to add, positive or negative\n     * @return {Instant} an {@link Instant} based on this instant with the specified nanoseconds added, not null\n     * @throws DateTimeException if the result exceeds the maximum or minimum instant\n     */\n    plusNanos(nanosToAdd) {\n        return this._plus(0, nanosToAdd);\n    }\n\n    /**\n     * Returns a copy of this instant with the specified duration in microseconds added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} microsToAdd - the microseconds to add, positive or negative\n     * @return {Instant} an {@link Instant} based on this instant with the specified microseconds added, not null\n     * @throws DateTimeException if the result exceeds the maximum or minimum instant\n     */\n    plusMicros(microsToAdd) {\n        return this._plus(MathUtil.intDiv(microsToAdd, 1000000), MathUtil.intMod(microsToAdd, 1000000) * 1000);\n    }\n\n    /**\n     * Returns a copy of this instant with the specified duration added.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} secondsToAdd - the seconds to add, positive or negative\n     * @param {number} nanosToAdd - the nanos to add, positive or negative\n     * @return {Instant} an {@link Instant} based on this instant with the specified seconds added, not null\n     * @throws DateTimeException if the result exceeds the maximum or minimum instant\n     */\n    _plus(secondsToAdd, nanosToAdd) {\n        if (secondsToAdd === 0 && nanosToAdd === 0) {\n            return this;\n        }\n        let epochSec = this._seconds + secondsToAdd;\n        epochSec = epochSec + MathUtil.intDiv(nanosToAdd, LocalTime.NANOS_PER_SECOND);\n        const nanoAdjustment = this._nanos + nanosToAdd % LocalTime.NANOS_PER_SECOND;\n        return Instant.ofEpochSecond(epochSec, nanoAdjustment);\n    }\n\n    //-----------------------------------------------------------------------\n\n    /**\n     * @param {!number} amountToSubtract\n     * @param {!TemporalUnit} unit\n     * @return {Instant}\n     * @throws DateTimeException\n     * @throws ArithmeticException\n     */\n    _minusUnit(amountToSubtract, unit) {\n        return this._plusUnit(-1 * amountToSubtract, unit);\n    }\n\n    /**\n     * Returns a copy of this instant with the specified duration in seconds subtracted.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} secondsToSubtract - the seconds to subtract, positive or negative\n     * @return {Instant} an {@link Instant} based on this instant with the specified seconds subtracted, not null\n     * @throws DateTimeException if the result exceeds the maximum or minimum instant\n     */\n    minusSeconds(secondsToSubtract) {\n        return this.plusSeconds(secondsToSubtract * -1);\n    }\n\n    /**\n     * Returns a copy of this instant with the specified duration in milliseconds subtracted.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} millisToSubtract - the milliseconds to subtract, positive or negative\n     * @return {Instant} an {@link Instant} based on this instant with the specified milliseconds subtracted, not null\n     * @throws DateTimeException if the result exceeds the maximum or minimum instant\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    minusMillis(millisToSubtract) {\n        return this.plusMillis(-1 * millisToSubtract);\n    }\n\n    /**\n     * Returns a copy of this instant with the specified duration in nanoseconds subtracted.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} nanosToSubtract  the nanoseconds to subtract, positive or negative\n     * @return {Instant} an {@link Instant} based on this instant with the specified nanoseconds subtracted, not null\n     * @throws DateTimeException if the result exceeds the maximum or minimum instant\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    minusNanos(nanosToSubtract) {\n        return this.plusNanos(-1 * nanosToSubtract);\n    }\n\n    /**\n     * Returns a copy of this instant with the specified duration in microseconds subtracted.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {number} microsToSubtract  the microseconds to subtract, positive or negative\n     * @return {Instant} an {@link Instant} based on this instant with the specified microseconds subtracted, not null\n     * @throws DateTimeException if the result exceeds the maximum or minimum instant\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    minusMicros(microsToSubtract) {\n        return this.plusMicros(-1 * microsToSubtract);\n    }\n\n    //-------------------------------------------------------------------------\n    /**\n     * Queries this instant using the specified query.\n     *\n     * This queries this instant using the specified query strategy object.\n     * The {@link TemporalQuery} object defines the logic to be used to\n     * obtain the result. Read the documentation of the query to understand\n     * what the result of this method will be.\n     *\n     * The result of this method is obtained by invoking the\n     * {@link TemporalQuery#queryFrom} method on the\n     * specified query passing `this` as the argument.\n     *\n     * @param {!TemporalQuery} query - the query to invoke, not null\n     * @return {*} the query result, null may be returned (defined by the query)\n     * @throws DateTimeException if unable to query (defined by the query)\n     * @throws ArithmeticException if numeric overflow occurs (defined by the query)\n     */\n    query(query) {\n        requireNonNull(query, 'query');\n        if (query === TemporalQueries.precision()) {\n            return ChronoUnit.NANOS;\n        }\n        // inline TemporalAccessor.super.query(query) as an optimization\n        if (query === TemporalQueries.localDate() || query === TemporalQueries.localTime() ||\n                query === TemporalQueries.chronology() || query === TemporalQueries.zoneId() ||\n                query === TemporalQueries.zone() || query === TemporalQueries.offset()) {\n            return null;\n        }\n        return query.queryFrom(this);\n    }\n\n    /**\n     * Adjusts the specified temporal object to have this instant.\n     *\n     * This returns a temporal object of the same observable type as the input\n     * with the instant changed to be the same as this.\n     *\n     * The adjustment is equivalent to using {@link Temporal#with}\n     * twice, passing {@link ChronoField#INSTANT_SECONDS} and\n     * {@link ChronoField#NANO_OF_SECOND} as the fields.\n     *\n     * In most cases, it is clearer to reverse the calling pattern by using\n     * {@link Temporal#with}:\n     * <pre>\n     *   // these two lines are equivalent, but the second approach is recommended\n     *   temporal = thisInstant.adjustInto(temporal);\n     *   temporal = temporal.with(thisInstant);\n     * </pre>\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {!Temporal} temporal - the target object to be adjusted, not null\n     * @return {Temporal} the adjusted object, not null\n     * @throws DateTimeException if unable to make the adjustment\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    adjustInto(temporal) {\n        requireNonNull(temporal, 'temporal');\n        return temporal.with(ChronoField.INSTANT_SECONDS, this._seconds).with(ChronoField.NANO_OF_SECOND, this._nanos);\n    }\n\n    /**\n     * Calculates the period between this instant and another instant in\n     * terms of the specified unit.\n     *\n     * This calculates the period between two instants in terms of a single unit.\n     * The start and end points are `this` and the specified instant.\n     * The result will be negative if the end is before the start.\n     * The calculation returns a whole number, representing the number of\n     * complete units between the two instants.\n     * The {@link Temporal} passed to this method is converted to a\n     * {@link Instant} using {@link from}.\n     * For example, the period in days between two dates can be calculated\n     * using `startInstant.until(endInstant, SECONDS)`.\n     *\n     * This method operates in association with {@link TemporalUnit#between}.\n     * The result of this method is a `long` representing the amount of\n     * the specified unit. By contrast, the result of {@link between} is an\n     * object that can be used directly in addition/subtraction:\n     * <pre>\n     *   long period = start.until(end, SECONDS);   // this method\n     *   dateTime.plus(SECONDS.between(start, end));      // use in plus/minus\n     * </pre>\n     *\n     * The calculation is implemented in this method for {@link ChronoUnit}.\n     * The units {@link NANOS}, {@link MICROS}, {@link MILLIS}, {@link SECONDS},\n     * {@link MINUTES}, {@link HOURS}, {@link HALF_DAYS} and {@link DAYS}\n     * are supported. Other {@link ChronoUnit} values will throw an exception.\n     *\n     * If the unit is not a {@link ChronoUnit}, then the result of this method\n     * is obtained by invoking {@link TemporalUnit.between}\n     * passing `this` as the first argument and the input temporal as\n     * the second argument.\n     *\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {Temporal} endExclusive - the end date, which is converted to an {@link Instant}, not null\n     * @param {TemporalUnit} unit - the unit to measure the period in, not null\n     * @return {number} the amount of the period between this date and the end date\n     * @throws DateTimeException if the period cannot be calculated\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    until(endExclusive, unit) {\n        requireNonNull(endExclusive, 'endExclusive');\n        requireNonNull(unit, 'unit');\n        const end = Instant.from(endExclusive);\n        if (unit instanceof ChronoUnit) {\n            switch (unit) {\n                case ChronoUnit.NANOS: return this._nanosUntil(end);\n                case ChronoUnit.MICROS: return this._microsUntil(end);\n                case ChronoUnit.MILLIS: return MathUtil.safeSubtract(end.toEpochMilli(), this.toEpochMilli());\n                case ChronoUnit.SECONDS: return this._secondsUntil(end);\n                case ChronoUnit.MINUTES: return MathUtil.intDiv(this._secondsUntil(end), LocalTime.SECONDS_PER_MINUTE);\n                case ChronoUnit.HOURS: return MathUtil.intDiv(this._secondsUntil(end), LocalTime.SECONDS_PER_HOUR);\n                case ChronoUnit.HALF_DAYS: return MathUtil.intDiv(this._secondsUntil(end), (12 * LocalTime.SECONDS_PER_HOUR));\n                case ChronoUnit.DAYS: return MathUtil.intDiv(this._secondsUntil(end), LocalTime.SECONDS_PER_DAY);\n            }\n            throw new UnsupportedTemporalTypeException(`Unsupported unit: ${unit}`);\n        }\n        return unit.between(this, end);\n    }\n\n    /**\n     *\n     * @param {Temporal} end\n     * @returns {number}\n     * @private\n     */\n    _microsUntil(end) {\n        const secsDiff = MathUtil.safeSubtract(end.epochSecond(), this.epochSecond());\n        const totalMicros = MathUtil.safeMultiply(secsDiff, 1000000);\n        return MathUtil.safeAdd(totalMicros, MathUtil.intDiv(end.nano() - this.nano(), 1000));\n    }\n\n    /**\n     *\n     * @param {Temporal} end\n     * @returns {number}\n     * @private\n     */\n    _nanosUntil(end) {\n        const secsDiff = MathUtil.safeSubtract(end.epochSecond(), this.epochSecond());\n        const totalNanos = MathUtil.safeMultiply(secsDiff, LocalTime.NANOS_PER_SECOND);\n        return MathUtil.safeAdd(totalNanos, end.nano() - this.nano());\n    }\n\n    /**\n     *\n     * @param {Temporal} end\n     * @returns {number}\n     * @private\n     */\n    _secondsUntil(end) {\n        let secsDiff = MathUtil.safeSubtract(end.epochSecond(), this.epochSecond());\n        const nanosDiff = end.nano() - this.nano();\n        if (secsDiff > 0 && nanosDiff < 0) {\n            secsDiff--;\n        } else if (secsDiff < 0 && nanosDiff > 0) {\n            secsDiff++;\n        }\n        return secsDiff;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Combines this instant with an offset to create an {@link OffsetDateTime}.\n     *\n     * This returns an {@link OffsetDateTime} formed from this instant at the\n     * specified offset from UTC/Greenwich. An exception will be thrown if the\n     * instant is too large to fit into an offset date-time.\n     *\n     * This method is equivalent to {@link OffsetDateTime#ofInstant}.\n     *\n     * @param {ZoneOffset} offset - the offset to combine with, not null\n     * @return {OffsetDateTime} the offset date-time formed from this instant and the specified offset, not null\n     * @throws DateTimeException if the result exceeds the supported range\n     */\n    atOffset(offset) {\n        return OffsetDateTime.ofInstant(this, offset);\n    }\n\n    /**\n     * Combines this instant with a time-zone to create a {@link ZonedDateTime}.\n     *\n     * This returns an {@link ZonedDateTime} formed from this instant at the\n     * specified time-zone. An exception will be thrown if the instant is too\n     * large to fit into a zoned date-time.\n     *\n     * This method is equivalent to {@link ZonedDateTime#ofInstant}.\n     *\n     * @param {ZoneId} zone - the zone to combine with, not null\n     * @return {ZonedDateTime} the zoned date-time formed from this instant and the specified zone, not null\n     * @throws DateTimeException if the result exceeds the supported range\n     */\n    atZone(zone) {\n        return ZonedDateTime.ofInstant(this, zone);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Converts this instant to the number of milliseconds from the epoch\n     * of 1970-01-01T00:00:00Z.\n     *\n     * If this instant represents a point on the time-line too far in the future\n     * or past to fit in a `long` milliseconds, then an exception is thrown.\n     *\n     * If this instant has greater than millisecond precision, then the conversion\n     * will drop any excess precision information as though the amount in nanoseconds\n     * was subject to integer division by one million.\n     *\n     * @return {number} the number of milliseconds since the epoch of 1970-01-01T00:00:00Z\n     * @throws ArithmeticException if numeric overflow occurs\n     */\n    toEpochMilli() {\n        const millis = MathUtil.safeMultiply(this._seconds, 1000);\n        return millis + MathUtil.intDiv(this._nanos, NANOS_PER_MILLI);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Compares this instant to the specified instant.\n     *\n     * The comparison is based on the time-line position of the instants.\n     * It is \"consistent with equals\", as defined by {@link Comparable}.\n     *\n     * @param {Instant} otherInstant  the other instant to compare to, not null\n     * @return {number} the comparator value, negative if less, positive if greater\n     * @throws NullPointerException if otherInstant is null\n     */\n    compareTo(otherInstant) {\n        requireNonNull(otherInstant, 'otherInstant');\n        requireInstance(otherInstant, Instant, 'otherInstant');\n        const cmp = MathUtil.compareNumbers(this._seconds, otherInstant._seconds);\n        if (cmp !== 0) {\n            return cmp;\n        }\n        return this._nanos - otherInstant._nanos;\n    }\n\n    /**\n     * Checks if this instant is after the specified instant.\n     *\n     * The comparison is based on the time-line position of the instants.\n     *\n     * @param {Instant} otherInstant  the other instant to compare to, not null\n     * @return {boolean} true if this instant is after the specified instant\n     * @throws NullPointerException if otherInstant is null\n     */\n    isAfter(otherInstant) {\n        return this.compareTo(otherInstant) > 0;\n    }\n\n    /**\n     * Checks if this instant is before the specified instant.\n     *\n     * The comparison is based on the time-line position of the instants.\n     *\n     * @param {Instant} otherInstant  the other instant to compare to, not null\n     * @return {boolean} true if this instant is before the specified instant\n     * @throws NullPointerException if otherInstant is null\n     */\n    isBefore(otherInstant) {\n        return this.compareTo(otherInstant) < 0;\n    }\n\n    /**\n     * Checks if this instant is equal to the specified instant.\n     *\n     * The comparison is based on the time-line position of the instants.\n     *\n     * @param {*} other - the other instant, null/ undefined returns false\n     * @return {boolean} true if the other instant is equal to this one\n     */\n    equals(other) {\n        if(this === other){\n            return true;\n        }\n        if(other instanceof Instant){\n            return this.epochSecond() === other.epochSecond() &&\n                this.nano() === other.nano();\n        }\n        return false;\n    }\n\n    /**\n     * Returns a hash code for this instant.\n     *\n     * @return {number} a suitable hash code\n     */\n    hashCode() {\n        return MathUtil.hashCode(this._seconds, this._nanos);\n    }\n\n    /**\n     * A string representation of this instant using ISO-8601 representation.\n     *\n     * The format used is the same as {@link DateTimeFormatter#ISO_INSTANT}.\n     *\n     * @return {string} an ISO-8601 representation of this instant, not null\n     */\n    toString(){\n        return DateTimeFormatter.ISO_INSTANT.format(this);\n    }\n\n    /**\n     *\n     * @return {string} same as {@link LocalDate.toString}\n     */\n    toJSON() {\n        return this.toString();\n    }\n}\n\nexport function _init() {\n    Instant.MIN_SECONDS = -31619119219200; // -1000000-01-01T00:00:00Z\n    Instant.MAX_SECONDS = 31494816403199; // +1000000-12-31T23:59:59.999999999Z\n    Instant.EPOCH = new Instant(0, 0);\n    Instant.MIN = Instant.ofEpochSecond(Instant.MIN_SECONDS, 0);\n    Instant.MAX = Instant.ofEpochSecond(Instant.MAX_SECONDS, 999999999);\n    Instant.FROM = createTemporalQuery('Instant.FROM', (temporal) => {\n        return Instant.from(temporal);\n    });\n}\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { abstractMethodFail, requireNonNull } from './assert';\nimport { Instant } from './Instant';\nimport { ZoneId } from './ZoneId';\nimport { ZoneOffset } from './ZoneOffset';\n\n/**\n * A clock providing access to the current instant, date and time using a time-zone.\n *\n * Instances of this class are used to find the current instant, which can be\n * interpreted using the stored time-zone to find the current date and time.\n * As such, a clock can be used instead of {@link System#currentTimeMillis}\n * and {@link TimeZone#getDefault}.\n *\n * Use of a {@link Clock} is optional. All key date-time classes also have a\n * `now()` factory method that uses the system clock in the default time zone.\n * The primary purpose of this abstraction is to allow alternate clocks to be\n * plugged in as and when required. Applications use an object to obtain the\n * current time rather than a static method. This can simplify testing.\n *\n * Best practice for applications is to pass a {@link Clock} into any method\n * that requires the current instant.\n *\n * This approach allows an alternate clock, such as {@link fixed}\n * or {@link offset} to be used during testing.\n *\n * The {@link system} factory methods provide clocks based on the best available\n * system clock This may use {@link System#currentTimeMillis}, or a higher\n * resolution clock if one is available.\n *\n * The javascript Clock implementation differs from the openjdk.\n *\n * Javascript only provides the UTC millis of epoch and the ZoneOffset in minutes of the system default time.\n * Javascript do not provide the system default ZoneId.\n *\n * the system default ZoneId is only guessable by the ZoneOffset, like moment-timezone does by returning one ZoneId\n * with the same ZoneOffset.\n *\n * Therefore we are doing a shortcut here, by defining a SystemUTCClock and a SystemDefaultClock, the Clock itself\n * is returning the ZoneOffset and not the ZoneRules as in the jdk. We should change it, when introducing the iana\n * timezone database and implementing the timezone domains.\n *\n */\n\nexport class Clock {\n    /**\n     * Obtains a clock that returns the current instant using the\n     * system clock, converting to date and time using the Date.getTime() UTC millis.\n     *\n     * This clock, rather than {@link systemDefaultZone}, should be used when\n     * you need the current instant without the date or time.\n     *\n     * @return {Clock} a clock that uses the system clock in the UTC zone, not null\n     */\n    static systemUTC() {\n        return new SystemClock(ZoneOffset.UTC);\n    }\n\n    /**\n     * Obtains a clock that returns the current instant using the best available\n     * system clock, converting to date and time using the default time-zone.\n     *\n     * This clock is based on the available system clock using the Date.getTime() UTC millis\n     *\n     * Using this method hard codes a dependency to the default time-zone into your application.\n     *\n     * The UTC clock (see {@link systemUTC}) should be used when you need the current instant\n     * without the date or time.\n     *\n     *\n     * @return {Clock} a clock that uses the system clock in the default zone, not null\n     * @see ZoneId#systemDefault()\n     */\n    static systemDefaultZone() {\n        return new SystemClock(ZoneId.systemDefault());\n    }\n\n    /**\n     *\n     * @param {ZoneId} zone\n     * @return {Clock} a clock that uses the specified time zone\n     */\n    static system(zone){\n        return new SystemClock(zone);\n    }\n\n    /**\n     * Obtains a clock that always returns the same instant.\n     *\n     * This clock simply returns the specified instant.\n     * As such, it is not a clock in the conventional sense.\n     * The main use case for this is in testing, where the fixed clock ensures\n     * tests are not dependent on the current clock.\n     *\n     * @param {Instant} fixedInstant  the instant to use as the clock, not null\n     * @param {ZoneId} zoneId  the zoneOffset to use as zone Offset, not null\n     * @return {Clock} a clock that always returns the same instant, not null\n     */\n    static fixed(fixedInstant, zoneId) {\n        return new FixedClock(fixedInstant, zoneId);\n    }\n    \n    /**\n     * Obtains a clock that returns instants from the specified clock with the\n     * specified duration added\n     * <p>\n     * This clock wraps another clock, returning instants that are later by the\n     * specified duration. If the duration is negative, the instants will be\n     * earlier than the current date and time.\n     * The main use case for this is to simulate running in the future or in the past.\n     * <p>\n     * A duration of zero would have no offsetting effect.\n     * Passing zero will return the underlying clock.\n     * <p>\n     * The returned implementation is immutable, thread-safe and {@code Serializable}\n     * providing that the base clock is.\n     *\n     * @param baseClock  the base clock to add the duration to, not null\n     * @param duration  the duration to add, not null\n     * @return a clock based on the base clock with the duration added, not null\n     */\n    static offset(baseClock, duration) {\n        return new OffsetClock(baseClock, duration);   \n    }\n\n    /**\n      * Gets the current millisecond instant of the clock.\n      *\n      * This returns the millisecond-based instant, measured from 1970-01-01T00:00Z (UTC).\n      * This is equivalent to the definition of {@link Date#getTime}.\n      *\n      * Most applications should avoid this method and use {@link Instant} to represent\n      * an instant on the time-line rather than a raw millisecond value.\n      * This method is provided to allow the use of the clock in high performance use cases\n      * where the creation of an object would be unacceptable.\n      *\n      * The default implementation currently calls {@link instant}.\n      *\n      * @return the current millisecond instant from this clock, measured from\n      *  the Java epoch of 1970-01-01T00:00Z (UTC), not null\n      */\n    millis(){\n        abstractMethodFail('Clock.millis');\n    }\n\n    /**\n     * Gets the current instant of the clock.\n     *\n     * This returns an instant representing the current instant as defined by the clock.\n     *\n     * @return {Instant} the current instant from this clock, not null\n     */\n    instant(){\n        abstractMethodFail('Clock.instant');\n    }\n\n    zone(){\n        abstractMethodFail('Clock.zone');\n    }\n    \n    /**\n     * Returns a copy of this clock with a different time-zone.\n     * <p>\n     * A clock will typically obtain the current instant and then convert that\n     * to a date or time using a time-zone. This method returns a clock with\n     * similar properties but using a different time-zone.\n     *\n     * @return a clock based on this clock with the specified time-zone, not null\n     */\n    withZone(){\n        abstractMethodFail('Clock.withZone');\n    }\n}\n\n/**\n * Implementation of a clock that always returns the latest time from\n * {@link Date#getTime}.\n *\n * @private\n */\nclass SystemClock extends Clock {\n    /**\n     *\n     * @param {!ZoneId} zone\n     */\n    constructor(zone){\n        requireNonNull(zone, 'zone');\n        super();\n        this._zone = zone;\n    }\n\n    /**\n     *\n     * @returns {!ZoneId}\n     */\n    zone() {\n        return this._zone;\n    }\n\n    /**\n     *\n     * @returns {number}\n     */\n    millis() {\n        return new Date().getTime();\n    }\n\n    /**\n     *\n     * @returns {Instant}\n     */\n    instant() {\n        return Instant.ofEpochMilli(this.millis());\n    }\n    \n    equals(obj) {    \n        if (obj instanceof SystemClock) {            \n            return this._zone.equals(obj._zone);\n        }\n        return false;    \n    }  \n      \n    withZone(zone) {\n        if (zone.equals(this._zone)) {  // intentional NPE\n            return this;\n        }\n        return new SystemClock(zone);\n    }      \n\n    /**\n     *\n     * @returns {string}\n     */\n    toString(){\n        return `SystemClock[${this._zone.toString()}]`;\n    }\n\n}\n\n/**\n * Implementation of a clock that always returns the same instant.\n * This is typically used for testing.\n * @private\n */\nclass FixedClock extends Clock{\n    constructor(fixedInstant, zoneId) {\n        super();\n        this._instant = fixedInstant;\n        this._zoneId = zoneId;\n    }\n\n    instant() {\n        return this._instant;\n    }\n\n    millis(){\n        return this._instant.toEpochMilli();\n    }\n\n    zone() {\n        return this._zoneId;\n    }\n\n    toString(){\n        return 'FixedClock[]';\n    }\n    \n    equals(obj) {    \n        if (obj instanceof FixedClock) {            \n            return this._instant.equals(obj._instant) && this._zoneId.equals(obj._zoneId);\n        }\n        return false;    \n    }\n\n    withZone(zone) {\n        if (zone.equals(this._zoneId)) {  // intentional NPE\n            return this;\n        }\n        return new FixedClock(this._instant, zone);\n    }      \n    \n}\n\n\n/**\n * Implementation of a clock that adds an offset to an underlying clock.\n */\nclass OffsetClock extends Clock {\n    constructor(baseClock, offset) {\n        super();\n        this._baseClock = baseClock;\n        this._offset = offset;\n    }\n   \n    zone() {\n        return this._baseClock.zone();\n    }\n        \n    withZone(zone) {\n        if (zone.equals(this._baseClock.zone())) {  // intentional NPE\n            return this;\n        }\n        return new OffsetClock(this._baseClock.withZone(zone), this._offset);\n    }\n    \n    millis() {\n        return this._baseClock.millis() + this._offset.toMillis();\n    }\n    \n    instant() {\n        return this._baseClock.instant().plus(this._offset);\n    }\n        \n    equals(obj) {\n        if (obj instanceof OffsetClock) {            \n            return this._baseClock.equals(obj._baseClock) && this._offset.equals(obj._offset);\n        }\n        return false;\n    }\n    \n    toString() {\n        return `OffsetClock[${this._baseClock},${this._offset}]`;\n    }\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { requireNonNull } from '../assert';\nimport { IllegalArgumentException } from '../errors';\n\nimport { Duration } from '../Duration';\nimport { LocalDateTime } from '../LocalDateTime';\n\n/**\n * A transition between two offsets caused by a discontinuity in the local time-line.\n *\n * A transition between two offsets is normally the result of a daylight savings cutover.\n * The discontinuity is normally a gap in spring and an overlap in autumn.\n * {@link ZoneOffsetTransition} models the transition between the two offsets.\n *\n * Gaps occur where there are local date-times that simply do not not exist.\n * An example would be when the offset changes from `+03:00` to `+04:00`.\n * This might be described as 'the clocks will move forward one hour tonight at 1am'.\n *\n * Overlaps occur where there are local date-times that exist twice.\n * An example would be when the offset changes from `+04:00` to `+03:00`.\n * This might be described as 'the clocks will move back one hour tonight at 2am'.\n *\n */\nexport class ZoneOffsetTransition {\n\n    //-----------------------------------------------------------------------\n    /**\n     * Obtains an instance defining a transition between two offsets.\n     *\n     * Applications should normally obtain an instance from {@link ZoneRules}.\n     * This factory is only intended for use when creating {@link ZoneRules}.\n     *\n     * @param {LocalDateTime} transition - the transition date-time at the transition, which never\n     *  actually occurs, expressed local to the before offset, not null\n     * @param {ZoneOffset} offsetBefore - the offset before the transition, not null\n     * @param {ZoneOffset} offsetAfter - the offset at and after the transition, not null\n     * @return {ZoneOffsetTransition} the transition, not null\n     * @throws IllegalArgumentException if {@link offsetBefore} and {@link offsetAfter}\n     *         are equal, or {@link transition.getNano} returns non-zero value\n     */\n    static of(transition, offsetBefore, offsetAfter) {\n        return new ZoneOffsetTransition(transition, offsetBefore, offsetAfter);\n    }\n\n    /**\n     * Creates an instance defining a transition between two offsets.\n     * Creates an instance from epoch-second if transition is not a LocalDateTimeInstance\n     *\n     * @param {(LocalDateTime \\ number)} transition - the transition date-time with the offset before the transition, not null\n     * @param {ZoneOffset} offsetBefore - the offset before the transition, not null\n     * @param {ZoneOffset} offsetAfter - the offset at and after the transition, not null\n     * @private\n     */\n    constructor(transition, offsetBefore, offsetAfter) {\n        requireNonNull(transition, 'transition');\n        requireNonNull(offsetBefore, 'offsetBefore');\n        requireNonNull(offsetAfter, 'offsetAfter');\n        if (offsetBefore.equals(offsetAfter)) {\n            throw new IllegalArgumentException('Offsets must not be equal');\n        }\n        if (transition.nano() !== 0) {\n            throw new IllegalArgumentException('Nano-of-second must be zero');\n        }\n        if(transition instanceof LocalDateTime) {\n            this._transition = transition;\n        } else {\n            this._transition = LocalDateTime.ofEpochSecond(transition, 0, offsetBefore);\n        }\n        this._offsetBefore = offsetBefore;\n        this._offsetAfter = offsetAfter;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the transition instant.\n     *\n     * This is the instant of the discontinuity, which is defined as the first\n     * instant that the 'after' offset applies.\n     *\n     * The methods {@link getInstant}, {@link getDateTimeBefore} and {@link getDateTimeAfter}\n     * all represent the same instant.\n     *\n     * @return {Instant} the transition instant, not null\n     */\n    instant() {\n        return this._transition.toInstant(this._offsetBefore);\n    }\n\n    /**\n     * Gets the transition instant as an epoch second.\n     *\n     * @return {number} the transition epoch second\n     */\n    toEpochSecond() {\n        return this._transition.toEpochSecond(this._offsetBefore);\n    }\n\n    //-------------------------------------------------------------------------\n    /**\n     * Gets the local transition date-time, as would be expressed with the 'before' offset.\n     *\n     * This is the date-time where the discontinuity begins expressed with the 'before' offset.\n     * At this instant, the 'after' offset is actually used, therefore the combination of this\n     * date-time and the 'before' offset will never occur.\n     *\n     * The combination of the 'before' date-time and offset represents the same instant\n     * as the 'after' date-time and offset.\n     *\n     * @return {LocalDateTime} the transition date-time expressed with the before offset, not null\n     */\n    dateTimeBefore(){\n        return this._transition;\n    }\n\n    /**\n     * Gets the local transition date-time, as would be expressed with the 'after' offset.\n     *\n     * This is the first date-time after the discontinuity, when the new offset applies.\n     *\n     * The combination of the 'before' date-time and offset represents the same instant\n     * as the 'after' date-time and offset.\n     *\n     * @return {LocalDateTime} the transition date-time expressed with the after offset, not null\n     */\n    dateTimeAfter() {\n        return this._transition.plusSeconds(this.durationSeconds());\n    }\n\n    /**\n     * Gets the offset before the transition.\n     *\n     * This is the offset in use before the instant of the transition.\n     *\n     * @return {ZoneOffset} the offset before the transition, not null\n     */\n    offsetBefore() {\n        return this._offsetBefore;\n    }\n\n    /**\n     * Gets the offset after the transition.\n     *\n     * This is the offset in use on and after the instant of the transition.\n     *\n     * @return {ZoneOffset} the offset after the transition, not null\n     */\n    offsetAfter() {\n        return this._offsetAfter;\n    }\n\n    /**\n     * Gets the duration of the transition.\n     *\n     * In most cases, the transition duration is one hour, however this is not always the case.\n     * The duration will be positive for a gap and negative for an overlap.\n     * Time-zones are second-based, so the nanosecond part of the duration will be zero.\n     *\n     * @return {Duration} the duration of the transition, positive for gaps, negative for overlaps\n     */\n    duration() {\n        return Duration.ofSeconds(this.durationSeconds());\n    }\n\n    /**\n     * Gets the duration of the transition in seconds.\n     *\n     * @return {number} the duration in seconds\n     */\n    durationSeconds() {\n        return this._offsetAfter.totalSeconds() - this._offsetBefore.totalSeconds();\n    }\n\n    /**\n     * Does this transition represent a gap in the local time-line.\n     *\n     * Gaps occur where there are local date-times that simply do not not exist.\n     * An example would be when the offset changes from `+01:00` to `+02:00`.\n     * This might be described as 'the clocks will move forward one hour tonight at 1am'.\n     *\n     * @return {boolean} true if this transition is a gap, false if it is an overlap\n     */\n    isGap() {\n        return this._offsetAfter.totalSeconds() > this._offsetBefore.totalSeconds();\n    }\n\n    /**\n     * Does this transition represent a gap in the local time-line.\n     *\n     * Overlaps occur where there are local date-times that exist twice.\n     * An example would be when the offset changes from `+02:00` to `+01:00`.\n     * This might be described as 'the clocks will move back one hour tonight at 2am'.\n     *\n     * @return {boolean} true if this transition is an overlap, false if it is a gap\n     */\n    isOverlap() {\n        return this._offsetAfter.totalSeconds() < this._offsetBefore.totalSeconds();\n    }\n\n    /**\n     * Checks if the specified offset is valid during this transition.\n     *\n     * This checks to see if the given offset will be valid at some point in the transition.\n     * A gap will always return false.\n     * An overlap will return true if the offset is either the before or after offset.\n     *\n     * @param {ZoneOffset} offset - the offset to check, null returns false\n     * @return {boolean} true if the offset is valid during the transition\n     */\n    isValidOffset(offset) {\n        return this.isGap() ? false : (this._offsetBefore.equals(offset) || this._offsetAfter.equals(offset));\n    }\n\n    /**\n     * Gets the valid offsets during this transition.\n     *\n     * A gap will return an empty list, while an overlap will return both offsets.\n     *\n     * @return {ZoneOffset[]} the list of valid offsets\n     */\n    validOffsets() {\n        if (this.isGap()){\n            return [];\n        } else {\n            return [this._offsetBefore, this._offsetAfter];\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Compares this transition to another based on the transition instant.\n     *\n     * This compares the instants of each transition.\n     * The offsets are ignored, making this order inconsistent with equals.\n     *\n     * @param {ZoneOffsetTransition} transition - the transition to compare to, not null\n     * @return {number} the comparator value, negative if less, positive if greater\n     */\n    compareTo(transition) {\n        return this.instant().compareTo(transition.instant());\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Checks if this object equals another.\n     *\n     * The entire state of the object is compared.\n     *\n     * @param {*} other - the other object to compare to, null returns false\n     * @return true if equal\n     */\n    equals(other) {\n        if (other === this) {\n            return true;\n        }\n        if (other instanceof ZoneOffsetTransition) {\n            const d = other;\n            return this._transition.equals(d._transition) &&\n                this._offsetBefore.equals(d.offsetBefore()) && this._offsetAfter.equals(d.offsetAfter());\n        }\n        return false;\n    }\n\n    /**\n     * Returns a suitable hash code.\n     *\n     * @return {number} the hash code\n     */\n    hashCode() {\n        return this._transition.hashCode() ^ this._offsetBefore.hashCode() ^ (this._offsetAfter.hashCode()>>>16);\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a string describing this object.\n     *\n     * @return {string} a string for debugging, not null\n     */\n    toString() {\n        return `Transition[${this.isGap() ? 'Gap' : 'Overlap' \n        } at ${this._transition.toString()}${this._offsetBefore.toString() \n        } to ${this._offsetAfter}]`;\n    }\n\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { ZoneRules } from './ZoneRules';\nimport { ZoneOffset } from '../ZoneOffset';\nimport { DateTimeException } from '../errors';\n\nexport class SystemDefaultZoneRules extends ZoneRules {\n\n    isFixedOffset(){\n        return false;\n    }\n\n    /**\n     *\n     * @param {Instant} instant\n     * @returns {ZoneOffset}\n     */\n    offsetOfInstant(instant){\n        const offsetInMinutes = new Date(instant.toEpochMilli()).getTimezoneOffset();\n        return ZoneOffset.ofTotalMinutes(offsetInMinutes * -1);\n    }\n\n    /**\n     *\n     * @param {number} epochMilli\n     * @returns {ZoneOffset}\n     */\n    offsetOfEpochMilli(epochMilli){\n        const offsetInMinutes = new Date(epochMilli).getTimezoneOffset();\n        return ZoneOffset.ofTotalMinutes(offsetInMinutes * -1);\n    }\n\n    /**\n     * This implementation is NOT returning the best value in a gap or overlap situation\n     * as specified at {@link ZoneRules.offsetOfLocalDateTime}.\n     *\n     * The calculated offset depends Date.prototype.getTimezoneOffset and its not specified\n     * at the ECMA-262 specification how to handle daylight savings gaps/ overlaps.\n     *\n     * The Chrome Browser version 49 is returning the next transition offset in a gap/overlap situation,\n     * other browsers/ engines might do it in the same way.\n     *\n     * @param {LocalDateTime} localDateTime\n     * @returns {ZoneOffset}\n     */\n    offsetOfLocalDateTime(localDateTime){\n        const epochMilli = localDateTime.toEpochSecond(ZoneOffset.UTC) * 1000;\n        const offsetInMinutesBeforePossibleTransition = new Date(epochMilli).getTimezoneOffset();\n        const epochMilliSystemZone = epochMilli + offsetInMinutesBeforePossibleTransition * 60000;\n        const offsetInMinutesAfterPossibleTransition = new Date(epochMilliSystemZone).getTimezoneOffset();\n        return ZoneOffset.ofTotalMinutes(offsetInMinutesAfterPossibleTransition * -1);\n    }\n\n    /**\n     *\n     * @param localDateTime\n     * @return {ZoneOffset[]}\n     */\n    validOffsets(localDateTime){\n        return [this.offsetOfLocalDateTime(localDateTime)];\n    }\n\n    /**\n     * @return null, not supported\n     */\n    transition(){\n        return null;\n    }\n\n    /**\n     *\n     * @param instant\n     * @return {ZoneOffset}\n     */\n    standardOffset(instant){\n        return this.offsetOfInstant(instant);\n    }\n\n    /**\n     * @throws DateTimeException not supported\n     */\n    daylightSavings(){\n        this._throwNotSupported();\n    }\n\n    /**\n     * @throws DateTimeException not supported\n     */\n    isDaylightSavings(){\n        this._throwNotSupported();\n    }\n\n    /**\n     *\n     * @param {LocalDateTime} dateTime\n     * @param {ZoneOffset} offset\n     * @return {boolean}\n     */\n    isValidOffset(dateTime, offset) {\n        return this.offsetOfLocalDateTime(dateTime).equals(offset);\n    }\n\n    /**\n     * @throws DateTimeException not supported\n     */\n    nextTransition(){\n        this._throwNotSupported();\n    }\n\n    /**\n     * @throws DateTimeException not supported\n     */\n    previousTransition(){\n        this._throwNotSupported();\n    }\n\n    /**\n     * @throws DateTimeException not supported\n     */\n    transitions(){\n        this._throwNotSupported();\n    }\n\n    /**\n     * @throws DateTimeException not supported\n     */\n    transitionRules(){\n        this._throwNotSupported();\n    }\n\n    /**\n     * @throws DateTimeException not supported\n     */\n    _throwNotSupported(){\n        throw new DateTimeException('not supported operation');\n    }\n    //-----------------------------------------------------------------------\n    /**\n     *\n     * @param {*} other\n     * @returns {boolean}\n     */\n    equals(other) {\n        if (this === other || other instanceof SystemDefaultZoneRules) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    toString() {\n        return 'SYSTEM';\n    }\n\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { SystemDefaultZoneRules } from './SystemDefaultZoneRules';\nimport { ZoneId } from '../ZoneId';\n\nexport class SystemDefaultZoneId extends ZoneId {\n\n    constructor(){\n        super();\n        this._rules = new SystemDefaultZoneRules();\n    }\n\n    rules(){\n        return this._rules;\n    }\n\n    equals(other){\n        if(this === other){\n            return true;\n        }\n        return false;\n    }\n\n    id(){\n        return 'SYSTEM';\n    }\n\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { requireNonNull } from './assert';\nimport { DateTimeException, IllegalArgumentException } from './errors';\nimport { StringUtil } from './StringUtil';\n\nimport { ZoneOffset } from './ZoneOffset';\nimport { ZoneRegion } from './ZoneRegion';\nimport { ZoneId } from './ZoneId';\n\nimport { TemporalQueries } from './temporal/TemporalQueries';\nimport { SystemDefaultZoneId } from './zone/SystemDefaultZoneId';\nimport { ZoneRulesProvider } from './zone/ZoneRulesProvider';\n\n/**\n * @see {@link ZoneId}\n *\n * Helper class to avoid dependency cycles.\n * Static methods of the class ZoneIdFactory are added automatically to class ZoneId.\n * @private\n */\nexport class ZoneIdFactory {\n\n    /**\n     * Gets the system default time-zone.\n     *\n     *\n     * @return {ZoneId} the zone ID, not null\n     */\n    static systemDefault() {\n        return SYSTEM_DEFAULT_ZONE_ID_INSTANCE;\n    }\n\n    /**\n     * Gets the set of available zone IDs.\n     *\n     * This set includes the string form of all available region-based IDs.\n     * Offset-based zone IDs are not included in the returned set.\n     * The ID can be passed to {@link of} to create a {@link ZoneId}.\n     *\n     * The set of zone IDs can increase over time, although in a typical application\n     * the set of IDs is fixed. Each call to this method is thread-safe.\n     *\n     * @return {string[]} a modifiable copy of the set of zone IDs, not null\n     */\n    static getAvailableZoneIds() {\n        return ZoneRulesProvider.getAvailableZoneIds();\n    }\n\n    /**\n     * Obtains an instance of {@link ZoneId} from an ID ensuring that the\n     * ID is valid and available for use.\n     *\n     * This method parses the ID producing a {@link ZoneId} or {@link ZoneOffset}.\n     * A {@link ZoneOffset} is returned if the ID is 'Z', or starts with '+' or '-'.\n     * The result will always be a valid ID for which {@link ZoneRules} can be obtained.\n     *\n     * Parsing matches the zone ID step by step as follows.\n     *\n     * * If the zone ID equals 'Z', the result is {@link ZoneOffset.UTC}.\n     * * If the zone ID consists of a single letter, the zone ID is invalid\n     *   and {@link DateTimeException} is thrown.\n     * * If the zone ID starts with '+' or '-', the ID is parsed as a\n     *   {@link ZoneOffset} using {@link ZoneOffset#of}.\n     * * If the zone ID equals 'GMT', 'UTC' or 'UT' then the result is a {@link ZoneId}\n     *   with the same ID and rules equivalent to {@link ZoneOffset.UTC}.\n     * * If the zone ID starts with 'UTC+', 'UTC-', 'GMT+', 'GMT-', 'UT+' or 'UT-'\n     *   then the ID is a prefixed offset-based ID. The ID is split in two, with\n     *   a two or three letter prefix and a suffix starting with the sign.\n     *   The suffix is parsed as a {@link ZoneOffset}.\n     *   The result will be a {@link ZoneId} with the specified UTC/GMT/UT prefix\n     *   and the normalized offset ID as per {@link ZoneOffset#getId}.\n     *   The rules of the returned {@link ZoneId} will be equivalent to the\n     *   parsed {@link ZoneOffset}.\n     * * All other IDs are parsed as region-based zone IDs. Region IDs must\n     *   match the regular expression `[A-Za-z][A-Za-z0-9~/._+-]+`,\n     *   otherwise a {@link DateTimeException} is thrown. If the zone ID is not\n     *   in the configured set of IDs, {@link ZoneRulesException} is thrown.\n     *   The detailed format of the region ID depends on the group supplying the data.\n     *   The default set of data is supplied by the IANA Time Zone Database (TZDB).\n     *   This has region IDs of the form '{area}/{city}', such as 'Europe/Paris' or 'America/New_York'.\n     *   This is compatible with most IDs from {@link java.util.TimeZone}.\n     *\n     * @param {string} zoneId  the time-zone ID, not null\n     * @return {ZoneId} the zone ID, not null\n     * @throws DateTimeException if the zone ID has an invalid format\n     * @throws ZoneRulesException if the zone ID is a region ID that cannot be found\n     */\n    static of(zoneId) {\n        requireNonNull(zoneId, 'zoneId');\n        if (zoneId === 'Z') {\n            return ZoneOffset.UTC;\n        }\n        if (zoneId.length === 1) {\n            throw new DateTimeException(`Invalid zone: ${zoneId}`);\n        }\n        if (StringUtil.startsWith(zoneId, '+') || StringUtil.startsWith(zoneId, '-')) {\n            return ZoneOffset.of(zoneId);\n        }\n        if (zoneId === 'UTC' || zoneId === 'GMT' || zoneId === 'GMT0' || zoneId === 'UT') {\n            return new ZoneRegion(zoneId, ZoneOffset.UTC.rules());\n        }\n        if (StringUtil.startsWith(zoneId, 'UTC+') || StringUtil.startsWith(zoneId, 'GMT+') ||\n                StringUtil.startsWith(zoneId, 'UTC-') || StringUtil.startsWith(zoneId, 'GMT-')) {\n            const offset = ZoneOffset.of(zoneId.substring(3));\n            if (offset.totalSeconds() === 0) {\n                return new ZoneRegion(zoneId.substring(0, 3), offset.rules());\n            }\n            return new ZoneRegion(zoneId.substring(0, 3) + offset.id(), offset.rules());\n        }\n        if (StringUtil.startsWith(zoneId, 'UT+') || StringUtil.startsWith(zoneId, 'UT-')) {\n            const offset = ZoneOffset.of(zoneId.substring(2));\n            if (offset.totalSeconds() === 0) {\n                return new ZoneRegion('UT', offset.rules());\n            }\n            return new ZoneRegion(`UT${offset.id()}`, offset.rules());\n        }\n        // javascript special case\n        if(zoneId === 'SYSTEM'){\n            return ZoneId.systemDefault();\n        }\n        return ZoneRegion.ofId(zoneId);\n    }\n\n    /**\n     * Obtains an instance of {@link ZoneId} wrapping an offset.\n     *\n     * If the prefix is 'GMT', 'UTC', or 'UT' a {@link ZoneId}\n     * with the prefix and the non-zero offset is returned.\n     * If the prefix is empty `''` the {@link ZoneOffset} is returned.\n     *\n     * @param {string} prefix  the time-zone ID, not null\n     * @param {ZoneOffset} offset  the offset, not null\n     * @return {ZoneId} the zone ID, not null\n     * @throws IllegalArgumentException if the prefix is not one of\n     *     'GMT', 'UTC', or 'UT', or ''\n     */\n    static ofOffset(prefix, offset) {\n        requireNonNull(prefix, 'prefix');\n        requireNonNull(offset, 'offset');\n        if (prefix.length === 0) {\n            return offset;\n        }\n        if (prefix === 'GMT' || prefix === 'UTC' || prefix === 'UT') {\n            if (offset.totalSeconds() === 0) {\n                return new ZoneRegion(prefix, offset.rules());\n            }\n            return new ZoneRegion(prefix + offset.id(), offset.rules());\n        }\n        throw new IllegalArgumentException(`Invalid prefix, must be GMT, UTC or UT: ${prefix}`);\n    }\n\n\n    /**\n     * Obtains an instance of {@link ZoneId} from a temporal object.\n     *\n     * A {@link TemporalAccessor} represents some form of date and time information.\n     * This factory converts the arbitrary temporal object to an instance of {@link ZoneId}.\n     *\n     * The conversion will try to obtain the zone in a way that favours region-based\n     * zones over offset-based zones using {@link TemporalQueries#zone}.\n     *\n     * This method matches the signature of the functional interface {@link TemporalQuery}\n     * allowing it to be used in queries via method reference, {@link ZoneId::from}.\n     *\n     * @param {!TemporalAccessor} temporal - the temporal object to convert, not null\n     * @return {ZoneId} the zone ID, not null\n     * @throws DateTimeException if unable to convert to a {@link ZoneId}\n     */\n    static from(temporal) {\n        requireNonNull(temporal, 'temporal');\n        const obj = temporal.query(TemporalQueries.zone());\n        if (obj == null) {\n            throw new DateTimeException(`Unable to obtain ZoneId from TemporalAccessor: ${ \n                temporal}, type ${temporal.constructor != null ? temporal.constructor.name : ''}`);\n        }\n        return obj;\n    }\n}\n\nlet SYSTEM_DEFAULT_ZONE_ID_INSTANCE = null;\n\nexport function _init(){\n    SYSTEM_DEFAULT_ZONE_ID_INSTANCE = new SystemDefaultZoneId();\n\n    // a bit magic to stay a bit more to the threeten bp impl.\n    ZoneId.systemDefault = ZoneIdFactory.systemDefault;\n    ZoneId.getAvailableZoneIds = ZoneIdFactory.getAvailableZoneIds;\n    ZoneId.of = ZoneIdFactory.of;\n    ZoneId.ofOffset = ZoneIdFactory.ofOffset;\n    ZoneId.from = ZoneIdFactory.from;\n    ZoneOffset.from = ZoneIdFactory.from;\n\n    // short cut\n    ZoneId.SYSTEM = SYSTEM_DEFAULT_ZONE_ID_INSTANCE;\n    ZoneId.UTC = ZoneOffset.ofTotalSeconds(0);\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { _init as ZoneOffsetInit } from './ZoneOffset';\nimport { _init as DayOfWeekInit } from './DayOfWeek';\nimport { _init as DurationInit } from './Duration';\nimport { _init as InstantInit } from './Instant';\nimport { _init as LocalDateInit } from './LocalDate';\nimport { _init as LocalTimeInit } from './LocalTime';\nimport { _init as LocalDateTimeInit } from './LocalDateTime';\nimport { _init as MonthInit } from './Month';\nimport { _init as MonthDayInit } from './MonthDay';\nimport { _init as OffsetDateTimeInit } from './OffsetDateTime';\nimport { _init as OffsetTimeInit } from './OffsetTime';\nimport { _init as PeriodInit } from './Period';\nimport { _init as YearInit } from './Year';\nimport { _init as YearConstantsInit } from './YearConstants';\nimport { _init as YearMonthInit } from './YearMonth';\nimport { _init as ZonedDateTimeInit } from './ZonedDateTime';\nimport { _init as IsoChronologyInit } from './chrono/IsoChronology';\nimport { _init as DateTimeFormatterInit } from './format/DateTimeFormatter';\nimport { _init as ChronoFieldInit } from './temporal/ChronoField';\nimport { _init as ChronoUnitInit } from './temporal/ChronoUnit';\nimport { _init as IsoFieldsInit } from './temporal/IsoFields';\nimport { _init as DateTimeFormatterBuilderInit } from './format/DateTimeFormatterBuilder';\n\nimport { _init as TemporalQueriesInit } from './temporal/TemporalQueriesFactory';\nimport { _init as ZoneIdInit } from './ZoneIdFactory';\n\nlet isInit = false;\n\nfunction init() {\n\n    if (isInit) {\n        return;\n    }\n\n    isInit = true;\n\n    YearConstantsInit();\n    DurationInit();\n    ChronoUnitInit();\n    ChronoFieldInit();\n    LocalTimeInit();\n    IsoFieldsInit();\n    TemporalQueriesInit();\n    DayOfWeekInit();\n    InstantInit();\n    LocalDateInit();\n    LocalDateTimeInit();\n    YearInit();\n    MonthInit();\n    YearMonthInit();\n    MonthDayInit();\n    PeriodInit();\n    ZoneOffsetInit();\n    ZonedDateTimeInit();\n    ZoneIdInit();\n    IsoChronologyInit();\n    DateTimeFormatterInit();\n    DateTimeFormatterBuilderInit();\n    OffsetDateTimeInit();\n    OffsetTimeInit();\n}\n\ninit();\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { ChronoField } from './ChronoField';\nimport { createTemporalQuery } from './TemporalQuery';\nimport { TemporalQueries } from './TemporalQueries';\n\nimport { LocalDate } from '../LocalDate';\nimport { LocalTime } from '../LocalTime';\nimport { ZoneOffset } from '../ZoneOffset';\n\n\nexport function _init() {\n    //-----------------------------------------------------------------------\n    /**\n     * A strict query for the {@link ZoneId}.\n     */\n    TemporalQueries.ZONE_ID = createTemporalQuery('ZONE_ID', (temporal) => {\n        return temporal.query(TemporalQueries.ZONE_ID);\n    });\n\n    /**\n     * A query for the {@link Chronology}.\n     */\n    TemporalQueries.CHRONO = createTemporalQuery('CHRONO', (temporal) => {\n        return temporal.query(TemporalQueries.CHRONO);\n    });\n\n    /**\n     * A query for the smallest supported unit.\n     */\n    TemporalQueries.PRECISION = createTemporalQuery('PRECISION', (temporal) => {\n        return temporal.query(TemporalQueries.PRECISION);\n    });\n\n    //-----------------------------------------------------------------------\n    /**\n     * A query for {@link ZoneOffset} returning null if not found.\n     */\n    TemporalQueries.OFFSET = createTemporalQuery('OFFSET', (temporal) => {\n        if (temporal.isSupported(ChronoField.OFFSET_SECONDS)) {\n            return ZoneOffset.ofTotalSeconds(temporal.get(ChronoField.OFFSET_SECONDS));\n        }\n        return null;\n    });\n\n    /**\n     * A lenient query for the {@link ZoneId}, falling back to the {@link ZoneOffset}.\n     */\n    TemporalQueries.ZONE = createTemporalQuery('ZONE', (temporal) => {\n        const zone = temporal.query(TemporalQueries.ZONE_ID);\n        return (zone != null ? zone : temporal.query(TemporalQueries.OFFSET));\n    });\n\n    /**\n     * A query for {@link LocalDate} returning null if not found.\n     */\n    TemporalQueries.LOCAL_DATE = createTemporalQuery('LOCAL_DATE', (temporal) => {\n        if (temporal.isSupported(ChronoField.EPOCH_DAY)) {\n            return LocalDate.ofEpochDay(temporal.getLong(ChronoField.EPOCH_DAY));\n        }\n        return null;\n    });\n\n    /**\n     * A query for {@link LocalTime} returning null if not found.\n     */\n    TemporalQueries.LOCAL_TIME = createTemporalQuery('LOCAL_TIME', (temporal) => {\n        if (temporal.isSupported(ChronoField.NANO_OF_DAY)) {\n            return LocalTime.ofNanoOfDay(temporal.getLong(ChronoField.NANO_OF_DAY));\n        }\n        return null;\n    });\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { IllegalArgumentException } from './errors';\n\nimport { LocalDate } from './LocalDate';\nimport { LocalDateTime } from './LocalDateTime';\nimport { ZonedDateTime } from './ZonedDateTime';\nimport { ZoneId } from './ZoneId';\nimport { Instant } from './Instant';\n\nclass ToNativeJsConverter {\n    /**\n     * @param {!(LocalDate|LocalDateTime|ZonedDateTime|Instant)} temporal - a joda temporal instance\n     * @param {ZoneId} [zone] - the zone of the temporal,\n     *  the default value for LocalDate and LocalDateTime is ZoneId.systemDefault().\n     */\n    constructor(temporal, zone){\n        let zonedDateTime;\n\n        if(temporal instanceof Instant) {\n            this.instant = temporal;\n            return;\n        } else if(temporal instanceof LocalDate) {\n            zone = zone == null ?  ZoneId.systemDefault() : zone;\n            zonedDateTime = temporal.atStartOfDay(zone);\n        } else if (temporal instanceof LocalDateTime) {\n            zone = zone == null ? ZoneId.systemDefault() : zone;\n            zonedDateTime = temporal.atZone(zone);\n        } else if (temporal instanceof ZonedDateTime) {\n            if (zone == null) {\n                zonedDateTime = temporal;\n            } else {\n                zonedDateTime = temporal.withZoneSameInstant(zone);\n            }\n        } else {\n            throw new IllegalArgumentException(`unsupported instance for convert operation:${temporal}`);\n        }\n\n        this.instant = zonedDateTime.toInstant();\n    }\n\n    /**\n     *\n     * @returns {Date}\n     */\n    toDate() {\n        return new Date(this.instant.toEpochMilli());\n    }\n\n    /**\n     *\n     * @returns {number}\n     */\n    toEpochMilli() {\n        return this.instant.toEpochMilli();\n    }\n}\n\n/**\n * converts a LocalDate, LocalDateTime or ZonedDateTime to a native Javascript Date.\n *\n * In a first step the temporal is converted to an Instant by adding implicit values.\n * \n * A LocalDate is implicit set to a LocalDateTime at start of day. \n * A LocalDateTime is implicit set to a ZonedDateTime with \n * the passed zone or if null, with the system default time zone. \n * A ZonedDateTime is converted to an Instant, if a zone is specified the zonedDateTime is adjusted to this \n * zone, keeping the same Instant.\n *\n * In a second step the instant is converted to a native Javascript Date\n *\n * default zone for LocalDate and LocalDateTime is ZoneId.systemDefault().\n *\n * @example\n * convert(localDate).toDate() // returns a javascript Date\n * convert(localDate).toEpochMilli()   // returns the epochMillis\n *\n * @param {!(LocalDate|LocalDateTime|ZonedDateTime)} temporal - a joda temporal instance\n * @param {ZoneId} [zone] - the zone of the temporal\n * @returns {ToNativeJsConverter}\n */\nexport function convert(temporal, zone){\n    return new ToNativeJsConverter(temporal, zone);\n}\n","/*\n * @copyright (c) 2015-present, Philipp Thürwächter, Pattrick Hüper & js-joda contributors\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { requireNonNull } from './assert';\nimport { IllegalArgumentException } from './errors';\nimport { Instant, ZoneId } from './js-joda';\n\n/**\n * Creates ZonedDateTime from a javascript Date or a moment instance.\n * @param {!(Date|moment)} date - a javascript Date or a moment instance\n * @param {ZoneId} [zone = ZoneId.systemDefault()] - the zone of the returned ZonedDateTime, defaults to ZoneId.systemDefault()\n * @returns {ZonedDateTime}\n */\nexport function nativeJs(date, zone = ZoneId.systemDefault()) {\n    requireNonNull(date, 'date');\n    requireNonNull(zone, 'zone');\n    if(date instanceof Date) {\n        return Instant.ofEpochMilli(date.getTime()).atZone(zone);\n    } else if(typeof date.toDate === 'function' &&  date.toDate() instanceof Date) {\n        return Instant.ofEpochMilli(date.toDate().getTime()).atZone(zone);\n    }\n    throw new IllegalArgumentException('date must be a javascript Date or a moment instance');\n}\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport {\n    ArithmeticException,\n    DateTimeException,\n    DateTimeParseException,\n    IllegalArgumentException,\n    IllegalStateException,\n    UnsupportedTemporalTypeException,\n    NullPointerException\n} from './errors';\n\nimport { Clock } from './Clock';\nimport { DayOfWeek } from './DayOfWeek';\nimport { Duration } from './Duration';\nimport { Instant } from './Instant';\nimport { LocalDate } from './LocalDate';\nimport { LocalTime } from './LocalTime';\nimport { LocalDateTime } from './LocalDateTime';\nimport { Month } from './Month';\nimport { MonthDay } from './MonthDay';\nimport { OffsetDateTime } from './OffsetDateTime';\nimport { OffsetTime } from './OffsetTime';\nimport { Period } from './Period';\nimport { Year } from './Year';\nimport { YearConstants } from './YearConstants';\nimport { YearMonth } from './YearMonth';\nimport { ZonedDateTime } from './ZonedDateTime';\nimport { ZoneOffset } from './ZoneOffset';\nimport { ZoneId } from './ZoneId';\nimport { ZoneRegion } from './ZoneRegion';\n\nimport { ZoneOffsetTransition } from './zone/ZoneOffsetTransition';\nimport { ZoneRules } from './zone/ZoneRules';\nimport { ZoneRulesProvider } from './zone/ZoneRulesProvider';\n\nimport { ChronoLocalDate } from './chrono/ChronoLocalDate';\nimport { ChronoLocalDateTime } from './chrono/ChronoLocalDateTime';\nimport { ChronoZonedDateTime } from './chrono/ChronoZonedDateTime';\nimport { IsoChronology } from './chrono/IsoChronology';\n\nimport { ChronoField } from './temporal/ChronoField';\nimport { ChronoUnit } from './temporal/ChronoUnit';\nimport { IsoFields } from './temporal/IsoFields';\nimport { Temporal } from './temporal/Temporal';\nimport { TemporalAccessor } from './temporal/TemporalAccessor';\nimport { TemporalAdjuster } from './temporal/TemporalAdjuster';\nimport { TemporalAdjusters } from './temporal/TemporalAdjusters';\nimport { TemporalAmount } from './temporal/TemporalAmount';\nimport { TemporalField } from './temporal/TemporalField';\nimport { TemporalQueries } from './temporal/TemporalQueries';\nimport { TemporalQuery } from './temporal/TemporalQuery';\nimport { TemporalUnit } from './temporal/TemporalUnit';\nimport { ValueRange } from './temporal/ValueRange';\n\nimport { DateTimeFormatter } from './format/DateTimeFormatter';\nimport { DateTimeFormatterBuilder } from './format/DateTimeFormatterBuilder';\nimport { DecimalStyle } from './format/DecimalStyle';\nimport { ParsePosition } from './format/ParsePosition';\nimport { ResolverStyle } from './format/ResolverStyle';\nimport { SignStyle } from './format/SignStyle';\nimport { TextStyle } from './format/TextStyle';\n\n// init static properties\nimport './_init';\n\n// private/internal exports, e.g. for use in plugins\nimport { MathUtil } from './MathUtil';\nimport { StringUtil } from './StringUtil';\nimport { DateTimeBuilder } from './format/DateTimeBuilder';\nimport { DateTimeParseContext } from './format/DateTimeParseContext';\nimport { DateTimePrintContext } from './format/DateTimePrintContext';\nimport { StringBuilder } from './format/StringBuilder';\nimport * as assert from './assert';\n\nimport { convert } from './convert';\nimport { nativeJs } from './nativeJs';\nimport { bindUse } from './use';\n\nconst _ = {\n    assert,\n    DateTimeBuilder,\n    DateTimeParseContext,\n    DateTimePrintContext,\n    MathUtil,\n    StringUtil,\n    StringBuilder,\n};\n\nconst jsJodaExports = {\n    _,\n    convert,\n    nativeJs,\n    ArithmeticException,\n    DateTimeException,\n    DateTimeParseException,\n    IllegalArgumentException,\n    IllegalStateException,\n    UnsupportedTemporalTypeException,\n    NullPointerException,\n    Clock,\n    DayOfWeek,\n    Duration,\n    Instant,\n    LocalDate,\n    LocalTime,\n    LocalDateTime,\n    OffsetTime,\n    OffsetDateTime,\n    Month,\n    MonthDay,\n    ParsePosition,\n    Period,\n    Year,\n    YearConstants,\n    YearMonth,\n    ZonedDateTime,\n    ZoneOffset,\n    ZoneId,\n    ZoneRegion,\n    ZoneOffsetTransition,\n    ZoneRules,\n    ZoneRulesProvider,\n    ChronoLocalDate,\n    ChronoLocalDateTime,\n    ChronoZonedDateTime,\n    IsoChronology,\n    ChronoField,\n    ChronoUnit,\n    IsoFields,\n    Temporal,\n    TemporalAccessor,\n    TemporalAdjuster,\n    TemporalAdjusters,\n    TemporalAmount,\n    TemporalField,\n    TemporalQueries,\n    TemporalQuery,\n    TemporalUnit,\n    ValueRange,\n    DateTimeFormatter,\n    DateTimeFormatterBuilder,\n    DecimalStyle,\n    ResolverStyle,\n    SignStyle,\n    TextStyle,\n};\n\n/**\n * @private\n *\n * @type { function(function(jsJoda: JsJoda) }\n */\nconst use = bindUse(jsJodaExports);\njsJodaExports.use = use;\n\nexport {\n    _,\n    use,\n    convert,\n    nativeJs,\n    ArithmeticException,\n    DateTimeException,\n    DateTimeParseException,\n    IllegalArgumentException,\n    IllegalStateException,\n    UnsupportedTemporalTypeException,\n    NullPointerException,\n    Clock,\n    DayOfWeek,\n    Duration,\n    Instant,\n    LocalDate,\n    LocalTime,\n    LocalDateTime,\n    Month,\n    MonthDay,\n    OffsetTime,\n    OffsetDateTime,\n    Period,\n    ParsePosition,\n    Year,\n    YearConstants,\n    YearMonth,\n    ZonedDateTime,\n    ZoneOffset,\n    ZoneId,\n    ZoneRegion,\n    ZoneOffsetTransition,\n    ZoneRules,\n    ZoneRulesProvider,\n    ChronoLocalDate,\n    ChronoLocalDateTime,\n    ChronoZonedDateTime,\n    IsoChronology,\n    ChronoField,\n    ChronoUnit,\n    IsoFields,\n    Temporal,\n    TemporalAccessor,\n    TemporalAdjuster,\n    TemporalAdjusters,\n    TemporalAmount,\n    TemporalField,\n    TemporalQueries,\n    TemporalQuery,\n    TemporalUnit,\n    ValueRange,\n    DateTimeFormatter,\n    DateTimeFormatterBuilder,\n    DecimalStyle,\n    ResolverStyle,\n    SignStyle,\n    TextStyle,\n};\n","/**\n * @private\n *\n * @param jsJoda\n * @returns { function(jsJoda: JsJoda) }\n */\nexport function bindUse(jsJoda) {\n    const used = [];\n\n    /**\n     * use\n     *\n     * Provides a way to extend the internals of js-joda\n     *\n     * @param {function} fn - function to extend js-joda public api\n     * @returns {this} for chaining\n     */\n    return function use(fn) {\n        if (!~used.indexOf(fn)) {\n            fn(jsJoda);\n            used.push(fn);\n        }\n        return jsJoda;\n    };\n}\n","/*\n * @copyright (c) 2016-present, Philipp Thürwächter, Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport {\n    LocalDateTime, Instant, ZoneOffset, ZoneOffsetTransition, ZoneRules\n} from '@js-joda/core';\n\nexport class MomentZoneRules extends ZoneRules{\n    constructor(tzdbInfo){\n        super();\n        this._tzdbInfo = tzdbInfo;\n        this._ldtUntils = new LDTUntils(this._tzdbInfo.untils, this._tzdbInfo.offsets);\n    }\n    /**\n     * Checks of the zone rules are fixed, such that the offset never varies.\n     *\n     * @return {boolean} true if the time-zone is fixed and the offset never changes\n     */\n    isFixedOffset(){\n        return this._tzdbInfo.offsets.length === 1;\n    }\n\n    //-----------------------------------------------------------------------\n\n    /**\n     * Gets the offset applicable at the specified instant in these rules.\n     * <p>\n     * The mapping from an instant to an offset is simple, there is only\n     * one valid offset for each instant.\n     * This method returns that offset.\n     *\n     * @param {Instant} instant - the instant to find the offset for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset} the offset, not null\n     */\n    offsetOfInstant(instant){\n        const epochMilli = instant.toEpochMilli();\n        return this.offsetOfEpochMilli(epochMilli);\n    }\n\n    /**\n     * Gets the offset applicable at the specified epochMilli in these rules.\n     *\n     * The method is for javascript performance optimisation.\n     *\n     * @param {number} epochMilli - the epoch millisecond to find the offset for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset} the offset, not null\n     */\n    offsetOfEpochMilli(epochMilli){\n        const index  = binarySearch(this._tzdbInfo.untils, epochMilli);\n        return ZoneOffset.ofTotalSeconds(this._offsetByIndexInSeconds(index));\n    }\n\n\n    /**\n     * Gets a suitable offset for the specified local date-time in these rules.\n     * <p>\n     * The mapping from a local date-time to an offset is not straightforward.\n     * There are three cases:\n     * <p><ul>\n     * <li>Normal, with one valid offset. For the vast majority of the year, the normal\n     *  case applies, where there is a single valid offset for the local date-time.</li>\n     * <li>Gap, with zero valid offsets. This is when clocks jump forward typically\n     *  due to the spring daylight savings change from \"winter\" to \"summer\".\n     *  In a gap there are local date-time values with no valid offset.</li>\n     * <li>Overlap, with two valid offsets. This is when clocks are set back typically\n     *  due to the autumn daylight savings change from \"summer\" to \"winter\".\n     *  In an overlap there are local date-time values with two valid offsets.</li>\n     * </ul><p>\n     * Thus, for any given local date-time there can be zero, one or two valid offsets.\n     * This method returns the single offset in the Normal case, and in the Gap or Overlap\n     * case it returns the offset before the transition.\n     * <p>\n     * Since, in the case of Gap and Overlap, the offset returned is a \"best\" value, rather\n     * than the \"correct\" value, it should be treated with care. Applications that care\n     * about the correct offset should use a combination of this method,\n     * {@link #getValidOffsets(LocalDateTime)} and {@link #getTransition(LocalDateTime)}.\n     *\n     * @param {LocalDateTime} localDateTime - the local date-time to query, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset} the best available offset for the local date-time, not null\n     */\n    offsetOfLocalDateTime(localDateTime){\n        const info = this._offsetInfo(localDateTime);\n        if (info instanceof ZoneOffsetTransition) {\n            return info.offsetBefore();\n        }\n        return info;\n    }\n\n    _offsetInfo(localDateTime) {\n        const index  = ldtBinarySearch(this._ldtUntils, localDateTime);\n        const offsetIndex = index >> 1;\n\n        if (index % 2 === 1){\n            const ldtBefore = this._ldtUntils.get(Math.max(index-1, 0));\n            const ldtAfter = this._ldtUntils.get(Math.min(index, this._ldtUntils.size-1));\n            const offsetBefore = ZoneOffset.ofTotalSeconds(this._offsetByIndexInSeconds(offsetIndex));\n            const offsetAfter = ZoneOffset.ofTotalSeconds(this._offsetByIndexInSeconds(Math.min(offsetIndex+1, this._tzdbInfo.offsets.length-1)));\n            // console.log(offsetBefore.toString(), offsetAfter.toString());\n            if (offsetBefore.compareTo(offsetAfter) > 0) {\n                // gap\n                // console.log('gap', ldtBefore.toString(), localDateTime.toString(), ldtAfter.toString());\n                return ZoneOffsetTransition.of(ldtBefore, offsetBefore, offsetAfter);\n            } else {\n                // overlap\n                // console.log('overlap', ldtBefore.toString(), localDateTime.toString(), ldtAfter.toString());\n                return ZoneOffsetTransition.of(ldtAfter, offsetBefore, offsetAfter);\n            }\n        }\n        return ZoneOffset.ofTotalSeconds(this._offsetByIndexInSeconds(offsetIndex));\n    }\n\n    _offsetByIndexInSeconds(index){\n        return -offsetInSeconds(this._tzdbInfo.offsets[index]);\n    }\n\n    /**\n     * Gets the offset applicable at the specified local date-time in these rules.\n     * <p>\n     * The mapping from a local date-time to an offset is not straightforward.\n     * There are three cases:\n     * <p><ul>\n     * <li>Normal, with one valid offset. For the vast majority of the year, the normal\n     *  case applies, where there is a single valid offset for the local date-time.</li>\n     * <li>Gap, with zero valid offsets. This is when clocks jump forward typically\n     *  due to the spring daylight savings change from \"winter\" to \"summer\".\n     *  In a gap there are local date-time values with no valid offset.</li>\n     * <li>Overlap, with two valid offsets. This is when clocks are set back typically\n     *  due to the autumn daylight savings change from \"summer\" to \"winter\".\n     *  In an overlap there are local date-time values with two valid offsets.</li>\n     * </ul><p>\n     * Thus, for any given local date-time there can be zero, one or two valid offsets.\n     * This method returns that list of valid offsets, which is a list of size 0, 1 or 2.\n     * In the case where there are two offsets, the earlier offset is returned at index 0\n     * and the later offset at index 1.\n     * <p>\n     * There are various ways to handle the conversion from a {@code LocalDateTime}.\n     * One technique, using this method, would be:\n     * <pre>\n     *  List<ZoneOffset> validOffsets = rules.getOffset(localDT);\n     *  if (validOffsets.size() == 1) {\n     *    // Normal case: only one valid offset\n     *    zoneOffset = validOffsets.get(0);\n     *  } else {\n     *    // Gap or Overlap: determine what to do from transition (which will be non-null)\n     *    ZoneOffsetTransition trans = rules.getTransition(localDT);\n     *  }\n     * </pre>\n     * <p>\n     * In theory, it is possible for there to be more than two valid offsets.\n     * This would happen if clocks to be put back more than once in quick succession.\n     * This has never happened in the history of time-zones and thus has no special handling.\n     * However, if it were to happen, then the list would return more than 2 entries.\n     *\n     * @param {LocalDateTime} localDateTime - the local date-time to query for valid offsets, not null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffsetTransition | ZoneOffset[]} the list of valid offsets, may be immutable, not null\n     */\n    validOffsets(localDateTime){\n        const info = this._offsetInfo(localDateTime);\n        if (info instanceof ZoneOffsetTransition) {\n            return info.validOffsets();\n        }\n        return [info];\n    }\n\n    /**\n     * Gets the offset transition applicable at the specified local date-time in these rules.\n     * <p>\n     * The mapping from a local date-time to an offset is not straightforward.\n     * There are three cases:\n     * <p><ul>\n     * <li>Normal, with one valid offset. For the vast majority of the year, the normal\n     *  case applies, where there is a single valid offset for the local date-time.</li>\n     * <li>Gap, with zero valid offsets. This is when clocks jump forward typically\n     *  due to the spring daylight savings change from \"winter\" to \"summer\".\n     *  In a gap there are local date-time values with no valid offset.</li>\n     * <li>Overlap, with two valid offsets. This is when clocks are set back typically\n     *  due to the autumn daylight savings change from \"summer\" to \"winter\".\n     *  In an overlap there are local date-time values with two valid offsets.</li>\n     * </ul><p>\n     * A transition is used to model the cases of a Gap or Overlap.\n     * The Normal case will return null.\n     * <p>\n     * There are various ways to handle the conversion from a {@code LocalDateTime}.\n     * One technique, using this method, would be:\n     * <pre>\n     *  ZoneOffsetTransition trans = rules.getTransition(localDT);\n     *  if (trans != null) {\n     *    // Gap or Overlap: determine what to do from transition\n     *  } else {\n     *    // Normal case: only one valid offset\n     *    zoneOffset = rule.getOffset(localDT);\n     *  }\n     * </pre>\n     *\n     * @param {LocalDateTime} localDateTime  the local date-time to query for offset transition, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffsetTransition} the offset transition, null if the local date-time is not in transition\n     */\n    // eslint-disable-next-line no-unused-vars\n    transition(localDateTime){\n        const info = this._offsetInfo(localDateTime);\n        if (info instanceof ZoneOffsetTransition) {\n            return info;\n        }\n        return null;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the standard offset for the specified instant in this zone.\n     * <p>\n     * This provides access to historic information on how the standard offset\n     * has changed over time.\n     * The standard offset is the offset before any daylight saving time is applied.\n     * This is typically the offset applicable during winter.\n     *\n     * @param {Instant} instant - the instant to find the offset information for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffset} the standard offset, not null\n     */\n    // eslint-disable-next-line no-unused-vars\n    standardOffset(instant){\n        notSupported('ZoneRules.standardOffset');\n    }\n\n    /**\n     * Gets the amount of daylight savings in use for the specified instant in this zone.\n     * <p>\n     * This provides access to historic information on how the amount of daylight\n     * savings has changed over time.\n     * This is the difference between the standard offset and the actual offset.\n     * Typically the amount is zero during winter and one hour during summer.\n     * Time-zones are second-based, so the nanosecond part of the duration will be zero.\n     *\n     * @param {Instant} instant - the instant to find the daylight savings for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {Duration} the difference between the standard and actual offset, not null\n     */\n    // eslint-disable-next-line no-unused-vars\n    daylightSavings(instant){\n        notSupported('ZoneRules.daylightSavings');\n    }\n\n    /**\n     * Checks if the specified instant is in daylight savings.\n     * <p>\n     * This checks if the standard and actual offsets are the same at the specified instant.\n     *\n     * @param {Instant} instant - the instant to find the offset information for, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {boolean} the standard offset, not null\n     */\n    // eslint-disable-next-line no-unused-vars\n    isDaylightSavings(instant) {\n        notSupported('ZoneRules.isDaylightSavings');\n    }\n\n    /**\n     * Checks if the offset date-time is valid for these rules.\n     * <p>\n     * To be valid, the local date-time must not be in a gap and the offset\n     * must match the valid offsets.\n     *\n     * @param {LocalDateTime} localDateTime - the date-time to check, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @param {ZoneOffset} offset - the offset to check, null returns false\n     * @return {boolean} true if the offset date-time is valid for these rules\n     */\n    isValidOffset(localDateTime, offset){\n        return this.validOffsets(localDateTime).some( o => o.equals(offset));\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the next transition after the specified instant.\n     * <p>\n     * This returns details of the next transition after the specified instant.\n     * For example, if the instant represents a point where \"Summer\" daylight savings time\n     * applies, then the method will return the transition to the next \"Winter\" time.\n     *\n     * @param {Instant} instant - the instant to get the next transition after, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffsetTransition} the next transition after the specified instant, null if this is after the last transition\n     */\n    // eslint-disable-next-line no-unused-vars\n    nextTransition(instant){\n        notSupported('ZoneRules.nextTransition');\n    }\n\n    /**\n     * Gets the previous transition before the specified instant.\n     * <p>\n     * This returns details of the previous transition after the specified instant.\n     * For example, if the instant represents a point where \"summer\" daylight saving time\n     * applies, then the method will return the transition from the previous \"winter\" time.\n     *\n     * @param {Instant} instant - the instant to get the previous transition after, not null, but null\n     *  may be ignored if the rules have a single offset for all instants\n     * @return {ZoneOffsetTransition} the previous transition after the specified instant, null if this is before the first transition\n     */\n    // eslint-disable-next-line no-unused-vars\n    previousTransition(instant){\n        notSupported('ZoneRules.previousTransition');\n    }\n\n    /**\n     * Gets the complete list of fully defined transitions.\n     * <p>\n     * The complete set of transitions for this rules instance is defined by this method\n     * and {@link #getTransitionRules()}. This method returns those transitions that have\n     * been fully defined. These are typically historical, but may be in the future.\n     * <p>\n     * The list will be empty for fixed offset rules and for any time-zone where there has\n     * only ever been a single offset. The list will also be empty if the transition rules are unknown.\n     *\n     * @return {ZoneOffsetTransition[]} an immutable list of fully defined transitions, not null\n     */\n    transitions(){\n        notSupported('ZoneRules.transitions');\n    }\n\n    /**\n     * Gets the list of transition rules for years beyond those defined in the transition list.\n     * <p>\n     * The complete set of transitions for this rules instance is defined by this method\n     * and {@link #getTransitions()}. This method returns instances of {@link ZoneOffsetTransitionRule}\n     * that define an algorithm for when transitions will occur.\n     * <p>\n     * For any given {@code ZoneRules}, this list contains the transition rules for years\n     * beyond those years that have been fully defined. These rules typically refer to future\n     * daylight saving time rule changes.\n     * <p>\n     * If the zone defines daylight savings into the future, then the list will normally\n     * be of size two and hold information about entering and exiting daylight savings.\n     * If the zone does not have daylight savings, or information about future changes\n     * is uncertain, then the list will be empty.\n     * <p>\n     * The list will be empty for fixed offset rules and for any time-zone where there is no\n     * daylight saving time. The list will also be empty if the transition rules are unknown.\n     *\n     * @return {ZoneOffsetTransitionRule[]} an immutable list of transition rules, not null\n     */\n    transitionRules(){\n        notSupported('ZoneRules.transitionRules');\n    }\n\n    /**\n     *\n     * @param other\n     * @returns {boolean}\n     */\n    equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof MomentZoneRules) {\n            return this._tzdbInfo === other._tzdbInfo;\n        }\n        return false;\n    }\n\n    /**\n     *\n     * @returns {string}\n     */\n    toString() {\n        return this._tzdbInfo.name;\n    }\n}\n\nclass LDTUntils {\n    constructor(_tzdbUntils, tzdbOffsets) {\n        this._tzdbUntils = _tzdbUntils;\n        this._tzdbOffsets = tzdbOffsets;\n        this._ldtUntils = [];\n        this.size = this._tzdbUntils.length * 2;\n    }\n\n\n    _generateTupple(index) {\n        const epochMillis = this._tzdbUntils[index];\n        if (epochMillis === Infinity) {\n            return [LocalDateTime.MAX, LocalDateTime.MAX];\n        }\n        const instant = Instant.ofEpochMilli(epochMillis);\n\n        const offset1 = offsetInSeconds(this._tzdbOffsets[index]);\n        const zone1 = ZoneOffset.ofTotalSeconds(-offset1);\n        const ldt1 = LocalDateTime.ofInstant(instant, zone1);\n\n        const nextIndex = Math.min(index + 1, this._tzdbOffsets.length - 1);\n        const offset2 = offsetInSeconds(this._tzdbOffsets[nextIndex]);\n        const zone2 = ZoneOffset.ofTotalSeconds(-offset2);\n        const ldt2 = LocalDateTime.ofInstant(instant, zone2);\n\n        if(offset1 > offset2) {\n            return [ldt1, ldt2];\n        } else {\n            return [ldt2, ldt1];\n        }\n    }\n\n    _getTupple(index){\n        if (this._ldtUntils[index] == null) {\n            this._ldtUntils[index] = this._generateTupple(index);\n        }\n        return this._ldtUntils[index];\n    }\n\n    get(index) {\n        const ldtTupple = this._getTupple(index >> 1);\n        return ldtTupple[index % 2];\n    }\n}\n\n// modified bin-search, to always find existing indices for non-empty arrays\n// value in array at index is larger than input value (or last index of array)\nfunction ldtBinarySearch(array, value) {\n    let hi = array.size - 1, lo = -1, mid;\n    while (hi - lo > 1) {\n        if (!value.isBefore(array.get(mid = hi + lo >> 1))) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return hi;\n}\n\nfunction offsetInSeconds(tzdbOffset){\n    return roundDown(+tzdbOffset*60);\n}\n\nfunction roundDown(r){\n    if (r < 0) {\n        return Math.ceil(r);\n    } else {\n        return Math.floor(r);\n    }\n}\n\n// modified bin-search, to always find existing indices for non-empty arrays\n// value in array at index is larger than input value (or last index of array)\nfunction binarySearch(array, value) {\n    let hi = array.length - 1, lo = -1, mid;\n    while (hi - lo > 1) {\n        if (array[mid = hi + lo >> 1] <= value) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return hi;\n}\n\nfunction notSupported(msg){\n    throw new Error(`not supported: ${msg}`);\n}\n","/*\n * @copyright (c) 2016-present, Philipp Thürwächter, Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport {\n    DateTimeException,\n    ZoneRulesProvider,\n} from '@js-joda/core';\n\nimport { MomentZoneRules } from './MomentZoneRules';\n\nimport { unpack } from './unpack';\n\nlet TZDB_DATA;\nlet TZDB_VERSION;\nconst AVAILABLE_ZONE_IDS = [];\n\nconst zones = {};\nconst links = {};\n\nexport class MomentZoneRulesProvider extends ZoneRulesProvider {\n    /**\n     * Gets the rules for the zone ID.\n     * <p>\n     * This returns the latest available rules for the zone ID.\n     * <p>\n     * This method relies on time-zone data provider files that are configured.\n     *\n     * @param {string} zoneId\n     * @return {ZoneRules}\n     */\n    static getRules(zoneId){\n        const tzdbZoneInfo = zones[links[zoneId]];\n        if(tzdbZoneInfo == null){\n            throw new DateTimeException(`Unknown time-zone ID: ${zoneId}`);\n        }\n        return new MomentZoneRules(tzdbZoneInfo);\n    }\n\n\n    /**\n     * Gets the set of available zone IDs.\n     * <p>\n     * These zone IDs are loaded and available for use by {@code ZoneId}.\n     *\n     * @return {string[]} a modifiable copy of the set of zone IDs, not null\n     */\n    static getAvailableZoneIds(){\n        return AVAILABLE_ZONE_IDS;\n    }\n\n    /**\n     *\n     * @return {string} the tzdb version.\n     */\n    static getVersion() {\n        return TZDB_VERSION;\n    }\n\n    /**\n     * Provides the packed tzdb data,\n     * the data has the same format as provided from moment-timezone.\n     *\n     * @return {object} the packed tzdb data.\n     */\n    static getTzdbData(){\n        return TZDB_DATA;\n    }\n\n    /**\n     * Sets the packed tzdb data.\n     * Accepts tzdb data in the same format as provided from moment-timezone.\n     *\n     * @param packedJson\n     */\n    static loadTzdbData(packedJson){\n        TZDB_DATA = packedJson;\n        TZDB_VERSION = packedJson.version;\n\n        for (const packedZoneInfo of packedJson.zones) {\n            const tzdbZoneInfo = unpack(packedZoneInfo);\n            AVAILABLE_ZONE_IDS.push(tzdbZoneInfo.name);\n            zones[tzdbZoneInfo.name] = tzdbZoneInfo;\n            links[tzdbZoneInfo.name] = tzdbZoneInfo.name;\n        }\n\n        for (const packedLink of packedJson.links) {\n            const link = packedLink.split('|');\n            AVAILABLE_ZONE_IDS.push(link[1]);\n            links[link[1]] = link[0];\n        }\n    }\n}\n","/* eslint-disable no-var */\n\n//! moment-timezone.js\n//! version : 0.5.2\n//! author : Tim Wood\n//! license : MIT\n//! github.com/moment/moment-timezone\n\n/************************************\n Unpacking\n ************************************/\n\n/**\n * @private\n *\n * @param charCode\n * @returns {number}\n */\nfunction charCodeToInt(charCode) {\n    if (charCode > 96) {\n        return charCode - 87;\n    } else if (charCode > 64) {\n        return charCode - 29;\n    }\n    return charCode - 48;\n}\n\nfunction unpackBase60(string) {\n    var i = 0,\n        parts = string.split('.'),\n        whole = parts[0],\n        fractional = parts[1] || '',\n        multiplier = 1,\n        num,\n        out = 0,\n        sign = 1;\n\n    // handle negative numbers\n    if (string.charCodeAt(0) === 45) {\n        i = 1;\n        sign = -1;\n    }\n\n    // handle digits before the decimal\n    for (i; i < whole.length; i++) {\n        num = charCodeToInt(whole.charCodeAt(i));\n        out = 60 * out + num;\n    }\n\n    // handle digits after the decimal\n    for (i = 0; i < fractional.length; i++) {\n        multiplier = multiplier / 60;\n        num = charCodeToInt(fractional.charCodeAt(i));\n        out += num * multiplier;\n    }\n\n    return out * sign;\n}\n\nfunction arrayToInt (array) {\n    for (var i = 0; i < array.length; i++) {\n        array[i] = unpackBase60(array[i]);\n    }\n}\n\nfunction intToUntil (array, length) {\n    for (var i = 0; i < length; i++) {\n        array[i] = Math.round((array[i - 1] || 0) + (array[i] * 60000)); // minutes to milliseconds\n    }\n\n    array[length - 1] = Infinity;\n}\n\nfunction mapIndices (source, indices) {\n    var out = [], i;\n\n    for (i = 0; i < indices.length; i++) {\n        out[i] = source[indices[i]];\n    }\n\n    return out;\n}\n\n/**\n * @private\n *\n * @param string\n * @returns {{offsets: *[], abbrs: *[], name, untils: *, population: number}}\n */\nexport function unpack (string) {\n    var data = string.split('|'),\n        offsets = data[2].split(' '),\n        indices = data[3].split(''),\n        untils  = data[4].split(' ');\n\n    arrayToInt(offsets);\n    arrayToInt(indices);\n    arrayToInt(untils);\n\n    intToUntil(untils, indices.length);\n\n    return {\n        name       : data[0],\n        abbrs      : mapIndices(data[1].split(' '), indices),\n        offsets    : mapIndices(offsets, indices),\n        untils     : untils,\n        population : data[5] | 0\n    };\n}\n\n","/*\n * @copyright (c) 2016-present, Philipp Thürwächter, Pattrick Hüper\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport latest from './tzdbData';\n\nimport { MomentZoneRulesProvider } from './MomentZoneRulesProvider';\nimport autoPlug from './auto-plug';\n\nMomentZoneRulesProvider.loadTzdbData(latest);\n\nautoPlug();\n","/*\n * @copyright (c) 2016-present, Philipp Thürwächter, Pattrick Hüper\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { use } from '@js-joda/core';\n\nimport plug from './plug';\n\n/**\n * @private\n */\nexport default function autoPlug() {\n    use(plug);\n}\n\n","/*\n * @copyright (c) 2016-present, Philipp Thürwächter, Pattrick Hüper\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { MomentZoneRulesProvider } from './MomentZoneRulesProvider';\nimport extendSystemDefaultZoneId from './system-default-zone';\n\n/**\n * @private\n */\nexport default function (jsJoda) {\n    jsJoda.ZoneRulesProvider.getRules = MomentZoneRulesProvider.getRules;\n    jsJoda.ZoneRulesProvider.getAvailableZoneIds = MomentZoneRulesProvider.getAvailableZoneIds;\n    jsJoda.ZoneRulesProvider.getTzdbData = MomentZoneRulesProvider.getTzdbData;\n    jsJoda.ZoneRulesProvider.loadTzdbData = MomentZoneRulesProvider.loadTzdbData;\n\n    extendSystemDefaultZoneId(jsJoda.ZoneId);\n    return jsJoda;\n}\n","/**\n * @private\n *\n * @param ZoneId\n * @returns {null|*}\n */\nfunction getResolvedZoneId(ZoneId) {\n    try {\n        const resolvedTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        return ZoneId.of(resolvedTimeZone);\n    } catch (err) {\n        // ignore\n    }\n    return null;\n}\n\n/**\n * @private\n *\n * @param ZoneId\n */\nexport default function extendSystemDefaultZoneId(ZoneId) {\n    const resolvedZoneId = getResolvedZoneId(ZoneId);\n\n    if (resolvedZoneId == null) {\n        return;\n    }\n\n    ZoneId.systemDefault = function () {\n        return resolvedZoneId;\n    };\n}\n","/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 2;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 1;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nexport const XHTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n\nexport const NULL = null;\nexport const UNDEFINED = undefined;\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-expect-error We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {import('./index').ContainerNode} node The node to remove\n */\nexport function removeNode(node) {\n\tif (node && node.parentNode) node.parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { slice } from './util';\nimport options from './options';\nimport { NULL, UNDEFINED } from './constants';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor for this\n * virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the\n * virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != NULL) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === UNDEFINED) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, NULL);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\t/** @type {import('./internal').VNode} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: NULL,\n\t\t_parent: NULL,\n\t\t_depth: 0,\n\t\t_dom: NULL,\n\t\t_component: NULL,\n\t\tconstructor: UNDEFINED,\n\t\t_original: original == NULL ? ++vnodeId : original,\n\t\t_index: -1,\n\t\t_flags: 0\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == NULL && options.vnode != NULL) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: NULL };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != NULL && vnode.constructor == UNDEFINED;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { MODE_HYDRATE, NULL } from './constants';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function BaseComponent(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nBaseComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != NULL && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == NULL) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nBaseComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](https://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {ComponentChildren | void}\n */\nBaseComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == NULL) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\n\t\t\t: NULL;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != NULL && sibling._dom != NULL) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : NULL;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet oldVNode = component._vnode,\n\t\toldDom = oldVNode._dom,\n\t\tcommitQueue = [],\n\t\trefQueue = [];\n\n\tif (component._parentDom) {\n\t\tconst newVNode = assign({}, oldVNode);\n\t\tnewVNode._original = oldVNode._original + 1;\n\t\tif (options.vnode) options.vnode(newVNode);\n\n\t\tdiff(\n\t\t\tcomponent._parentDom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tcomponent._parentDom.namespaceURI,\n\t\t\toldVNode._flags & MODE_HYDRATE ? [oldDom] : NULL,\n\t\t\tcommitQueue,\n\t\t\toldDom == NULL ? getDomSibling(oldVNode) : oldDom,\n\t\t\t!!(oldVNode._flags & MODE_HYDRATE),\n\t\t\trefQueue\n\t\t);\n\n\t\tnewVNode._original = oldVNode._original;\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\n\t\tcommitRoot(commitQueue, newVNode, refQueue);\n\n\t\tif (newVNode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(newVNode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != NULL && vnode._component != NULL) {\n\t\tvnode._dom = vnode._component.base = NULL;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != NULL && child._dom != NULL) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c,\n\t\tl = 1;\n\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile (rerenderQueue.length) {\n\t\t// Keep the rerender queue sorted by (depth, insertion order). The queue\n\t\t// will initially be sorted on the first iteration only if it has more than 1 item.\n\t\t//\n\t\t// New items can be added to the queue e.g. when rerendering a provider, so we want to\n\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t// single pass\n\t\tif (rerenderQueue.length > l) {\n\t\t\trerenderQueue.sort(depthSort);\n\t\t}\n\n\t\tc = rerenderQueue.shift();\n\t\tl = rerenderQueue.length;\n\n\t\tif (c._dirty) {\n\t\t\trenderComponent(c);\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n","import { IS_NON_DIMENSIONAL, NULL, SVG_NAMESPACE } from '../constants';\nimport options from '../options';\n\nfunction setStyle(style, key, value) {\n\tif (key[0] == '-') {\n\t\tstyle.setProperty(key, value == NULL ? '' : value);\n\t} else if (value == NULL) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\nconst CAPTURE_REGEX = /(PointerCapture)$|Capture$/i;\n\n// A logical clock to solve issues like https://github.com/preactjs/preact/issues/3927.\n// When the DOM performs an event it leaves micro-ticks in between bubbling up which means that\n// an event can trigger on a newly reated DOM-node while the event bubbles up.\n//\n// Originally inspired by Vue\n// (https://github.com/vuejs/core/blob/caeb8a68811a1b0f79/packages/runtime-dom/src/modules/events.ts#L90-L101),\n// but modified to use a logical clock instead of Date.now() in case event handlers get attached\n// and events get dispatched during the same millisecond.\n//\n// The clock is incremented after each new event dispatch. This allows 1 000 000 new events\n// per second for over 280 years before the value reaches Number.MAX_SAFE_INTEGER (2**53 - 1).\nlet eventClock = 0;\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {string} namespace Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, namespace) {\n\tlet useCapture;\n\n\to: if (name == 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] == 'o' && name[1] == 'n') {\n\t\tuseCapture = name != (name = name.replace(CAPTURE_REGEX, '$1'));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (\n\t\t\tname.toLowerCase() in dom ||\n\t\t\tname == 'onFocusOut' ||\n\t\t\tname == 'onFocusIn'\n\t\t)\n\t\t\tname = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tvalue._attached = eventClock;\n\t\t\t\tdom.addEventListener(\n\t\t\t\t\tname,\n\t\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\t\tuseCapture\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tvalue._attached = oldValue._attached;\n\t\t\t}\n\t\t} else {\n\t\t\tdom.removeEventListener(\n\t\t\t\tname,\n\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\tuseCapture\n\t\t\t);\n\t\t}\n\t} else {\n\t\tif (namespace == SVG_NAMESPACE) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname != 'width' &&\n\t\t\tname != 'height' &&\n\t\t\tname != 'href' &&\n\t\t\tname != 'list' &&\n\t\t\tname != 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname != 'tabIndex' &&\n\t\t\tname != 'download' &&\n\t\t\tname != 'rowSpan' &&\n\t\t\tname != 'colSpan' &&\n\t\t\tname != 'role' &&\n\t\t\tname != 'popover' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == NULL ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value == 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != NULL && (value !== false || name[4] == '-')) {\n\t\t\tdom.setAttribute(name, name == 'popover' && value == true ? '' : value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Create an event proxy function.\n * @param {boolean} useCapture Is the event handler for the capture phase.\n * @private\n */\nfunction createEventProxy(useCapture) {\n\t/**\n\t * Proxy an event to hooked event handlers\n\t * @param {import('../internal').PreactEvent} e The event object from the browser\n\t * @private\n\t */\n\treturn function (e) {\n\t\tif (this._listeners) {\n\t\t\tconst eventHandler = this._listeners[e.type + useCapture];\n\t\t\tif (e._dispatched == NULL) {\n\t\t\t\te._dispatched = eventClock++;\n\n\t\t\t\t// When `e._dispatched` is smaller than the time when the targeted event\n\t\t\t\t// handler was attached we know we have bubbled up to an element that was added\n\t\t\t\t// during patching the DOM.\n\t\t\t} else if (e._dispatched < eventHandler._attached) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn eventHandler(options.event ? options.event(e) : e);\n\t\t}\n\t};\n}\n\nconst eventProxy = createEventProxy(false);\nconst eventProxyCapture = createEventProxy(true);\n","import { enqueueRender } from './component';\nimport { NULL } from './constants';\n\nexport let i = 0;\n\nexport function createContext(defaultValue) {\n\tfunction Context(props) {\n\t\tif (!this.getChildContext) {\n\t\t\t/** @type {Set<import('./internal').Component> | null} */\n\t\t\tlet subs = new Set();\n\t\t\tlet ctx = {};\n\t\t\tctx[Context._id] = this;\n\n\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\tthis.componentWillUnmount = () => {\n\t\t\t\tsubs = NULL;\n\t\t\t};\n\n\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t// @ts-expect-error even\n\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\tsubs.forEach(c => {\n\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.sub = c => {\n\t\t\t\tsubs.add(c);\n\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\tif (subs) {\n\t\t\t\t\t\tsubs.delete(c);\n\t\t\t\t\t}\n\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\n\t\treturn props.children;\n\t}\n\n\tContext._id = '__cC' + i++;\n\tContext._defaultValue = defaultValue;\n\n\t/** @type {import('./internal').FunctionComponent} */\n\tContext.Consumer = (props, contextValue) => {\n\t\treturn props.children(contextValue);\n\t};\n\n\t// we could also get rid of _contextRef entirely\n\tContext.Provider =\n\t\tContext._contextRef =\n\t\tContext.Consumer.contextType =\n\t\t\tContext;\n\n\treturn Context;\n}\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport {\n\tEMPTY_OBJ,\n\tEMPTY_ARR,\n\tINSERT_VNODE,\n\tMATCHED,\n\tUNDEFINED,\n\tNULL\n} from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * Diff the children of a virtual node\n * @param {PreactElement} parentDom The DOM element whose children are being\n * diffed\n * @param {ComponentChildren[]} renderResult\n * @param {VNode} newParentVNode The new virtual node whose children should be\n * diff'ed against oldParentVNode\n * @param {VNode} oldParentVNode The old virtual node whose children should be\n * diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\t/** @type {VNode} */\n\t\toldVNode,\n\t\t/** @type {VNode} */\n\t\tchildVNode,\n\t\t/** @type {PreactElement} */\n\t\tnewDom,\n\t\t/** @type {PreactElement} */\n\t\tfirstChildDom;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\t/** @type {VNode[]} */\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet newChildrenLength = renderResult.length;\n\n\toldDom = constructNewChildrenArray(\n\t\tnewParentVNode,\n\t\trenderResult,\n\t\toldChildren,\n\t\toldDom,\n\t\tnewChildrenLength\n\t);\n\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\tchildVNode = newParentVNode._children[i];\n\t\tif (childVNode == NULL) continue;\n\n\t\t// At this point, constructNewChildrenArray has assigned _index to be the\n\t\t// matchingIndex for this VNode's oldVNode (or -1 if there is no oldVNode).\n\t\tif (childVNode._index === -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[childVNode._index] || EMPTY_OBJ;\n\t\t}\n\n\t\t// Update childVNode._index to its final index\n\t\tchildVNode._index = i;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tlet result = diff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\t// Adjust DOM nodes\n\t\tnewDom = childVNode._dom;\n\t\tif (childVNode.ref && oldVNode.ref != childVNode.ref) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, NULL, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(\n\t\t\t\tchildVNode.ref,\n\t\t\t\tchildVNode._component || newDom,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t}\n\n\t\tif (firstChildDom == NULL && newDom != NULL) {\n\t\t\tfirstChildDom = newDom;\n\t\t}\n\n\t\tif (\n\t\t\tchildVNode._flags & INSERT_VNODE ||\n\t\t\toldVNode._children === childVNode._children\n\t\t) {\n\t\t\toldDom = insert(childVNode, oldDom, parentDom);\n\t\t} else if (typeof childVNode.type == 'function' && result !== UNDEFINED) {\n\t\t\toldDom = result;\n\t\t} else if (newDom) {\n\t\t\toldDom = newDom.nextSibling;\n\t\t}\n\n\t\t// Unset diffing flags\n\t\tchildVNode._flags &= ~(INSERT_VNODE | MATCHED);\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} newParentVNode\n * @param {ComponentChildren[]} renderResult\n * @param {VNode[]} oldChildren\n */\nfunction constructNewChildrenArray(\n\tnewParentVNode,\n\trenderResult,\n\toldChildren,\n\toldDom,\n\tnewChildrenLength\n) {\n\t/** @type {number} */\n\tlet i;\n\t/** @type {VNode} */\n\tlet childVNode;\n\t/** @type {VNode} */\n\tlet oldVNode;\n\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength;\n\n\tlet skew = 0;\n\n\tnewParentVNode._children = new Array(newChildrenLength);\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\t// @ts-expect-error We are reusing the childVNode variable to hold both the\n\t\t// pre and post normalized childVNode\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == NULL ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tnewParentVNode._children[i] = NULL;\n\t\t\tcontinue;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint' ||\n\t\t\tchildVNode.constructor == String\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tNULL,\n\t\t\t\tchildVNode,\n\t\t\t\tNULL,\n\t\t\t\tNULL,\n\t\t\t\tNULL\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tNULL,\n\t\t\t\tNULL,\n\t\t\t\tNULL\n\t\t\t);\n\t\t} else if (childVNode.constructor === UNDEFINED && childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : NULL,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\tconst skewedIndex = i + skew;\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Temporarily store the matchingIndex on the _index property so we can pull\n\t\t// out the oldVNode in diffChildren. We'll override this to the VNode's\n\t\t// final index after using this property to get the oldVNode\n\t\tconst matchingIndex = (childVNode._index = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t));\n\n\t\toldVNode = NULL;\n\t\tif (matchingIndex !== -1) {\n\t\t\toldVNode = oldChildren[matchingIndex];\n\t\t\tremainingOldChildren--;\n\t\t\tif (oldVNode) {\n\t\t\t\toldVNode._flags |= MATCHED;\n\t\t\t}\n\t\t}\n\n\t\t// Here, we define isMounting for the purposes of the skew diffing\n\t\t// algorithm. Nodes that are unsuspending are considered mounting and we detect\n\t\t// this by checking if oldVNode._original === null\n\t\tconst isMounting = oldVNode == NULL || oldVNode._original === NULL;\n\n\t\tif (isMounting) {\n\t\t\tif (matchingIndex == -1) {\n\t\t\t\t// When the array of children is growing we need to decrease the skew\n\t\t\t\t// as we are adding a new element to the array.\n\t\t\t\t// Example:\n\t\t\t\t// [1, 2, 3] --> [0, 1, 2, 3]\n\t\t\t\t// oldChildren   newChildren\n\t\t\t\t//\n\t\t\t\t// The new element is at index 0, so our skew is 0,\n\t\t\t\t// we need to decrease the skew as we are adding a new element.\n\t\t\t\t// The decrease will cause us to compare the element at position 1\n\t\t\t\t// with value 1 with the element at position 0 with value 0.\n\t\t\t\t//\n\t\t\t\t// A linear concept is applied when the array is shrinking,\n\t\t\t\t// if the length is unchanged we can assume that no skew\n\t\t\t\t// changes are needed.\n\t\t\t\tif (newChildrenLength > oldChildrenLength) {\n\t\t\t\t\tskew--;\n\t\t\t\t} else if (newChildrenLength < oldChildrenLength) {\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we are mounting a DOM VNode, mark it for insertion\n\t\t\tif (typeof childVNode.type != 'function') {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t} else if (matchingIndex != skewedIndex) {\n\t\t\t// When we move elements around i.e. [0, 1, 2] --> [1, 0, 2]\n\t\t\t// --> we diff 1, we find it at position 1 while our skewed index is 0 and our skew is 0\n\t\t\t//     we set the skew to 1 as we found an offset.\n\t\t\t// --> we diff 0, we find it at position 0 while our skewed index is at 2 and our skew is 1\n\t\t\t//     this makes us increase the skew again.\n\t\t\t// --> we diff 2, we find it at position 2 while our skewed index is at 4 and our skew is 2\n\t\t\t//\n\t\t\t// this becomes an optimization question where currently we see a 1 element offset as an insertion\n\t\t\t// or deletion i.e. we optimize for [0, 1, 2] --> [9, 0, 1, 2]\n\t\t\t// while a more than 1 offset we see as a swap.\n\t\t\t// We could probably build heuristics for having an optimized course of action here as well, but\n\t\t\t// might go at the cost of some bytes.\n\t\t\t//\n\t\t\t// If we wanted to optimize for i.e. only swaps we'd just do the last two code-branches and have\n\t\t\t// only the first item be a re-scouting and all the others fall in their skewed counter-part.\n\t\t\t// We could also further optimize for swaps\n\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\tskew--;\n\t\t\t} else if (matchingIndex == skewedIndex + 1) {\n\t\t\t\tskew++;\n\t\t\t} else {\n\t\t\t\tif (matchingIndex > skewedIndex) {\n\t\t\t\t\tskew--;\n\t\t\t\t} else {\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\n\t\t\t\t// Move this VNode's DOM if the original index (matchingIndex) doesn't\n\t\t\t\t// match the new skew index (i + new skew)\n\t\t\t\t// In the former two branches we know that it matches after skewing\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any. Loop forwards so that as we\n\t// unmount DOM from the beginning of the oldChildren, we can adjust oldDom to\n\t// point to the next child, which needs to be the first DOM node that won't be\n\t// unmounted.\n\tif (remainingOldChildren) {\n\t\tfor (i = 0; i < oldChildrenLength; i++) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode != NULL && (oldVNode._flags & MATCHED) == 0) {\n\t\t\t\tif (oldVNode._dom == oldDom) {\n\t\t\t\t\toldDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} parentVNode\n * @param {PreactElement} oldDom\n * @param {PreactElement} parentDom\n * @returns {PreactElement}\n */\nfunction insert(parentVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\n\tif (typeof parentVNode.type == 'function') {\n\t\tlet children = parentVNode._children;\n\t\tfor (let i = 0; children && i < children.length; i++) {\n\t\t\tif (children[i]) {\n\t\t\t\t// If we enter this code path on sCU bailout, where we copy\n\t\t\t\t// oldVNode._children to newVNode._children, we need to update the old\n\t\t\t\t// children's _parent pointer to point to the newVNode (parentVNode\n\t\t\t\t// here).\n\t\t\t\tchildren[i]._parent = parentVNode;\n\t\t\t\toldDom = insert(children[i], oldDom, parentDom);\n\t\t\t}\n\t\t}\n\n\t\treturn oldDom;\n\t} else if (parentVNode._dom != oldDom) {\n\t\tif (oldDom && parentVNode.type && !parentDom.contains(oldDom)) {\n\t\t\toldDom = getDomSibling(parentVNode);\n\t\t}\n\t\tparentDom.insertBefore(parentVNode._dom, oldDom || NULL);\n\t\toldDom = parentVNode._dom;\n\t}\n\n\tdo {\n\t\toldDom = oldDom && oldDom.nextSibling;\n\t} while (oldDom != NULL && oldDom.nodeType == 8);\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {ComponentChildren} children The unflattened children of a virtual\n * node\n * @returns {VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == NULL || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\n/**\n * @param {VNode} childVNode\n * @param {VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet oldVNode = oldChildren[skewedIndex];\n\n\t// We only need to perform a search if there are more children\n\t// (remainingOldChildren) to search. However, if the oldVNode we just looked\n\t// at skewedIndex was not already used in this diff, then there must be at\n\t// least 1 other (so greater than 1) remainingOldChildren to attempt to match\n\t// against. So the following condition checks that ensuring\n\t// remainingOldChildren > 1 if the oldVNode is not already used/matched. Else\n\t// if the oldVNode was null or matched, then there could needs to be at least\n\t// 1 (aka `remainingOldChildren > 0`) children to find and compare against.\n\t//\n\t// If there is an unkeyed functional VNode, that isn't a built-in like our Fragment,\n\t// we should not search as we risk re-using state of an unrelated VNode. (reverted for now)\n\tlet shouldSearch =\n\t\t// (typeof type != 'function' || type === Fragment || key) &&\n\t\tremainingOldChildren >\n\t\t(oldVNode != NULL && (oldVNode._flags & MATCHED) == 0 ? 1 : 0);\n\n\tif (\n\t\t(oldVNode === NULL && childVNode.key == null) ||\n\t\t(oldVNode &&\n\t\t\tkey == oldVNode.key &&\n\t\t\ttype === oldVNode.type &&\n\t\t\t(oldVNode._flags & MATCHED) == 0)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (shouldSearch) {\n\t\tlet x = skewedIndex - 1;\n\t\tlet y = skewedIndex + 1;\n\t\twhile (x >= 0 || y < oldChildren.length) {\n\t\t\tif (x >= 0) {\n\t\t\t\toldVNode = oldChildren[x];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) == 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\tx--;\n\t\t\t}\n\n\t\t\tif (y < oldChildren.length) {\n\t\t\t\toldVNode = oldChildren[y];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) == 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t\ty++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n","import {\n\tEMPTY_OBJ,\n\tMATH_NAMESPACE,\n\tMODE_HYDRATE,\n\tMODE_SUSPENDED,\n\tNULL,\n\tRESET_MODE,\n\tSVG_NAMESPACE,\n\tUNDEFINED,\n\tXHTML_NAMESPACE\n} from '../constants';\nimport { BaseComponent, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * @template {any} T\n * @typedef {import('../internal').Ref<T>} Ref<T>\n */\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {PreactElement} parentDom The parent of the DOM element\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\t/** @type {any} */\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== UNDEFINED) return NULL;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._flags & MODE_SUSPENDED) {\n\t\tisHydrating = !!(oldVNode._flags & MODE_HYDRATE);\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\t\t\tconst isClassComponent =\n\t\t\t\t'prototype' in newType && newType.prototype.render;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif (isClassComponent) {\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\n\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (isClassComponent && c._nextState == NULL) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (isClassComponent && newType.getDerivedStateFromProps != NULL) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == NULL &&\n\t\t\t\t\tc.componentWillMount != NULL\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidMount != NULL) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == NULL &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != NULL\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!c._force &&\n\t\t\t\t\t((c.shouldComponentUpdate != NULL &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\t\tnewVNode._original == oldVNode._original)\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original != oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.some(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != NULL) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidUpdate != NULL) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif (isClassComponent) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != NULL) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (isClassComponent && !isNew && c.getSnapshotBeforeUpdate != NULL) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != NULL && tmp.type === Fragment && tmp.key == NULL;\n\t\t\tlet renderResult = tmp;\n\n\t\t\tif (isTopLevelFragment) {\n\t\t\t\trenderResult = cloneNode(tmp.props.children);\n\t\t\t}\n\n\t\t\toldDom = diffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnamespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._flags &= RESET_MODE;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = NULL;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = NULL;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != NULL) {\n\t\t\t\tif (e.then) {\n\t\t\t\t\tnewVNode._flags |= isHydrating\n\t\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\n\t\t\t\t\t\t: MODE_SUSPENDED;\n\n\t\t\t\t\twhile (oldDom && oldDom.nodeType == 8 && oldDom.nextSibling) {\n\t\t\t\t\t\toldDom = oldDom.nextSibling;\n\t\t\t\t\t}\n\n\t\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = NULL;\n\t\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t\t} else {\n\t\t\t\t\tfor (let i = excessDomChildren.length; i--; ) {\n\t\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == NULL &&\n\t\tnewVNode._original == oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\toldDom = newVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n\n\treturn newVNode._flags & MODE_SUSPENDED ? undefined : oldDom;\n}\n\n/**\n * @param {Array<Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\tfor (let i = 0; i < refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\nfunction cloneNode(node) {\n\tif (typeof node !== 'object' || node == NULL) {\n\t\treturn node;\n\t}\n\n\tif (isArray(node)) {\n\t\treturn node.map(cloneNode);\n\t}\n\n\treturn assign({}, node);\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {PreactElement} dom The DOM element representing the virtual nodes\n * being diffed\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n * @returns {PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = /** @type {string} */ (newVNode.type);\n\t/** @type {any} */\n\tlet i;\n\t/** @type {{ __html?: string }} */\n\tlet newHtml;\n\t/** @type {{ __html?: string }} */\n\tlet oldHtml;\n\t/** @type {ComponentChildren} */\n\tlet newChildren;\n\tlet value;\n\tlet inputValue;\n\tlet checked;\n\n\t// Tracks entering and exiting namespaces when descending through the tree.\n\tif (nodeType == 'svg') namespace = SVG_NAMESPACE;\n\telse if (nodeType == 'math') namespace = MATH_NAMESPACE;\n\telse if (!namespace) namespace = XHTML_NAMESPACE;\n\n\tif (excessDomChildren != NULL) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tvalue = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tvalue &&\n\t\t\t\t'setAttribute' in value == !!nodeType &&\n\t\t\t\t(nodeType ? value.localName == nodeType : value.nodeType == 3)\n\t\t\t) {\n\t\t\t\tdom = value;\n\t\t\t\texcessDomChildren[i] = NULL;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == NULL) {\n\t\tif (nodeType == NULL) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tdom = document.createElementNS(\n\t\t\tnamespace,\n\t\t\tnodeType,\n\t\t\tnewProps.is && newProps\n\t\t);\n\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\n\t\t// case we are hydrating), this deopts the hydrate\n\t\tif (isHydrating) {\n\t\t\tif (options._hydrationMismatch)\n\t\t\t\toptions._hydrationMismatch(newVNode, excessDomChildren);\n\t\t\tisHydrating = false;\n\t\t}\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = NULL;\n\t}\n\n\tif (nodeType === NULL) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\t// If we are in a situation where we are not hydrating but are using\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\n\t\t// attributes to diff them\n\t\tif (!isHydrating && excessDomChildren != NULL) {\n\t\t\toldProps = {};\n\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\tvalue = dom.attributes[i];\n\t\t\t\toldProps[value.name] = value.value;\n\t\t\t}\n\t\t}\n\n\t\tfor (i in oldProps) {\n\t\t\tvalue = oldProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\toldHtml = value;\n\t\t\t} else if (!(i in newProps)) {\n\t\t\t\tif (\n\t\t\t\t\t(i == 'value' && 'defaultValue' in newProps) ||\n\t\t\t\t\t(i == 'checked' && 'defaultChecked' in newProps)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsetProperty(dom, i, NULL, value, namespace);\n\t\t\t}\n\t\t}\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tfor (i in newProps) {\n\t\t\tvalue = newProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t\tnewChildren = value;\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\tnewHtml = value;\n\t\t\t} else if (i == 'value') {\n\t\t\t\tinputValue = value;\n\t\t\t} else if (i == 'checked') {\n\t\t\t\tchecked = value;\n\t\t\t} else if (\n\t\t\t\t(!isHydrating || typeof value == 'function') &&\n\t\t\t\toldProps[i] !== value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\tif (\n\t\t\t\t!isHydrating &&\n\t\t\t\t(!oldHtml ||\n\t\t\t\t\t(newHtml.__html !== oldHtml.__html &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML))\n\t\t\t) {\n\t\t\t\tdom.innerHTML = newHtml.__html;\n\t\t\t}\n\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tif (oldHtml) dom.innerHTML = '';\n\n\t\t\tdiffChildren(\n\t\t\t\t// @ts-expect-error\n\t\t\t\tnewVNode.type === 'template' ? dom.content : dom,\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnodeType == 'foreignObject' ? XHTML_NAMESPACE : namespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != NULL) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// As above, don't diff props during hydration\n\t\tif (!isHydrating) {\n\t\t\ti = 'value';\n\t\t\tif (nodeType == 'progress' && inputValue == NULL) {\n\t\t\t\tdom.removeAttribute('value');\n\t\t\t} else if (\n\t\t\t\tinputValue !== UNDEFINED &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(inputValue !== dom[i] ||\n\t\t\t\t\t(nodeType == 'progress' && !inputValue) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType == 'option' && inputValue !== oldProps[i]))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], namespace);\n\t\t\t}\n\n\t\t\ti = 'checked';\n\t\t\tif (checked !== UNDEFINED && checked !== dom[i]) {\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {Ref<any> & { _unmount?: unknown }} ref\n * @param {any} value\n * @param {VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') {\n\t\t\tlet hasRefUnmount = typeof ref._unmount == 'function';\n\t\t\tif (hasRefUnmount) {\n\t\t\t\t// @ts-ignore TS doesn't like moving narrowing checks into variables\n\t\t\t\tref._unmount();\n\t\t\t}\n\n\t\t\tif (!hasRefUnmount || value != NULL) {\n\t\t\t\t// Store the cleanup function on the function\n\t\t\t\t// instance object itself to avoid shape\n\t\t\t\t// transitioning vnode\n\t\t\t\tref._unmount = ref(value);\n\t\t\t}\n\t\t} else ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {VNode} vnode The virtual node to unmount\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, NULL, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != NULL) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = NULL;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type != 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\tvnode._component = vnode._parent = vnode._dom = UNDEFINED;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ, NULL } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\t// https://github.com/preactjs/preact/issues/3794\n\tif (parentDom == document) {\n\t\tparentDom = document.documentElement;\n\t}\n\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode == 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? NULL\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, NULL, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.namespaceURI,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t\t? NULL\n\t\t\t\t: parentDom.firstChild\n\t\t\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t\t\t: NULL,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t\t? oldVNode._dom\n\t\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign, slice } from './util';\nimport { createVNode } from './create-element';\nimport { NULL, UNDEFINED } from './constants';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used\n * as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type && vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] === UNDEFINED && defaultProps !== UNDEFINED) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tNULL\n\t);\n}\n","import { NULL } from '../constants';\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw the error that was caught (except\n * for unmounting when this parameter is the highest parent that was being\n * unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component,\n\t\t/** @type {import('../internal').ComponentType} */\n\t\tctor,\n\t\t/** @type {boolean} */\n\t\thandled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != NULL) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != NULL) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"@file:Suppress(\"FunctionName\", \"NOTHING_TO_INLINE\")\n\npackage de.peekandpoke.kraft.addons.prismjs\n\nimport de.peekandpoke.kraft.components.Component\nimport de.peekandpoke.kraft.components.Ctx\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.utils.launch\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.browser.document\nimport kotlinx.dom.clear\nimport kotlinx.html.Tag\nimport kotlinx.html.code\nimport kotlinx.html.div\nimport kotlinx.html.pre\nimport org.w3c.dom.HTMLElement\nimport org.w3c.dom.HTMLPreElement\n\ntypealias PrismOptsBuilder = Prism.OptionsBuilder.() -> Unit\n\nfun Tag.Prism(language: String, code: String, options: PrismOptsBuilder) = comp(\n    Prism.Props(\n        language = language,\n        code = code,\n        options = Prism.OptionsBuilder().apply(options).build()\n    )\n) { Prism(it) }\n\ninline fun Tag.PrismAtom(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"atom\", code = code, options = options)\n\ninline fun Tag.PrismCLike(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"clike\", code = code, options = options)\n\ninline fun Tag.PrismCss(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"css\", code = code, options = options)\n\ninline fun Tag.PrismDart(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"dart\", code = code, options = options)\n\ninline fun Tag.PrismHtml(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"html\", code = code, options = options)\n\ninline fun Tag.PrismKotlin(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"kotlin\", code = code, options = options)\n\ninline fun Tag.PrismKotlinScript(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"kts\", code = code, options = options)\n\ninline fun Tag.PrismJava(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"java\", code = code, options = options)\n\ninline fun Tag.PrismJavascript(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"javascript\", code = code, options = options)\n\ninline fun Tag.PrismJson(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"json\", code = code, options = options)\n\ninline fun Tag.PrismJson5(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"json5\", code = code, options = options)\n\ninline fun Tag.PrismJsonp(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"jsonp\", code = code, options = options)\n\ninline fun Tag.PrismLess(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"less\", code = code, options = options)\n\ninline fun Tag.PrismMarkup(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"markup\", code = code, options = options)\n\ninline fun Tag.PrismPhp(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"php\", code = code, options = options)\n\ninline fun Tag.PrismPlain(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"plain\", code = code, options = options)\n\ninline fun Tag.PrismRegex(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"regex\", code = code, options = options)\n\ninline fun Tag.PrismRuby(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"ruby\", code = code, options = options)\n\ninline fun Tag.PrismRust(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"rust\", code = code, options = options)\n\ninline fun Tag.PrismRss(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"rss\", code = code, options = options)\n\ninline fun Tag.PrismSass(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"sass\", code = code, options = options)\n\ninline fun Tag.PrismScss(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"scss\", code = code, options = options)\n\ninline fun Tag.PrismSsml(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"ssml\", code = code, options = options)\n\ninline fun Tag.PrismSvg(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"svg\", code = code, options = options)\n\ninline fun Tag.PrismText(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"text\", code = code, options = options)\n\ninline fun Tag.PrismTypescript(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"typescript\", code = code, options = options)\n\ninline fun Tag.PrismXml(code: String, noinline options: PrismOptsBuilder = {}) =\n    Prism(language = \"xml\", code = code, options = options)\n\nclass Prism(ctx: Ctx<Props>) : Component<Prism.Props>(ctx) {\n\n    //  PROPS  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    data class Props(\n        val language: String,\n        val code: String,\n        val options: Options,\n    )\n\n    data class Options(\n        val plugins: List<PrismPlugin>,\n    )\n\n    class OptionsBuilder internal constructor() {\n        private val plugins = mutableListOf<PrismPlugin>()\n\n        internal fun build() = Options(\n            plugins = plugins,\n        )\n\n        fun usePlugin(plugin: PrismPlugin) {\n            plugins.add(plugin)\n        }\n    }\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    init {\n        launch {\n            prismJsInternals.styles.loadDefaultTheme()\n\n            props.options.plugins.forEach { it.load() }\n\n            prismJsInternals.languages.load(props.language)\n\n            createContent()\n        }\n    }\n\n    private fun createContent() {\n\n        dom?.let { d ->\n            val pre = (document.createElement(\"pre\") as HTMLPreElement).also { pre ->\n\n                pre.className = \"language-${props.language} copy-to-clipboard\"\n\n                props.options.plugins.forEach { it.applyTo(pre) }\n\n                (document.createElement(\"code\") as HTMLElement).also { code ->\n\n                    val text = document.createTextNode(props.code)\n\n                    code.append(text)\n                    pre.append(code)\n                }\n            }\n\n            d.clear()\n            d.append(pre)\n\n            PrismJsDefinition.highlightAllUnder(d)\n        }\n    }\n\n    override fun VDom.render() {\n        // Initially we create a placeholder which is filled by [createContent]\n        div(\"prism\") {\n\n            pre(\"language-${props.language}\") {\n                code {\n                    +props.code\n                }\n            }\n        }\n    }\n}\n","package de.peekandpoke.kraft.addons.prismjs\n\nimport js.import.Module\nimport kotlinx.browser.document\nimport kotlinx.coroutines.delay\nimport org.w3c.dom.Element\nimport org.w3c.dom.HTMLHeadElement\nimport org.w3c.dom.HTMLLinkElement\nimport kotlin.js.Date\nimport kotlin.js.Promise\n\n/**\n * See: https://cdnjs.com/libraries/prism/1.28.0 for available assets\n */\nclass PrismJsInternals {\n\n    internal class StylesLoader {\n\n        private val loaded = mutableMapOf<String, Element>()\n\n        private val head: HTMLHeadElement?\n            get() = document.getElementsByTagName(\"head\").item(0) as? HTMLHeadElement\n\n        fun loadDefaultTheme() {\n            loadStyle(\n                \"https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/themes/prism.min.css\",\n                \"sha512-tN7Ec6zAFaVSG3TpNAKtk4DOHNpSwKHxxrsiw4GHKESGPs5njn/0sMCUMl2svV4wo4BK/rCP7juYz+zx+l6oeQ==\",\n            )\n\n            loadLineNumbers()\n        }\n\n        fun loadInlineColor() {\n            loadStyle(\n                \"https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/plugins/inline-color/prism-inline-color.min.css\",\n                \"sha512-jPGdTBr51+zDG6sY0smU+6rV19GOIN9RXAdVT8Gyvb55dToNJwq2n9SgCa764+z0xMuGA3/idik1tkQQhmALSA==\",\n            )\n        }\n\n        fun loadLineNumbers() {\n            loadStyle(\n                \"https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/plugins/line-numbers/prism-line-numbers.min.css\",\n                \"sha512-cbQXwDFK7lj2Fqfkuxbo5iD1dSbLlJGXGpfTDqbggqjHJeyzx88I3rfwjS38WJag/ihH7lzuGlGHpDBymLirZQ==\",\n            )\n        }\n\n        fun loadToolbar() {\n            loadStyle(\n                \"https://cdnjs.cloudflare.com/ajax/libs/prism/1.28.0/plugins/toolbar/prism-toolbar.min.css\",\n                \"sha512-Dqf5696xtofgH089BgZJo2lSWTvev4GFo+gA2o4GullFY65rzQVQLQVlzLvYwTo0Bb2Gpb6IqwxYWtoMonfdhQ==\",\n            )\n        }\n\n        private fun loadStyle(\n            href: String,\n            integrity: String? = null,\n            crossOrigin: String = \"anonymous\",\n            referrerPolicy: String = \"no-referrer\",\n        ) {\n            head?.let { h ->\n                loaded.getOrPut(href) {\n                    (document.createElement(\"link\") as HTMLLinkElement).apply {\n                        this.rel = \"stylesheet\"\n                        this.href = href\n                        integrity?.let {\n                            this.asDynamic().integrity = it\n                        }\n                        this.crossOrigin = crossOrigin\n                        this.referrerPolicy = referrerPolicy\n\n                        h.append(this)\n                    }\n                }\n            }\n        }\n    }\n\n    internal class LanguageLoader {\n\n        private val loaded = mutableMapOf<String, Promise<dynamic>>()\n\n        suspend fun load(language: String): dynamic {\n            return when (val existing = PrismJsDefinition.languages[language]) {\n                null -> try {\n                    when (language) {\n                        \"dart\" -> loadDart()\n                        \"java\" -> loadJava()\n                        \"json\" -> loadJson()\n                        \"json5\" -> loadJson5()\n                        \"jsonp\" -> loadJsonp()\n                        \"kotlin\" -> loadKotlin()\n                        \"kts\" -> loadKotlin()\n                        \"less\" -> loadLess()\n                        \"php\" -> loadPhp()\n                        \"regex\" -> loadRegex()\n                        \"ruby\" -> loadRuby()\n                        \"rust\" -> loadRust()\n                        \"sass\" -> loadSass()\n                        \"scss\" -> loadScss()\n                        \"typescript\" -> loadTypescript()\n                        // fallback\n                        else -> PrismJsDefinition.languages.plain\n                    }\n                } catch (t: Throwable) {\n                    console.error(\"Could not load PrismJs language $language\", t)\n                    // fallback\n                    PrismJsDefinition.languages.plain\n                }\n                else -> existing\n            }\n        }\n\n        // Prerequisite loaders ////////////////////////////////////////////////////////////////////////////////////////\n\n        private suspend fun loadMarkupTemplating(): dynamic = load(\"markup-templating\") {\n            js(\"import('prismjs/components/prism-markup-templating')\") as Promise<Module<*>>\n        }\n\n        // Language loaders ////////////////////////////////////////////////////////////////////////////////////////////\n\n        private suspend fun loadDart(): dynamic = load(\"dart\") {\n            js(\"import('prismjs/components/prism-dart')\") as Promise<Module<*>>\n        }\n\n        private suspend fun loadJava(): dynamic = load(\"java\") {\n            js(\"import('prismjs/components/prism-java')\") as Promise<Module<*>>\n        }\n\n        private suspend fun loadJson(): dynamic = load(\"json\") {\n            js(\"import('prismjs/components/prism-json')\") as Promise<Module<*>>\n        }\n\n        private suspend fun loadJson5(): dynamic {\n            // requires json to be loaded\n            loadJson()\n\n            return load(\"json5\") {\n                js(\"import('prismjs/components/prism-json5')\") as Promise<Module<*>>\n            }\n        }\n\n        private suspend fun loadJsonp(): dynamic {\n            // requires json to be loaded\n            loadJson()\n\n            return load(\"jsonp\") {\n                js(\"import('prismjs/components/prism-jsonp')\") as Promise<Module<*>>\n            }\n        }\n\n        private suspend fun loadKotlin(): dynamic = load(\"kotlin\") {\n            js(\"import('prismjs/components/prism-kotlin')\") as Promise<Module<*>>\n        }\n\n        private suspend fun loadLess(): dynamic = load(\"less\") {\n            js(\"import('prismjs/components/prism-less')\") as Promise<Module<*>>\n        }\n\n        private suspend fun loadPhp(): dynamic {\n\n            // Why is that? https://github.com/PrismJS/prism/issues/1400#issuecomment-485847919\n            loadMarkupTemplating()\n\n            return load(\"php\") {\n                js(\"import('prismjs/components/prism-php')\") as Promise<Module<*>>\n            }\n        }\n\n        private suspend fun loadRegex(): dynamic = load(\"regex\") {\n            js(\"import('prismjs/components/prism-regex')\") as Promise<Module<*>>\n        }\n\n        private suspend fun loadRuby(): dynamic = load(\"ruby\") {\n            js(\"import('prismjs/components/prism-ruby')\") as Promise<Module<*>>\n        }\n\n        private suspend fun loadRust(): dynamic = load(\"rust\") {\n            js(\"import('prismjs/components/prism-rust')\") as Promise<Module<*>>\n        }\n\n        private suspend fun loadSass(): dynamic = load(\"sass\") {\n            js(\"import('prismjs/components/prism-sass')\") as Promise<Module<*>>\n        }\n\n        private suspend fun loadScss(): dynamic = load(\"scss\") {\n            js(\"import('prismjs/components/prism-scss')\") as Promise<Module<*>>\n        }\n\n        private suspend fun loadTypescript(): dynamic = load(\"typescript\") {\n            js(\"import('prismjs/components/prism-typescript')\") as Promise<Module<*>>\n        }\n\n        private suspend fun load(language: String, promise: () -> Promise<Module<*>>): dynamic {\n\n            loaded.getOrPut(language) {\n                promise()\n            }\n\n            val start = Date.now()\n\n            @Suppress(\"UnsafeCastFromDynamic\")\n            while (PrismJsDefinition.languages[language] == undefined && Date.now() - start < 10_000) {\n                delay(10)\n            }\n\n            return PrismJsDefinition.languages[language]\n        }\n    }\n\n    internal class PluginsLoader(private val styles: StylesLoader) {\n\n        private val loaded = mutableMapOf<String, Promise<dynamic>>()\n\n        // Plugin loaders //////////////////////////////////////////////////////////////////////////////////////////////\n\n        suspend fun loadCopyToClipboard(): dynamic {\n            // Depends on the Toolbar plugin to be loaded\n            loadToolbar()\n\n            return load(\"copyToClipboard\", { _, duration -> duration < 100 }) {\n                js(\"import('prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard')\") as Promise<Module<*>>\n            }\n        }\n\n        suspend fun loadInlineColor(): dynamic {\n            styles.loadInlineColor()\n\n            return load(\"inlineColor\", { _, duration -> duration < 100 }) {\n                js(\"import('prismjs/plugins/inline-color/prism-inline-color')\") as Promise<Module<*>>\n            }\n        }\n\n        suspend fun loadLineNumbers(): dynamic {\n            styles.loadLineNumbers()\n\n            return load(\"lineNumbers\") {\n                js(\"import('prismjs/plugins/line-numbers/prism-line-numbers')\") as Promise<Module<*>>\n            }\n        }\n\n        suspend fun loadShowLanguage(): dynamic {\n            // Depends on the Toolbar plugin to be loaded\n            loadToolbar()\n\n            return load(\"showLanguage\", { _, duration -> duration < 10 }) {\n                js(\"import('prismjs/plugins/show-language/prism-show-language')\") as Promise<Module<*>>\n            }\n        }\n\n        suspend fun loadToolbar(): dynamic {\n            styles.loadToolbar()\n\n            return load(\"toolbar\") {\n                js(\"import('prismjs/plugins/toolbar/prism-toolbar')\") as Promise<Module<*>>\n            }\n        }\n\n        private suspend fun load(\n            plugin: String,\n            isLoading: (pluginName: String, duration: Double) -> Boolean = { pluginName, duration ->\n                PrismJsDefinition.plugins[pluginName] == undefined && duration < 10_000\n            },\n            promise: () -> Promise<Module<*>>,\n        ): dynamic {\n\n            loaded.getOrPut(plugin) {\n                promise()\n            }\n\n            val start = Date.now()\n\n            @Suppress(\"UnsafeCastFromDynamic\")\n            while (isLoading(plugin, Date.now() - start)) {\n                delay(10)\n            }\n\n            return PrismJsDefinition.plugins[plugin]\n        }\n    }\n\n    internal val styles = StylesLoader()\n    internal val languages = LanguageLoader()\n    internal val plugins = PluginsLoader(styles)\n}\n\nval prismJsInternals = PrismJsInternals()\n","package de.peekandpoke.kraft.addons.prismjs\n\nimport org.w3c.dom.HTMLPreElement\nimport org.w3c.dom.set\n\nsealed class PrismPlugin {\n\n    abstract suspend fun load()\n    abstract fun applyTo(pre: HTMLPreElement)\n\n    data class CopyToClipboard(\n        val copy: String,\n    ) : PrismPlugin() {\n        companion object {\n            fun Prism.OptionsBuilder.copyToClipboard(\n                copy: String = \"Copy\",\n            ) = usePlugin(\n                CopyToClipboard(\n                    copy = copy,\n                )\n            )\n        }\n\n        override suspend fun load() {\n            prismJsInternals.plugins.loadCopyToClipboard()\n        }\n\n        override fun applyTo(pre: HTMLPreElement) {\n            pre.className += \" copy-to-clipboard\"\n            pre.dataset[\"prismjsCopy\"] = copy\n        }\n    }\n\n    data class InlineColor(\n        val enabled: Boolean = true,\n    ) : PrismPlugin() {\n        companion object {\n            fun Prism.OptionsBuilder.inlineColor() = usePlugin(\n                InlineColor()\n            )\n        }\n\n        override suspend fun load() {\n            prismJsInternals.plugins.loadInlineColor()\n        }\n\n        override fun applyTo(pre: HTMLPreElement) {\n            pre.className += \" inline-color\"\n        }\n    }\n\n    data class LineNumbers(\n        val start: Int,\n        val softWrap: Boolean,\n    ) : PrismPlugin() {\n        companion object {\n            fun Prism.OptionsBuilder.lineNumbers(\n                start: Int = 1,\n                softWrap: Boolean = false,\n            ) = usePlugin(\n                LineNumbers(start = start, softWrap = softWrap)\n            )\n        }\n\n        override suspend fun load() {\n            prismJsInternals.plugins.loadLineNumbers()\n        }\n\n        override fun applyTo(pre: HTMLPreElement) {\n            pre.className += \" line-numbers\"\n            pre.dataset[\"start\"] = start.toString()\n            if (softWrap) {\n                pre.style.whiteSpace = \"pre-wrap\"\n            }\n        }\n    }\n\n    data class ShowLanguage(\n        val language: String?,\n    ) : PrismPlugin() {\n        companion object {\n            fun Prism.OptionsBuilder.showLanguage(\n                language: String? = null,\n            ) = usePlugin(\n                ShowLanguage(language = language)\n            )\n        }\n\n        override suspend fun load() {\n            prismJsInternals.plugins.loadShowLanguage()\n        }\n\n        override fun applyTo(pre: HTMLPreElement) {\n            pre.className += \" show-language\"\n            language?.let {\n                pre.dataset[\"language\"] = it\n            }\n        }\n    }\n}\n",null,null,null,"package de.peekandpoke.kraft.components\n\nimport de.peekandpoke.kraft.KraftDsl\nimport de.peekandpoke.kraft.vdom.VDomTagConsumer\nimport kotlinx.html.CommonAttributeGroupFacade\nimport kotlinx.html.Tag\n\n/**\n * Markup Element key\n */\n@KraftDsl\nvar CommonAttributeGroupFacade.key: String\n    get() = attributes[\"key\"] ?: \"\"\n    set(value) {\n        attributes[\"key\"] = value\n    }\n\n/**\n * Gets the \"debug-id\" attribute\n */\n@KraftDsl\nfun CommonAttributeGroupFacade.debugId(): String? = attributes[\"debug-id\"]\n\n/**\n * Sets the \"debug-id\" attribute to [id]\n */\n@KraftDsl\nfun CommonAttributeGroupFacade.debugId(id: String) {\n    (consumer as? VDomTagConsumer)\n        ?.takeIf { it.isDebugMode }\n        ?.let { attributes[\"debug-id\"] = id }\n}\n\n/**\n * Gets the \"data-[id]\" attribute\n */\n@KraftDsl\nfun CommonAttributeGroupFacade.data(id: String): String? = attributes[\"data-$id\"]\n\n/**\n * Sets the \"data-[id]\" attribute to [value]\n */\n@KraftDsl\nfun CommonAttributeGroupFacade.data(id: String, value: String) {\n    attributes[\"data-$id\"] = value\n}\n\n/**\n * Adds a child component to the current tag\n */\n@KraftDsl\ninline fun <P, reified C : Component<P>> Tag.comp(props: P, noinline component: (Ctx<P>) -> C): ComponentRef<C> {\n    return (this.consumer as VDomTagConsumer).onComponent(props, component, C::class)\n}\n\n/**\n * Adds a parameterless child component to the current tag\n */\n@KraftDsl\ninline fun <reified C : Component<Any?>> Tag.comp(noinline component: (NoProps) -> C): ComponentRef<C> {\n    return comp(null, component)\n}\n","package de.peekandpoke.kraft.addons.forms\n\nimport de.peekandpoke.kraft.addons.forms.validation.Rule\nimport de.peekandpoke.kraft.semanticui.RenderFunc\nimport de.peekandpoke.kraft.utils.ResponsiveController\nimport de.peekandpoke.ultra.common.MutableTypedAttributes\nimport de.peekandpoke.ultra.common.TypedKey\nimport kotlinx.html.InputType\nimport kotlinx.html.LABEL\nimport kotlinx.html.TEXTAREA\n\ntypealias SettingsBuilder<T> = FieldOptions<T>.() -> Unit\n\ninterface FieldOptionsAccess<T> {\n    fun <X> access(key: TypedKey<X>): FieldOptions.Access<T, X>\n}\n\ninterface FieldOptions<T> : FieldOptionsAccess<T> {\n    companion object {\n        operator fun <T> invoke(): FieldOptions<T> = Base()\n\n        private val labelKey = TypedKey<RenderFunc<LABEL>>(\"label\")\n        private val placeholderKey = TypedKey<String>(\"placeholder\")\n        private val nameKey = TypedKey<String>(\"name\")\n        private val requiredKey = TypedKey<Boolean>(\"required\")\n        private val disabledKey = TypedKey<Boolean>(\"disabled\")\n    }\n\n    open class Base<T> : FieldOptions<T> {\n\n        override val attributes: MutableTypedAttributes = MutableTypedAttributes.empty()\n\n        @KraftFormsSettingDsl\n        override val rules: MutableList<Rule<T>> = mutableListOf()\n\n        /** Adds a validation rule */\n        @KraftFormsSettingDsl\n        override fun accepts(vararg rules: Rule<T>) {\n            this.rules.addAll(rules)\n        }\n\n        @KraftFormsSettingDsl\n        override fun label(label: String) {\n            label { +label }\n        }\n    }\n\n    class Access<T, X>(private val settings: FieldOptions<T>, private val key: TypedKey<X>) {\n\n        @KraftFormsSettingDsl\n        operator fun invoke(value: X) {\n            settings.set(key, value)\n        }\n\n        @KraftFormsSettingDsl\n        operator fun invoke(): X? {\n            return settings.get(key)\n        }\n\n        @KraftFormsSettingDsl\n        fun getOrDefault(default: X): X {\n            return invoke() ?: default\n        }\n\n        @KraftFormsSettingDsl\n        fun getOrPut(produce: () -> X): X {\n            return settings.getOrPut(key, produce)\n        }\n    }\n\n    val attributes: MutableTypedAttributes\n\n    @KraftFormsSettingDsl\n    val rules: List<Rule<T>>\n\n    @KraftFormsSettingDsl\n    val label get() = access(labelKey)\n\n    @KraftFormsSettingDsl\n    val placeholder get() = access(placeholderKey)\n\n    @KraftFormsSettingDsl\n    val name get() = access(nameKey)\n\n    @KraftFormsSettingDsl\n    val required get() = access(requiredKey)\n\n    @KraftFormsSettingDsl\n    val isDisabled: Boolean get() = access(disabledKey).invoke() ?: false\n\n    /** Adds a validation rule */\n    @KraftFormsSettingDsl\n    fun accepts(vararg rules: Rule<T>)\n\n    @KraftFormsSettingDsl\n    fun label(label: String)\n\n    @KraftFormsSettingDsl\n    fun disabled(disabled: Boolean = true) {\n        access(disabledKey)(disabled)\n    }\n\n    private fun <X> set(key: TypedKey<X>, value: X) {\n        attributes[key] = value\n    }\n\n    private fun <X> get(key: TypedKey<X>): X? {\n        return attributes[key]\n    }\n\n    private fun <X> getOrPut(key: TypedKey<X>, produce: () -> X): X {\n        return attributes.getOrPut(key, produce)\n    }\n\n    override fun <X> access(key: TypedKey<X>): Access<T, X> = Access(this, key)\n}\n\ninterface AutofocusOptions<T> : FieldOptionsAccess<T> {\n    companion object {\n        private val autofocusKey = TypedKey<Boolean>(\"autofocus\")\n    }\n\n    @KraftFormsSettingDsl\n    val autofocusValue: FieldOptions.Access<T, Boolean> get() = access(autofocusKey)\n\n    @KraftFormsSettingDsl\n    fun autofocus(focus: Boolean = true) {\n        autofocusValue(focus)\n    }\n\n    @KraftFormsSettingDsl\n    fun autofocusOnDesktop(responsive: ResponsiveController.State) {\n        autofocus(responsive.isDesktop)\n    }\n}\n\ninterface CheckboxOptions<T> : FieldOptions<T>, AutofocusOptions<T>\n\ninterface InputOptions<T> : FieldOptions<T>, AutofocusOptions<T> {\n    companion object {\n        private val stepKey = TypedKey<Number>(\"step\")\n        private val typeKey = TypedKey<InputType>(\"type\")\n        private val formatValueKey = TypedKey<String>(\"format-value\")\n    }\n\n    @KraftFormsSettingDsl\n    val formatValue get() = access(formatValueKey)\n\n    @KraftFormsSettingDsl\n    val step get() = access(stepKey)\n\n    @KraftFormsSettingDsl\n    val type get() = access(typeKey)\n\n    @KraftFormsSettingDsl\n    fun asDateInput() {\n        type(InputType.date)\n        formatValue(\"yyyy-MM-dd\")\n    }\n\n    @KraftFormsSettingDsl\n    fun asDateTimeInput() {\n        type(InputType.dateTimeLocal)\n        formatValue(\"yyyy-MM-ddTHH:mm:ss\")\n    }\n\n    @KraftFormsSettingDsl\n    fun asTimeInput() {\n        type(InputType.time)\n        formatValue(\"HH:mm:ss\")\n    }\n}\n\ninterface TextAreaOptions<T> : FieldOptions<T>, AutofocusOptions<T> {\n\n    companion object {\n        private val verticalAutoResizeKey = TypedKey<Boolean>(\"verticalAutoResize\")\n        private val customizeKey = TypedKey<RenderFunc<TEXTAREA>>(\"customize\")\n    }\n\n    @KraftFormsSettingDsl\n    val verticalAutoResize get() = access(verticalAutoResizeKey)\n\n    @KraftFormsSettingDsl\n    val customize get() = access(customizeKey)\n}\n","package de.peekandpoke.kraft.addons.forms\n\ninterface FormField<T> {\n\n    /**\n     * The errors the field currently has\n     */\n    val errors: List<String>\n\n    /**\n     * Returns true when the field has errors\n     */\n    val hasErrors get() = errors.isNotEmpty()\n\n    /**\n     * Marker if the component was touched.\n     */\n    val touched: Boolean\n\n    /**\n     * Resets the form field.\n     *\n     * Set the input value to initial value.\n     * Marks the field as not touched.\n     * Clears all errors\n     */\n    fun reset()\n\n    /**\n     * Marks the form field as touched.\n     */\n    fun touch()\n\n    /**\n     * Marks the form field as not touched.\n     */\n    fun untouch()\n\n    /**\n     * Validates all rules and returns true if all rules are fulfilled.\n     */\n    fun validate(): Boolean\n}\n","package de.peekandpoke.kraft.addons.semanticui.forms\n\nimport de.peekandpoke.kraft.addons.forms.CheckboxOptions\nimport de.peekandpoke.kraft.addons.forms.FieldOptions\nimport de.peekandpoke.kraft.addons.forms.InputOptions\nimport de.peekandpoke.kraft.addons.forms.KraftFormsSettingDsl\nimport de.peekandpoke.kraft.components.onClick\nimport de.peekandpoke.kraft.semanticui.*\nimport de.peekandpoke.ultra.common.TypedKey\nimport kotlinx.html.DIV\nimport kotlinx.html.I\nimport kotlinx.html.InputType\n\ninterface SemanticOptions<T> : FieldOptions<T> {\n\n    companion object {\n        val appearKey = TypedKey<SemanticFn>(\"appear\")\n    }\n\n    interface Checkbox<T> : CheckboxOptions<T> {\n\n        companion object {\n            val styleKey = TypedKey<SemanticFn>(\"style\")\n        }\n\n        @KraftFormsSettingDsl\n        val style get() = access(styleKey)\n\n        @KraftFormsSettingDsl\n        fun toggle() {\n            style { toggle }\n        }\n\n        @KraftFormsSettingDsl\n        fun slider() {\n            style { slider }\n        }\n    }\n\n    interface Input<T> : InputOptions<T> {\n        companion object {\n            val wrapFieldWithKey = TypedKey<SemanticFn>(\"wrap-field-with\")\n            val beforeFieldKey = TypedKey<DIV.(UiInputFieldComponent<*, *>) -> Unit>(\"before-field\")\n            val afterFieldKey = TypedKey<DIV.(UiInputFieldComponent<*, *>) -> Unit>(\"after-field\")\n        }\n\n        @JsName(\"rightIcon\")\n        @KraftFormsSettingDsl\n        fun rightIcon(iconFn: SemanticIconFn) {\n            rightIcon(iconFn = iconFn, block = {})\n        }\n\n        @JsName(\"rightIconWithBlock\")\n        @KraftFormsSettingDsl\n        fun rightIcon(iconFn: SemanticIconFn, block: I.(UiInputFieldComponent<T, *>) -> Unit) {\n            attributes[wrapFieldWithKey] = semantic { right.icon.input }\n\n            val fn: DIV.(UiInputFieldComponent<T, *>) -> Unit = { field ->\n                icon.iconFn().invoke {\n                    block(field)\n                }\n            }\n            @Suppress(\"UNCHECKED_CAST\")\n            attributes[afterFieldKey] = fn as DIV.(UiInputFieldComponent<*, *>) -> Unit\n        }\n\n        @JsName(\"clearingRightIcon\")\n        @KraftFormsSettingDsl\n        fun rightClearingIcon(iconFn: SemanticIconFn = { grey.times }) {\n            attributes[wrapFieldWithKey] = semantic { right.icon.input }\n\n            val fn: DIV.(UiInputFieldComponent<*, *>) -> Unit = {\n                icon.link.iconFn().invoke {\n                    onClick { _ ->\n                        it.setInput(\"\")\n                        it.focus(\"input\")\n                    }\n                }\n            }\n\n            attributes[afterFieldKey] = fn\n        }\n\n        @JsName(\"revealRevealPasswordIcon\")\n        @KraftFormsSettingDsl\n        fun revealPasswordIcon(\n            hiddenIcon: SemanticIconFn = { eye_outline },\n            visibleIcon: SemanticIconFn = { eye_slash_outline },\n        ) {\n            attributes[wrapFieldWithKey] = semantic { right.icon.input }\n\n            val fn: DIV.(UiInputFieldComponent<*, *>) -> Unit = {\n\n                val type = it.effectiveType ?: InputType.password\n\n                val iconFn = when (type) {\n                    InputType.password -> hiddenIcon\n                    else -> visibleIcon\n                }\n\n                icon.link.iconFn().invoke {\n                    onClick { _ ->\n                        it.typeOverride = when (type) {\n                            InputType.password -> InputType.text\n                            else -> InputType.password\n                        }\n                    }\n                }\n            }\n\n            attributes[afterFieldKey] = fn\n        }\n\n        @JsName(\"leftIcon\")\n        @KraftFormsSettingDsl\n        fun leftIcon(iconFn: SemanticIconFn) {\n            attributes[wrapFieldWithKey] = semantic { left.icon.input }\n\n            val fn: DIV.(UiInputFieldComponent<*, *>) -> Unit = { icon.iconFn().invoke() }\n            attributes[afterFieldKey] = fn\n        }\n\n        @JsName(\"rightLabel\")\n        @KraftFormsSettingDsl\n        fun rightLabel(labelFn: DIV.(UiInputFieldComponent<T, *>) -> Unit) {\n            wrapFieldWith { right.labeled.input }\n\n            @Suppress(\"UNCHECKED_CAST\")\n            attributes[afterFieldKey] = labelFn as DIV.(UiInputFieldComponent<*, *>) -> Unit\n        }\n\n        @JsName(\"leftLabel\")\n        @KraftFormsSettingDsl\n        fun leftLabel(labelFn: DIV.(UiInputFieldComponent<T, *>) -> Unit) {\n            wrapFieldWith { left.labeled.input }\n\n            @Suppress(\"UNCHECKED_CAST\")\n            attributes[beforeFieldKey] = labelFn as DIV.(UiInputFieldComponent<*, *>) -> Unit\n        }\n\n        @KraftFormsSettingDsl\n        fun wrapFieldWith(): (SemanticTag.() -> SemanticTag)? = attributes[wrapFieldWithKey]\n\n        @KraftFormsSettingDsl\n        fun wrapFieldWith(wrap: (SemanticTag.() -> SemanticTag)) {\n            val current = wrapFieldWith()\n\n            attributes[wrapFieldWithKey] = semantic {\n                current?.invoke(this)\n                wrap()\n            }\n        }\n\n        @KraftFormsSettingDsl\n        fun renderBeforeField(): (DIV.(UiInputFieldComponent<*, *>) -> Unit)? = attributes[beforeFieldKey]\n\n        @KraftFormsSettingDsl\n        fun renderAfterField(): (DIV.(UiInputFieldComponent<*, *>) -> Unit)? = attributes[afterFieldKey]\n    }\n\n    @KraftFormsSettingDsl\n    val appear get() = access(appearKey)\n}\n\n","package de.peekandpoke.kraft.vdom\n\nimport kotlinx.html.org.w3c.dom.events.Event\n\ninterface VDomElement {\n\n    fun appendChild(child: VDomElement) {}\n\n    fun addEvent(name: String, callback: (Event) -> Any?) {}\n\n    fun render(): dynamic\n}\n","package de.peekandpoke.kraft.vdom\n\nimport de.peekandpoke.kraft.components.Component\nimport org.w3c.dom.HTMLElement\n\ninterface VDomEngine {\n\n    data class Options(\n        val debugMode: Boolean = false,\n    ) {\n        companion object {\n            val default = Options()\n        }\n    }\n\n    val options: Options\n\n    fun mount(element: HTMLElement, view: VDom.() -> Any?)\n\n    fun createTagConsumer(host: Component<*>?): VDomTagConsumer\n\n    fun triggerRedraw(component: Component<*>)\n\n    fun render(host: Component<*>? = null, builder: VDom.() -> Any?): dynamic {\n        return VDom(this, host).render { builder() }\n    }\n}\n","package de.peekandpoke.kraft.addons.routing\n\nimport de.peekandpoke.ultra.common.decodeUriComponent\nimport de.peekandpoke.ultra.common.encodeUriComponent\n\n/**\n * Common Route representation\n */\ninterface Route {\n\n    interface Renderable {\n        /**\n         * Builds a uri with the given [routeParams]\n         */\n        fun buildUri(vararg routeParams: String): String\n\n        /**\n         * Builds a uri with the given [routeParams] and [queryParams]\n         */\n        fun buildUri(routeParams: Map<String, String>, queryParams: Map<String, String?>): String\n    }\n\n    /**\n     * Represents a route match\n     */\n    data class Match(\n        /** The route that was matched */\n        val route: Route,\n        /** Route params extract from url placeholder */\n        val routeParams: Map<String, String>,\n        /** Query params after like ?p=1&t=2 */\n        val queryParams: Map<String, String>,\n    ) {\n        companion object {\n            val default = Match(route = Route.default, routeParams = emptyMap(), queryParams = emptyMap())\n        }\n\n        /** Shortcut to the pattern of the [route] */\n        val pattern = route.pattern\n\n        /** Combination of route and query params */\n        val allParams = routeParams.plus(queryParams)\n\n        /** Gets the route param with the given [key] / name */\n        operator fun get(key: String) = param(key)\n\n        /** Gets the route param with the given [name] or defaults to [default] */\n        fun param(name: String, default: String = \"\"): String = routeParams[name] ?: default\n\n        /** Returns a new instance with the query params set */\n        fun withQueryParams(params: Map<String, String?>): Match {\n            @Suppress(\"UNCHECKED_CAST\")\n            return copy(\n                queryParams = params.filterValues { v -> v != null } as Map<String, String>\n            )\n        }\n\n        /** Returns a new instance with the query params set */\n        fun withQueryParams(vararg params: Pair<String, String?>): Match = withQueryParams(params.toMap())\n    }\n\n    companion object {\n        /** Basic default route */\n        val default = Static(\"\")\n    }\n\n    /** The pattern of the route */\n    val pattern: String\n\n    /**\n     * Matches the given [uri] against the [pattern] of the route.\n     *\n     * Returns an instance of [Match] or null if the pattern did not match.\n     */\n    fun match(uri: String): Match?\n\n//    /**\n//     * Internal helper for building uris\n//     */\n//    fun String.replacePlaceholder(placeholder: String, value: String) =\n//        replace(\"{$placeholder}\", value.encodeUriComponent())\n//\n//    /**\n//     * Builds a uri with the given [routeParams]\n//     */\n//    fun buildUri(vararg routeParams: String): String\n//\n//    /**\n//     * Builds a uri with the given [routeParams] and [queryParams]\n//     */\n//    fun buildUri(routeParams: Map<String, String>, queryParams: Map<String, String>): String\n}\n\n/**\n * A parameterized route with one route parameter\n */\nabstract class RouteBase(final override val pattern: String, numParams: Int) : Route, Route.Renderable {\n\n    companion object {\n        @Suppress(\"RegExpRedundantEscape\")\n        val placeholderRegex = \"\\\\{([^}]*)\\\\}\".toRegex()\n        const val extractRegexPattern = \"([^/]*)\"\n    }\n\n    /**\n     * We extract all placeholders from the pattern\n     */\n    private val placeholders = placeholderRegex\n        .findAll(pattern)\n        .map { it.groupValues[1] }\n        .toList()\n\n    /**\n     * We construct a regex for matching the whole pattern with param placeholders\n     */\n    private val matchingRegex =\n        placeholders.fold(pattern) { acc, placeholder ->\n            acc.replace(\"{$placeholder}\", extractRegexPattern)\n        }.replace(\"/\", \"\\\\/\").toRegex()\n\n    init {\n        // Sanity check\n        if (numParams != placeholders.size) {\n            error(\"The route '$pattern' has [${placeholders.size}] route-params but should have [$numParams]\")\n        }\n    }\n\n    /**\n     * Tries to match the given [uri] against the [pattern] of the route.\n     */\n    override fun match(uri: String): Route.Match? {\n\n        val (route, query) = when (val queryIdx = uri.indexOf(\"?\")) {\n            -1 -> arrayOf(uri, \"\")\n            else -> arrayOf(uri.substring(0, queryIdx), uri.substring(queryIdx + 1))\n        }\n\n        val match = matchingRegex.matchEntire(route) ?: return null\n\n//        console.log(placeholders)\n//        console.log(match)\n//        console.log(match.groupValues)\n\n        val routeParams = placeholders\n            .zip(match.groupValues.drop(1).map { it.decodeUriComponent() })\n            .toMap()\n\n        val queryParams = when (query.isEmpty()) {\n            true -> emptyMap()\n            else -> query.split(\"&\").associate {\n                when (val equalsIdx = it.indexOf(\"=\")) {\n                    -1 -> Pair(it, \"\")\n                    else -> Pair(\n                        it.substring(0, equalsIdx),\n                        it.substring(equalsIdx + 1).decodeUriComponent(),\n                    )\n                }\n            }\n        }\n\n        return Route.Match(route = this, routeParams = routeParams, queryParams = queryParams)\n    }\n\n    /**\n     * Builds a uri with the given [routeParams]\n     */\n    override fun buildUri(vararg routeParams: String): String =\n        routeParams.foldIndexed(\"#$pattern\") { idx, pattern, param ->\n            pattern.replacePlaceholder(placeholders[idx], param)\n        }\n\n    /**\n     * Builds a uri with the given [routeParams] and [queryParams]\n     */\n    override fun buildUri(routeParams: Map<String, String>, queryParams: Map<String, String?>): String {\n\n        val withoutQuery = routeParams.entries.fold(\"#$pattern\") { pattern, entry ->\n            pattern.replacePlaceholder(entry.key, entry.value)\n        }\n\n        @Suppress(\"UNCHECKED_CAST\")\n        val cleanedQueryParams = queryParams.filterValues { it != null } as Map<String, String>\n\n        return when (cleanedQueryParams.isEmpty()) {\n            true -> withoutQuery\n            else -> \"$withoutQuery?\" + cleanedQueryParams\n                .map { \"${it.key}=${it.value.encodeUriComponent()}\" }.joinToString(\"&\")\n        }\n    }\n\n    /**\n     * Internal helper for building uris\n     */\n    private fun String.replacePlaceholder(placeholder: String, value: String) =\n        replace(\"{$placeholder}\", value.encodeUriComponent())\n}\n\n/**\n * A static route is a route that does not have any route parameters\n */\nopen class Static(pattern: String) : RouteBase(pattern, 0) {\n    operator fun invoke() = buildUri()\n}\n\n/**\n * A route that matches a regex, f.e. used as a fallback route.\n */\nopen class Pattern(private val regex: Regex) : Route {\n\n    companion object {\n        val CatchAll = Pattern(\".*\".toRegex())\n    }\n\n    override val pattern: String\n        get() = regex.pattern\n\n    override fun match(uri: String): Route.Match? {\n        return regex.matchEntire(uri)?.let {\n            Route.Match(\n                route = this,\n                routeParams = emptyMap(),\n                queryParams = emptyMap(),\n            )\n        }\n    }\n}\n\n/**\n * A parameterized route with one route parameter\n */\nopen class Route1(pattern: String) : RouteBase(pattern, 1) {\n    /** Builds the uri with the given parameters */\n    fun build(p1: String) = buildUri(p1)\n}\n\n/**\n * A parameterized route with two route parameter\n */\nopen class Route2(pattern: String) : RouteBase(pattern, 2) {\n    /** Builds the uri with the given parameters */\n    fun build(p1: String, p2: String) = buildUri(p1, p2)\n}\n\n/**\n * A parameterized route with two route parameter\n */\nopen class Route3(pattern: String) : RouteBase(pattern, 3) {\n    /** Builds the uri with the given parameters */\n    fun build(p1: String, p2: String, p3: String) = buildUri(p1, p2, p3)\n}\n\n/**\n * A parameterized route with two route parameter\n */\nopen class Route4(pattern: String) : RouteBase(pattern, 4) {\n    /** Builds the uri with the given parameters */\n    fun build(p1: String, p2: String, p3: String, p4: String) = buildUri(p1, p2, p3, p4)\n}\n\n/**\n * A parameterized route with two route parameter\n */\nopen class Route5(pattern: String) : RouteBase(pattern, 5) {\n    /** Builds the uri with the given parameters */\n    fun build(p1: String, p2: String, p3: String, p4: String, p5: String) = buildUri(p1, p2, p3, p4, p5)\n}\n",null,"package de.peekandpoke.kraft.addons.dnd\n\nimport org.w3c.dom.events.Event\nimport kotlin.reflect.KClass\n\ninternal object Dnd {\n\n    private data class CurrentDrag<PAYLOAD : Any>(\n        val payload: PAYLOAD,\n        val possibleTargets: List<DndDropTargetComponent<PAYLOAD>>\n    ) {\n        private inner class Ctx(val target: DndDropTargetComponent<PAYLOAD>) {\n\n            val onMouseOver: (Event) -> Unit = {\n                it.stopPropagation()\n                currentDropTarget = target\n                target.onMouseOver()\n            }\n            val onMouseOut: (Event) -> Unit = {\n                it.stopPropagation()\n                currentDropTarget = null\n                target.onMouseOut()\n            }\n        }\n\n        /**\n         * A list containing an instance of Ctx for each possible target.\n         */\n        private var contexts: List<Ctx>? = null\n\n        /**\n         * The drop target currently hovered or null if none is hovered.\n         */\n        private var currentDropTarget: DndDropTargetComponent<PAYLOAD>? = null\n\n        fun start() {\n\n            cleanup()\n\n            contexts = possibleTargets.map { Ctx(target = it) }\n\n            contexts?.forEach {\n                // add mouse over event listeners\n                it.target.parent?.dom?.apply {\n                    addEventListener(\"mouseover\", it.onMouseOver)\n                    addEventListener(\"mouseout\", it.onMouseOut)\n                }\n\n                // signalize to the drop target that dragging has started\n                it.target.onDragStart()\n            }\n        }\n\n        fun end() {\n            currentDropTarget?.apply { onDrop(payload) }\n\n            cleanup()\n        }\n\n        private fun cleanup() {\n            contexts?.forEach {\n                // remove mouse over event listeners\n                it.target.parent?.dom?.apply {\n                    removeEventListener(\"mouseover\", it.onMouseOver)\n                    removeEventListener(\"mouseout\", it.onMouseOut)\n                }\n\n                // signalize to the drop target that dragging has ended\n                it.target.onDragEnd()\n            }\n\n            contexts = null\n\n            currentDropTarget = null\n        }\n    }\n\n    private val dropTargets = mutableSetOf<DndDropTargetComponent<*>>()\n\n    private var currentDrag: CurrentDrag<*>? = null\n\n    internal fun registerDropTarget(target: DndDropTargetComponent<*>) {\n        dropTargets.add(target)\n    }\n\n    internal fun removeDropTarget(target: DndDropTargetComponent<*>) {\n        dropTargets.remove(target)\n    }\n\n    internal fun <PAYLOAD : Any> onDragStart(payload: PAYLOAD, type: KClass<PAYLOAD>) {\n\n        @Suppress(\"UNCHECKED_CAST\")\n        val filtered = dropTargets\n            .filter { it.acceptsPayloadClass(type) }\n            .map { it as DndDropTargetComponent<PAYLOAD> }\n            .filter { it.accepts(payload) }\n\n        currentDrag = CurrentDrag(payload, filtered).apply { start() }\n    }\n\n    internal fun onDragEnd() {\n        currentDrag?.apply { end() }\n    }\n}\n\n","package de.peekandpoke.kraft.addons.dnd\n\nimport de.peekandpoke.kraft.components.Component\nimport de.peekandpoke.kraft.components.Ctx\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.semanticui.css\nimport de.peekandpoke.kraft.utils.Vector2D\nimport de.peekandpoke.kraft.utils.absolutePosition\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.browser.document\nimport kotlinx.browser.window\nimport kotlinx.css.Display\nimport kotlinx.css.display\nimport kotlinx.html.Tag\nimport kotlinx.html.div\nimport org.w3c.dom.HTMLElement\nimport org.w3c.dom.HTMLInputElement\nimport org.w3c.dom.HTMLTextAreaElement\nimport org.w3c.dom.events.Event\nimport org.w3c.dom.events.MouseEvent\nimport kotlin.reflect.KClass\n\n@Suppress(\"FunctionName\")\ninline fun <reified PAYLOAD : Any> Tag.DndDragHandle(\n    payload: PAYLOAD,\n    host: Component<*>? = null,\n    key: String? = null\n) = comp(\n    DndDragHandleComponent.Props(\n        payloadType = PAYLOAD::class,\n        payload = payload,\n        host = host,\n        key = key\n    )\n) {\n    DndDragHandleComponent(it)\n}\n\nclass DndDragHandleComponent<PAYLOAD : Any>(ctx: Ctx<Props<PAYLOAD>>) :\n    Component<DndDragHandleComponent.Props<PAYLOAD>>(ctx) {\n\n    data class Props<PAYLOAD : Any>(\n        val payloadType: KClass<PAYLOAD>,\n        val payload: PAYLOAD,\n        val host: Component<*>?,\n        val key: String?\n    )\n\n    /**\n     * The Html Element of the Host Component (the component to be dragged) of the drag handle\n     */\n    private val hostComponentElement: HTMLElement?\n        get() = (props.host ?: parent)?.dom\n\n    /**\n     * The Html Element in which the drag handle was placed\n     */\n    private val handleParentElement: HTMLElement?\n        get() = dom?.parentElement as? HTMLElement\n\n    /**\n     * While dragging we create a deep clone of the Host Components dom elements\n     */\n    private var clone: HTMLElement? = null\n\n    /**\n     * The initial mouse offset, when dragging was started.\n     *\n     * This is used to keep the position of the dragged component relative to the mouse cursor position stable.\n     */\n    private var mouseOffset = Vector2D.zero\n\n    /**\n     * Handler for the mouse down event\n     */\n    private val onMouseDown: (Event) -> Unit by lazy {\n        { evt: Event ->\n\n            Unit.apply {\n\n                when (evt.target) {\n                    // Prevent dragging when the click was inside of an input element\n                    is HTMLInputElement, is HTMLTextAreaElement -> Unit\n                    // Otherwise ok\n                    else -> window.document.body?.apply {\n                        addEventListener(\"mouseup\", onMouseUpOnBody)\n                        addEventListener(\"mousemove\", onMouseMoveOnBody)\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Mouse up handler on the stage\n     */\n    @Suppress(\"UNUSED_ANONYMOUS_PARAMETER\")\n    private val onMouseUpOnBody: (Event) -> Unit by lazy {\n        { evt: Event ->\n            Unit.apply {\n                // remove all event listeners from the stage\n                window.document.body?.apply {\n                    removeEventListener(\"mouseup\", onMouseUpOnBody)\n                    removeEventListener(\"mousemove\", onMouseMoveOnBody)\n                }\n\n                // Remove the clone from the stage\n                clone?.let { clone ->\n                    clone.parentElement?.apply { removeChild(clone) }\n                }\n                // Reset the clone\n                clone = null\n\n                // make the text selectable again on the stage\n                window.document.body?.style?.setProperty(\"user-select\", \"\")\n\n                // Signalize that dragging has stopped\n                Dnd.onDragEnd()\n            }\n        }\n    }\n\n    /**\n     * Mouse move handler on the stage\n     */\n    private val onMouseMoveOnBody: (Event) -> Unit by lazy {\n        { evt: Event ->\n            Unit.apply {\n                (evt as? MouseEvent)?.let { mouseEvent ->\n\n                    hostComponentElement?.apply {\n                        // Did we already create the clone of the draggable element?\n                        // If not we need to create it.\n                        if (clone == null) {\n                            // pick up the offset of the mouse inside of the dragged element\n                            val scrollPosition = Vector2D(\n                                document.documentElement!!.scrollLeft,\n                                document.documentElement!!.scrollTop\n                            )\n\n                            mouseOffset = (handleParentElement.absolutePosition() -\n                                hostComponentElement.absolutePosition() -\n                                scrollPosition) +\n                                Vector2D(mouseEvent.offsetX, mouseEvent.offsetY)\n\n                            // create the clone\n                            clone = cloneNode(true) as? HTMLElement\n                            // apply styles and add the clone to the stage\n                            clone?.let { clone ->\n                                // TODO: set absolute width and height\n                                clone.style.zIndex = \"1000\"\n                                clone.style.setProperty(\"pointer-events\", \"none\")\n                                clone.style.position = \"absolute\"\n                                clone.style.overflowX = \"hidden\"\n                                clone.style.overflowY = \"hidden\"\n                                window.document.body?.appendChild(clone)\n                            }\n                            // make the text in the whole document not selectable\n                            window.document.body?.style?.setProperty(\"user-select\", \"none\")\n\n                            // Signalize that dragging has started.\n                            Dnd.onDragStart(props.payload, props.payloadType)\n                        }\n\n                        // On every move, we need to update the position of the dragged item\n                        clone?.let { clone ->\n                            clone.style.top = \"${mouseEvent.clientY - mouseOffset.y}px\"\n                            clone.style.left = \"${mouseEvent.clientX - mouseOffset.x}px\"\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    init {\n        lifecycle {\n            /**\n             * Called when the drag handle component is put into the Dom\n             *\n             * Here we get our hands on\n             * - the Dom of the Host Component\n             * - the Dom of the element containing the drag handle\n             */\n            onMount {\n                handleParentElement?.apply {\n                    addEventListener(\"mousedown\", onMouseDown)\n                }\n            }\n\n            /**\n             * Removes all event listeners\n             */\n            onUnmount {\n                handleParentElement?.apply {\n                    removeEventListener(\"mousedown\", onMouseDown)\n                }\n\n                window.document.body?.apply {\n                    removeEventListener(\"mouseup\", onMouseUpOnBody)\n                    removeEventListener(\"mousemove\", onMouseMoveOnBody)\n                }\n            }\n        }\n    }\n\n    /**\n     * We need to render a dummy element, so that we can get our hands on\n     * - the Dom of the Host Component\n     * - the Dom of the element containing the drag handle\n     *\n     * @see [onMount]\n     */\n    override fun VDom.render() {\n        div {\n            css {\n                display = Display.none\n            }\n        }\n    }\n}\n","package de.peekandpoke.kraft.addons.dnd\n\nimport de.peekandpoke.kraft.components.Component\nimport de.peekandpoke.kraft.components.Ctx\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.semanticui.css\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.css.Display\nimport kotlinx.css.display\nimport kotlinx.html.Tag\nimport kotlinx.html.div\nimport org.w3c.dom.get\nimport org.w3c.dom.set\nimport kotlin.reflect.KClass\n\n@Suppress(\"FunctionName\")\ninline fun <reified PAYLOAD : Any> Tag.DndDropTarget(\n    noinline builder: DndDropTargetBuilder<PAYLOAD>.() -> Unit,\n) =\n    DndDropTarget(PAYLOAD::class, builder)\n\n@Suppress(\"FunctionName\")\nfun <PAYLOAD : Any> Tag.DndDropTarget(\n    payloadType: KClass<PAYLOAD>,\n    builder: DndDropTargetBuilder<PAYLOAD>.() -> Unit,\n) =\n    comp(DndDropTargetBuilder(payloadType).apply(builder).build()) { DndDropTargetComponent(it) }\n\nclass DndDropTargetBuilder<PAYLOAD : Any>(private val payloadType: KClass<PAYLOAD>) {\n    var accepts: (PAYLOAD) -> Boolean = { true }\n    var onDrop: (PAYLOAD) -> Unit = {}\n    var onMouseOver: (target: Component<*>) -> Unit = {}\n    var onMouseOut: (target: Component<*>) -> Unit = {}\n    var onDragStart: (target: Component<*>) -> Unit = {}\n    var onDragEnd: (target: Component<*>) -> Unit = {}\n    var key: String? = null\n\n    internal fun build() = DndDropTargetComponent.Props(\n        payloadType = payloadType,\n        accepts = accepts,\n        onDrop = onDrop,\n        onMouseOver = onMouseOver,\n        onMouseOut = onMouseOut,\n        onDragStart = onDragStart,\n        onDragEnd = onDragEnd,\n        key = key\n    )\n}\n\nfun <P : Any> DndDropTargetBuilder<P>.greenHighlights() {\n    onMouseOver = {\n        it.dom?.apply {\n            style.backgroundColor = \"rgba(100, 255, 100, 0.3)\"\n        }\n    }\n    onMouseOut = {\n        it.dom?.apply {\n            style.backgroundColor = \"rgba(100, 255, 100, 0.05)\"\n        }\n    }\n    onDragStart = {\n        it.dom?.apply {\n            dataset[\"__dnd_initial__\"] = style.backgroundColor\n            style.backgroundColor = \"rgba(100, 255, 100, 0.05)\"\n        }\n    }\n    onDragEnd = {\n        it.dom?.apply {\n            style.backgroundColor = dataset[\"__dnd_initial__\"] ?: \"\"\n            dataset[\"__dnd_initial__\"] = \"\"\n        }\n    }\n}\n\nfun <P : Any> DndDropTargetBuilder<P>.blueHighlights() {\n    onMouseOver = {\n        it.dom?.apply {\n            style.backgroundColor = \"rgba(100, 100, 255, 0.3)\"\n        }\n    }\n    onMouseOut = {\n        it.dom?.apply {\n            style.backgroundColor = \"rgba(100, 100, 255, 0.05)\"\n        }\n    }\n    onDragStart = {\n        it.dom?.apply {\n            dataset[\"__dnd_initial__\"] = style.backgroundColor\n            style.backgroundColor = \"rgba(100, 100, 255, 0.05)\"\n        }\n    }\n    onDragEnd = {\n        it.dom?.apply {\n            style.backgroundColor = dataset[\"__dnd_initial__\"] ?: \"\"\n            dataset[\"__dnd_initial__\"] = \"\"\n        }\n    }\n}\n\nclass DndDropTargetComponent<PAYLOAD : Any>(ctx: Ctx<Props<PAYLOAD>>) :\n    Component<DndDropTargetComponent.Props<PAYLOAD>>(ctx) {\n\n    data class Props<PAYLOAD : Any>(\n        val payloadType: KClass<PAYLOAD>,\n        val accepts: (PAYLOAD) -> Boolean,\n        val onDrop: (PAYLOAD) -> Unit,\n        val onMouseOver: (target: Component<*>) -> Unit,\n        val onMouseOut: (target: Component<*>) -> Unit,\n        val onDragStart: (target: Component<*>) -> Unit,\n        val onDragEnd: (target: Component<*>) -> Unit,\n        val key: String?\n    )\n\n    init {\n        lifecycle.onMount {\n            Dnd.registerDropTarget(this)\n\n        }\n\n        lifecycle.onUnmount {\n            Dnd.removeDropTarget(this)\n        }\n    }\n\n    /**\n     * Returns true when drop target accepts a payload of the given [payloadClass]\n     */\n    internal fun acceptsPayloadClass(payloadClass: KClass<*>): Boolean {\n        return props.payloadType == payloadClass\n    }\n\n    /**\n     * Returns true when the drop target accepts the payloads value.\n     *\n     * This method is called when dragging start, to filter all suitable drop targets.\n     */\n    internal fun accepts(payload: PAYLOAD) = props.accepts(payload)\n\n    /**\n     * Called when something is dropped on the host component.\n     */\n    internal fun onDrop(payload: PAYLOAD) = props.onDrop(payload)\n\n    /**\n     * Called when the mouse is entering the host component\n     */\n    internal fun onMouseOver() = parent?.let { props.onMouseOver(it) }\n\n    /**\n     * Called when the mouse is leaving the host component\n     */\n    internal fun onMouseOut() = parent?.let { props.onMouseOut(it) }\n\n    /**\n     * Called when dragging starts\n     */\n    internal fun onDragStart() = parent?.let { props.onDragStart(it) }\n\n    /**\n     * Called when dragging ends\n     */\n    internal fun onDragEnd() = parent?.let { props.onDragEnd(it) }\n\n    override fun VDom.render() {\n        div {\n            css {\n                display = Display.none\n            }\n        }\n    }\n}\n","package de.peekandpoke.kraft.addons.forms\n\nimport de.peekandpoke.kraft.components.Component\nimport de.peekandpoke.kraft.messages.onMessage\n\nopen class FormController(private val component: Component<*>, val stopEvents: Boolean = true) {\n\n    companion object {\n        fun watcher(component: Component<*>) = FormController(component = component, stopEvents = false)\n    }\n\n    private val _fields = mutableSetOf<FormField<*>>()\n\n    val fields get() = _fields\n\n    /**\n     * Returns `true` when all fields are valid\n     */\n    val isValid\n        get(): Boolean {\n            return numErrors == 0\n        }\n\n    /**\n     * Returns `true` when some fields are NOT valid\n     */\n    val isNotValid get() = !isValid\n\n    /**\n     * Number of fields with errors\n     */\n    val numErrors\n        get(): Int {\n            return _fields.filter { !it.validate() }.size\n        }\n\n    /**\n     * Resets the input of all fields\n     */\n    fun resetAllFields() {\n        _fields.forEach { it.reset() }\n    }\n\n    /**\n     * Validates all fields by touching them first.\n     *\n     * When a field is touched, it's errors will be displayed.\n     */\n    fun validate(): Boolean {\n\n        val before = isValid\n\n        _fields.forEach { it.touch() }\n\n        val after = isValid\n\n        if (before != after) {\n            component.triggerRedraw()\n        }\n\n        return after\n    }\n\n    /**\n     * Validates all fields by touching them first and showing potential errors.\n     *\n     * See [validate].\n     *\n     * When the form is valid [andThen] is executed.\n     */\n    fun ifValidate(andThen: () -> Unit) {\n        if (validate()) {\n            andThen()\n        }\n    }\n\n    init {\n        component.onMessage<FormFieldInputChanged<*>> {\n            component.triggerRedraw()\n\n            if (stopEvents) {\n                it.stop()\n            }\n        }\n\n        component.onMessage<FormFieldMountedMessage<*>> {\n            _fields.add(it.field)\n\n            if (stopEvents) {\n                it.stop()\n            }\n        }\n\n        component.onMessage<FormFieldUnmountedMessage<*>> {\n            _fields.remove(it.sender)\n\n            if (stopEvents) {\n                it.stop()\n            }\n        }\n    }\n}\n","package de.peekandpoke.kraft.messages\n\nimport de.peekandpoke.kraft.components.Component\nimport de.peekandpoke.ultra.common.TypedKey\n\n/**\n * The key used to store the [MessagesHandler] on the components properties\n */\nprivate val MessagesKey = TypedKey<MessagesHandler>(\"messages\")\n\n/**\n * Get the [MessagesHandler] for the [Component]\n */\nval Component<*>.messages: MessagesHandler\n    get() = attributes.getOrPut(MessagesKey) {\n        MessagesHandler()\n    }\n\n/**\n * Listens for a [Message] of the given type [M].\n */\ninline fun <reified M : Message<*>> Component<*>.onMessage(noinline handler: (M) -> Unit) {\n    messages.stream { next ->\n        next?.let {\n            (next as? M)?.let {\n                handler(it)\n            }\n        }\n    }\n}\n\n/**\n * Send the given [message].\n */\nfun <M : Message<*>> Component<*>.sendMessage(message: M) {\n\n    // We do not dispatch the message on the component that sent it\n    if (message.sender != this) {\n        messages.send(message)\n    } else {\n        // but we will trigger a re-draw\n        triggerRedraw()\n    }\n\n    // Continue with the parent if the message was not stopped\n    if (!message.isStopped) {\n        parent?.sendMessage(message)\n    }\n}\n","package de.peekandpoke.kraft.addons.forms\n\nimport de.peekandpoke.kraft.addons.forms.validation.Rule\nimport de.peekandpoke.kraft.components.Component\nimport de.peekandpoke.kraft.components.Ctx\nimport de.peekandpoke.kraft.messages.sendMessage\n\nabstract class FormFieldComponent<T, P : FormFieldComponent.Props<T>>(\n    ctx: Ctx<P>,\n) : FormField<P>, Component<P>(ctx) {\n\n    ////  PROPS  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    interface Props<P> {\n        val initialValue: P\n        val fromStr: (String) -> P\n        val onChange: (P) -> Unit\n        val rules: List<Rule<P>>\n    }\n\n    ////  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override var touched by value(false)\n\n    override var errors by value<List<String>>(emptyList())\n\n    private var inputValue: T? = null\n\n    val currentValue\n        get() = when (val input = inputValue) {\n            null -> props.initialValue\n            else -> input\n        }\n\n    ////  LIVE-CYCLE  /////////////////////////////////////////////////////////////////////////////////////////////\n\n    init {\n        lifecycle {\n            onMount {\n                sendMessage(FormFieldMountedMessage(this@FormFieldComponent))\n            }\n\n            onNextProps { new, previous ->\n                // A changing input value overrides the current input\n                if (new.initialValue != previous.initialValue) {\n                    // Override the current user input\n                    inputValue = null\n                    // Notify the form controller about the change\n                    sendMessage(FormFieldInputChanged(this@FormFieldComponent))\n                }\n            }\n\n            onUnmount {\n                sendMessage(FormFieldUnmountedMessage(this@FormFieldComponent))\n            }\n        }\n    }\n\n    ////  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun reset() {\n        touched = false\n        inputValue = null\n        errors = emptyList()\n    }\n\n    fun setInput(input: String) {\n        try {\n            val newValue = props.fromStr(input)\n            setValue(newValue)\n\n        } catch (t: Throwable) {\n            console.error(t)\n\n            // TODO: how to translate this?\n            errors = listOf(\"Invalid value\")\n        }\n\n        sendMessage(FormFieldInputChanged(this))\n    }\n\n    fun setValue(value: T) {\n        touch()\n\n        inputValue = value\n\n        if (validate()) {\n            props.onChange(currentValue)\n        }\n    }\n\n    override fun touch() {\n        touched = true\n    }\n\n    override fun untouch() {\n        touched = false\n    }\n\n    override fun validate(): Boolean {\n        if (touched) {\n            errors = props.rules\n                .filter { !it.check(currentValue) }\n                .map { it.getMessage(currentValue) }\n        }\n\n        return errors.isEmpty()\n    }\n\n    ////  RENDERING  ////////////////////////////////////////////////////////////////////////////////////////////////\n}\n","package de.peekandpoke.kraft.addons.forms\n\nimport de.peekandpoke.kraft.components.Component\nimport de.peekandpoke.kraft.components.Ctx\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.components.onClick\nimport de.peekandpoke.kraft.messages.sendMessage\nimport de.peekandpoke.kraft.semanticui.noui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.*\nimport org.w3c.dom.HTMLElement\nimport org.w3c.dom.events.MouseEvent\n\n@Suppress(\"FunctionName\")\nfun <T> Tag.GenericFormField(\n    value: T,\n    onChange: (T) -> Unit,\n    options: FieldOptions<T>,\n) = comp(\n    GenericFormField.DefaultProps(\n        value = value,\n        onChange = onChange,\n        options = options,\n    )\n) {\n    GenericFormField(it)\n}\n\nopen class GenericFormField<T, O : FieldOptions<T>, P : GenericFormField.Props<T, O>>(\n    ctx: Ctx<P>\n) : Component<P>(ctx), FormField<T> {\n\n    //  PROPS  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    interface Props<T, O : FieldOptions<T>> {\n        val value: T\n        val onChange: (T) -> Unit\n        val options: O\n    }\n\n    data class DefaultProps<T, O : FieldOptions<T>>(\n        override val value: T,\n        override val onChange: (T) -> Unit,\n        override val options: O,\n    ) : Props<T, O>\n\n    val options: O get() = props.options\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Track if the input value was modified.\n     *\n     * 'True' means the value was modified and thus the field was touched.\n     * 'False' means the value was not modified yet.\n     */\n    override var touched: Boolean by value(false)\n\n    /**\n     * A list of validation errors.\n     */\n    override var errors: List<String> by value(emptyList())\n\n    /**\n     * The input value set by the user.\n     */\n    private var _value: T by value(props.value)\n\n    /**\n     * The effective value\n     *\n     * - it is either a value set by the user (see [setValue])\n     * - or the initial value coming through the props (see [Props.value])\n     */\n    val currentValue: T get() = _value\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    init {\n        lifecycle {\n            onMount {\n                sendMessage(FormFieldMountedMessage(this@GenericFormField))\n            }\n\n            onUnmount {\n                sendMessage(FormFieldUnmountedMessage(this@GenericFormField))\n            }\n\n            onNextProps { new, _ ->\n                _value = new.value\n            }\n        }\n    }\n\n    override fun shouldRedraw(nextProps: P): Boolean {\n        return props.value != nextProps.value ||\n            props.options.attributes.entries.size != nextProps.options.attributes.entries.size ||\n            props.options.attributes.asImmutable() != nextProps.options.attributes.asImmutable()\n    }\n\n    override fun reset() {\n        touched = false\n        _value = props.value\n        errors = emptyList()\n    }\n\n    override fun touch() {\n        touched = true\n    }\n\n    override fun untouch() {\n        touched = false\n    }\n\n    override fun validate(): Boolean {\n\n        if (touched) {\n            errors = props.options.rules\n                .filter { !it.check(currentValue) }\n                .map { it.getMessage(currentValue) }\n        }\n\n        return errors.isEmpty()\n    }\n\n    override fun VDom.render() {\n    }\n\n    fun focus(cssSelector: String) {\n        (dom?.querySelector(cssSelector) as? HTMLElement)?.focus()\n    }\n\n    fun setValue(value: T) {\n//        console.log(\"setValue\", value, (value as Any)::class)\n\n        if (this._value != value) {\n            try {\n                sendMessage(FormFieldInputChanged(this))\n            } finally {\n            }\n\n            touch()\n            this._value = value\n            props.onChange(value)\n        }\n\n        validate()\n    }\n\n    // Label Helpers\n\n    fun FlowContent.renderLabel(focusCssSelector: String? = null) {\n\n        renderLabel(\n            onClick = focusCssSelector?.let { sel ->\n                { focus(sel) }\n            }\n        )\n    }\n\n    fun FlowContent.renderLabel(onClick: ((evt: MouseEvent) -> Unit)? = null) {\n        options.label()?.let { l ->\n            noui Label {\n                l()\n\n                onClick?.let { on ->\n                    onClick { evt ->\n                        on(evt)\n                    }\n                }\n            }\n        }\n    }\n}\n","package de.peekandpoke.kraft.addons.forms.collections\n\nimport de.peekandpoke.kraft.components.Component\nimport de.peekandpoke.kraft.components.Ctx\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.utils.modifyAt\nimport de.peekandpoke.kraft.utils.removeAt\nimport de.peekandpoke.kraft.utils.swap\nimport de.peekandpoke.kraft.vdom.VDom\nimport de.peekandpoke.ultra.common.addAt\nimport kotlinx.html.FlowContent\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun <T> Tag.ListField(\n    items: List<T>,\n    onChange: (List<T>) -> Unit,\n    customize: ListFieldComponent.PropsBuilder<T>.() -> Unit\n) = comp(ListFieldComponent.PropsBuilder(items, onChange).apply(customize).build()) {\n    ListFieldComponent(it)\n}\n\nclass ListFieldComponent<T>(ctx: Ctx<Props<T>>) : Component<ListFieldComponent.Props<T>>(ctx) {\n\n    data class Props<T>(\n        val items: List<T>,\n        val onChange: (List<T>) -> Unit,\n        val renderItem: FlowContent.(ItemCtx<T>) -> Unit,\n        val renderAdd: FlowContent.(AddCtx<T>) -> Unit\n    )\n\n    class PropsBuilder<T>(\n        val items: List<T>,\n        val onChange: (List<T>) -> Unit\n    ) {\n        private var renderItem: FlowContent.(ItemCtx<T>) -> Unit = {}\n        private var renderAdd: FlowContent.(AddCtx<T>) -> Unit = {}\n\n        fun build() = Props(items, onChange, renderItem, renderAdd)\n\n        fun renderItem(block: FlowContent.(ItemCtx<T>) -> Unit) {\n            renderItem = block\n        }\n\n        fun renderAdd(block: FlowContent.(AddCtx<T>) -> Unit) {\n            renderAdd = block\n        }\n    }\n\n    data class ItemCtx<T>(\n        val idx: Int,\n        val item: T,\n        val all: List<T>,\n        val modify: (T) -> Unit,\n        val swapWith: (idx: Int) -> Unit,\n        val remove: () -> Unit,\n        val copy: (T) -> Unit,\n        private val keySuffix: String,\n    ) {\n        fun domKey(): String {\n            val cls = (item ?: Unit)::class\n\n            return \"item-$idx-${cls::simpleName}-${cls.hashCode()}-$keySuffix\"\n        }\n\n        fun <V> modifier(block: T.(value: V) -> T): (V) -> Unit = { value ->\n            modify(item.block(value))\n        }\n    }\n\n    data class AddCtx<T>(\n        val add: (T) -> Unit\n    ) {\n        fun domKey() = \"add-item\"\n    }\n\n    private var reorderCounter by value(0)\n\n    ////  IMPL  ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n\n        props.apply {\n\n            items.forEachIndexed { idx, item ->\n                val ctx = ItemCtx(\n                    idx = idx,\n                    item = item,\n                    all = props.items,\n                    modify = { new -> onChange(items.modifyAt(idx) { new }) },\n                    swapWith = { other -> onChange(items.swap(idx, other)) },\n                    remove = { onChange(items.removeAt(idx)) },\n                    copy = { copied -> onChange(items.addAt(idx + 1, copied)) },\n                    keySuffix = \"$reorderCounter\"\n                )\n\n                props.renderItem(this@render, ctx)\n            }\n\n            val ctx = AddCtx { new: T -> onChange(items.plus(new)) }\n\n            props.renderAdd(this@render, ctx)\n        }\n    }\n}\n","package de.peekandpoke.kraft.utils\n\n// TODO: move to ultra::common\n\nfun <T> List<T>.setAt(idx: Int, item: T): List<T> {\n    return replaceAt(idx, item)\n}\n\nfun <T> List<T>.modifyAt(idx: Int, modifier: (T) -> T): List<T> {\n    return replaceAt(idx, modifier(this[idx]))\n}\n\nfun <T> List<T>.replaceAt(idx: Int, new: T): List<T> {\n    return toMutableList().apply { this[idx] = new }.toList()\n}\n\nfun <T> List<T>.removeAt(idx: Int): List<T> {\n    return toMutableList().apply { removeAt(idx) }.toList()\n}\n\nfun <T> List<T>.swap(idx1: Int, idx2: Int): List<T> {\n    val mutable = toMutableList()\n    val tmp = mutable[idx1]\n    mutable[idx1] = mutable[idx2]\n    mutable[idx2] = tmp\n    return mutable.toList()\n}\n","package de.peekandpoke.kraft.addons.forms\n\nimport de.peekandpoke.kraft.messages.MessageBase\n\n\nclass FormFieldInputChanged<P>(val field: FormField<P>) : MessageBase<FormField<P>>(field)\n\nclass FormFieldMountedMessage<P>(val field: FormField<P>) : MessageBase<FormField<P>>(field)\n\nclass FormFieldUnmountedMessage<P>(val field: FormField<P>) : MessageBase<FormField<P>>(field)\n","package de.peekandpoke.kraft.addons.forms.validation\n\ndata class GenericRule<T>(\n    private val checkFn: (value: T) -> Boolean,\n    private val messageFn: (value: T) -> String = { \"Invalid input\" }\n) : Rule<T> {\n    operator fun invoke(message: (T) -> String): GenericRule<T> {\n        return copy(messageFn = message)\n    }\n\n    override fun check(value: T): Boolean {\n        return checkFn(value)\n    }\n\n    override fun getMessage(value: T): String {\n        return messageFn(value)\n    }\n}\n","package de.peekandpoke.kraft.addons.forms.validation\n\nfun <T> anyRuleOf(rule: Rule<T>, vararg rules: Rule<T>): Rule<T> {\n    val allRules = listOf(rule) + rules\n\n    return GenericRule(\n        checkFn = { value -> allRules.any { it.check(value) } },\n        messageFn = { value ->\n            rules.filterNot { it.check(value) }\n                .map { it.getMessage(value) }\n                .filter { it.isNotBlank() }\n                .joinToString(\" or \")\n        },\n    )\n}\n\nfun <T> allRulesOf(rule: Rule<T>, vararg rules: Rule<T>): Rule<T> {\n    val allRules = listOf(rule) + rules\n\n    return GenericRule(\n        checkFn = { value -> allRules.all { it.check(value) } },\n        messageFn = { value ->\n            rules.filterNot { it.check(value) }\n                .map { it.getMessage(value) }\n                .filter { it.isNotBlank() }\n                .joinToString(\" and \")\n        },\n    )\n}\n\n@KraftFormsRuleDsl\nfun <T> nonNull(message: String = \"Must not be empty\"): Rule<T> = GenericRule(\n    messageFn = { message },\n    checkFn = { it != null },\n)\n\n@KraftFormsRuleDsl\nfun <T> nullOrElse(inner: Rule<T>): Rule<T?> = GenericRule(\n    checkFn = { it == null || inner.check(it) },\n    messageFn = {\n        if (it == null) {\n            \"Invalid input\"\n        } else {\n            inner.getMessage(it)\n        }\n    }\n)\n\n@KraftFormsRuleDsl\nfun <T> nonNullAnd(inner: Rule<T>): Rule<T?> = GenericRule(\n    checkFn = { it != null && inner.check(it) },\n    messageFn = {\n        if (it == null) {\n            \"Must not be empty\"\n        } else {\n            inner.getMessage(it)\n        }\n    }\n)\n\n@KraftFormsRuleDsl\nfun <T> equalTo(compareWith: () -> T, message: (T) -> String): Rule<T> = GenericRule(\n    messageFn = message,\n    checkFn = { it == compareWith() }\n)\n\n@KraftFormsRuleDsl\nfun <T> equalTo(compareWith: () -> T, message: String = \"Must be equal to '$compareWith()'\"): Rule<T> =\n    equalTo(compareWith) { message }\n\n@KraftFormsRuleDsl\nfun <T> equalTo(compareWith: T, message: String = \"Must be equal to '$compareWith()'\"): Rule<T> =\n    equalTo({ compareWith }) { message }\n\n@KraftFormsRuleDsl\nfun <T> notEqualTo(\n    compareWith: () -> T,\n    message: (T) -> String = { \"Must not be equal to '$compareWith()'\" },\n) = GenericRule(\n    messageFn = message,\n    checkFn = { it != compareWith() }\n)\n\n@KraftFormsRuleDsl\nfun <T> notEqualTo(compareWith: () -> T, message: String = \"Must not be equal to '$compareWith()'\"): Rule<T> =\n    notEqualTo(compareWith) { message }\n\n@KraftFormsRuleDsl\nfun <T> notEqualTo(compareWith: T, message: String = \"Must not be equal to '$compareWith()'\"): Rule<T> =\n    notEqualTo({ compareWith }) { message }\n\n@KraftFormsRuleDsl\nfun <T> anyOf(values: () -> Collection<T>, message: (T) -> String): Rule<T> = GenericRule(\n    messageFn = message,\n    checkFn = { it in values() },\n)\n\n@KraftFormsRuleDsl\nfun <T> anyOf(values: Collection<T>, message: String = \"Must be a valid input\"): Rule<T> =\n    anyOf({ values }) { message }\n\n@KraftFormsRuleDsl\nfun <T> noneOf(values: () -> Collection<T>, message: (T) -> String): Rule<T> = GenericRule(\n    messageFn = message,\n    checkFn = { it !in values() },\n)\n\n@KraftFormsRuleDsl\nfun <T> noneOf(values: () -> Collection<T>, message: String = \"Must be a valid input\"): Rule<T> =\n    noneOf(values) { message }\n\n@KraftFormsRuleDsl\nfun <T> noneOf(values: Collection<T>, message: String = \"Must be a valid input\"): Rule<T> =\n    noneOf({ values }) { message }\n\n@KraftFormsRuleDsl\nfun <T> given(\n    check: (T) -> Boolean,\n    message: (T) -> String = { \"Must be a valid input\" },\n): Rule<T> = GenericRule(\n    messageFn = message,\n    checkFn = check,\n)\n","package de.peekandpoke.kraft.addons.forms.validation.strings\n\nimport de.peekandpoke.kraft.addons.forms.validation.GenericRule\nimport de.peekandpoke.kraft.addons.forms.validation.KraftFormsRuleDsl\nimport de.peekandpoke.kraft.addons.forms.validation.Rule\n\n@KraftFormsRuleDsl\nfun <T : CharSequence?> empty(message: (T) -> String): Rule<T> = GenericRule(\n    messageFn = message,\n    checkFn = { (it ?: \"\").isEmpty() }\n)\n\n@KraftFormsRuleDsl\nfun <T : CharSequence?> empty(message: String = \"Must be empty\"): Rule<T> =\n    empty { message }\n\n@KraftFormsRuleDsl\nfun <T : CharSequence?> notEmpty(message: (T) -> String): Rule<T> = GenericRule(\n    messageFn = message,\n    checkFn = { (it ?: \"\").isNotEmpty() }\n)\n\n@KraftFormsRuleDsl\nfun <T : CharSequence?> notEmpty(message: String = \"Must not be empty\"): Rule<T> =\n    notEmpty { message }\n\n@KraftFormsRuleDsl\nfun <T : CharSequence?> blank(message: (T) -> String): Rule<T> = GenericRule(\n    messageFn = message,\n    checkFn = { (it ?: \"\").isBlank() }\n)\n\n@KraftFormsRuleDsl\nfun <T : CharSequence?> blank(message: String = \"Must be blank\"): Rule<T> =\n    blank { message }\n\n@KraftFormsRuleDsl\nfun <T : CharSequence?> notBlank(message: (T) -> String): Rule<T> = GenericRule(\n    messageFn = message,\n    checkFn = { (it ?: \"\").isNotBlank() }\n)\n\n@KraftFormsRuleDsl\nfun <T : CharSequence?> notBlank(message: String = \"Must not be blank\"): Rule<T> =\n    notBlank { message }\n\n@KraftFormsRuleDsl\nfun <T : CharSequence?> minLength(length: Int, message: (T) -> String): Rule<T> = GenericRule(\n    messageFn = message,\n    checkFn = { (it ?: \"\").length >= length }\n)\n\n@KraftFormsRuleDsl\nfun <T : CharSequence?> minLength(length: Int, message: String = \"Must be at least $length characters\"): Rule<T> =\n    minLength(length) { message }\n\n@KraftFormsRuleDsl\nfun <T : CharSequence?> maxLength(length: Int, message: (T) -> String): Rule<T> = GenericRule(\n    messageFn = message,\n    checkFn = { (it ?: \"\").length <= length }\n)\n\n@KraftFormsRuleDsl\nfun <T : CharSequence?> maxLength(length: Int, message: String = \"Must be at most $length characters\"): Rule<T> =\n    maxLength(length) { message }\n\n@KraftFormsRuleDsl\nfun <T : CharSequence?> exactLength(length: Int, message: (T) -> String): Rule<T> = GenericRule(\n    messageFn = message,\n    checkFn = { (it ?: \"\").length == length }\n)\n\n@KraftFormsRuleDsl\nfun <T : CharSequence?> exactLength(length: Int, message: String = \"Must be $length characters\"): Rule<T> =\n    exactLength(length) { message }\n","package de.peekandpoke.kraft.addons.routing\n\nimport kotlinx.html.FlowContent\n\n/**\n * Represent the route that is currently selected as active route by a [Router]\n */\ndata class ActiveRoute(\n    val uri: String,\n    val matchedRoute: Route.Match,\n    val mountedRoute: MountedRoute\n) {\n    /** Shortcut for getting the pattern of the route */\n    val pattern: String = matchedRoute.pattern\n\n    /** Shortcut for getting the route definition */\n    val route: Route = matchedRoute.route\n\n    /**\n     * Renders the content which is associated with the [mountedRoute]\n     */\n    fun render(flow: FlowContent) = mountedRoute.view(flow, matchedRoute)\n}\n","package de.peekandpoke.kraft.addons.routing\n\nimport kotlinx.html.FlowContent\n\n/**\n * Represents a [Route] that is mounted by a [Router]\n *\n * The [middlewares] are called in order once this [route] is matched and is about to become the [ActiveRoute].\n *\n * The [view] is the displayable content associated with the [route]\n */\ndata class MountedRoute(\n    val route: Route,\n    val middlewares: List<RouterMiddleware>,\n    val view: FlowContent.(Route.Match) -> Unit\n) {\n    companion object {\n        val default = MountedRoute(Route.default, emptyList()) {}\n    }\n}\n","package de.peekandpoke.kraft.addons.routing\n\nimport de.peekandpoke.kraft.components.Component\nimport de.peekandpoke.kraft.components.Ctx\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.browser.window\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.JoinedPageTitle(parts: () -> Iterable<String?>) {\n    JoinedPageTitle(glue = \" | \", parts = parts)\n}\n\n@Suppress(\"FunctionName\")\nfun Tag.JoinedPageTitle(glue: String, parts: () -> Iterable<String?>) {\n    PageTitle(provider = { parts().filterNotNull().filter { it.isNotBlank() }.joinToString(glue) })\n}\n\n@Suppress(\"FunctionName\")\nfun Tag.PageTitle(title: String) {\n    PageTitle { title }\n}\n\n@Suppress(\"FunctionName\")\nfun Tag.PageTitle(\n    provider: () -> String,\n) = comp(\n    PageTitle.Props(provider = provider)\n) {\n    PageTitle(it)\n}\n\nclass PageTitle(ctx: Ctx<Props>) : Component<PageTitle.Props>(ctx) {\n\n    //  PROPS  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    data class Props(\n        val provider: () -> String,\n    )\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        window.document.title = props.provider()\n    }\n}\n","package de.peekandpoke.kraft.addons.routing\n\nimport de.peekandpoke.kraft.streams.Stream\nimport de.peekandpoke.kraft.streams.StreamSource\nimport kotlinx.browser.window\nimport org.w3c.dom.events.Event\nimport org.w3c.dom.events.MouseEvent\n\n/**\n * The Router\n */\nclass Router(private val mountedRoutes: List<MountedRoute>, private var enabled: Boolean) {\n\n    data class History(\n        val router: Router,\n        val entries: List<ActiveRoute>\n    ) {\n        val canGoBack: Boolean = entries.size > 1\n\n        fun navBack() {\n            router.navBack()\n        }\n    }\n\n    private val prefix = \"#\"\n\n    /** Writable stream with the current [ActiveRoute] */\n    private val _current = StreamSource(ActiveRoute(\"\", Route.Match.default, MountedRoute.default))\n\n    /** Public readonly stream with the current [ActiveRoute] */\n    val current: Stream<ActiveRoute> = _current\n\n    private val _historyEntries: MutableList<ActiveRoute> = mutableListOf()\n\n    private val _history = StreamSource(History(this, _historyEntries.toList()))\n    val history: Stream<History> = _history\n\n    init {\n        window.addEventListener(\"hashchange\", ::windowListener)\n\n        current.subscribeToStream {\n            _historyEntries.add(it)\n            _history(History(this, _historyEntries.toList()))\n        }\n    }\n\n    fun disable() {\n        enabled = false\n    }\n\n    fun enable() {\n        enabled = true\n    }\n\n    fun willOpenNewTab(evt: MouseEvent?): Boolean {\n        return when (evt) {\n            null -> false\n            else -> {\n                evt.ctrlKey // Windows, Linux\n                    || evt.metaKey // MacOS\n                    || (evt.button == 1.toShort()) // Middle Mouse button\n            }\n        }\n    }\n\n    /**\n     * Navigates to the given uri.\n     */\n    fun navToUri(uri: String) {\n        if (window.location.hash != uri) {\n            window.location.hash = uri\n        } else {\n            navigateToWindowUri()\n        }\n    }\n\n    /**\n     * Navigate to the given [uri].\n     *\n     * If [evt].ctrlKey is true, the uri will be opened in a new tab.\n     */\n    fun navToUri(evt: MouseEvent?, uri: String) {\n        return navToUri(\n            uri = uri,\n            newTab = willOpenNewTab(evt),\n        )\n    }\n\n    /**\n     * Navigate to the given [uri].\n     *\n     * If [newTab] is true, the uri will be opened in a new tab.\n     */\n    fun navToUri(uri: String, newTab: Boolean) {\n        return navToUri(\n            uri = uri,\n            target = if (newTab) \"_blank\" else null,\n        )\n    }\n\n    /**\n     * Navigate to the given [uri].\n     *\n     * If [target] is null, it will navigate to the uri in the same window.\n     * If [target] is not null, window.open(target = target) will be used to open a new tab / window.\n     */\n    fun navToUri(uri: String, target: String? = null) {\n        if (target == null) {\n            navToUri(uri)\n        } else {\n            window.open(uri, target = target)\n        }\n    }\n\n    /**\n     * Navigates to the [route] by filling in the given [routeParams] and [queryParams].\n     */\n    fun navToUri(route: Route, routeParams: Map<String, String>, queryParams: Map<String, String>) {\n        (route as? Route.Renderable)?.let {\n            navToUri(\n                it.buildUri(routeParams = routeParams, queryParams = queryParams)\n            )\n        }\n    }\n\n    /**\n     * Navigates to the [route].\n     */\n    fun navToUri(route: Route.Match) {\n        navToUri(route = route.route, routeParams = route.routeParams, queryParams = route.queryParams)\n    }\n\n    /**\n     * Replaces the current uri with changing the history\n     */\n    fun replaceUri(uri: String) {\n\n        if (window.location.hash != uri) {\n            window.history.replaceState(\n                null,\n                \"\",\n                window.location.pathname + uri\n            )\n            // Remove the last from the history\n            _historyEntries.removeLast()\n            // Resolve the next route\n            navigateToWindowUri()\n        }\n    }\n\n    /**\n     * Replaces the current uri without changing the browser history.\n     */\n    fun replaceUri(route: Route, routeParams: Map<String, String>, queryParams: Map<String, String>) {\n        (route as? Route.Renderable)?.let {\n            replaceUri(\n                it.buildUri(routeParams = routeParams, queryParams = queryParams)\n            )\n        }\n    }\n\n    /**\n     * Replaces the current uri without changing the browser history.\n     */\n    fun replaceUri(route: Route.Match) {\n        replaceUri(\n            route.route, routeParams = route.routeParams, queryParams = route.queryParams\n        )\n    }\n\n    /**\n     * Navigates to the given uri while clearing the navigation history.\n     */\n    fun clearHistoryAndNavTo(uri: String) {\n        _historyEntries.clear()\n        navToUri(uri)\n    }\n\n    /**\n     * Navigates to the previous route, when this is possible.\n     */\n    fun navBack() {\n        if (history().canGoBack) {\n            // remove the current active route\n            _historyEntries.removeLast()\n            // remove the previous active route and go back to it\n            navToUri(_historyEntries.removeLast().uri)\n        }\n    }\n\n    /**\n     * Navigates to the current uri of the browser\n     *\n     * Tries to resolve the next [ActiveRoute] by looking at the browser current location.\n     *\n     * If a route is resolved then the [current] stream will be updated.\n     */\n    fun navigateToWindowUri() {\n        // get the location from the browser\n        val uri = window.location.hash.removePrefix(prefix)\n\n        val resolved = resolveRouteForUri(uri)\n\n        if (resolved == null) {\n            console.error(\"Could not resolve route: $uri\")\n        }\n\n        resolved?.let { (mounted, match) ->\n            // Create a context for the router middlewares\n            val ctx = RouterMiddlewareContext(this, uri, match)\n            // Call all the middlewares\n            mounted.middlewares.forEach { it(ctx) }\n\n            // Do we have a redirect ?\n            when (val redirect = ctx.redirectToUri) {\n                null -> {\n                    // Notify all subscribers that the active route has changed\n                    _current(ActiveRoute(uri, match, mounted))\n                }\n\n                else -> {\n                    // Yes so let's go to the redirect\n                    navToUri(redirect)\n                }\n            }\n        }\n    }\n\n    /**\n     * Tries to resolve the next [ActiveRoute] by looking at the browser current location.\n     *\n     * If a route is resolved then the [current] stream will be updated.\n     */\n    fun resolveRouteForUri(uri: String): Pair<MountedRoute, Route.Match>? {\n\n        // Go through all routes and try to find the first one that matches the current location\n        return mountedRoutes.asSequence()\n            // Find matches\n            .map { mounted -> mounted.route.match(uri)?.let { mounted to it } }\n            // Skip all that did not match\n            .filterNotNull()\n            // Get the first match, if there is any\n            .firstOrNull()\n    }\n\n    /**\n     * Checks if there is a route for the given uri.\n     */\n    fun hasRouteForUri(uri: String): Boolean {\n        return resolveRouteForUri(uri) != null\n    }\n\n    /**\n     * Private listener for the \"hashchange\" event\n     */\n    private fun windowListener(event: Event) {\n        if (enabled) {\n            event.preventDefault()\n\n            navigateToWindowUri()\n        }\n    }\n}\n","package de.peekandpoke.kraft.addons.routing\n\nimport kotlinx.html.FlowContent\n\n/**\n * Helper class for building a [Router]\n */\nclass RouterBuilder {\n\n    private var enabled = true\n\n    private val mounted = mutableListOf<MountedRoute>()\n\n    private val middlewares = mutableListOf<RouterMiddleware>()\n\n    fun build() = Router(mounted.toList(), enabled)\n\n    /**\n     * Creates a router that is enabled from the beginning\n     */\n    fun enable() {\n        enabled = true\n    }\n\n    /**\n     * Creates a router that is disabled from the beginning\n     */\n    fun disabled() {\n        enabled = false\n    }\n\n    /**\n     * Mounts a [route] and associates it with the given [view].\n     *\n     * The route is mounted with all [middlewares] that are defined in the current scope.\n     */\n    fun mount(route: Route, view: FlowContent.(Route.Match) -> Unit) {\n        mounted.add(\n            MountedRoute(route, middlewares.toList(), view)\n        )\n    }\n\n    /**\n     * Uses one or multiple [RouterMiddleware]s.\n     *\n     * All routes that are mounted inside the [scope] will be using the given [wares].\n     *\n     * The [using] function can be nested\n     */\n    fun using(vararg wares: RouterMiddleware, scope: RouterBuilder.() -> Unit) {\n        // add them all to the scope\n        middlewares.addAll(wares)\n        // run the scope\n        scope()\n        // remove all middlewares from the scope\n        repeat(wares.size) { middlewares.removeLast() }\n    }\n\n    /**\n     * Mounts a fallback route that matches any pattern.\n     */\n    fun catchAll(view: FlowContent.(Route.Match) -> Unit) {\n        mounted.add(\n            MountedRoute(Pattern.CatchAll, middlewares.toList(), view)\n        )\n    }\n}\n","package de.peekandpoke.kraft.addons.routing\n\nimport de.peekandpoke.kraft.components.Component\nimport de.peekandpoke.kraft.components.Ctx\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.components.key\nimport de.peekandpoke.kraft.streams.addons.distinct\nimport de.peekandpoke.kraft.streams.addons.map\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.browser.window\nimport kotlinx.html.Tag\nimport kotlinx.html.div\n\n/**\n * The router component displays the view that is associated with the [ActiveRoute] of the given [Router]\n */\n@Suppress(\"FunctionName\")\nfun Tag.RouterComponent(router: Router) = comp(RouterComponent.Props(router)) {\n    RouterComponent(it)\n}\n\nclass RouterComponent internal constructor(ctx: Ctx<Props>) : Component<RouterComponent.Props>(ctx) {\n\n    data class Props(\n        val router: Router\n    )\n\n    ////  STATE  ///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    private val current: ActiveRoute by subscribingTo(props.router.current)\n\n    private val currentUri: String by subscribingTo(\n        props.router.current\n            .map { it.uri.split(\"?\").firstOrNull() ?: \"\" }\n            .distinct()\n    ) {\n        scrollUp()\n    }\n\n    ////  IMPL  ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    private fun scrollUp() {\n        dom?.let {\n            window.scrollTo(0.0, 0.0)\n        }\n    }\n\n    override fun VDom.render() {\n        div(classes = \"router\") {\n            // We define a key, so that the VDomEngine does a full redraw of the content, when the matched route changes\n            key = currentUri\n\n            current.render(this)\n        }\n    }\n}\n","package de.peekandpoke.kraft.streams.addons\n\nimport de.peekandpoke.kraft.streams.Stream\nimport de.peekandpoke.kraft.streams.StreamWrapper\n\n/**\n * Ignores duplicate values and thus only publishes when the value has changed.\n *\n * By default, the comparison between the previous and current value is not strict ==.\n * You can set [strict] to true to use strict === comparison\n */\nfun <T> Stream<T>.distinct(strict: Boolean = false): Stream<T> =\n    StreamDistinctOperator(wrapped = this, strict = strict)\n\n/**\n * Ignores duplicate values and thus only publishes when the value has changed.\n *\n * The comparison between the previous and current value is NOT strict, using ==.\n */\nfun <T> Stream<T>.distinct(): Stream<T> =\n    StreamDistinctOperator(wrapped = this, strict = false)\n\n/**\n * Ignores duplicate values and thus only publishes when the value has changed.\n *\n * The comparison between the previous and current value IS strict, using ===.\n */\nfun <T> Stream<T>.distinctStrict(): Stream<T> =\n    StreamDistinctOperator(wrapped = this, strict = true)\n\n/**\n * Operator impl\n */\nprivate class StreamDistinctOperator<T>(\n    wrapped: Stream<T>,\n    private val strict: Boolean,\n) : StreamWrapper<T>(wrapped = wrapped) {\n\n    private var latest: T = wrapped()\n\n    override fun invoke(): T = latest\n\n    override fun handleIncoming(value: T) {\n\n        val accept = when (strict) {\n            true -> value !== latest\n            else -> value != latest\n        }\n\n        latest = value\n\n        if (accept) {\n            super.handleIncoming(value)\n        }\n    }\n}\n","package de.peekandpoke.kraft.streams.addons\n\nimport de.peekandpoke.kraft.streams.Stream\nimport de.peekandpoke.kraft.streams.StreamMapper\n\n/**\n * Maps incoming values from type [IN] to type [OUT].\n */\nfun <IN, OUT> Stream<IN>.map(mapper: (IN) -> OUT): Stream<OUT> {\n    return StreamMapper(this, mapper)\n}\n","package de.peekandpoke.kraft.addons.routing\n\n/**\n * A [RouterMiddleware] is just a function with [RouterMiddlewareContext] as the receiver\n */\ntypealias RouterMiddleware = RouterMiddlewareContext.() -> Unit\n\n/**\n * Helper for defining a router middleware\n */\nfun routerMiddleware(func: RouterMiddleware): RouterMiddleware = func\n\n/**\n * The context for all middle wares\n */\nclass RouterMiddlewareContext(\n    val router: Router,\n    val uri: String,\n    val match: Route.Match,\n) {\n    var redirectToUri: String? = null\n        private set\n\n    fun redirectTo(uri: String) {\n        redirectToUri = uri\n    }\n}\n","package de.peekandpoke.kraft.addons.semanticui.forms\n\nimport de.peekandpoke.kraft.addons.forms.FieldOptions\nimport de.peekandpoke.kraft.addons.forms.GenericFormField\nimport de.peekandpoke.kraft.addons.forms.KraftFormsDsl\nimport de.peekandpoke.kraft.addons.semanticui.forms.UiCheckBoxComponent.Options\nimport de.peekandpoke.kraft.components.Ctx\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.components.key\nimport de.peekandpoke.kraft.components.onChange\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.browser.document\nimport kotlinx.html.*\nimport org.w3c.dom.HTMLInputElement\nimport kotlin.reflect.KMutableProperty0\n\n@KraftFormsDsl\nval Tag.UiCheckboxField get() = UiCheckboxFieldRenderer(this)\n\n@Suppress(\"FunctionName\")\n@KraftFormsDsl\nfun <T> Tag.UiCheckboxField(\n    value: T,\n    onChange: (T) -> Unit,\n    off: T,\n    on: T,\n    builder: Options<T>.() -> Unit = {},\n) = comp(\n    UiCheckBoxComponent.Props(\n        value = value,\n        onChange = onChange,\n        off = off,\n        on = on,\n        options = Options<T>().apply(builder),\n    )\n) {\n    UiCheckBoxComponent(it)\n}\n\nclass UiCheckBoxComponent<T, P : UiCheckBoxComponent.Props<T>>(ctx: Ctx<P>) :\n    GenericFormField<T, Options<T>, P>(ctx) {\n\n    class Options<T> : FieldOptions.Base<T>(), SemanticOptions<T>, SemanticOptions.Checkbox<T>\n\n    data class Props<X>(\n        override val value: X,\n        override val onChange: (X) -> Unit,\n        override val options: Options<X>,\n        val on: X,\n        val off: X,\n    ) : GenericFormField.Props<X, Options<X>>\n\n    val inputElement: HTMLInputElement get() = dom!!.querySelector(\"input\") as HTMLInputElement\n\n    init {\n        lifecycle {\n            onMount {\n                props.options.autofocusValue()?.takeIf { it }?.let {\n                    focus()\n                }\n            }\n        }\n    }\n\n    /**\n     * Sets the focus on the input element\n     */\n    fun focus() {\n        inputElement.focus()\n    }\n\n    /**\n     * Returns true when the text area has the focus.\n     */\n    fun hasFocus(): Boolean {\n        return document.activeElement === inputElement\n    }\n\n\n    override fun VDom.render() {\n\n        ui.with(options.appear.getOrDefault { this }).given(hasErrors) { error }.field {\n            key = autoDomKey\n\n            div {\n                ui.with(options.style.getOrDefault { this }).checkbox {\n                    input {\n                        onChange {\n                            when ((it.target as HTMLInputElement).checked) {\n                                true -> setValue(props.on)\n                                false -> setValue(props.off)\n                            }\n                        }\n                        type = InputType.checkBox\n                        checked = currentValue == props.on\n\n                        applyDisabled()\n                        applyName()\n                    }\n\n                    renderLabel {\n                        setValue(\n                            when (currentValue) {\n                                props.on -> props.off\n                                else -> props.on\n                            }\n                        )\n                    }\n                }\n            }\n\n            renderErrors(this)\n        }\n    }\n\n    private fun INPUT.applyDisabled() {\n        if (options.isDisabled) {\n            disabled = true\n        }\n    }\n\n    private fun INPUT.applyName() {\n        options.name()?.let { name = it }\n    }\n}\n\nclass UiCheckboxFieldRenderer(private val tag: Tag) {\n    /**\n     * Renders the field for a Boolean\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        prop: KMutableProperty0<Boolean>,\n        builder: Options<Boolean>.() -> Unit = {},\n    ) = invoke(prop(), prop::set, builder)\n\n    /**\n     * Renders the field for a Boolean\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        value: Boolean,\n        onChange: (Boolean) -> Unit,\n        builder: Options<Boolean>.() -> Unit = {},\n    ) = invoke(value = value, onChange = onChange, off = false, on = true, builder = builder)\n\n    /**\n     * Renders the field for an the type [T]\n     */\n    @KraftFormsDsl\n    operator fun <T> invoke(\n        value: T,\n        onChange: (T) -> Unit,\n        on: T,\n        off: T,\n        builder: Options<T>.() -> Unit = {},\n    ) = tag.UiCheckboxField(value = value, onChange = onChange, off = off, on = on, builder = builder)\n}\n","package de.peekandpoke.kraft.addons.semanticui.forms\n\nimport de.peekandpoke.kraft.addons.forms.FieldOptions\nimport de.peekandpoke.kraft.addons.forms.GenericFormField\nimport de.peekandpoke.kraft.addons.forms.KraftFormsDsl\nimport de.peekandpoke.kraft.addons.forms.SettingsBuilder\nimport de.peekandpoke.kraft.addons.semanticui.forms.UiInputFieldComponent.Options\nimport de.peekandpoke.kraft.components.*\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.utils.*\nimport de.peekandpoke.kraft.vdom.VDom\nimport de.peekandpoke.ultra.common.datetime.*\nimport kotlinx.browser.document\nimport kotlinx.html.*\nimport org.w3c.dom.HTMLInputElement\nimport kotlin.reflect.KMutableProperty0\n\n@KraftFormsDsl\nval Tag.UiInputField get() = UiInputFieldRenderer(this)\n\n@KraftFormsDsl\nval Tag.UiPasswordField get() = UiPasswordFieldRenderer(this)\n\n@KraftFormsDsl\nval Tag.UiDateField get() = UiDateFieldRenderer(this)\n\n@KraftFormsDsl\nval Tag.UiDateTimeField get() = UiDateTimeFieldRenderer(this)\n\n@KraftFormsDsl\nval Tag.UiTimeField get() = UiTimeFieldRenderer(this)\n\n@Suppress(\"FunctionName\")\nfun <T> Tag.UiInputField(\n    value: T,\n    onChange: (T) -> Unit,\n    toStr: (T) -> String,\n    fromStr: (String) -> T,\n    builder: Options<T>.() -> Unit = {},\n) = comp(\n    UiInputFieldComponent.Props(\n        value = value,\n        onChange = onChange,\n        toStr = toStr,\n        fromStr = fromStr,\n        options = Options<T>().apply(builder),\n    )\n) {\n    UiInputFieldComponent(it)\n}\n\nclass UiInputFieldComponent<T, P : UiInputFieldComponent.Props<T>>(ctx: Ctx<P>) :\n    GenericFormField<T, Options<T>, P>(ctx) {\n\n    class Options<T> : FieldOptions.Base<T>(), SemanticOptions<T>, SemanticOptions.Input<T>\n\n    data class Props<X>(\n        override val value: X,\n        override val onChange: (X) -> Unit,\n        override val options: Options<X>,\n        val toStr: (X) -> String,\n        val fromStr: (String) -> X,\n    ) : GenericFormField.Props<X, Options<X>>\n\n    val inputElement: HTMLInputElement get() = dom!!.querySelector(\"input\") as HTMLInputElement\n\n    private var userInput: String by value(props.toStr(props.value))\n\n    internal var typeOverride: InputType? by value(null)\n\n    internal val effectiveType: InputType? get() = typeOverride ?: options.type()\n\n    init {\n        lifecycle {\n            onMount {\n                props.options.autofocusValue()?.takeIf { it }?.let {\n                    focus()\n                }\n            }\n\n            onNextProps { new, old ->\n                if (new.value != old.value) {\n                    // We keep the current [userInput] as long when it fromStr value is the same as the current value\n                    val userMapped = try {\n                        props.fromStr(userInput)\n                    } catch (e: Throwable) {\n                        null\n                    }\n\n                    if (userMapped != currentValue) {\n                        userInput = new.toStr(new.value)\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Sets the focus on the input element\n     */\n    fun focus() {\n        inputElement.focus()\n    }\n\n    /**\n     * Returns true when the text area has the focus.\n     */\n    fun hasFocus(): Boolean {\n        return document.activeElement === inputElement\n    }\n\n    override fun VDom.render() {\n        ui.with(options.appear.getOrDefault { this }).given(hasErrors) { error }.field {\n            key = autoDomKey\n\n            renderLabel(\"input\")\n\n            val wrap = options.wrapFieldWith()\n\n            when {\n                wrap != null -> ui.wrap().then {\n                    options.renderBeforeField()?.let { it(this, this@UiInputFieldComponent) }\n\n                    renderField()\n\n                    options.renderAfterField()?.let { it(this, this@UiInputFieldComponent) }\n                }\n\n                else -> renderField()\n            }\n\n            renderErrors(this)\n        }\n    }\n\n    fun setInput(input: String) {\n        try {\n            userInput = input\n            val newValue = props.fromStr(input)\n            setValue(newValue)\n        } catch (t: Throwable) {\n            console.warn(t)\n            // TODO: how to translate this?\n            errors = listOf(\"Invalid value\")\n        }\n    }\n\n    // Private helpers ////////////////////////////////////////////////////////////////////////////////////\n\n    private fun FlowContent.renderField() {\n        input {\n            applyAll()\n        }\n    }\n\n    private fun valueAsString(): String {\n        return userInput\n    }\n\n    fun INPUT.applyAll() {\n        setValue()\n        track()\n\n        applyDisabled()\n        applyFormatValue()\n        applyName()\n        applyPlaceholder()\n        applyStep()\n        applyType()\n        applyRequired()\n    }\n\n    private fun INPUT.setValue() {\n        value = valueAsString()\n    }\n\n    private fun INPUT.track() {\n        onInput {\n            val elem = (it.target as HTMLInputElement)\n            setInput(elem.value)\n        }\n\n        onChange {\n            val elem = (it.target as HTMLInputElement)\n            setInput(elem.value)\n        }\n    }\n\n    private fun INPUT.applyDisabled() {\n        if (options.isDisabled) {\n            disabled = true\n        }\n    }\n\n    private fun INPUT.applyFormatValue() {\n        options.formatValue()?.let { attributes[\"format-value\"] = it }\n    }\n\n    private fun INPUT.applyPlaceholder() {\n        options.placeholder()?.takeIf { it.isNotBlank() }?.let { placeholder = it }\n    }\n\n    private fun INPUT.applyName() {\n        options.name()?.let { name = it }\n    }\n\n    private fun INPUT.applyStep() {\n        options.step()?.let { step = it.toString() }\n    }\n\n    private fun INPUT.applyType() {\n        effectiveType?.let { type = it }\n    }\n\n    private fun INPUT.applyRequired() {\n        options.required()?.let { required = it }\n    }\n}\n\nclass UiInputFieldRenderer(private val tag: Tag) {\n    /**\n     * Renders the field for a String\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        prop: KMutableProperty0<String>,\n        builder: Options<String>.() -> Unit = {},\n    ) = invoke(prop(), prop::set, builder)\n\n    /**\n     * Renders the field for a String\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        value: String,\n        onChange: (String) -> Unit,\n        builder: Options<String>.() -> Unit = {},\n    ) = tag.UiInputField(value, onChange, ::stringToString, ::stringToString, builder)\n\n    /**\n     * Renders the field for a nullable String\n     */\n    @KraftFormsDsl\n    fun nullable(\n        prop: KMutableProperty0<String?>,\n        builder: Options<String?>.() -> Unit = {},\n    ) = nullable(prop(), prop::set, builder)\n\n    /**\n     * Renders the field for a nullable String\n     */\n    @KraftFormsDsl\n    fun nullable(\n        value: String?,\n        onChange: (String?) -> Unit,\n        builder: Options<String?>.() -> Unit = {},\n    ) = tag.UiInputField(value, onChange, ::stringToString, ::stringToString, builder)\n\n    /**\n     * Renders the field for an Int\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        prop: KMutableProperty0<Int>,\n        builder: Options<Int>.() -> Unit = {},\n    ) = invoke(prop(), prop::set, builder)\n\n    /**\n     * Renders the field for an Int\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        value: Int,\n        onChange: (Int) -> Unit,\n        builder: Options<Int>.() -> Unit = {},\n    ) = tag.UiInputField(value, onChange, ::numberToString, ::stringToInt) {\n        type(InputType.number)\n        builder()\n    }\n\n    /**\n     * Renders the field for a nullable Int\n     */\n    @KraftFormsDsl\n    fun nullable(\n        prop: KMutableProperty0<Int?>,\n        builder: Options<Int?>.() -> Unit = {},\n    ) = nullable(prop(), prop::set, builder)\n\n    /**\n     * Renders the field for a nullable Int\n     */\n    @KraftFormsDsl\n    fun nullable(\n        value: Int?,\n        onChange: (Int?) -> Unit,\n        builder: Options<Int?>.() -> Unit = {},\n    ) = tag.UiInputField(value, onChange, ::numberToString, ::stringToInt) {\n        type(InputType.number)\n        builder()\n    }\n\n    /**\n     * Renders the field for a Float\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        prop: KMutableProperty0<Float>,\n        builder: Options<Float>.() -> Unit = {},\n    ) = invoke(prop(), prop::set, builder)\n\n    /**\n     * Renders the field for a Float\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        value: Float,\n        onChange: (Float) -> Unit,\n        builder: Options<Float>.() -> Unit = {},\n    ) = tag.UiInputField(value, onChange, ::numberToString, ::stringToFloat) {\n        type(InputType.number)\n        builder()\n    }\n\n    /**\n     * Renders the field for a nullable Float\n     */\n    @KraftFormsDsl\n    fun nullable(\n        prop: KMutableProperty0<Float?>,\n        builder: Options<Float?>.() -> Unit = {},\n    ) = nullable(prop(), prop::set, builder)\n\n    /**\n     * Renders the field for a nullable Float\n     */\n    @KraftFormsDsl\n    fun nullable(\n        value: Float?,\n        onChange: (Float?) -> Unit,\n        builder: Options<Float?>.() -> Unit = {},\n    ) = tag.UiInputField(value, onChange, ::numberToString, ::stringToFloat) {\n        type(InputType.number)\n        builder()\n    }\n\n    /**\n     * Renders the field for a Double\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        prop: KMutableProperty0<Double>,\n        builder: Options<Double>.() -> Unit = {},\n    ) = invoke(prop(), prop::set, builder)\n\n    /**\n     * Renders the field for a Double\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        value: Double,\n        onChange: (Double) -> Unit,\n        builder: Options<Double>.() -> Unit = {},\n    ) = tag.UiInputField(value, onChange, ::numberToString, ::stringToDouble) {\n        type(InputType.number)\n        builder()\n    }\n\n    /**\n     * Renders the field for a nullable Double\n     */\n    @KraftFormsDsl\n    fun nullable(\n        prop: KMutableProperty0<Double?>,\n        builder: Options<Double?>.() -> Unit = {},\n    ) = nullable(prop(), prop::set, builder)\n\n    /**\n     * Renders the field for a nullable Double\n     */\n    @KraftFormsDsl\n    fun nullable(\n        value: Double?,\n        onChange: (Double?) -> Unit,\n        builder: Options<Double?>.() -> Unit = {},\n    ) = tag.UiInputField(value, onChange, ::numberToString, ::stringToDouble) {\n        type(InputType.number)\n        builder()\n    }\n}\n\nclass UiPasswordFieldRenderer(private val tag: Tag) {\n    /**\n     * Renders the field for a String\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        prop: KMutableProperty0<String>,\n        builder: Options<String>.() -> Unit = {},\n    ) = invoke(prop(), prop::set, builder)\n\n    /**\n     * Renders the field for a String\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        value: String,\n        onChange: (String) -> Unit,\n        builder: Options<String>.() -> Unit = {},\n    ) = tag.UiInputField(value, onChange, ::stringToString, ::stringToString) {\n        type(InputType.password)\n        builder()\n    }\n}\n\nclass UiDateFieldRenderer(private val tag: Tag) {\n    /**\n     * Renders the field for an MpLocalDate\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        prop: KMutableProperty0<MpLocalDate>,\n        builder: Options<MpLocalDate>.() -> Unit = {},\n    ) = invoke(prop(), prop::set, builder)\n\n    /**\n     * Renders the field for an MpLocalDate\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        value: MpLocalDate,\n        onChange: (MpLocalDate) -> Unit,\n        builder: Options<MpLocalDate>.() -> Unit = {},\n    ) = tag.UiInputField(value, onChange, ::dateToYmd, ::stringToDate) {\n        asDateInput()\n        required(true)\n        builder()\n    }\n\n    /**\n     * Renders the field for a nullable MpLocalDate\n     */\n    @KraftFormsDsl\n    fun nullable(\n        prop: KMutableProperty0<MpLocalDate?>,\n        builder: Options<MpLocalDate?>.() -> Unit = {},\n    ) = nullable(prop(), prop::set, builder)\n\n    /**\n     * Renders the field for a nullable MpLocalDate\n     */\n    @KraftFormsDsl\n    fun nullable(\n        value: MpLocalDate?,\n        onChange: (MpLocalDate?) -> Unit,\n        builder: Options<MpLocalDate?>.() -> Unit = {},\n    ) = tag.UiInputField(value, onChange, ::dateToYmd, ::stringToDateOrNull) {\n        asDateInput()\n        builder()\n    }\n\n    /**\n     * Renders the field for an MpLocalDateTime\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        prop: KMutableProperty0<MpLocalDateTime>,\n        builder: SettingsBuilder<MpLocalDate> = {},\n    ) = invoke(prop(), prop::set, builder)\n\n    /**\n     * Renders the field for an MpLocalDateTime\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        value: MpLocalDateTime,\n        onChange: (MpLocalDateTime) -> Unit,\n        builder: SettingsBuilder<MpLocalDate> = {},\n    ) = invoke(\n        value = value.toDate(),\n        onChange = { onChange(it.atTime(value.toTime())) },\n        builder = builder\n    )\n\n    /**\n     * Renders the field for a nullable MpLocalDateTime\n     */\n    @KraftFormsDsl\n    fun nullable(\n        prop: KMutableProperty0<MpLocalDateTime?>,\n        builder: SettingsBuilder<MpLocalDate?> = {},\n    ) = nullable(prop(), prop::set, builder)\n\n    /**\n     * Renders the field for a nullable MpLocalDateTime\n     */\n    @KraftFormsDsl\n    fun nullable(\n        value: MpLocalDateTime?,\n        onChange: (MpLocalDateTime?) -> Unit,\n        builder: Options<MpLocalDate?>.() -> Unit = {},\n    ) = nullable(\n        value = value?.toDate(),\n        onChange = {\n            onChange(\n                it?.atTime(value?.toTime() ?: MpLocalTime.Min)\n            )\n        },\n        builder = builder\n    )\n\n    /**\n     * Renders the field for an MpZonedDateTime\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        prop: KMutableProperty0<MpZonedDateTime>,\n        builder: Options<MpLocalDate>.() -> Unit = {},\n    ) = invoke(prop(), prop::set, builder)\n\n    /**\n     * Renders the field for an MpZonedDateTime\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        value: MpZonedDateTime,\n        onChange: (MpZonedDateTime) -> Unit,\n        builder: Options<MpLocalDate>.() -> Unit = {},\n    ) = invoke(\n        value = value,\n        timezone = value.timezone,\n        onChange = onChange,\n        builder = builder\n    )\n\n    /**\n     * Renders the field for an MpZonedDateTime\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        prop: KMutableProperty0<MpZonedDateTime>,\n        timezone: MpTimezone,\n        builder: Options<MpLocalDate>.() -> Unit = {},\n    ) = invoke(prop(), timezone, prop::set, builder)\n\n    /**\n     * Renders the field for an MpZonedDateTime\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        value: MpZonedDateTime,\n        timezone: MpTimezone,\n        onChange: (MpZonedDateTime) -> Unit,\n        builder: Options<MpLocalDate>.() -> Unit = {},\n    ) = invoke(\n        value = value.toLocalDate(),\n        onChange = { onChange(it.atStartOfDay(timezone).atTime(value.toLocalTime())) },\n        builder = builder\n    )\n\n    /**\n     * Renders the field for a nullable MpZonedDateTime\n     */\n    @KraftFormsDsl\n    fun nullable(\n        prop: KMutableProperty0<MpZonedDateTime?>,\n        timezone: MpTimezone,\n        builder: Options<MpLocalDate?>.() -> Unit = {},\n    ) = nullable(prop(), timezone, prop::set, builder)\n\n    /**\n     * Renders the field for a nullable MpZonedDateTime\n     */\n    @KraftFormsDsl\n    fun nullable(\n        value: MpZonedDateTime?,\n        timezone: MpTimezone,\n        onChange: (MpZonedDateTime?) -> Unit,\n        builder: Options<MpLocalDate?>.() -> Unit = {},\n    ) = nullable(\n        value = value?.toLocalDate(),\n        onChange = {\n            onChange(\n                it?.atStartOfDay(timezone)?.atTime(value?.toLocalTime() ?: MpLocalTime.Min)\n            )\n        },\n        builder = builder\n    )\n}\n\nclass UiDateTimeFieldRenderer(private val tag: Tag) {\n\n    // MpLocalDateTime /////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Renders the field for an MpLocalDateTime\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        prop: KMutableProperty0<MpLocalDateTime>,\n        builder: Options<MpLocalDateTime>.() -> Unit = {},\n    ) = invoke(prop(), prop::set, builder)\n\n    /**\n     * Renders the field for an MpLocalDateTime\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        value: MpLocalDateTime,\n        onChange: (MpLocalDateTime) -> Unit,\n        builder: Options<MpLocalDateTime>.() -> Unit = {},\n    ) = tag.UiInputField(value, onChange, ::localDateTimeToYmdHms, ::stringToLocalDateTime) {\n        asDateTimeInput()\n        required(true)\n        builder()\n    }\n\n    /**\n     * Renders the field for a nullable MpLocalDateTime\n     */\n    @KraftFormsDsl\n    fun nullable(\n        prop: KMutableProperty0<MpLocalDateTime?>,\n        builder: Options<MpLocalDateTime?>.() -> Unit = {},\n    ) = nullable(prop(), prop::set, builder)\n\n    /**\n     * Renders the field for a nullable MpLocalDateTime\n     */\n    @KraftFormsDsl\n    fun nullable(\n        value: MpLocalDateTime?,\n        onChange: (MpLocalDateTime?) -> Unit,\n        builder: Options<MpLocalDateTime?>.() -> Unit = {},\n    ) = tag.UiInputField(value, onChange, ::localDateTimeToYmdHms, ::stringToLocalDateTimeOrNull) {\n        asDateTimeInput()\n        builder()\n    }\n\n    // MpInstant ///////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Renders the field for an [MpInstant]\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        prop: KMutableProperty0<MpInstant>,\n        timezone: MpTimezone,\n        builder: Options<MpZonedDateTime>.() -> Unit = {},\n    ) = invoke(prop(), timezone, prop::set, builder)\n\n    /**\n     * Renders the field for an MpZonedDateTime\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        value: MpInstant,\n        timezone: MpTimezone,\n        onChange: (MpInstant) -> Unit,\n        builder: Options<MpZonedDateTime>.() -> Unit = {},\n    ) = tag.UiInputField(\n        value.atZone(timezone),\n        { onChange(it.toInstant()) },\n        ::zonedDateTimeToYmdHms,\n        { stringToZonedDateTime(it).copy(timezone = timezone) },\n    ) {\n        asDateTimeInput()\n        builder()\n    }\n\n    /**\n     * Renders the field for a nullable MpZonedDateTime\n     */\n    @KraftFormsDsl\n    fun nullable(\n        prop: KMutableProperty0<MpInstant?>,\n        timezone: MpTimezone,\n        builder: Options<MpZonedDateTime?>.() -> Unit = {},\n    ) = nullable(prop(), timezone, prop::set, builder)\n\n    /**\n     * Renders the field for a nullable MpZonedDateTime\n     */\n    @KraftFormsDsl\n    fun nullable(\n        value: MpInstant?,\n        timezone: MpTimezone,\n        onChange: (MpInstant?) -> Unit,\n        builder: Options<MpZonedDateTime?>.() -> Unit = {},\n    ) = tag.UiInputField(\n        value?.atZone(timezone),\n        { onChange(it?.toInstant()) },\n        ::zonedDateTimeToYmdHms,\n        { stringToZonedDateTimeOrNull(it)?.copy(timezone = timezone) },\n    ) {\n        asDateTimeInput()\n        builder()\n    }\n\n    // MpZonedDateTime /////////////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Renders the field for an MpZonedDateTime\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        prop: KMutableProperty0<MpZonedDateTime>,\n        builder: Options<MpZonedDateTime>.() -> Unit = {},\n    ) = invoke(prop(), prop::set, builder)\n\n    /**\n     * Renders the field for an MpZonedDateTime\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        value: MpZonedDateTime,\n        onChange: (MpZonedDateTime) -> Unit,\n        builder: Options<MpZonedDateTime>.() -> Unit = {},\n    ) = invoke(value, value.timezone, onChange, builder)\n\n    /**\n     * Renders the field for an MpZonedDateTime\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        prop: KMutableProperty0<MpZonedDateTime>,\n        timezone: MpTimezone,\n        builder: Options<MpZonedDateTime>.() -> Unit = {},\n    ) = invoke(prop(), timezone, prop::set, builder)\n\n    /**\n     * Renders the field for an MpZonedDateTime\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        value: MpZonedDateTime,\n        timezone: MpTimezone,\n        onChange: (MpZonedDateTime) -> Unit,\n        builder: Options<MpZonedDateTime>.() -> Unit = {},\n    ) = tag.UiInputField(\n        value,\n        onChange,\n        ::zonedDateTimeToYmdHms,\n        { stringToZonedDateTime(it).copy(timezone = timezone) },\n    ) {\n        asDateTimeInput()\n        builder()\n    }\n\n    /**\n     * Renders the field for a nullable MpZonedDateTime\n     */\n    @KraftFormsDsl\n    fun nullable(\n        prop: KMutableProperty0<MpZonedDateTime?>,\n        timezone: MpTimezone,\n        builder: Options<MpZonedDateTime?>.() -> Unit = {},\n    ) = nullable(prop(), timezone, prop::set, builder)\n\n    /**\n     * Renders the field for a nullable MpZonedDateTime\n     */\n    @KraftFormsDsl\n    fun nullable(\n        value: MpZonedDateTime?,\n        timezone: MpTimezone,\n        onChange: (MpZonedDateTime?) -> Unit,\n        builder: Options<MpZonedDateTime?>.() -> Unit = {},\n    ) = tag.UiInputField(\n        value,\n        onChange,\n        ::zonedDateTimeToYmdHms,\n        { stringToZonedDateTimeOrNull(it)?.copy(timezone = timezone) },\n    ) {\n        asDateTimeInput()\n        builder()\n    }\n}\n\nclass UiTimeFieldRenderer(private val tag: Tag) {\n    /**\n     * Renders the field for an MpLocalTime\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        prop: KMutableProperty0<MpLocalTime>,\n        builder: Options<MpLocalTime>.() -> Unit = {},\n    ) = invoke(prop(), prop::set, builder)\n\n    /**\n     * Renders the field for an MpLocalTime\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        value: MpLocalTime,\n        onChange: (MpLocalTime) -> Unit,\n        builder: Options<MpLocalTime>.() -> Unit = {},\n    ) = tag.UiInputField(value, onChange, ::timeToHms, ::stringToLocalTime) {\n        asTimeInput()\n        builder()\n    }\n\n    /**\n     * Renders the field for a nullable MpLocalTime\n     */\n    @KraftFormsDsl\n    operator fun invoke(\n        prop: KMutableProperty0<MpLocalTime?>,\n        builder: Options<MpLocalTime?>.() -> Unit = {},\n    ) = nullable(prop(), prop::set, builder)\n\n    /**\n     * Renders the field for a nullable MpLocalTime\n     */\n    @KraftFormsDsl\n    fun nullable(\n        value: MpLocalTime?,\n        onChange: (MpLocalTime?) -> Unit,\n        builder: Options<MpLocalTime?>.() -> Unit = {},\n    ) = tag.UiInputField(value, onChange, ::timeToHms, ::stringToLocalTimeOrNull) {\n        asTimeInput()\n        builder()\n    }\n}\n","package de.peekandpoke.kraft.utils\n\nimport de.peekandpoke.ultra.common.datetime.MpLocalDate\nimport de.peekandpoke.ultra.common.datetime.MpLocalDateTime\nimport de.peekandpoke.ultra.common.datetime.MpLocalTime\nimport de.peekandpoke.ultra.common.datetime.MpZonedDateTime\n\nfun <T> identity(it: T): T = it\n\nfun stringToString(it: String?): String = it ?: \"\"\n\nfun numberToString(it: Number?): String = it?.toString() ?: \"\"\n\nfun stringToInt(it: String): Int = if (it.isBlank()) 0 else it.toInt()\n\nfun stringToFloat(it: String): Float = if (it.isBlank()) 0.0f else it.toFloat()\n\nfun stringToDouble(it: String): Double = if (it.isBlank()) 0.0 else it.toDouble()\n\nfun dateToYmd(it: MpLocalDate?): String = it?.format(\"yyyy-MM-dd\") ?: \"\"\n\nfun stringToDate(it: String): MpLocalDate = MpLocalDate.parse(it)\nfun stringToDateOrNull(it: String): MpLocalDate? = MpLocalDate.tryParse(it)\n\nfun localDateTimeToYmdHms(it: MpLocalDateTime?): String = zonedDateTimeToYmdHms(it?.atUTC())\n\nfun stringToLocalDateTime(it: String): MpLocalDateTime = MpLocalDateTime.parse(it)\nfun stringToLocalDateTimeOrNull(it: String): MpLocalDateTime? = MpLocalDateTime.tryParse(it)\n\nfun zonedDateTimeToYmdHms(it: MpZonedDateTime?): String = it?.format(\"yyyy-MM-ddTHH:mm:ss\") ?: \"\"\n\nfun stringToZonedDateTime(it: String): MpZonedDateTime = MpZonedDateTime.parse(it)\nfun stringToZonedDateTimeOrNull(it: String): MpZonedDateTime? = MpZonedDateTime.tryParse(it)\n\nfun timeToHms(it: MpLocalTime?): String = it?.format(\"HH:mm:ss\") ?: \"\"\n\nfun stringToLocalTime(it: String): MpLocalTime = MpLocalTime.parse(it)\nfun stringToLocalTimeOrNull(it: String): MpLocalTime? = MpLocalTime.tryParse(it)\n\n","package de.peekandpoke.kraft.addons.semanticui.forms\n\nimport de.peekandpoke.kraft.addons.forms.FieldOptions\nimport de.peekandpoke.kraft.addons.forms.GenericFormField\nimport de.peekandpoke.kraft.addons.forms.KraftFormsDsl\nimport de.peekandpoke.kraft.addons.forms.TextAreaOptions\nimport de.peekandpoke.kraft.addons.semanticui.forms.UiTextAreaComponent.Options\nimport de.peekandpoke.kraft.components.Ctx\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.components.key\nimport de.peekandpoke.kraft.components.onInput\nimport de.peekandpoke.kraft.semanticui.css\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.browser.document\nimport kotlinx.browser.window\nimport kotlinx.css.Overflow\nimport kotlinx.css.maxHeight\nimport kotlinx.css.overflowY\nimport kotlinx.css.vh\nimport kotlinx.html.TEXTAREA\nimport kotlinx.html.Tag\nimport kotlinx.html.textArea\nimport org.w3c.dom.HTMLTextAreaElement\n\n@Suppress(\"FunctionName\")\n@KraftFormsDsl\nfun Tag.UiTextArea(\n    value: String,\n    onChange: (String) -> Unit,\n    builder: Options.() -> Unit = {},\n) = comp(\n    UiTextAreaComponent.Props(\n        value = value,\n        onChange = onChange,\n        options = Options().apply(builder),\n    )\n) {\n    UiTextAreaComponent(it)\n}\n\nclass UiTextAreaComponent(ctx: Ctx<Props>) :\n    GenericFormField<String, Options, UiTextAreaComponent.Props>(ctx) {\n\n    class Options : FieldOptions.Base<String>(), TextAreaOptions<String>, SemanticOptions<String>\n\n    data class Props(\n        override val value: String,\n        override val onChange: (String) -> Unit,\n        override val options: Options,\n    ) : GenericFormField.Props<String, Options>\n\n    val inputElement: HTMLTextAreaElement get() = dom!!.querySelector(\"textarea\") as HTMLTextAreaElement\n\n    private val isVerticalAutoResize get() = options.verticalAutoResize.getOrDefault(true)\n\n    init {\n        lifecycle {\n            onMount {\n                props.options.autofocusValue()?.takeIf { it }?.let {\n                    focus()\n                }\n            }\n        }\n    }\n\n    /**\n     * Sets the focus on the input element\n     */\n    fun focus() {\n        inputElement.focus()\n    }\n\n    /**\n     * Returns true when the text area has the focus.\n     */\n    fun hasFocus(): Boolean {\n        return document.activeElement === inputElement\n    }\n\n    /**\n     * Replaces the current selection with given [text].\n     *\n     * When no text is selected the [text] will be inserted at the cursor position.\n     */\n    fun replaceSelection(text: String) {\n        val field = (dom?.querySelector(\"textarea\") as? HTMLTextAreaElement)\n            ?: return\n\n        val startPos = field.selectionStart ?: 0\n        val endPos = field.selectionEnd ?: startPos\n\n        setValue(\n            field.value.replaceRange(startPos, endPos, text)\n        )\n    }\n\n    override fun VDom.render() {\n        ui.with(options.appear.getOrDefault { this }).given(hasErrors) { error }.field {\n            key = autoDomKey\n\n            renderLabel(\"textarea\")\n\n            textArea {\n                css {\n                    maxHeight = 50.vh\n                    overflowY = Overflow.auto\n                }\n\n                applyAll()\n\n                // We need this otherwise the value might not update properly\n                attributes[\"value\"] = currentValue\n\n                +currentValue\n\n                options.customize()?.let { it() }\n            }\n\n            renderErrors(this)\n        }\n\n        // Apply automatic vertical resize\n        if (isVerticalAutoResize) {\n            window.requestAnimationFrame {\n                val textarea = dom?.querySelector(\"textarea\") as? HTMLTextAreaElement\n\n                textarea?.let { t ->\n                    t.style.height = \"auto\"\n                    t.style.height = \"${t.scrollHeight + 2}px\"\n                }\n            }\n        }\n    }\n\n    fun TEXTAREA.applyAll() {\n        track()\n\n        applyDisabled()\n        applyName()\n        applyPlaceholder()\n    }\n\n    fun TEXTAREA.track() {\n        onInput {\n            val target = it.target as HTMLTextAreaElement\n\n            setValue(target.value)\n        }\n    }\n\n    private fun TEXTAREA.applyDisabled() {\n        if (options.isDisabled) {\n            disabled = true\n        }\n    }\n\n    private fun TEXTAREA.applyName() {\n        options.name()?.let { name = it }\n    }\n\n    private fun TEXTAREA.applyPlaceholder() {\n        options.placeholder()?.takeIf { it.isNotBlank() }?.let {\n            placeholder = it\n        }\n    }\n}\n","package de.peekandpoke.kraft.addons.semanticui.forms\n\nimport de.peekandpoke.kraft.addons.forms.FormField\nimport de.peekandpoke.kraft.semanticui.ui\nimport kotlinx.html.FlowContent\n\nfun <P> FormField<P>.renderErrors(flow: FlowContent) {\n    renderErrors(this, flow)\n}\n\nfun <P> renderErrors(field: FormField<P>, flow: FlowContent) {\n    flow.apply {\n        if (field.touched) {\n            field.errors.filter { it.isNotBlank() }.forEach { error ->\n                ui.basic.red.pointing.label { +error }\n            }\n        }\n    }\n}\n","package de.peekandpoke.kraft.addons.semanticui.forms.old.select\n\nimport de.peekandpoke.kraft.addons.forms.FormFieldComponent\nimport de.peekandpoke.kraft.addons.forms.validation.Rule\nimport de.peekandpoke.kraft.addons.semanticui.forms.renderErrors\nimport de.peekandpoke.kraft.components.*\nimport de.peekandpoke.kraft.semanticui.*\nimport de.peekandpoke.kraft.streams.addons.debounce\nimport de.peekandpoke.kraft.utils.launch\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.browser.window\nimport kotlinx.coroutines.flow.Flow\nimport kotlinx.css.CssBuilder\nimport kotlinx.css.zIndex\nimport kotlinx.html.*\nimport org.w3c.dom.HTMLInputElement\nimport org.w3c.dom.events.Event\n\ntypealias OptionFilterFn<T> = List<SelectFieldComponent.Option<T>>.(search: String) -> List<SelectFieldComponent.Option<T>>\n\ntypealias AutoSuggestFn<T> = suspend (search: String) -> Flow<List<SelectFieldComponent.Option<T>>>\n\nclass SelectFieldComponent<T>(ctx: Ctx<Props<T>>) : FormFieldComponent<T, SelectFieldComponent.Props<T>>(ctx) {\n\n    data class Props<P>(\n        val config: Config<P>,\n    ) : FormFieldComponent.Props<P> {\n        override val initialValue: P get() = config.value\n        override val fromStr: (String) -> P get() = config.fromStr\n        override val onChange: (P) -> Unit get() = config.onChange\n        override val rules: List<Rule<P>> get() = config.rules\n    }\n\n    data class Option<out T>(\n        val realValue: T,\n        val formValue: String,\n        val display: FlowContent.() -> Unit = { +formValue }\n    )\n\n    class Config<T>(\n        var value: T,\n        val onChange: (T) -> Unit,\n    ) {\n        val asProps get() = Props(config = this)\n\n        /** The validation rules */\n        val rules: MutableList<Rule<T>> = mutableListOf()\n\n        /** The options of the select field */\n        val options: MutableList<Option<T>> = mutableListOf()\n\n        /** Converts a string back to the real value of an option */\n        val fromStr: (str: String) -> T = { str -> options.first { it.formValue == str }.realValue }\n\n        /** The label renderer of the field */\n        var label: (LABEL.() -> Unit)? = null\n            private set\n\n        /** Flag whether the field is disabled */\n        var disabled: Boolean = false\n            private set\n\n        /** Renderer for a placeholder option */\n        var placeholder: (HTMLTag.() -> Unit)? = null\n            private set\n\n        /** The css set for the select field */\n        var css: CssBuilder? = null\n            private set\n\n        /** When true the field is rendered inverted */\n        var inverted: Boolean = false\n            private set\n\n        /** When set, the field will be rendered as a searchable field */\n        var searchableBy: OptionFilterFn<T>? = null\n            private set\n\n        /** When set, the field will be rendered as a searchable auto-suggest field */\n        var autoSuggest: AutoSuggestFn<T>? = null\n            private set\n\n        /** Defines the method how to check if two elements are equal */\n        var compareBy: (t1: T, t2: T) -> Boolean = { t1, t2 -> t1 == t2 }\n            private set\n\n        /**\n         * Sets the label\n         */\n        fun label(labelStr: String) = apply {\n            label = { +labelStr }\n        }\n\n        /**\n         * Sets the label as a render function\n         */\n        fun label(rendered: LABEL.() -> Unit) = apply {\n            label = rendered\n        }\n\n        /**\n         * Sets the disabled flag\n         */\n        fun disabled(disabled: Boolean = true) = apply {\n            this.disabled = disabled\n        }\n\n        /**\n         * Sets the placeholder\n         */\n        fun placeholder(placeholder: String) {\n            placeholder { +placeholder }\n        }\n\n        /**\n         * Sets the placeholder\n         */\n        fun placeholder(placeholder: HTMLTag.() -> Unit) {\n            this.placeholder = placeholder\n        }\n\n        /**\n         * Sets the css the select field\n         */\n        fun css(block: CssBuilder.() -> Unit) {\n            this.css = CssBuilder().apply(block)\n        }\n\n        /**\n         * Sets the style to be inverted or not.\n         */\n        fun inverted(inverted: Boolean = true) {\n            this.inverted = inverted\n        }\n\n        /**\n         * Sets the filter by which the options are filtered\n         */\n        fun searchableBy(filter: OptionFilterFn<T>) {\n            this.searchableBy = filter\n        }\n\n        /**\n         * Sets the callback that provides auto-suggest options\n         */\n        fun autoSuggest(suggest: AutoSuggestFn<T>) {\n            this.autoSuggest = suggest\n        }\n\n        /**\n         * Adds a validation rule\n         */\n        fun accepts(rule: Rule<T>, vararg rules: Rule<T>) {\n            this.rules.add(rule)\n            this.rules.addAll(rules)\n        }\n\n        /**\n         * Adds an option\n         */\n        fun option(realValue: T, formValue: String, display: FlowContent.() -> Unit) {\n            options.add(\n                Option(realValue = realValue, formValue = formValue, display = display)\n            )\n        }\n\n        /**\n         * Adds an option\n         */\n        fun option(realValue: T, formValue: String, display: String) {\n            option(realValue = realValue, formValue = formValue) { +display }\n        }\n\n        /**\n         * Adds an option\n         *\n         * In this case the [formValue] will also be used as the display\n         */\n        fun option(realValue: T, formValue: String) =\n            option(realValue = realValue, formValue = formValue) { +formValue }\n\n        /**\n         * Adds an option\n         *\n         * In this case the [realValue] will be used as formValue\n         */\n        fun option(realValue: T, display: FlowContent.() -> Unit) {\n            option(realValue = realValue, formValue = realValue.toString(), display = display)\n        }\n\n        /**\n         * Sets the comparator\n         */\n        fun compareBy(compare: (t1: T, t2: T) -> Boolean) {\n            compareBy = compare\n        }\n\n        /**\n         * Compares two items by their class\n         */\n        fun compareByClass() = compareBy { t1, t2 ->\n            @Suppress(\"UNNECESSARY_NOT_NULL_ASSERTION\")\n            t1 != null && t2 != null && t1!!::class == t2!!::class\n        }\n    }\n\n    ////  STATE ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    private val ctrl by lazy { SelectFieldController(this) }\n\n    private var selectedOption: Option<T>? by value(null)\n\n    private var autoSuggestOptions: List<Option<T>> by value(emptyList())\n\n    private var search: String by stream(\"\", { debounce(100) }) { newSearch ->\n        // When this is an auto-suggest field we query the new options\n        props.config.autoSuggest?.let { autoSuggest ->\n            launch {\n                autoSuggest(newSearch).collect { result ->\n                    autoSuggestOptions = result\n\n                    if (selectedOption == null) {\n                        selectedOption = result.firstOrNull { it.realValue == props.config.value }\n                    }\n                }\n            }\n        }\n    }\n\n    private var isSearchFocused by value(false)\n\n    private fun compare(t1: T?, t2: T?): Boolean =\n        // Either both are null\n        t1 == null && t2 == null ||\n            // Or both are not null, then we can compare them\n            (t1 != null && t2 != null && props.config.compareBy(t1, t2))\n\n    ////  LIFE-CYCLE  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    init {\n        lifecycle {\n            onMount {\n                // Add a mouse down handler on the document.\n                // By doing so we can close the dropdown when the user clicks somewhere else on the page.\n                window.document.addEventListener(type = \"mousedown\", callback = ::onDocumentMouseDown)\n            }\n\n            onUnmount {\n                // Remove the mouse down handler.\n                window.document.removeEventListener(type = \"mousedown\", callback = ::onDocumentMouseDown)\n            }\n        }\n    }\n\n    override fun shouldRedraw(nextProps: Props<T>): Boolean {\n\n        val currentOption = selectedOption\n\n        val allOptions = nextProps.config.options.plus(autoSuggestOptions)\n\n        selectedOption = selectedOption ?: allOptions.firstOrNull {\n            compare(it.realValue, nextProps.config.value)\n        }\n\n        return selectedOption != currentOption\n    }\n\n    @Suppress(\"UNUSED_PARAMETER\")\n    private fun onDocumentMouseDown(event: Event) {\n        search = \"\"\n        ctrl.close()\n    }\n\n    ////  RENDERING  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        ui.given(hasErrors) { error }.field {\n            key = autoDomKey\n\n            // Prevent the event from bubbling up to the document\n            onMouseDown { event ->\n                event.stopImmediatePropagation()\n                event.preventDefault()\n            }\n\n            props.config.label?.let { it ->\n                label { it(this) }\n            }\n\n            // Render field\n            renderField()\n\n            // Render Errors\n            renderErrors(this@SelectFieldComponent, this)\n        }\n    }\n\n    private fun FlowContent.renderField() {\n\n        // Is this field searchable?\n        val searchableBy = props.config.searchableBy\n        // Is this an auto-suggest field?\n        val autoSuggest = props.config.autoSuggest\n\n        when {\n            searchableBy != null -> renderSearchableField(options = searchableBy(props.config.options, search))\n\n            autoSuggest != null -> renderSearchableField(options = autoSuggestOptions)\n\n            else -> renderDefaultField(options = props.config.options)\n        }\n    }\n\n    private fun FlowContent.renderDefaultField(options: List<Option<T>>) {\n\n        ui.given(props.config.inverted) { inverted }\n            .given(props.config.disabled) { disabled }\n            .let { ctrl.applyStateOnField(it) }\n            .selection.dropdown {\n\n                if (ctrl.state != SelectFieldController.State.Closed) {\n                    css {\n                        zIndex = 1000\n                    }\n                }\n\n                onClick { ctrl.toggleState() }\n\n                icon.dropdown()\n\n                when (selectedOption) {\n                    // When nothing is selected we show the placeholder if there is any.\n                    null -> props.config.placeholder?.let { placeholder -> noui.default.text { placeholder(this) } }\n                    // Otherwise we show the selected option\n                    else -> noui.text { selectedOption!!.display(this) }\n                }\n\n                // render options\n                renderOptions(options = options) { option ->\n                    chooseOption(option)\n                }\n            }\n    }\n\n    private fun FlowContent.renderSearchableField(options: List<Option<T>>) {\n\n        ui.given(props.config.inverted) { inverted }\n            .given(props.config.disabled) { disabled }\n            .let { ctrl.applyStateOnField(it) }\n            .search.selection.dropdown {\n                onClick {\n                    ctrl.toggleState()\n                }\n\n                icon.dropdown()\n\n                // is the field searchable\n                input(classes = \"search\") {\n                    value = search\n                    // Prevent the mouse event from bubbling up, as this would close/toggle the dropdown\n                    onMouseDown { evt -> evt.stopImmediatePropagation() }\n                    // We will not toggle the state\n                    onClick { evt ->\n                        if (ctrl.isOpen()) {\n                            evt.stopImmediatePropagation()\n                        }\n                    }\n                    // Make sure to open the dropdown when the user is typing\n                    onKeyUp { ctrl.open() }\n                    // Watch for inputs\n                    onInput { evt -> search = (evt.target as HTMLInputElement).value }\n                    // Track if the input field gets the focus\n                    onFocus { isSearchFocused = true }\n                    // Track if the input field looses the focus\n                    onBlur { isSearchFocused = false }\n                }\n\n                // Render the placeholder\n                val valueDisplay: (FlowContent.() -> Unit) = when {\n                    // When the search is not blank we only show the search input\n                    search.isNotBlank() -> flowContent { }\n                    // Otherwise if there is a selected option we show it\n                    selectedOption != null -> when (isSearchFocused) {\n                        false -> flowContent { noui.text { selectedOption!!.display(this) } }\n                        // When the search input is focused we display the selected option like a placeholder\n                        true -> flowContent { noui.default.text { selectedOption!!.display(this) } }\n                    }\n                    // Otherwise we show the placeholder\n                    else -> flowContent {\n                        props.config.placeholder?.let { p -> noui.default.text { p(this) } }\n                    }\n                }\n\n                // Render the placeholder\n                valueDisplay(this)\n\n                // render options\n                renderOptions(options = options) { option ->\n                    chooseOption(option)\n                    search = \"\"\n                }\n            }\n    }\n\n    private fun chooseOption(option: Option<T>) {\n        selectedOption = option\n        setValue(option.realValue)\n    }\n\n    private fun FlowContent.renderOptions(\n        options: List<Option<T>>,\n        onSelect: (Option<T>) -> Unit,\n    ) {\n        // render the option\n        noui\n            .let { ctrl.applyStateOnOptions(it) }\n            .menu {\n                // Wait for the animation to end so we can advance the state\n                onAnimationEnd { ctrl.advanceState() }\n\n                options.forEach { option ->\n                    val isSelected = compare(option.realValue, selectedOption?.realValue)\n\n                    noui.given(isSelected) { selected }.item {\n                        option.display(this)\n                        onClick {\n                            // Set the selected option\n                            onSelect(option)\n                            // Remove the focus from the input field\n                            ctrl.getInputField()?.blur()\n                        }\n                    }\n                }\n            }\n    }\n}\n","@file:Suppress(\n        \"Detekt:TooManyFunctions\",\n        \"Detekt:LargeClass\",\n        \"Detekt:LongMethod\",\n        \"Detekt:VariableNaming\",\n)\n\npackage de.peekandpoke.kraft.semanticui\n\nimport kotlinx.html.FlowContent\nimport kotlinx.html.I\nimport kotlinx.html.attributesMapOf\nimport kotlinx.html.body\nimport kotlinx.html.stream.createHTML\n\n@Suppress(\"PropertyName\", \"FunctionName\", \"unused\")\nclass SemanticIcon(private val parent: FlowContent) {\n\n    companion object {\n        val all = listOf(\"500px\", \"accessible\", \"accusoft\", \"acquisitions incorporated\", \"ad\", \"address book outline\", \"address book\", \"address card outline\", \"address card\", \"adjust\", \"adn\", \"adobe\", \"adversal\", \"affiliatetheme\", \"air freshener\", \"airbnb\", \"algolia\", \"align center\", \"align justify\", \"align left\", \"align right\", \"alipay\", \"allergies\", \"alternate github\", \"amazon pay\", \"amazon\", \"ambulance\", \"american sign language interpreting\", \"amilia\", \"anchor\", \"android\", \"angellist\", \"angle double down\", \"angle double left\", \"angle double right\", \"angle double up\", \"angle down\", \"angle left\", \"angle right\", \"angle up\", \"angry outline\", \"angry\", \"angrycreative\", \"angular\", \"ankh\", \"app store ios\", \"app store\", \"apper\", \"apple pay\", \"apple\", \"archive\", \"archway\", \"arrow alternate circle down outline\", \"arrow alternate circle down\", \"arrow alternate circle left outline\", \"arrow alternate circle left\", \"arrow alternate circle right outline\", \"arrow alternate circle right\", \"arrow alternate circle up outline\", \"arrow alternate circle up\", \"arrow circle down\", \"arrow circle left\", \"arrow circle right\", \"arrow circle up\", \"arrow down\", \"arrow left\", \"arrow right\", \"arrow up\", \"arrows alternate horizontal\", \"arrows alternate vertical\", \"arrows alternate\", \"artstation\", \"assistive listening systems\", \"asterisk loading\", \"asterisk\", \"asymmetrik\", \"at\", \"atlas\", \"atlassian\", \"atom\", \"audible\", \"audio description\", \"autoprefixer\", \"avianex\", \"aviato\", \"award\", \"aws\", \"baby carriage\", \"baby\", \"backward\", \"bacon\", \"bahai\", \"balance scale left\", \"balance scale right\", \"balance scale\", \"ban\", \"band aid\", \"bandcamp\", \"barcode\", \"bars\", \"baseball ball\", \"basketball ball\", \"bath\", \"battery empty\", \"battery full\", \"battery half\", \"battery quarter\", \"battery three quarters\", \"battle net\", \"bed\", \"beer\", \"behance square\", \"behance\", \"bell outline\", \"bell slash outline\", \"bell slash\", \"bell\", \"bezier curve\", \"bible\", \"bicycle\", \"big circle outline\", \"big home\", \"big red dont\", \"biking\", \"bimobject\", \"binoculars\", \"biohazard\", \"birthday cake\", \"bitbucket\", \"bitcoin\", \"bity\", \"black tie\", \"black user\", \"black users\", \"blackberry\", \"blender\", \"blind\", \"blog\", \"blogger b\", \"blogger\", \"blue users\", \"bluetooth b\", \"bluetooth\", \"bold\", \"bolt\", \"bomb\", \"bone\", \"bong\", \"book dead\", \"book medical\", \"book open\", \"book reader\", \"book\", \"bookmark outline\", \"bookmark\", \"bootstrap\", \"border all\", \"border none\", \"border style\", \"bordered colored blue users\", \"bordered colored green users\", \"bordered colored red users\", \"bordered inverted black users\", \"bordered inverted teal users\", \"bordered teal users\", \"bordered users\", \"bottom left corner add\", \"bottom right corner add\", \"bowling ball\", \"box open\", \"box tissue\", \"box\", \"boxes\", \"braille\", \"brain\", \"bread slice\", \"briefcase medical\", \"briefcase\", \"broadcast tower\", \"broom\", \"brown users\", \"brush\", \"btc\", \"buffer\", \"bug\", \"building outline\", \"building\", \"bullhorn\", \"bullseye\", \"burn\", \"buromobelexperte\", \"bus alternate\", \"bus\", \"business time\", \"buy n large\", \"buysellads\", \"calculator\", \"calendar alternate outline\", \"calendar alternate\", \"calendar check outline\", \"calendar check\", \"calendar day\", \"calendar minus outline\", \"calendar minus\", \"calendar outline\", \"calendar plus outline\", \"calendar plus\", \"calendar times outline\", \"calendar times\", \"calendar week\", \"calendar\", \"camera retro\", \"camera\", \"campground\", \"canadian maple leaf\", \"candy cane\", \"cannabis\", \"capsules\", \"car alternate\", \"car battery\", \"car crash\", \"car side\", \"car\", \"caravan\", \"caret down\", \"caret left\", \"caret right\", \"caret square down outline\", \"caret square down\", \"caret square left outline\", \"caret square left\", \"caret square right outline\", \"caret square right\", \"caret square up outline\", \"caret square up\", \"caret up\", \"carrot\", \"cart arrow down\", \"cart plus\", \"cash register\", \"cat\", \"cc amazon pay\", \"cc amex\", \"cc apple pay\", \"cc diners club\", \"cc discover\", \"cc jcb\", \"cc mastercard\", \"cc paypal\", \"cc stripe\", \"cc visa\", \"centercode\", \"centos\", \"certificate\", \"chair\", \"chalkboard teacher\", \"chalkboard\", \"charging station\", \"chart area\", \"chart bar outline\", \"chart bar\", \"chart line\", \"chart pie\", \"check circle outline\", \"check circle\", \"check double\", \"check square outline\", \"check square\", \"check\", \"cheese\", \"chess bishop\", \"chess board\", \"chess king\", \"chess knight\", \"chess pawn\", \"chess queen\", \"chess rook\", \"chess\", \"chevron circle down\", \"chevron circle left\", \"chevron circle right\", \"chevron circle up\", \"chevron down\", \"chevron left\", \"chevron right\", \"chevron up\", \"child\", \"chrome\", \"chromecast\", \"church\", \"circle notch\", \"circle outline\", \"circle\", \"circular colored blue users\", \"circular colored green users\", \"circular colored red users\", \"circular inverted teal users\", \"circular inverted users\", \"circular teal users\", \"circular users\", \"city\", \"clinic medical\", \"clipboard check\", \"clipboard list\", \"clipboard outline\", \"clipboard\", \"clock outline\", \"clock\", \"clockwise rotated cloud\", \"clone outline\", \"clone\", \"close link\", \"close\", \"closed captioning outline\", \"closed captioning\", \"cloud download alternate\", \"cloud meatball\", \"cloud moon rain\", \"cloud moon\", \"cloud rain\", \"cloud showers heavy\", \"cloud sun rain\", \"cloud sun\", \"cloud upload alternate\", \"cloud\", \"cloudscale\", \"cloudsmith\", \"cloudversify\", \"cocktail\", \"code branch\", \"code\", \"codepen\", \"codiepie\", \"coffee\", \"cog\", \"cogs\", \"coins\", \"columns\", \"comment alternate outline\", \"comment alternate\", \"comment dollar\", \"comment dots outline\", \"comment dots\", \"comment medical\", \"comment outline\", \"comment slash\", \"comment\", \"comments dollar\", \"comments outline\", \"comments\", \"compact disc\", \"compass outline\", \"compass\", \"compress alternate\", \"compress arrows alternate\", \"compress\", \"concierge bell\", \"confluence\", \"connectdevelop\", \"contao\", \"content\", \"cookie bite\", \"cookie\", \"copy link\", \"copy outline\", \"copy\", \"copyright outline\", \"copyright\", \"corner add\", \"cotton bureau\", \"couch\", \"counterclockwise rotated cloud\", \"cpanel\", \"creative commons by\", \"creative commons nc eu\", \"creative commons nc jp\", \"creative commons nc\", \"creative commons nd\", \"creative commons pd alternate\", \"creative commons pd\", \"creative commons remix\", \"creative commons sa\", \"creative commons sampling plus\", \"creative commons sampling\", \"creative commons share\", \"creative commons zero\", \"creative commons\", \"credit card outline\", \"credit card\", \"critical role\", \"crop alternate\", \"crop\", \"cross\", \"crosshairs\", \"crow\", \"crutch\", \"css3 alternate\", \"css3\", \"cube\", \"cubes\", \"cut\", \"cuttlefish\", \"d and d beyond\", \"d and d\", \"dailymotion\", \"dashcube\", \"database\", \"deaf\", \"delicious\", \"democrat\", \"deploydog\", \"deskpro\", \"desktop\", \"dev\", \"deviantart\", \"dharmachakra\", \"dhl\", \"diagnoses\", \"diaspora\", \"dice d20\", \"dice d6\", \"dice five\", \"dice four\", \"dice one\", \"dice six\", \"dice three\", \"dice two\", \"dice\", \"digg\", \"digital ocean\", \"digital tachograph\", \"directions\", \"disabled users\", \"discord\", \"discourse\", \"disease\", \"divide\", \"dizzy outline\", \"dizzy\", \"dna\", \"dochub\", \"docker\", \"dog\", \"dollar sign\", \"dolly flatbed\", \"dolly\", \"donate\", \"door closed\", \"door open\", \"dot circle outline\", \"dot circle\", \"dove\", \"download\", \"draft2digital\", \"drafting compass\", \"dragon\", \"draw polygon\", \"dribbble square\", \"dribbble\", \"dropbox\", \"dropdown\", \"drum steelpan\", \"drum\", \"drumstick bite\", \"drupal\", \"dumbbell\", \"dumpster\", \"dungeon\", \"dyalog\", \"earlybirds\", \"ebay\", \"edge\", \"edit outline\", \"edit\", \"egg\", \"eject\", \"elementor\", \"ellipsis horizontal\", \"ellipsis vertical\", \"ello\", \"ember\", \"empire\", \"envelope open outline\", \"envelope open text\", \"envelope open\", \"envelope outline\", \"envelope square\", \"envelope\", \"envira\", \"equals\", \"eraser\", \"erlang\", \"ethereum\", \"ethernet\", \"etsy\", \"euro sign\", \"evernote\", \"exchange alternate\", \"exclamation circle\", \"exclamation triangle\", \"exclamation\", \"expand alternate\", \"expand arrows alternate\", \"expand\", \"expeditedssl\", \"external alternate\", \"external link square alternate\", \"eye dropper\", \"eye outline\", \"eye slash outline\", \"eye slash\", \"eye\", \"facebook f\", \"facebook messenger\", \"facebook square\", \"facebook\", \"fan\", \"fantasy flight games\", \"fast backward\", \"fast forward\", \"faucet\", \"fax\", \"feather alternate\", \"feather\", \"fedex\", \"fedora\", \"female\", \"fighter jet\", \"figma\", \"file alternate outline\", \"file alternate\", \"file archive outline\", \"file archive\", \"file audio outline\", \"file audio\", \"file code outline\", \"file code\", \"file contract\", \"file download\", \"file excel outline\", \"file excel\", \"file export\", \"file image outline\", \"file image\", \"file import\", \"file invoice dollar\", \"file invoice\", \"file medical alternate\", \"file medical\", \"file outline\", \"file pdf outline\", \"file pdf\", \"file powerpoint outline\", \"file powerpoint\", \"file prescription\", \"file signature\", \"file upload\", \"file video outline\", \"file video\", \"file word outline\", \"file word\", \"file\", \"fill drip\", \"fill\", \"film\", \"filter\", \"fingerprint\", \"fire alternate\", \"fire extinguisher\", \"fire\", \"firefox browser\", \"firefox\", \"first aid\", \"first order alternate\", \"first order\", \"firstdraft\", \"fish\", \"fist raised\", \"fitted help\", \"fitted small linkify\", \"flag checkered\", \"flag outline\", \"flag usa\", \"flag\", \"flask\", \"flickr\", \"flipboard\", \"flushed outline\", \"flushed\", \"fly\", \"folder minus\", \"folder open outline\", \"folder open\", \"folder outline\", \"folder plus\", \"folder\", \"font awesome alternate\", \"font awesome flag\", \"font awesome\", \"font\", \"fonticons fi\", \"fonticons\", \"football ball\", \"fort awesome alternate\", \"fort awesome\", \"forumbee\", \"forward\", \"foursquare\", \"free code camp\", \"freebsd\", \"frog\", \"frown open outline\", \"frown open\", \"frown outline\", \"frown\", \"fruit-apple\", \"fulcrum\", \"funnel dollar\", \"futbol outline\", \"futbol\", \"galactic republic\", \"galactic senate\", \"gamepad\", \"gas pump\", \"gavel\", \"gem outline\", \"gem\", \"genderless\", \"get pocket\", \"gg circle\", \"gg\", \"ghost\", \"gift\", \"gifts\", \"git alternate\", \"git square\", \"git\", \"github alternate\", \"github square\", \"github\", \"gitkraken\", \"gitlab\", \"gitter\", \"glass cheers\", \"glass martini alternate\", \"glass martini\", \"glass whiskey\", \"glasses\", \"glide g\", \"glide\", \"globe africa\", \"globe americas\", \"globe asia\", \"globe europe\", \"globe\", \"gofore\", \"golf ball\", \"goodreads g\", \"goodreads\", \"google drive\", \"google play\", \"google plus g\", \"google plus square\", \"google plus\", \"google wallet\", \"google\", \"gopuram\", \"graduation cap\", \"gratipay\", \"grav\", \"greater than equal\", \"greater than\", \"green users\", \"grey users\", \"grimace outline\", \"grimace\", \"grin alternate outline\", \"grin alternate\", \"grin beam outline\", \"grin beam sweat outline\", \"grin beam sweat\", \"grin beam\", \"grin hearts outline\", \"grin hearts\", \"grin outline\", \"grin squint outline\", \"grin squint tears outline\", \"grin squint tears\", \"grin squint\", \"grin stars outline\", \"grin stars\", \"grin tears outline\", \"grin tears\", \"grin tongue outline\", \"grin tongue squint outline\", \"grin tongue squint\", \"grin tongue wink outline\", \"grin tongue wink\", \"grin tongue\", \"grin wink outline\", \"grin wink\", \"grin\", \"grip horizontal\", \"grip lines vertical\", \"grip lines\", \"grip vertical\", \"gripfire\", \"grunt\", \"guitar\", \"gulp\", \"h square\", \"hacker news square\", \"hacker news\", \"hackerrank\", \"hamburger\", \"hammer\", \"hamsa\", \"hand holding heart\", \"hand holding medical\", \"hand holding usd\", \"hand holding water\", \"hand holding\", \"hand lizard outline\", \"hand lizard\", \"hand middle finger\", \"hand paper outline\", \"hand paper\", \"hand peace outline\", \"hand peace\", \"hand point down outline\", \"hand point down\", \"hand point left outline\", \"hand point left\", \"hand point right outline\", \"hand point right\", \"hand point up outline\", \"hand point up\", \"hand pointer outline\", \"hand pointer\", \"hand rock outline\", \"hand rock\", \"hand scissors outline\", \"hand scissors\", \"hand sparkles\", \"hand spock outline\", \"hand spock\", \"hands helping\", \"hands wash\", \"hands\", \"handshake alternate slash\", \"handshake outline\", \"handshake slash\", \"handshake\", \"hanukiah\", \"hard hat\", \"hashtag\", \"hat cowboy side\", \"hat cowboy\", \"hat wizard\", \"hdd outline\", \"hdd\", \"head side cough slash\", \"head side cough\", \"head side mask\", \"head side virus\", \"heading\", \"headphones alternate\", \"headphones\", \"headset\", \"heart broken\", \"heart outline\", \"heart\", \"heartbeat\", \"helicopter\", \"help link\", \"highlighter\", \"hiking\", \"hippo\", \"hips\", \"hire a helper\", \"history\", \"hockey puck\", \"holly berry\", \"home\", \"hooli\", \"horizontally flipped cloud\", \"hornbill\", \"horse head\", \"horse\", \"hospital alternate\", \"hospital outline\", \"hospital symbol\", \"hospital user\", \"hospital\", \"hot tub\", \"hotdog\", \"hotel\", \"hotjar\", \"hourglass end\", \"hourglass half\", \"hourglass outline\", \"hourglass start\", \"hourglass\", \"house damage\", \"house user\", \"houzz\", \"hryvnia\", \"html5\", \"hubspot\", \"huge home\", \"i cursor\", \"ice cream\", \"icicles\", \"icons\", \"id badge outline\", \"id badge\", \"id card alternate\", \"id card outline\", \"id card\", \"ideal\", \"igloo\", \"image outline\", \"image\", \"images outline\", \"images\", \"imdb\", \"inbox\", \"indent\", \"industry\", \"infinity\", \"info circle\", \"info\", \"instagram square\", \"instagram\", \"intercom\", \"internet explorer\", \"inverted blue users\", \"inverted brown users\", \"inverted corner add\", \"inverted green users\", \"inverted grey users\", \"inverted olive users\", \"inverted orange users\", \"inverted pink users\", \"inverted primary users\", \"inverted purple users\", \"inverted red users\", \"inverted secondary users\", \"inverted teal users\", \"inverted users\", \"inverted violet users\", \"inverted yellow users\", \"invision\", \"ioxhost\", \"italic\", \"itch io\", \"itunes note\", \"itunes\", \"java\", \"jedi order\", \"jedi\", \"jenkins\", \"jira\", \"joget\", \"joint\", \"joomla\", \"journal whills\", \"js square\", \"js\", \"jsfiddle\", \"kaaba\", \"kaggle\", \"key\", \"keybase\", \"keyboard outline\", \"keyboard\", \"keycdn\", \"khanda\", \"kickstarter k\", \"kickstarter\", \"kiss beam outline\", \"kiss beam\", \"kiss outline\", \"kiss wink heart outline\", \"kiss wink heart\", \"kiss\", \"kiwi bird\", \"korvue\", \"landmark\", \"language\", \"laptop code\", \"laptop house\", \"laptop medical\", \"laptop\", \"laravel\", \"large home\", \"lastfm square\", \"lastfm\", \"laugh beam outline\", \"laugh beam\", \"laugh outline\", \"laugh squint outline\", \"laugh squint\", \"laugh wink outline\", \"laugh wink\", \"laugh\", \"layer group\", \"leaf\", \"leanpub\", \"lemon outline\", \"lemon\", \"less than equal\", \"less than\", \"lesscss\", \"level down alternate\", \"level up alternate\", \"life ring outline\", \"life ring\", \"lightbulb outline\", \"lightbulb\", \"linechat\", \"linkedin in\", \"linkedin\", \"linkify\", \"linode\", \"linux\", \"lira sign\", \"list alternate outline\", \"list alternate\", \"list ol\", \"list ul\", \"list\", \"location arrow\", \"lock open\", \"lock\", \"long arrow alternate down\", \"long arrow alternate left\", \"long arrow alternate right\", \"long arrow alternate up\", \"low vision\", \"luggage cart\", \"lungs virus\", \"lungs\", \"lyft\", \"magento\", \"magic\", \"magnet\", \"mail bulk\", \"mail\", \"mailchimp\", \"male\", \"mandalorian\", \"map marked alternate\", \"map marked\", \"map marker alternate\", \"map marker\", \"map outline\", \"map pin\", \"map signs\", \"map\", \"markdown\", \"marker\", \"mars double\", \"mars stroke horizontal\", \"mars stroke vertical\", \"mars stroke\", \"mars\", \"mask\", \"massive home\", \"mastodon\", \"maxcdn\", \"mdb\", \"medal\", \"medapps\", \"medium m\", \"medium\", \"medkit\", \"medrt\", \"meetup\", \"megaport\", \"meh blank outline\", \"meh blank\", \"meh outline\", \"meh rolling eyes outline\", \"meh rolling eyes\", \"meh\", \"memory\", \"mendeley\", \"menorah\", \"mercury\", \"meteor\", \"microblog\", \"microchip\", \"microphone alternate slash\", \"microphone alternate\", \"microphone slash\", \"microphone\", \"microscope\", \"microsoft\", \"mini home\", \"minus circle\", \"minus square outline\", \"minus square\", \"minus\", \"mitten\", \"mix\", \"mixcloud\", \"mixer\", \"mizuni\", \"mobile alternate\", \"mobile\", \"modx\", \"monero\", \"money bill alternate outline\", \"money bill alternate\", \"money bill wave alternate\", \"money bill wave\", \"money bill\", \"money check alternate\", \"money check\", \"monument\", \"moon outline\", \"moon\", \"mortar pestle\", \"mosque\", \"motorcycle\", \"mountain\", \"mouse pointer\", \"mouse\", \"mug hot\", \"music\", \"napster\", \"neos\", \"neuter\", \"newspaper outline\", \"newspaper\", \"nimblr\", \"node js\", \"node\", \"not equal\", \"notched circle loading\", \"notes medical\", \"npm\", \"ns8\", \"nutritionix\", \"object group outline\", \"object group\", \"object ungroup outline\", \"object ungroup\", \"odnoklassniki square\", \"odnoklassniki\", \"oil can\", \"old republic\", \"olive users\", \"om\", \"opencart\", \"openid\", \"opera\", \"optin monster\", \"orange users\", \"orcid\", \"osi\", \"otter\", \"outdent\", \"page4\", \"pagelines\", \"pager\", \"paint brush\", \"paint roller\", \"palette\", \"palfed\", \"pallet\", \"paper plane outline\", \"paper plane\", \"paperclip\", \"parachute box\", \"paragraph\", \"parking\", \"passport\", \"pastafarianism\", \"paste\", \"patreon\", \"pause circle outline\", \"pause circle\", \"pause\", \"paw\", \"paypal\", \"peace\", \"pen alternate\", \"pen fancy\", \"pen nib\", \"pen square\", \"pen\", \"pencil alternate\", \"pencil ruler\", \"penny arcade\", \"people arrows\", \"people carry\", \"pepper hot\", \"percent\", \"percentage\", \"periscope\", \"person booth\", \"phabricator\", \"phoenix framework\", \"phoenix squadron\", \"phone alternate\", \"phone slash\", \"phone square alternate\", \"phone square\", \"phone volume\", \"phone\", \"photo video\", \"php\", \"pied piper alternate\", \"pied piper hat\", \"pied piper pp\", \"pied piper square\", \"pied piper\", \"piggy bank\", \"pills\", \"pink users\", \"pinterest p\", \"pinterest square\", \"pinterest\", \"pizza slice\", \"place of worship\", \"plane arrival\", \"plane departure\", \"plane\", \"play circle outline\", \"play circle\", \"play\", \"playstation\", \"plug\", \"plus circle\", \"plus square outline\", \"plus square\", \"plus\", \"podcast\", \"poll horizontal\", \"poll\", \"poo storm\", \"poo\", \"poop\", \"portrait\", \"pound sign\", \"power off\", \"pray\", \"praying hands\", \"prescription bottle alternate\", \"prescription bottle\", \"prescription\", \"primary users\", \"print\", \"procedures\", \"product hunt\", \"project diagram\", \"pump medical\", \"pump soap\", \"purple users\", \"pushed\", \"puzzle piece\", \"puzzle\", \"python\", \"qq\", \"qrcode\", \"question circle outline\", \"question circle\", \"question\", \"quidditch\", \"quinscape\", \"quora\", \"quote left\", \"quote right\", \"quran\", \"r project\", \"radiation alternate\", \"radiation\", \"rainbow\", \"random\", \"raspberry pi\", \"ravelry\", \"react\", \"reacteurope\", \"readme\", \"rebel\", \"receipt\", \"record vinyl\", \"recycle\", \"red users\", \"reddit alien\", \"reddit square\", \"reddit\", \"redhat\", \"redo alternate\", \"redo\", \"redriver\", \"redyeti\", \"registered outline\", \"registered\", \"remove format\", \"renren\", \"reply all\", \"reply\", \"replyd\", \"republican\", \"researchgate\", \"resolving\", \"restroom\", \"retweet\", \"rev\", \"ribbon\", \"ring\", \"road\", \"robot\", \"rocket\", \"rocketchat\", \"rockrms\", \"route\", \"rss square\", \"rss\", \"ruble sign\", \"ruler combined\", \"ruler horizontal\", \"ruler vertical\", \"ruler\", \"running\", \"rupee sign\", \"sad cry outline\", \"sad cry\", \"sad tear outline\", \"sad tear\", \"safari\", \"salesforce\", \"sass\", \"satellite dish\", \"satellite\", \"save outline\", \"save\", \"schlix\", \"school\", \"screwdriver\", \"scribd\", \"scroll\", \"sd card\", \"search dollar\", \"search location\", \"search minus\", \"search plus\", \"search\", \"searchengin\", \"secondary users\", \"seedling\", \"sellcast\", \"sellsy\", \"server\", \"servicestack\", \"shapes\", \"share alternate square\", \"share alternate\", \"share square outline\", \"share square\", \"share\", \"shekel sign\", \"shield alternate\", \"shield virus\", \"ship\", \"shipping fast\", \"shirtsinbulk\", \"shoe prints\", \"shopify\", \"shopping bag\", \"shopping basket\", \"shopping cart\", \"shopware\", \"shower\", \"shuttle van\", \"sign in alternate\", \"sign language\", \"sign out alternate\", \"sign\", \"signal\", \"sim card\", \"simplybuilt\", \"sistrix\", \"sitemap\", \"sith\", \"skating\", \"sketch\", \"skiing nordic\", \"skiing\", \"skull crossbones\", \"skyatlas\", \"skype\", \"slack hash\", \"slack\", \"slash\", \"sleigh\", \"sliders horizontal\", \"slideshare\", \"small home\", \"smile beam outline\", \"smile beam\", \"smile outline\", \"smile wink outline\", \"smile wink\", \"smile\", \"smog\", \"smoking ban\", \"smoking\", \"sms\", \"snapchat ghost\", \"snapchat square\", \"snapchat\", \"snowboarding\", \"snowflake outline\", \"snowflake\", \"snowman\", \"snowplow\", \"soap\", \"socks\", \"solar panel\", \"sort alphabet down alternate\", \"sort alphabet down\", \"sort alphabet up alternate\", \"sort alphabet up\", \"sort amount down alternate\", \"sort amount down\", \"sort amount up alternate\", \"sort amount up\", \"sort down\", \"sort numeric down alternate\", \"sort numeric down\", \"sort numeric up alternate\", \"sort numeric up\", \"sort up\", \"sort\", \"soundcloud\", \"sourcetree\", \"spa\", \"space shuttle\", \"speakap\", \"speaker deck\", \"spell check\", \"spider\", \"spinner loading\", \"spinner\", \"splotch\", \"spotify\", \"spray can\", \"square full\", \"square outline\", \"square root alternate\", \"square\", \"squarespace\", \"stack exchange\", \"stack overflow\", \"stackpath\", \"stamp\", \"star and crescent\", \"star half alternate\", \"star half outline\", \"star half\", \"star of david\", \"star of life\", \"star outline\", \"star\", \"staylinked\", \"steam square\", \"steam symbol\", \"steam\", \"step backward\", \"step forward\", \"stethoscope\", \"sticker mule\", \"sticky note outline\", \"sticky note\", \"stop circle outline\", \"stop circle\", \"stop\", \"stopwatch\", \"store alternate slash\", \"store alternate\", \"store slash\", \"store\", \"strava\", \"stream\", \"street view\", \"strikethrough\", \"stripe s\", \"stripe\", \"stroopwafel\", \"studiovinari\", \"stumbleupon circle\", \"stumbleupon\", \"subscript\", \"subway\", \"suitcase rolling\", \"suitcase\", \"sun outline\", \"sun\", \"superpowers\", \"superscript\", \"supple\", \"surprise outline\", \"surprise\", \"suse\", \"swatchbook\", \"swift\", \"swimmer\", \"swimming pool\", \"symfony\", \"synagogue\", \"sync alternate\", \"sync\", \"syringe\", \"table tennis\", \"table\", \"tablet alternate\", \"tablet\", \"tablets\", \"tachometer alternate\", \"tag\", \"tags\", \"tape\", \"tasks\", \"taxi\", \"teal users\", \"teamspeak\", \"teeth open\", \"teeth\", \"telegram plane\", \"telegram\", \"temperature high\", \"temperature low\", \"tencent weibo\", \"tenge\", \"terminal\", \"text height\", \"text width\", \"th large\", \"th list\", \"th\", \"theater masks\", \"themeco\", \"themeisle\", \"thermometer empty\", \"thermometer full\", \"thermometer half\", \"thermometer quarter\", \"thermometer three quarters\", \"thermometer\", \"think peaks\", \"thumbs down outline\", \"thumbs down\", \"thumbs up outline\", \"thumbs up\", \"thumbtack\", \"ticket alternate\", \"times circle outline\", \"times circle\", \"times\", \"tint slash\", \"tint\", \"tiny home\", \"tired outline\", \"tired\", \"toggle off\", \"toggle on\", \"toilet paper slash\", \"toilet paper\", \"toilet\", \"toolbox\", \"tools\", \"tooth\", \"top left corner add\", \"top right corner add\", \"torah\", \"torii gate\", \"tractor\", \"trade federation\", \"trademark\", \"traffic light\", \"trailer\", \"train\", \"tram\", \"transgender alternate\", \"transgender\", \"trash alternate outline\", \"trash alternate\", \"trash restore alternate\", \"trash restore\", \"trash\", \"tree\", \"trello\", \"tripadvisor\", \"trophy\", \"truck monster\", \"truck moving\", \"truck packing\", \"truck pickup\", \"truck\", \"tshirt\", \"tty\", \"tumblr square\", \"tumblr\", \"tv\", \"twitch\", \"twitter square\", \"twitter\", \"typo3\", \"uber\", \"ubuntu\", \"uikit\", \"umbraco\", \"umbrella beach\", \"umbrella\", \"underline\", \"undo alternate\", \"undo\", \"uniregistry\", \"unity\", \"universal access\", \"university\", \"unlink\", \"unlock alternate\", \"unlock\", \"untappd\", \"upload\", \"ups\", \"usb\", \"user alternate slash\", \"user alternate\", \"user astronaut\", \"user check\", \"user circle outline\", \"user circle\", \"user clock\", \"user cog\", \"user edit\", \"user friends\", \"user graduate\", \"user injured\", \"user lock\", \"user md\", \"user minus\", \"user ninja\", \"user nurse\", \"user outline\", \"user plus\", \"user secret\", \"user shield\", \"user slash\", \"user tag\", \"user tie\", \"user times\", \"user\", \"users cog\", \"users\", \"usps\", \"ussunnah\", \"utensil spoon\", \"utensils\", \"vaadin\", \"vector square\", \"venus double\", \"venus mars\", \"venus\", \"vertically flipped cloud\", \"viacoin\", \"viadeo square\", \"viadeo\", \"vial\", \"vials\", \"viber\", \"video slash\", \"video\", \"vihara\", \"vimeo square\", \"vimeo v\", \"vimeo\", \"vine\", \"violet users\", \"virus slash\", \"virus\", \"viruses\", \"vk\", \"vnv\", \"voicemail\", \"volleyball ball\", \"volume down\", \"volume mute\", \"volume off\", \"volume up\", \"vote yea\", \"vuejs\", \"walking\", \"wallet\", \"warehouse\", \"water\", \"wave square\", \"waze\", \"weebly\", \"weibo\", \"weight\", \"weixin\", \"whatsapp square\", \"whatsapp\", \"wheelchair\", \"whmcs\", \"wifi\", \"wikipedia w\", \"wind\", \"window close outline\", \"window close\", \"window maximize outline\", \"window maximize\", \"window minimize outline\", \"window minimize\", \"window restore outline\", \"window restore\", \"windows\", \"wine bottle\", \"wine glass alternate\", \"wine glass\", \"wix\", \"wizards of the coast\", \"wolf pack battalion\", \"won sign\", \"wordpress simple\", \"wordpress\", \"world\", \"wpbeginner\", \"wpexplorer\", \"wpforms\", \"wpressr\", \"wrench\", \"x ray\", \"xbox\", \"xing square\", \"xing\", \"y combinator\", \"yahoo\", \"yammer\", \"yandex international\", \"yandex\", \"yarn\", \"yellow users\", \"yelp\", \"yen sign\", \"yin yang\", \"yoast\", \"youtube square\", \"youtube\", \"zhihu\")\n                // custom things\n                .plus(\n                        arrayOf(\n                                \"dont\",\n                                \"delete\",\n                        ),\n                )\n\n        fun cssClassOf(block: SemanticIcon.() -> SemanticIcon): String {\n            return cssClassOfAsList(block).joinToString(\" \")\n        }\n\n        fun cssClassOfAsList(block: SemanticIcon.() -> SemanticIcon): List<String> {\n            lateinit var classes: List<String>\n\n            createHTML().body {\n                classes = icon.block().cssClasses.filter { it.isNotBlank() }\n            }\n\n            return classes\n        }\n    }\n\n    private val cssClasses = mutableListOf<String>()\n\n    private fun attrs() = attributesMapOf(\"class\", cssClasses.joinToString(\" \") + \" icon\")\n\n    operator fun plus(cls: String): SemanticIcon = apply { cssClasses.add(cls) }\n\n    operator fun plus(classes: Array<out String>): SemanticIcon = apply { cssClasses.addAll(classes) }\n\n    fun render(block: I.() -> Unit = {}): Unit = I(attrs(), parent.consumer).visitNoInline(block)\n\n    operator fun invoke(): Unit = render()\n\n    operator fun invoke(block: I.() -> Unit): Unit = render(block)\n\n    @SemanticUiCssMarker\n    fun with(cls: String): SemanticIcon = this + cls\n\n    @SemanticUiCssMarker\n    fun custom(cls: String): Unit = (this + cls).render()\n\n    // conditional classes\n\n    @SemanticUiConditionalMarker\n    fun given(\n            condition: Boolean,\n            action: SemanticIcon.() -> SemanticIcon,\n    ): SemanticIcon = when (condition) {\n        false -> this\n        else -> this.action()\n    }\n\n    @SemanticUiConditionalMarker\n    fun givenNot(\n            condition: Boolean,\n            action: SemanticIcon.() -> SemanticIcon,\n    ): SemanticIcon = given(!condition, action)\n\n    @SemanticUiConditionalMarker inline val then: SemanticIcon get() = this\n\n    // coloring ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    @SemanticUiCssMarker\n    fun color(color: SemanticColor): SemanticIcon = when {\n        color.isSet -> with(color.toString())\n        else -> this\n    }\n\n    @SemanticUiCssMarker val red: SemanticIcon get() = this + \"red\"\n\n    @SemanticUiCssMarker val orange: SemanticIcon get() = this + \"orange\"\n\n    @SemanticUiCssMarker val yellow: SemanticIcon get() = this + \"yellow\"\n\n    @SemanticUiCssMarker val olive: SemanticIcon get() = this + \"olive\"\n\n    @SemanticUiCssMarker val green: SemanticIcon get() = this + \"green\"\n\n    @SemanticUiCssMarker val teal: SemanticIcon get() = this + \"teal\"\n\n    @SemanticUiCssMarker val blue: SemanticIcon get() = this + \"blue\"\n\n    @SemanticUiCssMarker val violet: SemanticIcon get() = this + \"violet\"\n\n    @SemanticUiCssMarker val purple: SemanticIcon get() = this + \"purple\"\n\n    @SemanticUiCssMarker val pink: SemanticIcon get() = this + \"pink\"\n\n    @SemanticUiCssMarker val brown: SemanticIcon get() = this + \"brown\"\n\n    @SemanticUiCssMarker val grey: SemanticIcon get() = this + \"grey\"\n\n    @SemanticUiCssMarker val black: SemanticIcon get() = this + \"black\"\n\n    @SemanticUiCssMarker val white: SemanticIcon get() = this + \"white\"\n\n    // Behaviour ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    @SemanticUiCssMarker val bordered: SemanticIcon get() = this + \"bordered\"\n\n    @SemanticUiCssMarker val circular: SemanticIcon get() = this + \"circular\"\n\n    @SemanticUiCssMarker val clockwise: SemanticIcon get() = this + \"clockwise\"\n\n    @SemanticUiCssMarker val counterclockwise: SemanticIcon get() = this + \"counterclockwise\"\n\n    @SemanticUiCssMarker val colored: SemanticIcon get() = this + \"colored\"\n\n    @SemanticUiCssMarker val corner: SemanticIcon get() = this + \"corner\"\n\n    @SemanticUiCssMarker val disabled: SemanticIcon get() = this + \"disabled\"\n\n    @SemanticUiCssMarker val fitted: SemanticIcon get() = this + \"fitted\"\n\n    @SemanticUiCssMarker val flipped: SemanticIcon get() = this + \"flipped\"\n\n    @SemanticUiCssMarker val horizontally: SemanticIcon get() = this + \"horizontally\"\n\n    @SemanticUiCssMarker val link: SemanticIcon get() = this + \"link\"\n\n    @SemanticUiCssMarker val loading: SemanticIcon get() = this + \"loading\"\n\n    @SemanticUiCssMarker val inverted: SemanticIcon get() = this + \"inverted\"\n\n    @SemanticUiCssMarker val rotated: SemanticIcon get() = this + \"rotated\"\n\n    @SemanticUiCssMarker val vertically: SemanticIcon get() = this + \"vertically\"\n\n    // Position & Alignment ////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    @SemanticUiCssMarker val aligned: SemanticIcon get() = this + \"aligned\"\n\n    @SemanticUiCssMarker val bottom: SemanticIcon get() = this + \"bottom\"\n\n    @SemanticUiCssMarker val floated: SemanticIcon get() = this + \"floated\"\n\n    @SemanticUiCssMarker val left: SemanticIcon get() = this + \"right\"\n\n    @SemanticUiCssMarker val middle: SemanticIcon get() = this + \"middle\"\n\n    @SemanticUiCssMarker val right: SemanticIcon get() = this + \"right\"\n\n    @SemanticUiCssMarker val top: SemanticIcon get() = this + \"top\"\n\n    // Size ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    @SemanticUiCssMarker val mini: SemanticIcon get() = this + \"mini\"\n\n    @SemanticUiCssMarker val tiny: SemanticIcon get() = this + \"tiny\"\n\n    @SemanticUiCssMarker val small: SemanticIcon get() = this + \"small\"\n\n    @SemanticUiCssMarker val medium: SemanticIcon get() = this\n\n    @SemanticUiCssMarker val large: SemanticIcon get() = this + \"large\"\n\n    @SemanticUiCssMarker val big: SemanticIcon get() = this + \"big\"\n\n    @SemanticUiCssMarker val huge: SemanticIcon get() = this + \"huge\"\n\n    @SemanticUiCssMarker val massive: SemanticIcon get() = this + \"massive\"\n\n    // /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Custom //////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    @SemanticIconMarker inline val dont: SemanticIcon get() = this + \"dont\"\n\n    @SemanticIconMarker inline val delete: SemanticIcon get() = this + \"delete\"\n\n    // /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Icons ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    @SemanticIconMarker inline val _500px: SemanticIcon\n        get() = this + \"500px\"\n\n    @SemanticIconMarker inline val accessible: SemanticIcon\n        get() = this + \"accessible\"\n\n    @SemanticIconMarker inline val accusoft: SemanticIcon\n        get() = this + \"accusoft\"\n\n    @SemanticIconMarker inline val acquisitions_incorporated: SemanticIcon\n        get() = this + \"acquisitions incorporated\"\n\n    @SemanticIconMarker inline val ad: SemanticIcon\n        get() = this + \"ad\"\n\n    @SemanticIconMarker inline val address_book: SemanticIcon\n        get() = this + \"address book\"\n\n    @SemanticIconMarker inline val address_book_outline: SemanticIcon\n        get() = this + \"address book outline\"\n\n    @SemanticIconMarker inline val address_card: SemanticIcon\n        get() = this + \"address card\"\n\n    @SemanticIconMarker inline val address_card_outline: SemanticIcon\n        get() = this + \"address card outline\"\n\n    @SemanticIconMarker inline val adjust: SemanticIcon\n        get() = this + \"adjust\"\n\n    @SemanticIconMarker inline val adn: SemanticIcon\n        get() = this + \"adn\"\n\n    @SemanticIconMarker inline val adobe: SemanticIcon\n        get() = this + \"adobe\"\n\n    @SemanticIconMarker inline val adversal: SemanticIcon\n        get() = this + \"adversal\"\n\n    @SemanticIconMarker inline val affiliatetheme: SemanticIcon\n        get() = this + \"affiliatetheme\"\n\n    @SemanticIconMarker inline val air_freshener: SemanticIcon\n        get() = this + \"air freshener\"\n\n    @SemanticIconMarker inline val airbnb: SemanticIcon\n        get() = this + \"airbnb\"\n\n    @SemanticIconMarker inline val algolia: SemanticIcon\n        get() = this + \"algolia\"\n\n    @SemanticIconMarker inline val align_center: SemanticIcon\n        get() = this + \"align center\"\n\n    @SemanticIconMarker inline val align_justify: SemanticIcon\n        get() = this + \"align justify\"\n\n    @SemanticIconMarker inline val align_left: SemanticIcon\n        get() = this + \"align left\"\n\n    @SemanticIconMarker inline val align_right: SemanticIcon\n        get() = this + \"align right\"\n\n    @SemanticIconMarker inline val alipay: SemanticIcon\n        get() = this + \"alipay\"\n\n    @SemanticIconMarker inline val allergies: SemanticIcon\n        get() = this + \"allergies\"\n\n    @SemanticIconMarker inline val alternate_github: SemanticIcon\n        get() = this + \"alternate github\"\n\n    @SemanticIconMarker inline val amazon: SemanticIcon\n        get() = this + \"amazon\"\n\n    @SemanticIconMarker inline val amazon_pay: SemanticIcon\n        get() = this + \"amazon pay\"\n\n    @SemanticIconMarker inline val ambulance: SemanticIcon\n        get() = this + \"ambulance\"\n\n    @SemanticIconMarker inline val american_sign_language_interpreting: SemanticIcon\n        get() = this + \"american sign language interpreting\"\n\n    @SemanticIconMarker inline val amilia: SemanticIcon\n        get() = this + \"amilia\"\n\n    @SemanticIconMarker inline val anchor: SemanticIcon\n        get() = this + \"anchor\"\n\n    @SemanticIconMarker inline val android: SemanticIcon\n        get() = this + \"android\"\n\n    @SemanticIconMarker inline val angellist: SemanticIcon\n        get() = this + \"angellist\"\n\n    @SemanticIconMarker inline val angle_double_down: SemanticIcon\n        get() = this + \"angle double down\"\n\n    @SemanticIconMarker inline val angle_double_left: SemanticIcon\n        get() = this + \"angle double left\"\n\n    @SemanticIconMarker inline val angle_double_right: SemanticIcon\n        get() = this + \"angle double right\"\n\n    @SemanticIconMarker inline val angle_double_up: SemanticIcon\n        get() = this + \"angle double up\"\n\n    @SemanticIconMarker inline val angle_down: SemanticIcon\n        get() = this + \"angle down\"\n\n    @SemanticIconMarker inline val angle_left: SemanticIcon\n        get() = this + \"angle left\"\n\n    @SemanticIconMarker inline val angle_right: SemanticIcon\n        get() = this + \"angle right\"\n\n    @SemanticIconMarker inline val angle_up: SemanticIcon\n        get() = this + \"angle up\"\n\n    @SemanticIconMarker inline val angry: SemanticIcon\n        get() = this + \"angry\"\n\n    @SemanticIconMarker inline val angry_outline: SemanticIcon\n        get() = this + \"angry outline\"\n\n    @SemanticIconMarker inline val angrycreative: SemanticIcon\n        get() = this + \"angrycreative\"\n\n    @SemanticIconMarker inline val angular: SemanticIcon\n        get() = this + \"angular\"\n\n    @SemanticIconMarker inline val ankh: SemanticIcon\n        get() = this + \"ankh\"\n\n    @SemanticIconMarker inline val app_store: SemanticIcon\n        get() = this + \"app store\"\n\n    @SemanticIconMarker inline val app_store_ios: SemanticIcon\n        get() = this + \"app store ios\"\n\n    @SemanticIconMarker inline val apper: SemanticIcon\n        get() = this + \"apper\"\n\n    @SemanticIconMarker inline val apple: SemanticIcon\n        get() = this + \"apple\"\n\n    @SemanticIconMarker inline val apple_pay: SemanticIcon\n        get() = this + \"apple pay\"\n\n    @SemanticIconMarker inline val archive: SemanticIcon\n        get() = this + \"archive\"\n\n    @SemanticIconMarker inline val archway: SemanticIcon\n        get() = this + \"archway\"\n\n    @SemanticIconMarker inline val arrow_alternate_circle_down: SemanticIcon\n        get() = this + \"arrow alternate circle down\"\n\n    @SemanticIconMarker inline val arrow_alternate_circle_down_outline: SemanticIcon\n        get() = this + \"arrow alternate circle down outline\"\n\n    @SemanticIconMarker inline val arrow_alternate_circle_left: SemanticIcon\n        get() = this + \"arrow alternate circle left\"\n\n    @SemanticIconMarker inline val arrow_alternate_circle_left_outline: SemanticIcon\n        get() = this + \"arrow alternate circle left outline\"\n\n    @SemanticIconMarker inline val arrow_alternate_circle_right: SemanticIcon\n        get() = this + \"arrow alternate circle right\"\n\n    @SemanticIconMarker inline val arrow_alternate_circle_right_outline: SemanticIcon\n        get() = this + \"arrow alternate circle right outline\"\n\n    @SemanticIconMarker inline val arrow_alternate_circle_up: SemanticIcon\n        get() = this + \"arrow alternate circle up\"\n\n    @SemanticIconMarker inline val arrow_alternate_circle_up_outline: SemanticIcon\n        get() = this + \"arrow alternate circle up outline\"\n\n    @SemanticIconMarker inline val arrow_circle_down: SemanticIcon\n        get() = this + \"arrow circle down\"\n\n    @SemanticIconMarker inline val arrow_circle_left: SemanticIcon\n        get() = this + \"arrow circle left\"\n\n    @SemanticIconMarker inline val arrow_circle_right: SemanticIcon\n        get() = this + \"arrow circle right\"\n\n    @SemanticIconMarker inline val arrow_circle_up: SemanticIcon\n        get() = this + \"arrow circle up\"\n\n    @SemanticIconMarker inline val arrow_down: SemanticIcon\n        get() = this + \"arrow down\"\n\n    @SemanticIconMarker inline val arrow_left: SemanticIcon\n        get() = this + \"arrow left\"\n\n    @SemanticIconMarker inline val arrow_right: SemanticIcon\n        get() = this + \"arrow right\"\n\n    @SemanticIconMarker inline val arrow_up: SemanticIcon\n        get() = this + \"arrow up\"\n\n    @SemanticIconMarker inline val arrows_alternate: SemanticIcon\n        get() = this + \"arrows alternate\"\n\n    @SemanticIconMarker inline val arrows_alternate_horizontal: SemanticIcon\n        get() = this + \"arrows alternate horizontal\"\n\n    @SemanticIconMarker inline val arrows_alternate_vertical: SemanticIcon\n        get() = this + \"arrows alternate vertical\"\n\n    @SemanticIconMarker inline val artstation: SemanticIcon\n        get() = this + \"artstation\"\n\n    @SemanticIconMarker inline val assistive_listening_systems: SemanticIcon\n        get() = this + \"assistive listening systems\"\n\n    @SemanticIconMarker inline val asterisk: SemanticIcon\n        get() = this + \"asterisk\"\n\n    @SemanticIconMarker inline val asterisk_loading: SemanticIcon\n        get() = this + \"asterisk loading\"\n\n    @SemanticIconMarker inline val asymmetrik: SemanticIcon\n        get() = this + \"asymmetrik\"\n\n    @SemanticIconMarker inline val at: SemanticIcon\n        get() = this + \"at\"\n\n    @SemanticIconMarker inline val atlas: SemanticIcon\n        get() = this + \"atlas\"\n\n    @SemanticIconMarker inline val atlassian: SemanticIcon\n        get() = this + \"atlassian\"\n\n    @SemanticIconMarker inline val atom: SemanticIcon\n        get() = this + \"atom\"\n\n    @SemanticIconMarker inline val audible: SemanticIcon\n        get() = this + \"audible\"\n\n    @SemanticIconMarker inline val audio_description: SemanticIcon\n        get() = this + \"audio description\"\n\n    @SemanticIconMarker inline val autoprefixer: SemanticIcon\n        get() = this + \"autoprefixer\"\n\n    @SemanticIconMarker inline val avianex: SemanticIcon\n        get() = this + \"avianex\"\n\n    @SemanticIconMarker inline val aviato: SemanticIcon\n        get() = this + \"aviato\"\n\n    @SemanticIconMarker inline val award: SemanticIcon\n        get() = this + \"award\"\n\n    @SemanticIconMarker inline val aws: SemanticIcon\n        get() = this + \"aws\"\n\n    @SemanticIconMarker inline val baby: SemanticIcon\n        get() = this + \"baby\"\n\n    @SemanticIconMarker inline val baby_carriage: SemanticIcon\n        get() = this + \"baby carriage\"\n\n    @SemanticIconMarker inline val backward: SemanticIcon\n        get() = this + \"backward\"\n\n    @SemanticIconMarker inline val bacon: SemanticIcon\n        get() = this + \"bacon\"\n\n    @SemanticIconMarker inline val bahai: SemanticIcon\n        get() = this + \"bahai\"\n\n    @SemanticIconMarker inline val balance_scale: SemanticIcon\n        get() = this + \"balance scale\"\n\n    @SemanticIconMarker inline val balance_scale_left: SemanticIcon\n        get() = this + \"balance scale left\"\n\n    @SemanticIconMarker inline val balance_scale_right: SemanticIcon\n        get() = this + \"balance scale right\"\n\n    @SemanticIconMarker inline val ban: SemanticIcon\n        get() = this + \"ban\"\n\n    @SemanticIconMarker inline val band_aid: SemanticIcon\n        get() = this + \"band aid\"\n\n    @SemanticIconMarker inline val bandcamp: SemanticIcon\n        get() = this + \"bandcamp\"\n\n    @SemanticIconMarker inline val barcode: SemanticIcon\n        get() = this + \"barcode\"\n\n    @SemanticIconMarker inline val bars: SemanticIcon\n        get() = this + \"bars\"\n\n    @SemanticIconMarker inline val baseball_ball: SemanticIcon\n        get() = this + \"baseball ball\"\n\n    @SemanticIconMarker inline val basketball_ball: SemanticIcon\n        get() = this + \"basketball ball\"\n\n    @SemanticIconMarker inline val bath: SemanticIcon\n        get() = this + \"bath\"\n\n    @SemanticIconMarker inline val battery_empty: SemanticIcon\n        get() = this + \"battery empty\"\n\n    @SemanticIconMarker inline val battery_full: SemanticIcon\n        get() = this + \"battery full\"\n\n    @SemanticIconMarker inline val battery_half: SemanticIcon\n        get() = this + \"battery half\"\n\n    @SemanticIconMarker inline val battery_quarter: SemanticIcon\n        get() = this + \"battery quarter\"\n\n    @SemanticIconMarker inline val battery_three_quarters: SemanticIcon\n        get() = this + \"battery three quarters\"\n\n    @SemanticIconMarker inline val battle_net: SemanticIcon\n        get() = this + \"battle net\"\n\n    @SemanticIconMarker inline val bed: SemanticIcon\n        get() = this + \"bed\"\n\n    @SemanticIconMarker inline val beer: SemanticIcon\n        get() = this + \"beer\"\n\n    @SemanticIconMarker inline val behance: SemanticIcon\n        get() = this + \"behance\"\n\n    @SemanticIconMarker inline val behance_square: SemanticIcon\n        get() = this + \"behance square\"\n\n    @SemanticIconMarker inline val bell: SemanticIcon\n        get() = this + \"bell\"\n\n    @SemanticIconMarker inline val bell_outline: SemanticIcon\n        get() = this + \"bell outline\"\n\n    @SemanticIconMarker inline val bell_slash: SemanticIcon\n        get() = this + \"bell slash\"\n\n    @SemanticIconMarker inline val bell_slash_outline: SemanticIcon\n        get() = this + \"bell slash outline\"\n\n    @SemanticIconMarker inline val bezier_curve: SemanticIcon\n        get() = this + \"bezier curve\"\n\n    @SemanticIconMarker inline val bible: SemanticIcon\n        get() = this + \"bible\"\n\n    @SemanticIconMarker inline val bicycle: SemanticIcon\n        get() = this + \"bicycle\"\n\n    @SemanticIconMarker inline val big_circle_outline: SemanticIcon\n        get() = this + \"big circle outline\"\n\n    @SemanticIconMarker inline val big_home: SemanticIcon\n        get() = this + \"big home\"\n\n    @SemanticIconMarker inline val big_red_dont: SemanticIcon\n        get() = this + \"big red dont\"\n\n    @SemanticIconMarker inline val biking: SemanticIcon\n        get() = this + \"biking\"\n\n    @SemanticIconMarker inline val bimobject: SemanticIcon\n        get() = this + \"bimobject\"\n\n    @SemanticIconMarker inline val binoculars: SemanticIcon\n        get() = this + \"binoculars\"\n\n    @SemanticIconMarker inline val biohazard: SemanticIcon\n        get() = this + \"biohazard\"\n\n    @SemanticIconMarker inline val birthday_cake: SemanticIcon\n        get() = this + \"birthday cake\"\n\n    @SemanticIconMarker inline val bitbucket: SemanticIcon\n        get() = this + \"bitbucket\"\n\n    @SemanticIconMarker inline val bitcoin: SemanticIcon\n        get() = this + \"bitcoin\"\n\n    @SemanticIconMarker inline val bity: SemanticIcon\n        get() = this + \"bity\"\n\n    @SemanticIconMarker inline val black_tie: SemanticIcon\n        get() = this + \"black tie\"\n\n    @SemanticIconMarker inline val black_user: SemanticIcon\n        get() = this + \"black user\"\n\n    @SemanticIconMarker inline val black_users: SemanticIcon\n        get() = this + \"black users\"\n\n    @SemanticIconMarker inline val blackberry: SemanticIcon\n        get() = this + \"blackberry\"\n\n    @SemanticIconMarker inline val blender: SemanticIcon\n        get() = this + \"blender\"\n\n    @SemanticIconMarker inline val blind: SemanticIcon\n        get() = this + \"blind\"\n\n    @SemanticIconMarker inline val blog: SemanticIcon\n        get() = this + \"blog\"\n\n    @SemanticIconMarker inline val blogger: SemanticIcon\n        get() = this + \"blogger\"\n\n    @SemanticIconMarker inline val blogger_b: SemanticIcon\n        get() = this + \"blogger b\"\n\n    @SemanticIconMarker inline val blue_users: SemanticIcon\n        get() = this + \"blue users\"\n\n    @SemanticIconMarker inline val bluetooth: SemanticIcon\n        get() = this + \"bluetooth\"\n\n    @SemanticIconMarker inline val bluetooth_b: SemanticIcon\n        get() = this + \"bluetooth b\"\n\n    @SemanticIconMarker inline val bold: SemanticIcon\n        get() = this + \"bold\"\n\n    @SemanticIconMarker inline val bolt: SemanticIcon\n        get() = this + \"bolt\"\n\n    @SemanticIconMarker inline val bomb: SemanticIcon\n        get() = this + \"bomb\"\n\n    @SemanticIconMarker inline val bone: SemanticIcon\n        get() = this + \"bone\"\n\n    @SemanticIconMarker inline val bong: SemanticIcon\n        get() = this + \"bong\"\n\n    @SemanticIconMarker inline val book: SemanticIcon\n        get() = this + \"book\"\n\n    @SemanticIconMarker inline val book_dead: SemanticIcon\n        get() = this + \"book dead\"\n\n    @SemanticIconMarker inline val book_medical: SemanticIcon\n        get() = this + \"book medical\"\n\n    @SemanticIconMarker inline val book_open: SemanticIcon\n        get() = this + \"book open\"\n\n    @SemanticIconMarker inline val book_reader: SemanticIcon\n        get() = this + \"book reader\"\n\n    @SemanticIconMarker inline val bookmark: SemanticIcon\n        get() = this + \"bookmark\"\n\n    @SemanticIconMarker inline val bookmark_outline: SemanticIcon\n        get() = this + \"bookmark outline\"\n\n    @SemanticIconMarker inline val bootstrap: SemanticIcon\n        get() = this + \"bootstrap\"\n\n    @SemanticIconMarker inline val border_all: SemanticIcon\n        get() = this + \"border all\"\n\n    @SemanticIconMarker inline val border_none: SemanticIcon\n        get() = this + \"border none\"\n\n    @SemanticIconMarker inline val border_style: SemanticIcon\n        get() = this + \"border style\"\n\n    @SemanticIconMarker inline val bordered_colored_blue_users: SemanticIcon\n        get() = this + \"bordered colored blue users\"\n\n    @SemanticIconMarker inline val bordered_colored_green_users: SemanticIcon\n        get() = this + \"bordered colored green users\"\n\n    @SemanticIconMarker inline val bordered_colored_red_users: SemanticIcon\n        get() = this + \"bordered colored red users\"\n\n    @SemanticIconMarker inline val bordered_inverted_black_users: SemanticIcon\n        get() = this + \"bordered inverted black users\"\n\n    @SemanticIconMarker inline val bordered_inverted_teal_users: SemanticIcon\n        get() = this + \"bordered inverted teal users\"\n\n    @SemanticIconMarker inline val bordered_teal_users: SemanticIcon\n        get() = this + \"bordered teal users\"\n\n    @SemanticIconMarker inline val bordered_users: SemanticIcon\n        get() = this + \"bordered users\"\n\n    @SemanticIconMarker inline val bottom_left_corner_add: SemanticIcon\n        get() = this + \"bottom left corner add\"\n\n    @SemanticIconMarker inline val bottom_right_corner_add: SemanticIcon\n        get() = this + \"bottom right corner add\"\n\n    @SemanticIconMarker inline val bowling_ball: SemanticIcon\n        get() = this + \"bowling ball\"\n\n    @SemanticIconMarker inline val box: SemanticIcon\n        get() = this + \"box\"\n\n    @SemanticIconMarker inline val box_open: SemanticIcon\n        get() = this + \"box open\"\n\n    @SemanticIconMarker inline val box_tissue: SemanticIcon\n        get() = this + \"box tissue\"\n\n    @SemanticIconMarker inline val boxes: SemanticIcon\n        get() = this + \"boxes\"\n\n    @SemanticIconMarker inline val braille: SemanticIcon\n        get() = this + \"braille\"\n\n    @SemanticIconMarker inline val brain: SemanticIcon\n        get() = this + \"brain\"\n\n    @SemanticIconMarker inline val bread_slice: SemanticIcon\n        get() = this + \"bread slice\"\n\n    @SemanticIconMarker inline val briefcase: SemanticIcon\n        get() = this + \"briefcase\"\n\n    @SemanticIconMarker inline val briefcase_medical: SemanticIcon\n        get() = this + \"briefcase medical\"\n\n    @SemanticIconMarker inline val broadcast_tower: SemanticIcon\n        get() = this + \"broadcast tower\"\n\n    @SemanticIconMarker inline val broom: SemanticIcon\n        get() = this + \"broom\"\n\n    @SemanticIconMarker inline val brown_users: SemanticIcon\n        get() = this + \"brown users\"\n\n    @SemanticIconMarker inline val brush: SemanticIcon\n        get() = this + \"brush\"\n\n    @SemanticIconMarker inline val btc: SemanticIcon\n        get() = this + \"btc\"\n\n    @SemanticIconMarker inline val buffer: SemanticIcon\n        get() = this + \"buffer\"\n\n    @SemanticIconMarker inline val bug: SemanticIcon\n        get() = this + \"bug\"\n\n    @SemanticIconMarker inline val building: SemanticIcon\n        get() = this + \"building\"\n\n    @SemanticIconMarker inline val building_outline: SemanticIcon\n        get() = this + \"building outline\"\n\n    @SemanticIconMarker inline val bullhorn: SemanticIcon\n        get() = this + \"bullhorn\"\n\n    @SemanticIconMarker inline val bullseye: SemanticIcon\n        get() = this + \"bullseye\"\n\n    @SemanticIconMarker inline val burn: SemanticIcon\n        get() = this + \"burn\"\n\n    @SemanticIconMarker inline val buromobelexperte: SemanticIcon\n        get() = this + \"buromobelexperte\"\n\n    @SemanticIconMarker inline val bus: SemanticIcon\n        get() = this + \"bus\"\n\n    @SemanticIconMarker inline val bus_alternate: SemanticIcon\n        get() = this + \"bus alternate\"\n\n    @SemanticIconMarker inline val business_time: SemanticIcon\n        get() = this + \"business time\"\n\n    @SemanticIconMarker inline val buy_n_large: SemanticIcon\n        get() = this + \"buy n large\"\n\n    @SemanticIconMarker inline val buysellads: SemanticIcon\n        get() = this + \"buysellads\"\n\n    @SemanticIconMarker inline val calculator: SemanticIcon\n        get() = this + \"calculator\"\n\n    @SemanticIconMarker inline val calendar: SemanticIcon\n        get() = this + \"calendar\"\n\n    @SemanticIconMarker inline val calendar_alternate: SemanticIcon\n        get() = this + \"calendar alternate\"\n\n    @SemanticIconMarker inline val calendar_alternate_outline: SemanticIcon\n        get() = this + \"calendar alternate outline\"\n\n    @SemanticIconMarker inline val calendar_check: SemanticIcon\n        get() = this + \"calendar check\"\n\n    @SemanticIconMarker inline val calendar_check_outline: SemanticIcon\n        get() = this + \"calendar check outline\"\n\n    @SemanticIconMarker inline val calendar_day: SemanticIcon\n        get() = this + \"calendar day\"\n\n    @SemanticIconMarker inline val calendar_minus: SemanticIcon\n        get() = this + \"calendar minus\"\n\n    @SemanticIconMarker inline val calendar_minus_outline: SemanticIcon\n        get() = this + \"calendar minus outline\"\n\n    @SemanticIconMarker inline val calendar_outline: SemanticIcon\n        get() = this + \"calendar outline\"\n\n    @SemanticIconMarker inline val calendar_plus: SemanticIcon\n        get() = this + \"calendar plus\"\n\n    @SemanticIconMarker inline val calendar_plus_outline: SemanticIcon\n        get() = this + \"calendar plus outline\"\n\n    @SemanticIconMarker inline val calendar_times: SemanticIcon\n        get() = this + \"calendar times\"\n\n    @SemanticIconMarker inline val calendar_times_outline: SemanticIcon\n        get() = this + \"calendar times outline\"\n\n    @SemanticIconMarker inline val calendar_week: SemanticIcon\n        get() = this + \"calendar week\"\n\n    @SemanticIconMarker inline val camera: SemanticIcon\n        get() = this + \"camera\"\n\n    @SemanticIconMarker inline val camera_retro: SemanticIcon\n        get() = this + \"camera retro\"\n\n    @SemanticIconMarker inline val campground: SemanticIcon\n        get() = this + \"campground\"\n\n    @SemanticIconMarker inline val canadian_maple_leaf: SemanticIcon\n        get() = this + \"canadian maple leaf\"\n\n    @SemanticIconMarker inline val candy_cane: SemanticIcon\n        get() = this + \"candy cane\"\n\n    @SemanticIconMarker inline val cannabis: SemanticIcon\n        get() = this + \"cannabis\"\n\n    @SemanticIconMarker inline val capsules: SemanticIcon\n        get() = this + \"capsules\"\n\n    @SemanticIconMarker inline val car: SemanticIcon\n        get() = this + \"car\"\n\n    @SemanticIconMarker inline val car_alternate: SemanticIcon\n        get() = this + \"car alternate\"\n\n    @SemanticIconMarker inline val car_battery: SemanticIcon\n        get() = this + \"car battery\"\n\n    @SemanticIconMarker inline val car_crash: SemanticIcon\n        get() = this + \"car crash\"\n\n    @SemanticIconMarker inline val car_side: SemanticIcon\n        get() = this + \"car side\"\n\n    @SemanticIconMarker inline val caravan: SemanticIcon\n        get() = this + \"caravan\"\n\n    @SemanticIconMarker inline val caret_down: SemanticIcon\n        get() = this + \"caret down\"\n\n    @SemanticIconMarker inline val caret_left: SemanticIcon\n        get() = this + \"caret left\"\n\n    @SemanticIconMarker inline val caret_right: SemanticIcon\n        get() = this + \"caret right\"\n\n    @SemanticIconMarker inline val caret_square_down: SemanticIcon\n        get() = this + \"caret square down\"\n\n    @SemanticIconMarker inline val caret_square_down_outline: SemanticIcon\n        get() = this + \"caret square down outline\"\n\n    @SemanticIconMarker inline val caret_square_left: SemanticIcon\n        get() = this + \"caret square left\"\n\n    @SemanticIconMarker inline val caret_square_left_outline: SemanticIcon\n        get() = this + \"caret square left outline\"\n\n    @SemanticIconMarker inline val caret_square_right: SemanticIcon\n        get() = this + \"caret square right\"\n\n    @SemanticIconMarker inline val caret_square_right_outline: SemanticIcon\n        get() = this + \"caret square right outline\"\n\n    @SemanticIconMarker inline val caret_square_up: SemanticIcon\n        get() = this + \"caret square up\"\n\n    @SemanticIconMarker inline val caret_square_up_outline: SemanticIcon\n        get() = this + \"caret square up outline\"\n\n    @SemanticIconMarker inline val caret_up: SemanticIcon\n        get() = this + \"caret up\"\n\n    @SemanticIconMarker inline val carrot: SemanticIcon\n        get() = this + \"carrot\"\n\n    @SemanticIconMarker inline val cart_arrow_down: SemanticIcon\n        get() = this + \"cart arrow down\"\n\n    @SemanticIconMarker inline val cart_plus: SemanticIcon\n        get() = this + \"cart plus\"\n\n    @SemanticIconMarker inline val cash_register: SemanticIcon\n        get() = this + \"cash register\"\n\n    @SemanticIconMarker inline val cat: SemanticIcon\n        get() = this + \"cat\"\n\n    @SemanticIconMarker inline val cc_amazon_pay: SemanticIcon\n        get() = this + \"cc amazon pay\"\n\n    @SemanticIconMarker inline val cc_amex: SemanticIcon\n        get() = this + \"cc amex\"\n\n    @SemanticIconMarker inline val cc_apple_pay: SemanticIcon\n        get() = this + \"cc apple pay\"\n\n    @SemanticIconMarker inline val cc_diners_club: SemanticIcon\n        get() = this + \"cc diners club\"\n\n    @SemanticIconMarker inline val cc_discover: SemanticIcon\n        get() = this + \"cc discover\"\n\n    @SemanticIconMarker inline val cc_jcb: SemanticIcon\n        get() = this + \"cc jcb\"\n\n    @SemanticIconMarker inline val cc_mastercard: SemanticIcon\n        get() = this + \"cc mastercard\"\n\n    @SemanticIconMarker inline val cc_paypal: SemanticIcon\n        get() = this + \"cc paypal\"\n\n    @SemanticIconMarker inline val cc_stripe: SemanticIcon\n        get() = this + \"cc stripe\"\n\n    @SemanticIconMarker inline val cc_visa: SemanticIcon\n        get() = this + \"cc visa\"\n\n    @SemanticIconMarker inline val centercode: SemanticIcon\n        get() = this + \"centercode\"\n\n    @SemanticIconMarker inline val centos: SemanticIcon\n        get() = this + \"centos\"\n\n    @SemanticIconMarker inline val certificate: SemanticIcon\n        get() = this + \"certificate\"\n\n    @SemanticIconMarker inline val chair: SemanticIcon\n        get() = this + \"chair\"\n\n    @SemanticIconMarker inline val chalkboard: SemanticIcon\n        get() = this + \"chalkboard\"\n\n    @SemanticIconMarker inline val chalkboard_teacher: SemanticIcon\n        get() = this + \"chalkboard teacher\"\n\n    @SemanticIconMarker inline val charging_station: SemanticIcon\n        get() = this + \"charging station\"\n\n    @SemanticIconMarker inline val chart_area: SemanticIcon\n        get() = this + \"chart area\"\n\n    @SemanticIconMarker inline val chart_bar: SemanticIcon\n        get() = this + \"chart bar\"\n\n    @SemanticIconMarker inline val chart_bar_outline: SemanticIcon\n        get() = this + \"chart bar outline\"\n\n    @SemanticIconMarker inline val chart_line: SemanticIcon\n        get() = this + \"chart line\"\n\n    @SemanticIconMarker inline val chart_pie: SemanticIcon\n        get() = this + \"chart pie\"\n\n    @SemanticIconMarker inline val check: SemanticIcon\n        get() = this + \"check\"\n\n    @SemanticIconMarker inline val check_circle: SemanticIcon\n        get() = this + \"check circle\"\n\n    @SemanticIconMarker inline val check_circle_outline: SemanticIcon\n        get() = this + \"check circle outline\"\n\n    @SemanticIconMarker inline val check_double: SemanticIcon\n        get() = this + \"check double\"\n\n    @SemanticIconMarker inline val check_square: SemanticIcon\n        get() = this + \"check square\"\n\n    @SemanticIconMarker inline val check_square_outline: SemanticIcon\n        get() = this + \"check square outline\"\n\n    @SemanticIconMarker inline val cheese: SemanticIcon\n        get() = this + \"cheese\"\n\n    @SemanticIconMarker inline val chess: SemanticIcon\n        get() = this + \"chess\"\n\n    @SemanticIconMarker inline val chess_bishop: SemanticIcon\n        get() = this + \"chess bishop\"\n\n    @SemanticIconMarker inline val chess_board: SemanticIcon\n        get() = this + \"chess board\"\n\n    @SemanticIconMarker inline val chess_king: SemanticIcon\n        get() = this + \"chess king\"\n\n    @SemanticIconMarker inline val chess_knight: SemanticIcon\n        get() = this + \"chess knight\"\n\n    @SemanticIconMarker inline val chess_pawn: SemanticIcon\n        get() = this + \"chess pawn\"\n\n    @SemanticIconMarker inline val chess_queen: SemanticIcon\n        get() = this + \"chess queen\"\n\n    @SemanticIconMarker inline val chess_rook: SemanticIcon\n        get() = this + \"chess rook\"\n\n    @SemanticIconMarker inline val chevron_circle_down: SemanticIcon\n        get() = this + \"chevron circle down\"\n\n    @SemanticIconMarker inline val chevron_circle_left: SemanticIcon\n        get() = this + \"chevron circle left\"\n\n    @SemanticIconMarker inline val chevron_circle_right: SemanticIcon\n        get() = this + \"chevron circle right\"\n\n    @SemanticIconMarker inline val chevron_circle_up: SemanticIcon\n        get() = this + \"chevron circle up\"\n\n    @SemanticIconMarker inline val chevron_down: SemanticIcon\n        get() = this + \"chevron down\"\n\n    @SemanticIconMarker inline val chevron_left: SemanticIcon\n        get() = this + \"chevron left\"\n\n    @SemanticIconMarker inline val chevron_right: SemanticIcon\n        get() = this + \"chevron right\"\n\n    @SemanticIconMarker inline val chevron_up: SemanticIcon\n        get() = this + \"chevron up\"\n\n    @SemanticIconMarker inline val child: SemanticIcon\n        get() = this + \"child\"\n\n    @SemanticIconMarker inline val chrome: SemanticIcon\n        get() = this + \"chrome\"\n\n    @SemanticIconMarker inline val chromecast: SemanticIcon\n        get() = this + \"chromecast\"\n\n    @SemanticIconMarker inline val church: SemanticIcon\n        get() = this + \"church\"\n\n    @SemanticIconMarker inline val circle: SemanticIcon\n        get() = this + \"circle\"\n\n    @SemanticIconMarker inline val circle_notch: SemanticIcon\n        get() = this + \"circle notch\"\n\n    @SemanticIconMarker inline val circle_outline: SemanticIcon\n        get() = this + \"circle outline\"\n\n    @SemanticIconMarker inline val circular_colored_blue_users: SemanticIcon\n        get() = this + \"circular colored blue users\"\n\n    @SemanticIconMarker inline val circular_colored_green_users: SemanticIcon\n        get() = this + \"circular colored green users\"\n\n    @SemanticIconMarker inline val circular_colored_red_users: SemanticIcon\n        get() = this + \"circular colored red users\"\n\n    @SemanticIconMarker inline val circular_inverted_teal_users: SemanticIcon\n        get() = this + \"circular inverted teal users\"\n\n    @SemanticIconMarker inline val circular_inverted_users: SemanticIcon\n        get() = this + \"circular inverted users\"\n\n    @SemanticIconMarker inline val circular_teal_users: SemanticIcon\n        get() = this + \"circular teal users\"\n\n    @SemanticIconMarker inline val circular_users: SemanticIcon\n        get() = this + \"circular users\"\n\n    @SemanticIconMarker inline val city: SemanticIcon\n        get() = this + \"city\"\n\n    @SemanticIconMarker inline val clinic_medical: SemanticIcon\n        get() = this + \"clinic medical\"\n\n    @SemanticIconMarker inline val clipboard: SemanticIcon\n        get() = this + \"clipboard\"\n\n    @SemanticIconMarker inline val clipboard_check: SemanticIcon\n        get() = this + \"clipboard check\"\n\n    @SemanticIconMarker inline val clipboard_list: SemanticIcon\n        get() = this + \"clipboard list\"\n\n    @SemanticIconMarker inline val clipboard_outline: SemanticIcon\n        get() = this + \"clipboard outline\"\n\n    @SemanticIconMarker inline val clock: SemanticIcon\n        get() = this + \"clock\"\n\n    @SemanticIconMarker inline val clock_outline: SemanticIcon\n        get() = this + \"clock outline\"\n\n    @SemanticIconMarker inline val clockwise_rotated_cloud: SemanticIcon\n        get() = this + \"clockwise rotated cloud\"\n\n    @SemanticIconMarker inline val clone: SemanticIcon\n        get() = this + \"clone\"\n\n    @SemanticIconMarker inline val clone_outline: SemanticIcon\n        get() = this + \"clone outline\"\n\n    @SemanticIconMarker inline val close: SemanticIcon\n        get() = this + \"close\"\n\n    @SemanticIconMarker inline val close_link: SemanticIcon\n        get() = this + \"close link\"\n\n    @SemanticIconMarker inline val closed_captioning: SemanticIcon\n        get() = this + \"closed captioning\"\n\n    @SemanticIconMarker inline val closed_captioning_outline: SemanticIcon\n        get() = this + \"closed captioning outline\"\n\n    @SemanticIconMarker inline val cloud: SemanticIcon\n        get() = this + \"cloud\"\n\n    @SemanticIconMarker inline val cloud_download_alternate: SemanticIcon\n        get() = this + \"cloud download alternate\"\n\n    @SemanticIconMarker inline val cloud_meatball: SemanticIcon\n        get() = this + \"cloud meatball\"\n\n    @SemanticIconMarker inline val cloud_moon: SemanticIcon\n        get() = this + \"cloud moon\"\n\n    @SemanticIconMarker inline val cloud_moon_rain: SemanticIcon\n        get() = this + \"cloud moon rain\"\n\n    @SemanticIconMarker inline val cloud_rain: SemanticIcon\n        get() = this + \"cloud rain\"\n\n    @SemanticIconMarker inline val cloud_showers_heavy: SemanticIcon\n        get() = this + \"cloud showers heavy\"\n\n    @SemanticIconMarker inline val cloud_sun: SemanticIcon\n        get() = this + \"cloud sun\"\n\n    @SemanticIconMarker inline val cloud_sun_rain: SemanticIcon\n        get() = this + \"cloud sun rain\"\n\n    @SemanticIconMarker inline val cloud_upload_alternate: SemanticIcon\n        get() = this + \"cloud upload alternate\"\n\n    @SemanticIconMarker inline val cloudscale: SemanticIcon\n        get() = this + \"cloudscale\"\n\n    @SemanticIconMarker inline val cloudsmith: SemanticIcon\n        get() = this + \"cloudsmith\"\n\n    @SemanticIconMarker inline val cloudversify: SemanticIcon\n        get() = this + \"cloudversify\"\n\n    @SemanticIconMarker inline val cocktail: SemanticIcon\n        get() = this + \"cocktail\"\n\n    @SemanticIconMarker inline val code: SemanticIcon\n        get() = this + \"code\"\n\n    @SemanticIconMarker inline val code_branch: SemanticIcon\n        get() = this + \"code branch\"\n\n    @SemanticIconMarker inline val codepen: SemanticIcon\n        get() = this + \"codepen\"\n\n    @SemanticIconMarker inline val codiepie: SemanticIcon\n        get() = this + \"codiepie\"\n\n    @SemanticIconMarker inline val coffee: SemanticIcon\n        get() = this + \"coffee\"\n\n    @SemanticIconMarker inline val cog: SemanticIcon\n        get() = this + \"cog\"\n\n    @SemanticIconMarker inline val cogs: SemanticIcon\n        get() = this + \"cogs\"\n\n    @SemanticIconMarker inline val coins: SemanticIcon\n        get() = this + \"coins\"\n\n    @SemanticIconMarker inline val columns: SemanticIcon\n        get() = this + \"columns\"\n\n    @SemanticIconMarker inline val comment: SemanticIcon\n        get() = this + \"comment\"\n\n    @SemanticIconMarker inline val comment_alternate: SemanticIcon\n        get() = this + \"comment alternate\"\n\n    @SemanticIconMarker inline val comment_alternate_outline: SemanticIcon\n        get() = this + \"comment alternate outline\"\n\n    @SemanticIconMarker inline val comment_dollar: SemanticIcon\n        get() = this + \"comment dollar\"\n\n    @SemanticIconMarker inline val comment_dots: SemanticIcon\n        get() = this + \"comment dots\"\n\n    @SemanticIconMarker inline val comment_dots_outline: SemanticIcon\n        get() = this + \"comment dots outline\"\n\n    @SemanticIconMarker inline val comment_medical: SemanticIcon\n        get() = this + \"comment medical\"\n\n    @SemanticIconMarker inline val comment_outline: SemanticIcon\n        get() = this + \"comment outline\"\n\n    @SemanticIconMarker inline val comment_slash: SemanticIcon\n        get() = this + \"comment slash\"\n\n    @SemanticIconMarker inline val comments: SemanticIcon\n        get() = this + \"comments\"\n\n    @SemanticIconMarker inline val comments_dollar: SemanticIcon\n        get() = this + \"comments dollar\"\n\n    @SemanticIconMarker inline val comments_outline: SemanticIcon\n        get() = this + \"comments outline\"\n\n    @SemanticIconMarker inline val compact_disc: SemanticIcon\n        get() = this + \"compact disc\"\n\n    @SemanticIconMarker inline val compass: SemanticIcon\n        get() = this + \"compass\"\n\n    @SemanticIconMarker inline val compass_outline: SemanticIcon\n        get() = this + \"compass outline\"\n\n    @SemanticIconMarker inline val compress: SemanticIcon\n        get() = this + \"compress\"\n\n    @SemanticIconMarker inline val compress_alternate: SemanticIcon\n        get() = this + \"compress alternate\"\n\n    @SemanticIconMarker inline val compress_arrows_alternate: SemanticIcon\n        get() = this + \"compress arrows alternate\"\n\n    @SemanticIconMarker inline val concierge_bell: SemanticIcon\n        get() = this + \"concierge bell\"\n\n    @SemanticIconMarker inline val confluence: SemanticIcon\n        get() = this + \"confluence\"\n\n    @SemanticIconMarker inline val connectdevelop: SemanticIcon\n        get() = this + \"connectdevelop\"\n\n    @SemanticIconMarker inline val contao: SemanticIcon\n        get() = this + \"contao\"\n\n    @SemanticIconMarker inline val content: SemanticIcon\n        get() = this + \"content\"\n\n    @SemanticIconMarker inline val cookie: SemanticIcon\n        get() = this + \"cookie\"\n\n    @SemanticIconMarker inline val cookie_bite: SemanticIcon\n        get() = this + \"cookie bite\"\n\n    @SemanticIconMarker inline val copy: SemanticIcon\n        get() = this + \"copy\"\n\n    @SemanticIconMarker inline val copy_outline: SemanticIcon\n        get() = this + \"copy outline\"\n\n    @SemanticIconMarker inline val copyright: SemanticIcon\n        get() = this + \"copyright\"\n\n    @SemanticIconMarker inline val copyright_outline: SemanticIcon\n        get() = this + \"copyright outline\"\n\n    @SemanticIconMarker inline val corner_add: SemanticIcon\n        get() = this + \"corner add\"\n\n    @SemanticIconMarker inline val cotton_bureau: SemanticIcon\n        get() = this + \"cotton bureau\"\n\n    @SemanticIconMarker inline val couch: SemanticIcon\n        get() = this + \"couch\"\n\n    @SemanticIconMarker inline val counterclockwise_rotated_cloud: SemanticIcon\n        get() = this + \"counterclockwise rotated cloud\"\n\n    @SemanticIconMarker inline val cpanel: SemanticIcon\n        get() = this + \"cpanel\"\n\n    @SemanticIconMarker inline val creative_commons: SemanticIcon\n        get() = this + \"creative commons\"\n\n    @SemanticIconMarker inline val creative_commons_by: SemanticIcon\n        get() = this + \"creative commons by\"\n\n    @SemanticIconMarker inline val creative_commons_nc: SemanticIcon\n        get() = this + \"creative commons nc\"\n\n    @SemanticIconMarker inline val creative_commons_nc_eu: SemanticIcon\n        get() = this + \"creative commons nc eu\"\n\n    @SemanticIconMarker inline val creative_commons_nc_jp: SemanticIcon\n        get() = this + \"creative commons nc jp\"\n\n    @SemanticIconMarker inline val creative_commons_nd: SemanticIcon\n        get() = this + \"creative commons nd\"\n\n    @SemanticIconMarker inline val creative_commons_pd: SemanticIcon\n        get() = this + \"creative commons pd\"\n\n    @SemanticIconMarker inline val creative_commons_pd_alternate: SemanticIcon\n        get() = this + \"creative commons pd alternate\"\n\n    @SemanticIconMarker inline val creative_commons_remix: SemanticIcon\n        get() = this + \"creative commons remix\"\n\n    @SemanticIconMarker inline val creative_commons_sa: SemanticIcon\n        get() = this + \"creative commons sa\"\n\n    @SemanticIconMarker inline val creative_commons_sampling: SemanticIcon\n        get() = this + \"creative commons sampling\"\n\n    @SemanticIconMarker inline val creative_commons_sampling_plus: SemanticIcon\n        get() = this + \"creative commons sampling plus\"\n\n    @SemanticIconMarker inline val creative_commons_share: SemanticIcon\n        get() = this + \"creative commons share\"\n\n    @SemanticIconMarker inline val creative_commons_zero: SemanticIcon\n        get() = this + \"creative commons zero\"\n\n    @SemanticIconMarker inline val credit_card: SemanticIcon\n        get() = this + \"credit card\"\n\n    @SemanticIconMarker inline val credit_card_outline: SemanticIcon\n        get() = this + \"credit card outline\"\n\n    @SemanticIconMarker inline val critical_role: SemanticIcon\n        get() = this + \"critical role\"\n\n    @SemanticIconMarker inline val crop: SemanticIcon\n        get() = this + \"crop\"\n\n    @SemanticIconMarker inline val crop_alternate: SemanticIcon\n        get() = this + \"crop alternate\"\n\n    @SemanticIconMarker inline val cross: SemanticIcon\n        get() = this + \"cross\"\n\n    @SemanticIconMarker inline val crosshairs: SemanticIcon\n        get() = this + \"crosshairs\"\n\n    @SemanticIconMarker inline val crow: SemanticIcon\n        get() = this + \"crow\"\n\n    @SemanticIconMarker inline val crutch: SemanticIcon\n        get() = this + \"crutch\"\n\n    @SemanticIconMarker inline val css3: SemanticIcon\n        get() = this + \"css3\"\n\n    @SemanticIconMarker inline val css3_alternate: SemanticIcon\n        get() = this + \"css3 alternate\"\n\n    @SemanticIconMarker inline val cube: SemanticIcon\n        get() = this + \"cube\"\n\n    @SemanticIconMarker inline val cubes: SemanticIcon\n        get() = this + \"cubes\"\n\n    @SemanticIconMarker inline val cut: SemanticIcon\n        get() = this + \"cut\"\n\n    @SemanticIconMarker inline val cuttlefish: SemanticIcon\n        get() = this + \"cuttlefish\"\n\n    @SemanticIconMarker inline val d_and_d: SemanticIcon\n        get() = this + \"d and d\"\n\n    @SemanticIconMarker inline val d_and_d_beyond: SemanticIcon\n        get() = this + \"d and d beyond\"\n\n    @SemanticIconMarker inline val dailymotion: SemanticIcon\n        get() = this + \"dailymotion\"\n\n    @SemanticIconMarker inline val dashcube: SemanticIcon\n        get() = this + \"dashcube\"\n\n    @SemanticIconMarker inline val database: SemanticIcon\n        get() = this + \"database\"\n\n    @SemanticIconMarker inline val deaf: SemanticIcon\n        get() = this + \"deaf\"\n\n    @SemanticIconMarker inline val delicious: SemanticIcon\n        get() = this + \"delicious\"\n\n    @SemanticIconMarker inline val democrat: SemanticIcon\n        get() = this + \"democrat\"\n\n    @SemanticIconMarker inline val deploydog: SemanticIcon\n        get() = this + \"deploydog\"\n\n    @SemanticIconMarker inline val deskpro: SemanticIcon\n        get() = this + \"deskpro\"\n\n    @SemanticIconMarker inline val desktop: SemanticIcon\n        get() = this + \"desktop\"\n\n    @SemanticIconMarker inline val dev: SemanticIcon\n        get() = this + \"dev\"\n\n    @SemanticIconMarker inline val deviantart: SemanticIcon\n        get() = this + \"deviantart\"\n\n    @SemanticIconMarker inline val dharmachakra: SemanticIcon\n        get() = this + \"dharmachakra\"\n\n    @SemanticIconMarker inline val dhl: SemanticIcon\n        get() = this + \"dhl\"\n\n    @SemanticIconMarker inline val diagnoses: SemanticIcon\n        get() = this + \"diagnoses\"\n\n    @SemanticIconMarker inline val diaspora: SemanticIcon\n        get() = this + \"diaspora\"\n\n    @SemanticIconMarker inline val dice: SemanticIcon\n        get() = this + \"dice\"\n\n    @SemanticIconMarker inline val dice_d20: SemanticIcon\n        get() = this + \"dice d20\"\n\n    @SemanticIconMarker inline val dice_d6: SemanticIcon\n        get() = this + \"dice d6\"\n\n    @SemanticIconMarker inline val dice_five: SemanticIcon\n        get() = this + \"dice five\"\n\n    @SemanticIconMarker inline val dice_four: SemanticIcon\n        get() = this + \"dice four\"\n\n    @SemanticIconMarker inline val dice_one: SemanticIcon\n        get() = this + \"dice one\"\n\n    @SemanticIconMarker inline val dice_six: SemanticIcon\n        get() = this + \"dice six\"\n\n    @SemanticIconMarker inline val dice_three: SemanticIcon\n        get() = this + \"dice three\"\n\n    @SemanticIconMarker inline val dice_two: SemanticIcon\n        get() = this + \"dice two\"\n\n    @SemanticIconMarker inline val digg: SemanticIcon\n        get() = this + \"digg\"\n\n    @SemanticIconMarker inline val digital_ocean: SemanticIcon\n        get() = this + \"digital ocean\"\n\n    @SemanticIconMarker inline val digital_tachograph: SemanticIcon\n        get() = this + \"digital tachograph\"\n\n    @SemanticIconMarker inline val directions: SemanticIcon\n        get() = this + \"directions\"\n\n    @SemanticIconMarker inline val disabled_users: SemanticIcon\n        get() = this + \"disabled users\"\n\n    @SemanticIconMarker inline val discord: SemanticIcon\n        get() = this + \"discord\"\n\n    @SemanticIconMarker inline val discourse: SemanticIcon\n        get() = this + \"discourse\"\n\n    @SemanticIconMarker inline val disease: SemanticIcon\n        get() = this + \"disease\"\n\n    @SemanticIconMarker inline val divide: SemanticIcon\n        get() = this + \"divide\"\n\n    @SemanticIconMarker inline val dizzy: SemanticIcon\n        get() = this + \"dizzy\"\n\n    @SemanticIconMarker inline val dizzy_outline: SemanticIcon\n        get() = this + \"dizzy outline\"\n\n    @SemanticIconMarker inline val dna: SemanticIcon\n        get() = this + \"dna\"\n\n    @SemanticIconMarker inline val dochub: SemanticIcon\n        get() = this + \"dochub\"\n\n    @SemanticIconMarker inline val docker: SemanticIcon\n        get() = this + \"docker\"\n\n    @SemanticIconMarker inline val dog: SemanticIcon\n        get() = this + \"dog\"\n\n    @SemanticIconMarker inline val dollar_sign: SemanticIcon\n        get() = this + \"dollar sign\"\n\n    @SemanticIconMarker inline val dolly: SemanticIcon\n        get() = this + \"dolly\"\n\n    @SemanticIconMarker inline val dolly_flatbed: SemanticIcon\n        get() = this + \"dolly flatbed\"\n\n    @SemanticIconMarker inline val donate: SemanticIcon\n        get() = this + \"donate\"\n\n    @SemanticIconMarker inline val door_closed: SemanticIcon\n        get() = this + \"door closed\"\n\n    @SemanticIconMarker inline val door_open: SemanticIcon\n        get() = this + \"door open\"\n\n    @SemanticIconMarker inline val dot_circle: SemanticIcon\n        get() = this + \"dot circle\"\n\n    @SemanticIconMarker inline val dot_circle_outline: SemanticIcon\n        get() = this + \"dot circle outline\"\n\n    @SemanticIconMarker inline val dove: SemanticIcon\n        get() = this + \"dove\"\n\n    @SemanticIconMarker inline val download: SemanticIcon\n        get() = this + \"download\"\n\n    @SemanticIconMarker inline val draft2digital: SemanticIcon\n        get() = this + \"draft2digital\"\n\n    @SemanticIconMarker inline val drafting_compass: SemanticIcon\n        get() = this + \"drafting compass\"\n\n    @SemanticIconMarker inline val dragon: SemanticIcon\n        get() = this + \"dragon\"\n\n    @SemanticIconMarker inline val draw_polygon: SemanticIcon\n        get() = this + \"draw polygon\"\n\n    @SemanticIconMarker inline val dribbble: SemanticIcon\n        get() = this + \"dribbble\"\n\n    @SemanticIconMarker inline val dribbble_square: SemanticIcon\n        get() = this + \"dribbble square\"\n\n    @SemanticIconMarker inline val dropbox: SemanticIcon\n        get() = this + \"dropbox\"\n\n    @SemanticIconMarker inline val dropdown: SemanticIcon\n        get() = this + \"dropdown\"\n\n    @SemanticIconMarker inline val drum: SemanticIcon\n        get() = this + \"drum\"\n\n    @SemanticIconMarker inline val drum_steelpan: SemanticIcon\n        get() = this + \"drum steelpan\"\n\n    @SemanticIconMarker inline val drumstick_bite: SemanticIcon\n        get() = this + \"drumstick bite\"\n\n    @SemanticIconMarker inline val drupal: SemanticIcon\n        get() = this + \"drupal\"\n\n    @SemanticIconMarker inline val dumbbell: SemanticIcon\n        get() = this + \"dumbbell\"\n\n    @SemanticIconMarker inline val dumpster: SemanticIcon\n        get() = this + \"dumpster\"\n\n    @SemanticIconMarker inline val dungeon: SemanticIcon\n        get() = this + \"dungeon\"\n\n    @SemanticIconMarker inline val dyalog: SemanticIcon\n        get() = this + \"dyalog\"\n\n    @SemanticIconMarker inline val earlybirds: SemanticIcon\n        get() = this + \"earlybirds\"\n\n    @SemanticIconMarker inline val ebay: SemanticIcon\n        get() = this + \"ebay\"\n\n    @SemanticIconMarker inline val edge: SemanticIcon\n        get() = this + \"edge\"\n\n    @SemanticIconMarker inline val edit: SemanticIcon\n        get() = this + \"edit\"\n\n    @SemanticIconMarker inline val edit_outline: SemanticIcon\n        get() = this + \"edit outline\"\n\n    @SemanticIconMarker inline val egg: SemanticIcon\n        get() = this + \"egg\"\n\n    @SemanticIconMarker inline val eject: SemanticIcon\n        get() = this + \"eject\"\n\n    @SemanticIconMarker inline val elementor: SemanticIcon\n        get() = this + \"elementor\"\n\n    @SemanticIconMarker inline val ellipsis_horizontal: SemanticIcon\n        get() = this + \"ellipsis horizontal\"\n\n    @SemanticIconMarker inline val ellipsis_vertical: SemanticIcon\n        get() = this + \"ellipsis vertical\"\n\n    @SemanticIconMarker inline val ello: SemanticIcon\n        get() = this + \"ello\"\n\n    @SemanticIconMarker inline val ember: SemanticIcon\n        get() = this + \"ember\"\n\n    @SemanticIconMarker inline val empire: SemanticIcon\n        get() = this + \"empire\"\n\n    @SemanticIconMarker inline val envelope: SemanticIcon\n        get() = this + \"envelope\"\n\n    @SemanticIconMarker inline val envelope_open: SemanticIcon\n        get() = this + \"envelope open\"\n\n    @SemanticIconMarker inline val envelope_open_outline: SemanticIcon\n        get() = this + \"envelope open outline\"\n\n    @SemanticIconMarker inline val envelope_open_text: SemanticIcon\n        get() = this + \"envelope open text\"\n\n    @SemanticIconMarker inline val envelope_outline: SemanticIcon\n        get() = this + \"envelope outline\"\n\n    @SemanticIconMarker inline val envelope_square: SemanticIcon\n        get() = this + \"envelope square\"\n\n    @SemanticIconMarker inline val envira: SemanticIcon\n        get() = this + \"envira\"\n\n    @SemanticIconMarker inline val equals_: SemanticIcon\n        get() = this + \"equals\"\n\n    @SemanticIconMarker inline val eraser: SemanticIcon\n        get() = this + \"eraser\"\n\n    @SemanticIconMarker inline val erlang: SemanticIcon\n        get() = this + \"erlang\"\n\n    @SemanticIconMarker inline val ethereum: SemanticIcon\n        get() = this + \"ethereum\"\n\n    @SemanticIconMarker inline val ethernet: SemanticIcon\n        get() = this + \"ethernet\"\n\n    @SemanticIconMarker inline val etsy: SemanticIcon\n        get() = this + \"etsy\"\n\n    @SemanticIconMarker inline val euro_sign: SemanticIcon\n        get() = this + \"euro sign\"\n\n    @SemanticIconMarker inline val evernote: SemanticIcon\n        get() = this + \"evernote\"\n\n    @SemanticIconMarker inline val exchange_alternate: SemanticIcon\n        get() = this + \"exchange alternate\"\n\n    @SemanticIconMarker inline val exclamation: SemanticIcon\n        get() = this + \"exclamation\"\n\n    @SemanticIconMarker inline val exclamation_circle: SemanticIcon\n        get() = this + \"exclamation circle\"\n\n    @SemanticIconMarker inline val exclamation_triangle: SemanticIcon\n        get() = this + \"exclamation triangle\"\n\n    @SemanticIconMarker inline val expand: SemanticIcon\n        get() = this + \"expand\"\n\n    @SemanticIconMarker inline val expand_alternate: SemanticIcon\n        get() = this + \"expand alternate\"\n\n    @SemanticIconMarker inline val expand_arrows_alternate: SemanticIcon\n        get() = this + \"expand arrows alternate\"\n\n    @SemanticIconMarker inline val expeditedssl: SemanticIcon\n        get() = this + \"expeditedssl\"\n\n    @SemanticIconMarker inline val external_alternate: SemanticIcon\n        get() = this + \"external alternate\"\n\n    @SemanticIconMarker inline val external_link_square_alternate: SemanticIcon\n        get() = this + \"external link square alternate\"\n\n    @SemanticIconMarker inline val eye: SemanticIcon\n        get() = this + \"eye\"\n\n    @SemanticIconMarker inline val eye_dropper: SemanticIcon\n        get() = this + \"eye dropper\"\n\n    @SemanticIconMarker inline val eye_outline: SemanticIcon\n        get() = this + \"eye outline\"\n\n    @SemanticIconMarker inline val eye_slash: SemanticIcon\n        get() = this + \"eye slash\"\n\n    @SemanticIconMarker inline val eye_slash_outline: SemanticIcon\n        get() = this + \"eye slash outline\"\n\n    @SemanticIconMarker inline val facebook: SemanticIcon\n        get() = this + \"facebook\"\n\n    @SemanticIconMarker inline val facebook_f: SemanticIcon\n        get() = this + \"facebook f\"\n\n    @SemanticIconMarker inline val facebook_messenger: SemanticIcon\n        get() = this + \"facebook messenger\"\n\n    @SemanticIconMarker inline val facebook_square: SemanticIcon\n        get() = this + \"facebook square\"\n\n    @SemanticIconMarker inline val fan: SemanticIcon\n        get() = this + \"fan\"\n\n    @SemanticIconMarker inline val fantasy_flight_games: SemanticIcon\n        get() = this + \"fantasy flight games\"\n\n    @SemanticIconMarker inline val fast_backward: SemanticIcon\n        get() = this + \"fast backward\"\n\n    @SemanticIconMarker inline val fast_forward: SemanticIcon\n        get() = this + \"fast forward\"\n\n    @SemanticIconMarker inline val faucet: SemanticIcon\n        get() = this + \"faucet\"\n\n    @SemanticIconMarker inline val fax: SemanticIcon\n        get() = this + \"fax\"\n\n    @SemanticIconMarker inline val feather: SemanticIcon\n        get() = this + \"feather\"\n\n    @SemanticIconMarker inline val feather_alternate: SemanticIcon\n        get() = this + \"feather alternate\"\n\n    @SemanticIconMarker inline val fedex: SemanticIcon\n        get() = this + \"fedex\"\n\n    @SemanticIconMarker inline val fedora: SemanticIcon\n        get() = this + \"fedora\"\n\n    @SemanticIconMarker inline val female: SemanticIcon\n        get() = this + \"female\"\n\n    @SemanticIconMarker inline val fighter_jet: SemanticIcon\n        get() = this + \"fighter jet\"\n\n    @SemanticIconMarker inline val figma: SemanticIcon\n        get() = this + \"figma\"\n\n    @SemanticIconMarker inline val file: SemanticIcon\n        get() = this + \"file\"\n\n    @SemanticIconMarker inline val file_alternate: SemanticIcon\n        get() = this + \"file alternate\"\n\n    @SemanticIconMarker inline val file_alternate_outline: SemanticIcon\n        get() = this + \"file alternate outline\"\n\n    @SemanticIconMarker inline val file_archive: SemanticIcon\n        get() = this + \"file archive\"\n\n    @SemanticIconMarker inline val file_archive_outline: SemanticIcon\n        get() = this + \"file archive outline\"\n\n    @SemanticIconMarker inline val file_audio: SemanticIcon\n        get() = this + \"file audio\"\n\n    @SemanticIconMarker inline val file_audio_outline: SemanticIcon\n        get() = this + \"file audio outline\"\n\n    @SemanticIconMarker inline val file_code: SemanticIcon\n        get() = this + \"file code\"\n\n    @SemanticIconMarker inline val file_code_outline: SemanticIcon\n        get() = this + \"file code outline\"\n\n    @SemanticIconMarker inline val file_contract: SemanticIcon\n        get() = this + \"file contract\"\n\n    @SemanticIconMarker inline val file_download: SemanticIcon\n        get() = this + \"file download\"\n\n    @SemanticIconMarker inline val file_excel: SemanticIcon\n        get() = this + \"file excel\"\n\n    @SemanticIconMarker inline val file_excel_outline: SemanticIcon\n        get() = this + \"file excel outline\"\n\n    @SemanticIconMarker inline val file_export: SemanticIcon\n        get() = this + \"file export\"\n\n    @SemanticIconMarker inline val file_image: SemanticIcon\n        get() = this + \"file image\"\n\n    @SemanticIconMarker inline val file_image_outline: SemanticIcon\n        get() = this + \"file image outline\"\n\n    @SemanticIconMarker inline val file_import: SemanticIcon\n        get() = this + \"file import\"\n\n    @SemanticIconMarker inline val file_invoice: SemanticIcon\n        get() = this + \"file invoice\"\n\n    @SemanticIconMarker inline val file_invoice_dollar: SemanticIcon\n        get() = this + \"file invoice dollar\"\n\n    @SemanticIconMarker inline val file_medical: SemanticIcon\n        get() = this + \"file medical\"\n\n    @SemanticIconMarker inline val file_medical_alternate: SemanticIcon\n        get() = this + \"file medical alternate\"\n\n    @SemanticIconMarker inline val file_outline: SemanticIcon\n        get() = this + \"file outline\"\n\n    @SemanticIconMarker inline val file_pdf: SemanticIcon\n        get() = this + \"file pdf\"\n\n    @SemanticIconMarker inline val file_pdf_outline: SemanticIcon\n        get() = this + \"file pdf outline\"\n\n    @SemanticIconMarker inline val file_powerpoint: SemanticIcon\n        get() = this + \"file powerpoint\"\n\n    @SemanticIconMarker inline val file_powerpoint_outline: SemanticIcon\n        get() = this + \"file powerpoint outline\"\n\n    @SemanticIconMarker inline val file_prescription: SemanticIcon\n        get() = this + \"file prescription\"\n\n    @SemanticIconMarker inline val file_signature: SemanticIcon\n        get() = this + \"file signature\"\n\n    @SemanticIconMarker inline val file_upload: SemanticIcon\n        get() = this + \"file upload\"\n\n    @SemanticIconMarker inline val file_video: SemanticIcon\n        get() = this + \"file video\"\n\n    @SemanticIconMarker inline val file_video_outline: SemanticIcon\n        get() = this + \"file video outline\"\n\n    @SemanticIconMarker inline val file_word: SemanticIcon\n        get() = this + \"file word\"\n\n    @SemanticIconMarker inline val file_word_outline: SemanticIcon\n        get() = this + \"file word outline\"\n\n    @SemanticIconMarker inline val fill: SemanticIcon\n        get() = this + \"fill\"\n\n    @SemanticIconMarker inline val fill_drip: SemanticIcon\n        get() = this + \"fill drip\"\n\n    @SemanticIconMarker inline val film: SemanticIcon\n        get() = this + \"film\"\n\n    @SemanticIconMarker inline val filter: SemanticIcon\n        get() = this + \"filter\"\n\n    @SemanticIconMarker inline val fingerprint: SemanticIcon\n        get() = this + \"fingerprint\"\n\n    @SemanticIconMarker inline val fire: SemanticIcon\n        get() = this + \"fire\"\n\n    @SemanticIconMarker inline val fire_alternate: SemanticIcon\n        get() = this + \"fire alternate\"\n\n    @SemanticIconMarker inline val fire_extinguisher: SemanticIcon\n        get() = this + \"fire extinguisher\"\n\n    @SemanticIconMarker inline val firefox: SemanticIcon\n        get() = this + \"firefox\"\n\n    @SemanticIconMarker inline val firefox_browser: SemanticIcon\n        get() = this + \"firefox browser\"\n\n    @SemanticIconMarker inline val first_aid: SemanticIcon\n        get() = this + \"first aid\"\n\n    @SemanticIconMarker inline val first_order: SemanticIcon\n        get() = this + \"first order\"\n\n    @SemanticIconMarker inline val first_order_alternate: SemanticIcon\n        get() = this + \"first order alternate\"\n\n    @SemanticIconMarker inline val firstdraft: SemanticIcon\n        get() = this + \"firstdraft\"\n\n    @SemanticIconMarker inline val fish: SemanticIcon\n        get() = this + \"fish\"\n\n    @SemanticIconMarker inline val fist_raised: SemanticIcon\n        get() = this + \"fist raised\"\n\n    @SemanticIconMarker inline val fitted_help: SemanticIcon\n        get() = this + \"fitted help\"\n\n    @SemanticIconMarker inline val fitted_small_linkify: SemanticIcon\n        get() = this + \"fitted small linkify\"\n\n    @SemanticIconMarker inline val flag: SemanticIcon\n        get() = this + \"flag\"\n\n    @SemanticIconMarker inline val flag_checkered: SemanticIcon\n        get() = this + \"flag checkered\"\n\n    @SemanticIconMarker inline val flag_outline: SemanticIcon\n        get() = this + \"flag outline\"\n\n    @SemanticIconMarker inline val flag_usa: SemanticIcon\n        get() = this + \"flag usa\"\n\n    @SemanticIconMarker inline val flask: SemanticIcon\n        get() = this + \"flask\"\n\n    @SemanticIconMarker inline val flickr: SemanticIcon\n        get() = this + \"flickr\"\n\n    @SemanticIconMarker inline val flipboard: SemanticIcon\n        get() = this + \"flipboard\"\n\n    @SemanticIconMarker inline val flushed: SemanticIcon\n        get() = this + \"flushed\"\n\n    @SemanticIconMarker inline val flushed_outline: SemanticIcon\n        get() = this + \"flushed outline\"\n\n    @SemanticIconMarker inline val fly: SemanticIcon\n        get() = this + \"fly\"\n\n    @SemanticIconMarker inline val folder: SemanticIcon\n        get() = this + \"folder\"\n\n    @SemanticIconMarker inline val folder_minus: SemanticIcon\n        get() = this + \"folder minus\"\n\n    @SemanticIconMarker inline val folder_open: SemanticIcon\n        get() = this + \"folder open\"\n\n    @SemanticIconMarker inline val folder_open_outline: SemanticIcon\n        get() = this + \"folder open outline\"\n\n    @SemanticIconMarker inline val folder_outline: SemanticIcon\n        get() = this + \"folder outline\"\n\n    @SemanticIconMarker inline val folder_plus: SemanticIcon\n        get() = this + \"folder plus\"\n\n    @SemanticIconMarker inline val font: SemanticIcon\n        get() = this + \"font\"\n\n    @SemanticIconMarker inline val font_awesome: SemanticIcon\n        get() = this + \"font awesome\"\n\n    @SemanticIconMarker inline val font_awesome_alternate: SemanticIcon\n        get() = this + \"font awesome alternate\"\n\n    @SemanticIconMarker inline val font_awesome_flag: SemanticIcon\n        get() = this + \"font awesome flag\"\n\n    @SemanticIconMarker inline val fonticons: SemanticIcon\n        get() = this + \"fonticons\"\n\n    @SemanticIconMarker inline val fonticons_fi: SemanticIcon\n        get() = this + \"fonticons fi\"\n\n    @SemanticIconMarker inline val football_ball: SemanticIcon\n        get() = this + \"football ball\"\n\n    @SemanticIconMarker inline val fort_awesome: SemanticIcon\n        get() = this + \"fort awesome\"\n\n    @SemanticIconMarker inline val fort_awesome_alternate: SemanticIcon\n        get() = this + \"fort awesome alternate\"\n\n    @SemanticIconMarker inline val forumbee: SemanticIcon\n        get() = this + \"forumbee\"\n\n    @SemanticIconMarker inline val forward: SemanticIcon\n        get() = this + \"forward\"\n\n    @SemanticIconMarker inline val foursquare: SemanticIcon\n        get() = this + \"foursquare\"\n\n    @SemanticIconMarker inline val free_code_camp: SemanticIcon\n        get() = this + \"free code camp\"\n\n    @SemanticIconMarker inline val freebsd: SemanticIcon\n        get() = this + \"freebsd\"\n\n    @SemanticIconMarker inline val frog: SemanticIcon\n        get() = this + \"frog\"\n\n    @SemanticIconMarker inline val frown: SemanticIcon\n        get() = this + \"frown\"\n\n    @SemanticIconMarker inline val frown_open: SemanticIcon\n        get() = this + \"frown open\"\n\n    @SemanticIconMarker inline val frown_open_outline: SemanticIcon\n        get() = this + \"frown open outline\"\n\n    @SemanticIconMarker inline val frown_outline: SemanticIcon\n        get() = this + \"frown outline\"\n\n    @SemanticIconMarker inline val fruitapple: SemanticIcon\n        get() = this + \"fruit-apple\"\n\n    @SemanticIconMarker inline val fulcrum: SemanticIcon\n        get() = this + \"fulcrum\"\n\n    @SemanticIconMarker inline val funnel_dollar: SemanticIcon\n        get() = this + \"funnel dollar\"\n\n    @SemanticIconMarker inline val futbol: SemanticIcon\n        get() = this + \"futbol\"\n\n    @SemanticIconMarker inline val futbol_outline: SemanticIcon\n        get() = this + \"futbol outline\"\n\n    @SemanticIconMarker inline val galactic_republic: SemanticIcon\n        get() = this + \"galactic republic\"\n\n    @SemanticIconMarker inline val galactic_senate: SemanticIcon\n        get() = this + \"galactic senate\"\n\n    @SemanticIconMarker inline val gamepad: SemanticIcon\n        get() = this + \"gamepad\"\n\n    @SemanticIconMarker inline val gas_pump: SemanticIcon\n        get() = this + \"gas pump\"\n\n    @SemanticIconMarker inline val gavel: SemanticIcon\n        get() = this + \"gavel\"\n\n    @SemanticIconMarker inline val gem: SemanticIcon\n        get() = this + \"gem\"\n\n    @SemanticIconMarker inline val gem_outline: SemanticIcon\n        get() = this + \"gem outline\"\n\n    @SemanticIconMarker inline val genderless: SemanticIcon\n        get() = this + \"genderless\"\n\n    @SemanticIconMarker inline val get_pocket: SemanticIcon\n        get() = this + \"get pocket\"\n\n    @SemanticIconMarker inline val gg: SemanticIcon\n        get() = this + \"gg\"\n\n    @SemanticIconMarker inline val gg_circle: SemanticIcon\n        get() = this + \"gg circle\"\n\n    @SemanticIconMarker inline val ghost: SemanticIcon\n        get() = this + \"ghost\"\n\n    @SemanticIconMarker inline val gift: SemanticIcon\n        get() = this + \"gift\"\n\n    @SemanticIconMarker inline val gifts: SemanticIcon\n        get() = this + \"gifts\"\n\n    @SemanticIconMarker inline val git: SemanticIcon\n        get() = this + \"git\"\n\n    @SemanticIconMarker inline val git_alternate: SemanticIcon\n        get() = this + \"git alternate\"\n\n    @SemanticIconMarker inline val git_square: SemanticIcon\n        get() = this + \"git square\"\n\n    @SemanticIconMarker inline val github: SemanticIcon\n        get() = this + \"github\"\n\n    @SemanticIconMarker inline val github_alternate: SemanticIcon\n        get() = this + \"github alternate\"\n\n    @SemanticIconMarker inline val github_square: SemanticIcon\n        get() = this + \"github square\"\n\n    @SemanticIconMarker inline val gitkraken: SemanticIcon\n        get() = this + \"gitkraken\"\n\n    @SemanticIconMarker inline val gitlab: SemanticIcon\n        get() = this + \"gitlab\"\n\n    @SemanticIconMarker inline val gitter: SemanticIcon\n        get() = this + \"gitter\"\n\n    @SemanticIconMarker inline val glass_cheers: SemanticIcon\n        get() = this + \"glass cheers\"\n\n    @SemanticIconMarker inline val glass_martini: SemanticIcon\n        get() = this + \"glass martini\"\n\n    @SemanticIconMarker inline val glass_martini_alternate: SemanticIcon\n        get() = this + \"glass martini alternate\"\n\n    @SemanticIconMarker inline val glass_whiskey: SemanticIcon\n        get() = this + \"glass whiskey\"\n\n    @SemanticIconMarker inline val glasses: SemanticIcon\n        get() = this + \"glasses\"\n\n    @SemanticIconMarker inline val glide: SemanticIcon\n        get() = this + \"glide\"\n\n    @SemanticIconMarker inline val glide_g: SemanticIcon\n        get() = this + \"glide g\"\n\n    @SemanticIconMarker inline val globe: SemanticIcon\n        get() = this + \"globe\"\n\n    @SemanticIconMarker inline val globe_africa: SemanticIcon\n        get() = this + \"globe africa\"\n\n    @SemanticIconMarker inline val globe_americas: SemanticIcon\n        get() = this + \"globe americas\"\n\n    @SemanticIconMarker inline val globe_asia: SemanticIcon\n        get() = this + \"globe asia\"\n\n    @SemanticIconMarker inline val globe_europe: SemanticIcon\n        get() = this + \"globe europe\"\n\n    @SemanticIconMarker inline val gofore: SemanticIcon\n        get() = this + \"gofore\"\n\n    @SemanticIconMarker inline val golf_ball: SemanticIcon\n        get() = this + \"golf ball\"\n\n    @SemanticIconMarker inline val goodreads: SemanticIcon\n        get() = this + \"goodreads\"\n\n    @SemanticIconMarker inline val goodreads_g: SemanticIcon\n        get() = this + \"goodreads g\"\n\n    @SemanticIconMarker inline val google: SemanticIcon\n        get() = this + \"google\"\n\n    @SemanticIconMarker inline val google_drive: SemanticIcon\n        get() = this + \"google drive\"\n\n    @SemanticIconMarker inline val google_play: SemanticIcon\n        get() = this + \"google play\"\n\n    @SemanticIconMarker inline val google_plus: SemanticIcon\n        get() = this + \"google plus\"\n\n    @SemanticIconMarker inline val google_plus_g: SemanticIcon\n        get() = this + \"google plus g\"\n\n    @SemanticIconMarker inline val google_plus_square: SemanticIcon\n        get() = this + \"google plus square\"\n\n    @SemanticIconMarker inline val google_wallet: SemanticIcon\n        get() = this + \"google wallet\"\n\n    @SemanticIconMarker inline val gopuram: SemanticIcon\n        get() = this + \"gopuram\"\n\n    @SemanticIconMarker inline val graduation_cap: SemanticIcon\n        get() = this + \"graduation cap\"\n\n    @SemanticIconMarker inline val gratipay: SemanticIcon\n        get() = this + \"gratipay\"\n\n    @SemanticIconMarker inline val grav: SemanticIcon\n        get() = this + \"grav\"\n\n    @SemanticIconMarker inline val greater_than: SemanticIcon\n        get() = this + \"greater than\"\n\n    @SemanticIconMarker inline val greater_than_equal: SemanticIcon\n        get() = this + \"greater than equal\"\n\n    @SemanticIconMarker inline val green_users: SemanticIcon\n        get() = this + \"green users\"\n\n    @SemanticIconMarker inline val grey_users: SemanticIcon\n        get() = this + \"grey users\"\n\n    @SemanticIconMarker inline val grimace: SemanticIcon\n        get() = this + \"grimace\"\n\n    @SemanticIconMarker inline val grimace_outline: SemanticIcon\n        get() = this + \"grimace outline\"\n\n    @SemanticIconMarker inline val grin: SemanticIcon\n        get() = this + \"grin\"\n\n    @SemanticIconMarker inline val grin_alternate: SemanticIcon\n        get() = this + \"grin alternate\"\n\n    @SemanticIconMarker inline val grin_alternate_outline: SemanticIcon\n        get() = this + \"grin alternate outline\"\n\n    @SemanticIconMarker inline val grin_beam: SemanticIcon\n        get() = this + \"grin beam\"\n\n    @SemanticIconMarker inline val grin_beam_outline: SemanticIcon\n        get() = this + \"grin beam outline\"\n\n    @SemanticIconMarker inline val grin_beam_sweat: SemanticIcon\n        get() = this + \"grin beam sweat\"\n\n    @SemanticIconMarker inline val grin_beam_sweat_outline: SemanticIcon\n        get() = this + \"grin beam sweat outline\"\n\n    @SemanticIconMarker inline val grin_hearts: SemanticIcon\n        get() = this + \"grin hearts\"\n\n    @SemanticIconMarker inline val grin_hearts_outline: SemanticIcon\n        get() = this + \"grin hearts outline\"\n\n    @SemanticIconMarker inline val grin_outline: SemanticIcon\n        get() = this + \"grin outline\"\n\n    @SemanticIconMarker inline val grin_squint: SemanticIcon\n        get() = this + \"grin squint\"\n\n    @SemanticIconMarker inline val grin_squint_outline: SemanticIcon\n        get() = this + \"grin squint outline\"\n\n    @SemanticIconMarker inline val grin_squint_tears: SemanticIcon\n        get() = this + \"grin squint tears\"\n\n    @SemanticIconMarker inline val grin_squint_tears_outline: SemanticIcon\n        get() = this + \"grin squint tears outline\"\n\n    @SemanticIconMarker inline val grin_stars: SemanticIcon\n        get() = this + \"grin stars\"\n\n    @SemanticIconMarker inline val grin_stars_outline: SemanticIcon\n        get() = this + \"grin stars outline\"\n\n    @SemanticIconMarker inline val grin_tears: SemanticIcon\n        get() = this + \"grin tears\"\n\n    @SemanticIconMarker inline val grin_tears_outline: SemanticIcon\n        get() = this + \"grin tears outline\"\n\n    @SemanticIconMarker inline val grin_tongue: SemanticIcon\n        get() = this + \"grin tongue\"\n\n    @SemanticIconMarker inline val grin_tongue_outline: SemanticIcon\n        get() = this + \"grin tongue outline\"\n\n    @SemanticIconMarker inline val grin_tongue_squint: SemanticIcon\n        get() = this + \"grin tongue squint\"\n\n    @SemanticIconMarker inline val grin_tongue_squint_outline: SemanticIcon\n        get() = this + \"grin tongue squint outline\"\n\n    @SemanticIconMarker inline val grin_tongue_wink: SemanticIcon\n        get() = this + \"grin tongue wink\"\n\n    @SemanticIconMarker inline val grin_tongue_wink_outline: SemanticIcon\n        get() = this + \"grin tongue wink outline\"\n\n    @SemanticIconMarker inline val grin_wink: SemanticIcon\n        get() = this + \"grin wink\"\n\n    @SemanticIconMarker inline val grin_wink_outline: SemanticIcon\n        get() = this + \"grin wink outline\"\n\n    @SemanticIconMarker inline val grip_horizontal: SemanticIcon\n        get() = this + \"grip horizontal\"\n\n    @SemanticIconMarker inline val grip_lines: SemanticIcon\n        get() = this + \"grip lines\"\n\n    @SemanticIconMarker inline val grip_lines_vertical: SemanticIcon\n        get() = this + \"grip lines vertical\"\n\n    @SemanticIconMarker inline val grip_vertical: SemanticIcon\n        get() = this + \"grip vertical\"\n\n    @SemanticIconMarker inline val gripfire: SemanticIcon\n        get() = this + \"gripfire\"\n\n    @SemanticIconMarker inline val grunt: SemanticIcon\n        get() = this + \"grunt\"\n\n    @SemanticIconMarker inline val guitar: SemanticIcon\n        get() = this + \"guitar\"\n\n    @SemanticIconMarker inline val gulp: SemanticIcon\n        get() = this + \"gulp\"\n\n    @SemanticIconMarker inline val h_square: SemanticIcon\n        get() = this + \"h square\"\n\n    @SemanticIconMarker inline val hacker_news: SemanticIcon\n        get() = this + \"hacker news\"\n\n    @SemanticIconMarker inline val hacker_news_square: SemanticIcon\n        get() = this + \"hacker news square\"\n\n    @SemanticIconMarker inline val hackerrank: SemanticIcon\n        get() = this + \"hackerrank\"\n\n    @SemanticIconMarker inline val hamburger: SemanticIcon\n        get() = this + \"hamburger\"\n\n    @SemanticIconMarker inline val hammer: SemanticIcon\n        get() = this + \"hammer\"\n\n    @SemanticIconMarker inline val hamsa: SemanticIcon\n        get() = this + \"hamsa\"\n\n    @SemanticIconMarker inline val hand_holding: SemanticIcon\n        get() = this + \"hand holding\"\n\n    @SemanticIconMarker inline val hand_holding_heart: SemanticIcon\n        get() = this + \"hand holding heart\"\n\n    @SemanticIconMarker inline val hand_holding_medical: SemanticIcon\n        get() = this + \"hand holding medical\"\n\n    @SemanticIconMarker inline val hand_holding_usd: SemanticIcon\n        get() = this + \"hand holding usd\"\n\n    @SemanticIconMarker inline val hand_holding_water: SemanticIcon\n        get() = this + \"hand holding water\"\n\n    @SemanticIconMarker inline val hand_lizard: SemanticIcon\n        get() = this + \"hand lizard\"\n\n    @SemanticIconMarker inline val hand_lizard_outline: SemanticIcon\n        get() = this + \"hand lizard outline\"\n\n    @SemanticIconMarker inline val hand_middle_finger: SemanticIcon\n        get() = this + \"hand middle finger\"\n\n    @SemanticIconMarker inline val hand_paper: SemanticIcon\n        get() = this + \"hand paper\"\n\n    @SemanticIconMarker inline val hand_paper_outline: SemanticIcon\n        get() = this + \"hand paper outline\"\n\n    @SemanticIconMarker inline val hand_peace: SemanticIcon\n        get() = this + \"hand peace\"\n\n    @SemanticIconMarker inline val hand_peace_outline: SemanticIcon\n        get() = this + \"hand peace outline\"\n\n    @SemanticIconMarker inline val hand_point_down: SemanticIcon\n        get() = this + \"hand point down\"\n\n    @SemanticIconMarker inline val hand_point_down_outline: SemanticIcon\n        get() = this + \"hand point down outline\"\n\n    @SemanticIconMarker inline val hand_point_left: SemanticIcon\n        get() = this + \"hand point left\"\n\n    @SemanticIconMarker inline val hand_point_left_outline: SemanticIcon\n        get() = this + \"hand point left outline\"\n\n    @SemanticIconMarker inline val hand_point_right: SemanticIcon\n        get() = this + \"hand point right\"\n\n    @SemanticIconMarker inline val hand_point_right_outline: SemanticIcon\n        get() = this + \"hand point right outline\"\n\n    @SemanticIconMarker inline val hand_point_up: SemanticIcon\n        get() = this + \"hand point up\"\n\n    @SemanticIconMarker inline val hand_point_up_outline: SemanticIcon\n        get() = this + \"hand point up outline\"\n\n    @SemanticIconMarker inline val hand_pointer: SemanticIcon\n        get() = this + \"hand pointer\"\n\n    @SemanticIconMarker inline val hand_pointer_outline: SemanticIcon\n        get() = this + \"hand pointer outline\"\n\n    @SemanticIconMarker inline val hand_rock: SemanticIcon\n        get() = this + \"hand rock\"\n\n    @SemanticIconMarker inline val hand_rock_outline: SemanticIcon\n        get() = this + \"hand rock outline\"\n\n    @SemanticIconMarker inline val hand_scissors: SemanticIcon\n        get() = this + \"hand scissors\"\n\n    @SemanticIconMarker inline val hand_scissors_outline: SemanticIcon\n        get() = this + \"hand scissors outline\"\n\n    @SemanticIconMarker inline val hand_sparkles: SemanticIcon\n        get() = this + \"hand sparkles\"\n\n    @SemanticIconMarker inline val hand_spock: SemanticIcon\n        get() = this + \"hand spock\"\n\n    @SemanticIconMarker inline val hand_spock_outline: SemanticIcon\n        get() = this + \"hand spock outline\"\n\n    @SemanticIconMarker inline val hands: SemanticIcon\n        get() = this + \"hands\"\n\n    @SemanticIconMarker inline val hands_helping: SemanticIcon\n        get() = this + \"hands helping\"\n\n    @SemanticIconMarker inline val hands_wash: SemanticIcon\n        get() = this + \"hands wash\"\n\n    @SemanticIconMarker inline val handshake: SemanticIcon\n        get() = this + \"handshake\"\n\n    @SemanticIconMarker inline val handshake_alternate_slash: SemanticIcon\n        get() = this + \"handshake alternate slash\"\n\n    @SemanticIconMarker inline val handshake_outline: SemanticIcon\n        get() = this + \"handshake outline\"\n\n    @SemanticIconMarker inline val handshake_slash: SemanticIcon\n        get() = this + \"handshake slash\"\n\n    @SemanticIconMarker inline val hanukiah: SemanticIcon\n        get() = this + \"hanukiah\"\n\n    @SemanticIconMarker inline val hard_hat: SemanticIcon\n        get() = this + \"hard hat\"\n\n    @SemanticIconMarker inline val hashtag: SemanticIcon\n        get() = this + \"hashtag\"\n\n    @SemanticIconMarker inline val hat_cowboy: SemanticIcon\n        get() = this + \"hat cowboy\"\n\n    @SemanticIconMarker inline val hat_cowboy_side: SemanticIcon\n        get() = this + \"hat cowboy side\"\n\n    @SemanticIconMarker inline val hat_wizard: SemanticIcon\n        get() = this + \"hat wizard\"\n\n    @SemanticIconMarker inline val hdd: SemanticIcon\n        get() = this + \"hdd\"\n\n    @SemanticIconMarker inline val hdd_outline: SemanticIcon\n        get() = this + \"hdd outline\"\n\n    @SemanticIconMarker inline val head_side_cough: SemanticIcon\n        get() = this + \"head side cough\"\n\n    @SemanticIconMarker inline val head_side_cough_slash: SemanticIcon\n        get() = this + \"head side cough slash\"\n\n    @SemanticIconMarker inline val head_side_mask: SemanticIcon\n        get() = this + \"head side mask\"\n\n    @SemanticIconMarker inline val head_side_virus: SemanticIcon\n        get() = this + \"head side virus\"\n\n    @SemanticIconMarker inline val heading: SemanticIcon\n        get() = this + \"heading\"\n\n    @SemanticIconMarker inline val headphones: SemanticIcon\n        get() = this + \"headphones\"\n\n    @SemanticIconMarker inline val headphones_alternate: SemanticIcon\n        get() = this + \"headphones alternate\"\n\n    @SemanticIconMarker inline val headset: SemanticIcon\n        get() = this + \"headset\"\n\n    @SemanticIconMarker inline val heart: SemanticIcon\n        get() = this + \"heart\"\n\n    @SemanticIconMarker inline val heart_broken: SemanticIcon\n        get() = this + \"heart broken\"\n\n    @SemanticIconMarker inline val heart_outline: SemanticIcon\n        get() = this + \"heart outline\"\n\n    @SemanticIconMarker inline val heartbeat: SemanticIcon\n        get() = this + \"heartbeat\"\n\n    @SemanticIconMarker inline val helicopter: SemanticIcon\n        get() = this + \"helicopter\"\n\n    @SemanticIconMarker inline val help_link: SemanticIcon\n        get() = this + \"help link\"\n\n    @SemanticIconMarker inline val highlighter: SemanticIcon\n        get() = this + \"highlighter\"\n\n    @SemanticIconMarker inline val hiking: SemanticIcon\n        get() = this + \"hiking\"\n\n    @SemanticIconMarker inline val hippo: SemanticIcon\n        get() = this + \"hippo\"\n\n    @SemanticIconMarker inline val hips: SemanticIcon\n        get() = this + \"hips\"\n\n    @SemanticIconMarker inline val hire_a_helper: SemanticIcon\n        get() = this + \"hire a helper\"\n\n    @SemanticIconMarker inline val history: SemanticIcon\n        get() = this + \"history\"\n\n    @SemanticIconMarker inline val hockey_puck: SemanticIcon\n        get() = this + \"hockey puck\"\n\n    @SemanticIconMarker inline val holly_berry: SemanticIcon\n        get() = this + \"holly berry\"\n\n    @SemanticIconMarker inline val home: SemanticIcon\n        get() = this + \"home\"\n\n    @SemanticIconMarker inline val hooli: SemanticIcon\n        get() = this + \"hooli\"\n\n    @SemanticIconMarker inline val horizontally_flipped_cloud: SemanticIcon\n        get() = this + \"horizontally flipped cloud\"\n\n    @SemanticIconMarker inline val hornbill: SemanticIcon\n        get() = this + \"hornbill\"\n\n    @SemanticIconMarker inline val horse: SemanticIcon\n        get() = this + \"horse\"\n\n    @SemanticIconMarker inline val horse_head: SemanticIcon\n        get() = this + \"horse head\"\n\n    @SemanticIconMarker inline val hospital: SemanticIcon\n        get() = this + \"hospital\"\n\n    @SemanticIconMarker inline val hospital_alternate: SemanticIcon\n        get() = this + \"hospital alternate\"\n\n    @SemanticIconMarker inline val hospital_outline: SemanticIcon\n        get() = this + \"hospital outline\"\n\n    @SemanticIconMarker inline val hospital_symbol: SemanticIcon\n        get() = this + \"hospital symbol\"\n\n    @SemanticIconMarker inline val hospital_user: SemanticIcon\n        get() = this + \"hospital user\"\n\n    @SemanticIconMarker inline val hot_tub: SemanticIcon\n        get() = this + \"hot tub\"\n\n    @SemanticIconMarker inline val hotdog: SemanticIcon\n        get() = this + \"hotdog\"\n\n    @SemanticIconMarker inline val hotel: SemanticIcon\n        get() = this + \"hotel\"\n\n    @SemanticIconMarker inline val hotjar: SemanticIcon\n        get() = this + \"hotjar\"\n\n    @SemanticIconMarker inline val hourglass: SemanticIcon\n        get() = this + \"hourglass\"\n\n    @SemanticIconMarker inline val hourglass_end: SemanticIcon\n        get() = this + \"hourglass end\"\n\n    @SemanticIconMarker inline val hourglass_half: SemanticIcon\n        get() = this + \"hourglass half\"\n\n    @SemanticIconMarker inline val hourglass_outline: SemanticIcon\n        get() = this + \"hourglass outline\"\n\n    @SemanticIconMarker inline val hourglass_start: SemanticIcon\n        get() = this + \"hourglass start\"\n\n    @SemanticIconMarker inline val house_damage: SemanticIcon\n        get() = this + \"house damage\"\n\n    @SemanticIconMarker inline val house_user: SemanticIcon\n        get() = this + \"house user\"\n\n    @SemanticIconMarker inline val houzz: SemanticIcon\n        get() = this + \"houzz\"\n\n    @SemanticIconMarker inline val hryvnia: SemanticIcon\n        get() = this + \"hryvnia\"\n\n    @SemanticIconMarker inline val html5: SemanticIcon\n        get() = this + \"html5\"\n\n    @SemanticIconMarker inline val hubspot: SemanticIcon\n        get() = this + \"hubspot\"\n\n    @SemanticIconMarker inline val huge_home: SemanticIcon\n        get() = this + \"huge home\"\n\n    @SemanticIconMarker inline val i_cursor: SemanticIcon\n        get() = this + \"i cursor\"\n\n    @SemanticIconMarker inline val ice_cream: SemanticIcon\n        get() = this + \"ice cream\"\n\n    @SemanticIconMarker inline val icicles: SemanticIcon\n        get() = this + \"icicles\"\n\n    @SemanticIconMarker inline val icons: SemanticIcon\n        get() = this + \"icons\"\n\n    @SemanticIconMarker inline val id_badge: SemanticIcon\n        get() = this + \"id badge\"\n\n    @SemanticIconMarker inline val id_badge_outline: SemanticIcon\n        get() = this + \"id badge outline\"\n\n    @SemanticIconMarker inline val id_card: SemanticIcon\n        get() = this + \"id card\"\n\n    @SemanticIconMarker inline val id_card_alternate: SemanticIcon\n        get() = this + \"id card alternate\"\n\n    @SemanticIconMarker inline val id_card_outline: SemanticIcon\n        get() = this + \"id card outline\"\n\n    @SemanticIconMarker inline val ideal: SemanticIcon\n        get() = this + \"ideal\"\n\n    @SemanticIconMarker inline val igloo: SemanticIcon\n        get() = this + \"igloo\"\n\n    @SemanticIconMarker inline val image: SemanticIcon\n        get() = this + \"image\"\n\n    @SemanticIconMarker inline val image_outline: SemanticIcon\n        get() = this + \"image outline\"\n\n    @SemanticIconMarker inline val images: SemanticIcon\n        get() = this + \"images\"\n\n    @SemanticIconMarker inline val images_outline: SemanticIcon\n        get() = this + \"images outline\"\n\n    @SemanticIconMarker inline val imdb: SemanticIcon\n        get() = this + \"imdb\"\n\n    @SemanticIconMarker inline val inbox: SemanticIcon\n        get() = this + \"inbox\"\n\n    @SemanticIconMarker inline val indent: SemanticIcon\n        get() = this + \"indent\"\n\n    @SemanticIconMarker inline val industry: SemanticIcon\n        get() = this + \"industry\"\n\n    @SemanticIconMarker inline val infinity: SemanticIcon\n        get() = this + \"infinity\"\n\n    @SemanticIconMarker inline val info: SemanticIcon\n        get() = this + \"info\"\n\n    @SemanticIconMarker inline val info_circle: SemanticIcon\n        get() = this + \"info circle\"\n\n    @SemanticIconMarker inline val instagram: SemanticIcon\n        get() = this + \"instagram\"\n\n    @SemanticIconMarker inline val instagram_square: SemanticIcon\n        get() = this + \"instagram square\"\n\n    @SemanticIconMarker inline val intercom: SemanticIcon\n        get() = this + \"intercom\"\n\n    @SemanticIconMarker inline val internet_explorer: SemanticIcon\n        get() = this + \"internet explorer\"\n\n    @SemanticIconMarker inline val inverted_blue_users: SemanticIcon\n        get() = this + \"inverted blue users\"\n\n    @SemanticIconMarker inline val inverted_brown_users: SemanticIcon\n        get() = this + \"inverted brown users\"\n\n    @SemanticIconMarker inline val inverted_corner_add: SemanticIcon\n        get() = this + \"inverted corner add\"\n\n    @SemanticIconMarker inline val inverted_green_users: SemanticIcon\n        get() = this + \"inverted green users\"\n\n    @SemanticIconMarker inline val inverted_grey_users: SemanticIcon\n        get() = this + \"inverted grey users\"\n\n    @SemanticIconMarker inline val inverted_olive_users: SemanticIcon\n        get() = this + \"inverted olive users\"\n\n    @SemanticIconMarker inline val inverted_orange_users: SemanticIcon\n        get() = this + \"inverted orange users\"\n\n    @SemanticIconMarker inline val inverted_pink_users: SemanticIcon\n        get() = this + \"inverted pink users\"\n\n    @SemanticIconMarker inline val inverted_primary_users: SemanticIcon\n        get() = this + \"inverted primary users\"\n\n    @SemanticIconMarker inline val inverted_purple_users: SemanticIcon\n        get() = this + \"inverted purple users\"\n\n    @SemanticIconMarker inline val inverted_red_users: SemanticIcon\n        get() = this + \"inverted red users\"\n\n    @SemanticIconMarker inline val inverted_secondary_users: SemanticIcon\n        get() = this + \"inverted secondary users\"\n\n    @SemanticIconMarker inline val inverted_teal_users: SemanticIcon\n        get() = this + \"inverted teal users\"\n\n    @SemanticIconMarker inline val inverted_users: SemanticIcon\n        get() = this + \"inverted users\"\n\n    @SemanticIconMarker inline val inverted_violet_users: SemanticIcon\n        get() = this + \"inverted violet users\"\n\n    @SemanticIconMarker inline val inverted_yellow_users: SemanticIcon\n        get() = this + \"inverted yellow users\"\n\n    @SemanticIconMarker inline val invision: SemanticIcon\n        get() = this + \"invision\"\n\n    @SemanticIconMarker inline val ioxhost: SemanticIcon\n        get() = this + \"ioxhost\"\n\n    @SemanticIconMarker inline val italic: SemanticIcon\n        get() = this + \"italic\"\n\n    @SemanticIconMarker inline val itch_io: SemanticIcon\n        get() = this + \"itch io\"\n\n    @SemanticIconMarker inline val itunes: SemanticIcon\n        get() = this + \"itunes\"\n\n    @SemanticIconMarker inline val itunes_note: SemanticIcon\n        get() = this + \"itunes note\"\n\n    @SemanticIconMarker inline val java: SemanticIcon\n        get() = this + \"java\"\n\n    @SemanticIconMarker inline val jedi: SemanticIcon\n        get() = this + \"jedi\"\n\n    @SemanticIconMarker inline val jedi_order: SemanticIcon\n        get() = this + \"jedi order\"\n\n    @SemanticIconMarker inline val jenkins: SemanticIcon\n        get() = this + \"jenkins\"\n\n    @SemanticIconMarker inline val jira: SemanticIcon\n        get() = this + \"jira\"\n\n    @SemanticIconMarker inline val joget: SemanticIcon\n        get() = this + \"joget\"\n\n    @SemanticIconMarker inline val joint: SemanticIcon\n        get() = this + \"joint\"\n\n    @SemanticIconMarker inline val joomla: SemanticIcon\n        get() = this + \"joomla\"\n\n    @SemanticIconMarker inline val journal_whills: SemanticIcon\n        get() = this + \"journal whills\"\n\n    @SemanticIconMarker inline val js: SemanticIcon\n        get() = this + \"js\"\n\n    @SemanticIconMarker inline val js_square: SemanticIcon\n        get() = this + \"js square\"\n\n    @SemanticIconMarker inline val jsfiddle: SemanticIcon\n        get() = this + \"jsfiddle\"\n\n    @SemanticIconMarker inline val kaaba: SemanticIcon\n        get() = this + \"kaaba\"\n\n    @SemanticIconMarker inline val kaggle: SemanticIcon\n        get() = this + \"kaggle\"\n\n    @SemanticIconMarker inline val key: SemanticIcon\n        get() = this + \"key\"\n\n    @SemanticIconMarker inline val keybase: SemanticIcon\n        get() = this + \"keybase\"\n\n    @SemanticIconMarker inline val keyboard: SemanticIcon\n        get() = this + \"keyboard\"\n\n    @SemanticIconMarker inline val keyboard_outline: SemanticIcon\n        get() = this + \"keyboard outline\"\n\n    @SemanticIconMarker inline val keycdn: SemanticIcon\n        get() = this + \"keycdn\"\n\n    @SemanticIconMarker inline val khanda: SemanticIcon\n        get() = this + \"khanda\"\n\n    @SemanticIconMarker inline val kickstarter: SemanticIcon\n        get() = this + \"kickstarter\"\n\n    @SemanticIconMarker inline val kickstarter_k: SemanticIcon\n        get() = this + \"kickstarter k\"\n\n    @SemanticIconMarker inline val kiss: SemanticIcon\n        get() = this + \"kiss\"\n\n    @SemanticIconMarker inline val kiss_beam: SemanticIcon\n        get() = this + \"kiss beam\"\n\n    @SemanticIconMarker inline val kiss_beam_outline: SemanticIcon\n        get() = this + \"kiss beam outline\"\n\n    @SemanticIconMarker inline val kiss_outline: SemanticIcon\n        get() = this + \"kiss outline\"\n\n    @SemanticIconMarker inline val kiss_wink_heart: SemanticIcon\n        get() = this + \"kiss wink heart\"\n\n    @SemanticIconMarker inline val kiss_wink_heart_outline: SemanticIcon\n        get() = this + \"kiss wink heart outline\"\n\n    @SemanticIconMarker inline val kiwi_bird: SemanticIcon\n        get() = this + \"kiwi bird\"\n\n    @SemanticIconMarker inline val korvue: SemanticIcon\n        get() = this + \"korvue\"\n\n    @SemanticIconMarker inline val landmark: SemanticIcon\n        get() = this + \"landmark\"\n\n    @SemanticIconMarker inline val language: SemanticIcon\n        get() = this + \"language\"\n\n    @SemanticIconMarker inline val laptop: SemanticIcon\n        get() = this + \"laptop\"\n\n    @SemanticIconMarker inline val laptop_code: SemanticIcon\n        get() = this + \"laptop code\"\n\n    @SemanticIconMarker inline val laptop_house: SemanticIcon\n        get() = this + \"laptop house\"\n\n    @SemanticIconMarker inline val laptop_medical: SemanticIcon\n        get() = this + \"laptop medical\"\n\n    @SemanticIconMarker inline val laravel: SemanticIcon\n        get() = this + \"laravel\"\n\n    @SemanticIconMarker inline val large_home: SemanticIcon\n        get() = this + \"large home\"\n\n    @SemanticIconMarker inline val lastfm: SemanticIcon\n        get() = this + \"lastfm\"\n\n    @SemanticIconMarker inline val lastfm_square: SemanticIcon\n        get() = this + \"lastfm square\"\n\n    @SemanticIconMarker inline val laugh: SemanticIcon\n        get() = this + \"laugh\"\n\n    @SemanticIconMarker inline val laugh_beam: SemanticIcon\n        get() = this + \"laugh beam\"\n\n    @SemanticIconMarker inline val laugh_beam_outline: SemanticIcon\n        get() = this + \"laugh beam outline\"\n\n    @SemanticIconMarker inline val laugh_outline: SemanticIcon\n        get() = this + \"laugh outline\"\n\n    @SemanticIconMarker inline val laugh_squint: SemanticIcon\n        get() = this + \"laugh squint\"\n\n    @SemanticIconMarker inline val laugh_squint_outline: SemanticIcon\n        get() = this + \"laugh squint outline\"\n\n    @SemanticIconMarker inline val laugh_wink: SemanticIcon\n        get() = this + \"laugh wink\"\n\n    @SemanticIconMarker inline val laugh_wink_outline: SemanticIcon\n        get() = this + \"laugh wink outline\"\n\n    @SemanticIconMarker inline val layer_group: SemanticIcon\n        get() = this + \"layer group\"\n\n    @SemanticIconMarker inline val leaf: SemanticIcon\n        get() = this + \"leaf\"\n\n    @SemanticIconMarker inline val leanpub: SemanticIcon\n        get() = this + \"leanpub\"\n\n    @SemanticIconMarker inline val lemon: SemanticIcon\n        get() = this + \"lemon\"\n\n    @SemanticIconMarker inline val lemon_outline: SemanticIcon\n        get() = this + \"lemon outline\"\n\n    @SemanticIconMarker inline val less_than: SemanticIcon\n        get() = this + \"less than\"\n\n    @SemanticIconMarker inline val less_than_equal: SemanticIcon\n        get() = this + \"less than equal\"\n\n    @SemanticIconMarker inline val lesscss: SemanticIcon\n        get() = this + \"lesscss\"\n\n    @SemanticIconMarker inline val level_down_alternate: SemanticIcon\n        get() = this + \"level down alternate\"\n\n    @SemanticIconMarker inline val level_up_alternate: SemanticIcon\n        get() = this + \"level up alternate\"\n\n    @SemanticIconMarker inline val life_ring: SemanticIcon\n        get() = this + \"life ring\"\n\n    @SemanticIconMarker inline val life_ring_outline: SemanticIcon\n        get() = this + \"life ring outline\"\n\n    @SemanticIconMarker inline val lightbulb: SemanticIcon\n        get() = this + \"lightbulb\"\n\n    @SemanticIconMarker inline val lightbulb_outline: SemanticIcon\n        get() = this + \"lightbulb outline\"\n\n    @SemanticIconMarker inline val linechat: SemanticIcon\n        get() = this + \"linechat\"\n\n    @SemanticIconMarker inline val linkedin: SemanticIcon\n        get() = this + \"linkedin\"\n\n    @SemanticIconMarker inline val linkedin_in: SemanticIcon\n        get() = this + \"linkedin in\"\n\n    @SemanticIconMarker inline val linkify: SemanticIcon\n        get() = this + \"linkify\"\n\n    @SemanticIconMarker inline val linode: SemanticIcon\n        get() = this + \"linode\"\n\n    @SemanticIconMarker inline val linux: SemanticIcon\n        get() = this + \"linux\"\n\n    @SemanticIconMarker inline val lira_sign: SemanticIcon\n        get() = this + \"lira sign\"\n\n    @SemanticIconMarker inline val list: SemanticIcon\n        get() = this + \"list\"\n\n    @SemanticIconMarker inline val list_alternate: SemanticIcon\n        get() = this + \"list alternate\"\n\n    @SemanticIconMarker inline val list_alternate_outline: SemanticIcon\n        get() = this + \"list alternate outline\"\n\n    @SemanticIconMarker inline val list_ol: SemanticIcon\n        get() = this + \"list ol\"\n\n    @SemanticIconMarker inline val list_ul: SemanticIcon\n        get() = this + \"list ul\"\n\n    @SemanticIconMarker inline val location_arrow: SemanticIcon\n        get() = this + \"location arrow\"\n\n    @SemanticIconMarker inline val lock: SemanticIcon\n        get() = this + \"lock\"\n\n    @SemanticIconMarker inline val lock_open: SemanticIcon\n        get() = this + \"lock open\"\n\n    @SemanticIconMarker inline val long_arrow_alternate_down: SemanticIcon\n        get() = this + \"long arrow alternate down\"\n\n    @SemanticIconMarker inline val long_arrow_alternate_left: SemanticIcon\n        get() = this + \"long arrow alternate left\"\n\n    @SemanticIconMarker inline val long_arrow_alternate_right: SemanticIcon\n        get() = this + \"long arrow alternate right\"\n\n    @SemanticIconMarker inline val long_arrow_alternate_up: SemanticIcon\n        get() = this + \"long arrow alternate up\"\n\n    @SemanticIconMarker inline val low_vision: SemanticIcon\n        get() = this + \"low vision\"\n\n    @SemanticIconMarker inline val luggage_cart: SemanticIcon\n        get() = this + \"luggage cart\"\n\n    @SemanticIconMarker inline val lungs: SemanticIcon\n        get() = this + \"lungs\"\n\n    @SemanticIconMarker inline val lungs_virus: SemanticIcon\n        get() = this + \"lungs virus\"\n\n    @SemanticIconMarker inline val lyft: SemanticIcon\n        get() = this + \"lyft\"\n\n    @SemanticIconMarker inline val magento: SemanticIcon\n        get() = this + \"magento\"\n\n    @SemanticIconMarker inline val magic: SemanticIcon\n        get() = this + \"magic\"\n\n    @SemanticIconMarker inline val magnet: SemanticIcon\n        get() = this + \"magnet\"\n\n    @SemanticIconMarker inline val mail: SemanticIcon\n        get() = this + \"mail\"\n\n    @SemanticIconMarker inline val mail_bulk: SemanticIcon\n        get() = this + \"mail bulk\"\n\n    @SemanticIconMarker inline val mailchimp: SemanticIcon\n        get() = this + \"mailchimp\"\n\n    @SemanticIconMarker inline val male: SemanticIcon\n        get() = this + \"male\"\n\n    @SemanticIconMarker inline val mandalorian: SemanticIcon\n        get() = this + \"mandalorian\"\n\n    @SemanticIconMarker inline val map: SemanticIcon\n        get() = this + \"map\"\n\n    @SemanticIconMarker inline val map_marked: SemanticIcon\n        get() = this + \"map marked\"\n\n    @SemanticIconMarker inline val map_marked_alternate: SemanticIcon\n        get() = this + \"map marked alternate\"\n\n    @SemanticIconMarker inline val map_marker: SemanticIcon\n        get() = this + \"map marker\"\n\n    @SemanticIconMarker inline val map_marker_alternate: SemanticIcon\n        get() = this + \"map marker alternate\"\n\n    @SemanticIconMarker inline val map_outline: SemanticIcon\n        get() = this + \"map outline\"\n\n    @SemanticIconMarker inline val map_pin: SemanticIcon\n        get() = this + \"map pin\"\n\n    @SemanticIconMarker inline val map_signs: SemanticIcon\n        get() = this + \"map signs\"\n\n    @SemanticIconMarker inline val markdown: SemanticIcon\n        get() = this + \"markdown\"\n\n    @SemanticIconMarker inline val marker: SemanticIcon\n        get() = this + \"marker\"\n\n    @SemanticIconMarker inline val mars: SemanticIcon\n        get() = this + \"mars\"\n\n    @SemanticIconMarker inline val mars_double: SemanticIcon\n        get() = this + \"mars double\"\n\n    @SemanticIconMarker inline val mars_stroke: SemanticIcon\n        get() = this + \"mars stroke\"\n\n    @SemanticIconMarker inline val mars_stroke_horizontal: SemanticIcon\n        get() = this + \"mars stroke horizontal\"\n\n    @SemanticIconMarker inline val mars_stroke_vertical: SemanticIcon\n        get() = this + \"mars stroke vertical\"\n\n    @SemanticIconMarker inline val mask: SemanticIcon\n        get() = this + \"mask\"\n\n    @SemanticIconMarker inline val massive_home: SemanticIcon\n        get() = this + \"massive home\"\n\n    @SemanticIconMarker inline val mastodon: SemanticIcon\n        get() = this + \"mastodon\"\n\n    @SemanticIconMarker inline val maxcdn: SemanticIcon\n        get() = this + \"maxcdn\"\n\n    @SemanticIconMarker inline val mdb: SemanticIcon\n        get() = this + \"mdb\"\n\n    @SemanticIconMarker inline val medal: SemanticIcon\n        get() = this + \"medal\"\n\n    @SemanticIconMarker inline val medapps: SemanticIcon\n        get() = this + \"medapps\"\n\n    @SemanticIconMarker inline val medium_: SemanticIcon\n        get() = this + \"medium\"\n\n    @SemanticIconMarker inline val medium_m: SemanticIcon\n        get() = this + \"medium m\"\n\n    @SemanticIconMarker inline val medkit: SemanticIcon\n        get() = this + \"medkit\"\n\n    @SemanticIconMarker inline val medrt: SemanticIcon\n        get() = this + \"medrt\"\n\n    @SemanticIconMarker inline val meetup: SemanticIcon\n        get() = this + \"meetup\"\n\n    @SemanticIconMarker inline val megaport: SemanticIcon\n        get() = this + \"megaport\"\n\n    @SemanticIconMarker inline val meh: SemanticIcon\n        get() = this + \"meh\"\n\n    @SemanticIconMarker inline val meh_blank: SemanticIcon\n        get() = this + \"meh blank\"\n\n    @SemanticIconMarker inline val meh_blank_outline: SemanticIcon\n        get() = this + \"meh blank outline\"\n\n    @SemanticIconMarker inline val meh_outline: SemanticIcon\n        get() = this + \"meh outline\"\n\n    @SemanticIconMarker inline val meh_rolling_eyes: SemanticIcon\n        get() = this + \"meh rolling eyes\"\n\n    @SemanticIconMarker inline val meh_rolling_eyes_outline: SemanticIcon\n        get() = this + \"meh rolling eyes outline\"\n\n    @SemanticIconMarker inline val memory: SemanticIcon\n        get() = this + \"memory\"\n\n    @SemanticIconMarker inline val mendeley: SemanticIcon\n        get() = this + \"mendeley\"\n\n    @SemanticIconMarker inline val menorah: SemanticIcon\n        get() = this + \"menorah\"\n\n    @SemanticIconMarker inline val mercury: SemanticIcon\n        get() = this + \"mercury\"\n\n    @SemanticIconMarker inline val meteor: SemanticIcon\n        get() = this + \"meteor\"\n\n    @SemanticIconMarker inline val microblog: SemanticIcon\n        get() = this + \"microblog\"\n\n    @SemanticIconMarker inline val microchip: SemanticIcon\n        get() = this + \"microchip\"\n\n    @SemanticIconMarker inline val microphone: SemanticIcon\n        get() = this + \"microphone\"\n\n    @SemanticIconMarker inline val microphone_alternate: SemanticIcon\n        get() = this + \"microphone alternate\"\n\n    @SemanticIconMarker inline val microphone_alternate_slash: SemanticIcon\n        get() = this + \"microphone alternate slash\"\n\n    @SemanticIconMarker inline val microphone_slash: SemanticIcon\n        get() = this + \"microphone slash\"\n\n    @SemanticIconMarker inline val microscope: SemanticIcon\n        get() = this + \"microscope\"\n\n    @SemanticIconMarker inline val microsoft: SemanticIcon\n        get() = this + \"microsoft\"\n\n    @SemanticIconMarker inline val mini_home: SemanticIcon\n        get() = this + \"mini home\"\n\n    @SemanticIconMarker inline val minus: SemanticIcon\n        get() = this + \"minus\"\n\n    @SemanticIconMarker inline val minus_circle: SemanticIcon\n        get() = this + \"minus circle\"\n\n    @SemanticIconMarker inline val minus_square: SemanticIcon\n        get() = this + \"minus square\"\n\n    @SemanticIconMarker inline val minus_square_outline: SemanticIcon\n        get() = this + \"minus square outline\"\n\n    @SemanticIconMarker inline val mitten: SemanticIcon\n        get() = this + \"mitten\"\n\n    @SemanticIconMarker inline val mix: SemanticIcon\n        get() = this + \"mix\"\n\n    @SemanticIconMarker inline val mixcloud: SemanticIcon\n        get() = this + \"mixcloud\"\n\n    @SemanticIconMarker inline val mixer: SemanticIcon\n        get() = this + \"mixer\"\n\n    @SemanticIconMarker inline val mizuni: SemanticIcon\n        get() = this + \"mizuni\"\n\n    @SemanticIconMarker inline val mobile: SemanticIcon\n        get() = this + \"mobile\"\n\n    @SemanticIconMarker inline val mobile_alternate: SemanticIcon\n        get() = this + \"mobile alternate\"\n\n    @SemanticIconMarker inline val modx: SemanticIcon\n        get() = this + \"modx\"\n\n    @SemanticIconMarker inline val monero: SemanticIcon\n        get() = this + \"monero\"\n\n    @SemanticIconMarker inline val money_bill: SemanticIcon\n        get() = this + \"money bill\"\n\n    @SemanticIconMarker inline val money_bill_alternate: SemanticIcon\n        get() = this + \"money bill alternate\"\n\n    @SemanticIconMarker inline val money_bill_alternate_outline: SemanticIcon\n        get() = this + \"money bill alternate outline\"\n\n    @SemanticIconMarker inline val money_bill_wave: SemanticIcon\n        get() = this + \"money bill wave\"\n\n    @SemanticIconMarker inline val money_bill_wave_alternate: SemanticIcon\n        get() = this + \"money bill wave alternate\"\n\n    @SemanticIconMarker inline val money_check: SemanticIcon\n        get() = this + \"money check\"\n\n    @SemanticIconMarker inline val money_check_alternate: SemanticIcon\n        get() = this + \"money check alternate\"\n\n    @SemanticIconMarker inline val monument: SemanticIcon\n        get() = this + \"monument\"\n\n    @SemanticIconMarker inline val moon: SemanticIcon\n        get() = this + \"moon\"\n\n    @SemanticIconMarker inline val moon_outline: SemanticIcon\n        get() = this + \"moon outline\"\n\n    @SemanticIconMarker inline val mortar_pestle: SemanticIcon\n        get() = this + \"mortar pestle\"\n\n    @SemanticIconMarker inline val mosque: SemanticIcon\n        get() = this + \"mosque\"\n\n    @SemanticIconMarker inline val motorcycle: SemanticIcon\n        get() = this + \"motorcycle\"\n\n    @SemanticIconMarker inline val mountain: SemanticIcon\n        get() = this + \"mountain\"\n\n    @SemanticIconMarker inline val mouse: SemanticIcon\n        get() = this + \"mouse\"\n\n    @SemanticIconMarker inline val mouse_pointer: SemanticIcon\n        get() = this + \"mouse pointer\"\n\n    @SemanticIconMarker inline val mug_hot: SemanticIcon\n        get() = this + \"mug hot\"\n\n    @SemanticIconMarker inline val music: SemanticIcon\n        get() = this + \"music\"\n\n    @SemanticIconMarker inline val napster: SemanticIcon\n        get() = this + \"napster\"\n\n    @SemanticIconMarker inline val neos: SemanticIcon\n        get() = this + \"neos\"\n\n    @SemanticIconMarker inline val neuter: SemanticIcon\n        get() = this + \"neuter\"\n\n    @SemanticIconMarker inline val newspaper: SemanticIcon\n        get() = this + \"newspaper\"\n\n    @SemanticIconMarker inline val newspaper_outline: SemanticIcon\n        get() = this + \"newspaper outline\"\n\n    @SemanticIconMarker inline val nimblr: SemanticIcon\n        get() = this + \"nimblr\"\n\n    @SemanticIconMarker inline val node: SemanticIcon\n        get() = this + \"node\"\n\n    @SemanticIconMarker inline val node_js: SemanticIcon\n        get() = this + \"node js\"\n\n    @SemanticIconMarker inline val not_equal: SemanticIcon\n        get() = this + \"not equal\"\n\n    @SemanticIconMarker inline val notched_circle_loading: SemanticIcon\n        get() = this + \"notched circle loading\"\n\n    @SemanticIconMarker inline val notes_medical: SemanticIcon\n        get() = this + \"notes medical\"\n\n    @SemanticIconMarker inline val npm: SemanticIcon\n        get() = this + \"npm\"\n\n    @SemanticIconMarker inline val ns8: SemanticIcon\n        get() = this + \"ns8\"\n\n    @SemanticIconMarker inline val nutritionix: SemanticIcon\n        get() = this + \"nutritionix\"\n\n    @SemanticIconMarker inline val object_group: SemanticIcon\n        get() = this + \"object group\"\n\n    @SemanticIconMarker inline val object_group_outline: SemanticIcon\n        get() = this + \"object group outline\"\n\n    @SemanticIconMarker inline val object_ungroup: SemanticIcon\n        get() = this + \"object ungroup\"\n\n    @SemanticIconMarker inline val object_ungroup_outline: SemanticIcon\n        get() = this + \"object ungroup outline\"\n\n    @SemanticIconMarker inline val odnoklassniki: SemanticIcon\n        get() = this + \"odnoklassniki\"\n\n    @SemanticIconMarker inline val odnoklassniki_square: SemanticIcon\n        get() = this + \"odnoklassniki square\"\n\n    @SemanticIconMarker inline val oil_can: SemanticIcon\n        get() = this + \"oil can\"\n\n    @SemanticIconMarker inline val old_republic: SemanticIcon\n        get() = this + \"old republic\"\n\n    @SemanticIconMarker inline val olive_users: SemanticIcon\n        get() = this + \"olive users\"\n\n    @SemanticIconMarker inline val om: SemanticIcon\n        get() = this + \"om\"\n\n    @SemanticIconMarker inline val opencart: SemanticIcon\n        get() = this + \"opencart\"\n\n    @SemanticIconMarker inline val openid: SemanticIcon\n        get() = this + \"openid\"\n\n    @SemanticIconMarker inline val opera: SemanticIcon\n        get() = this + \"opera\"\n\n    @SemanticIconMarker inline val optin_monster: SemanticIcon\n        get() = this + \"optin monster\"\n\n    @SemanticIconMarker inline val orange_users: SemanticIcon\n        get() = this + \"orange users\"\n\n    @SemanticIconMarker inline val orcid: SemanticIcon\n        get() = this + \"orcid\"\n\n    @SemanticIconMarker inline val osi: SemanticIcon\n        get() = this + \"osi\"\n\n    @SemanticIconMarker inline val otter: SemanticIcon\n        get() = this + \"otter\"\n\n    @SemanticIconMarker inline val outdent: SemanticIcon\n        get() = this + \"outdent\"\n\n    @SemanticIconMarker inline val page4: SemanticIcon\n        get() = this + \"page4\"\n\n    @SemanticIconMarker inline val pagelines: SemanticIcon\n        get() = this + \"pagelines\"\n\n    @SemanticIconMarker inline val pager: SemanticIcon\n        get() = this + \"pager\"\n\n    @SemanticIconMarker inline val paint_brush: SemanticIcon\n        get() = this + \"paint brush\"\n\n    @SemanticIconMarker inline val paint_roller: SemanticIcon\n        get() = this + \"paint roller\"\n\n    @SemanticIconMarker inline val palette: SemanticIcon\n        get() = this + \"palette\"\n\n    @SemanticIconMarker inline val palfed: SemanticIcon\n        get() = this + \"palfed\"\n\n    @SemanticIconMarker inline val pallet: SemanticIcon\n        get() = this + \"pallet\"\n\n    @SemanticIconMarker inline val paper_plane: SemanticIcon\n        get() = this + \"paper plane\"\n\n    @SemanticIconMarker inline val paper_plane_outline: SemanticIcon\n        get() = this + \"paper plane outline\"\n\n    @SemanticIconMarker inline val paperclip: SemanticIcon\n        get() = this + \"paperclip\"\n\n    @SemanticIconMarker inline val parachute_box: SemanticIcon\n        get() = this + \"parachute box\"\n\n    @SemanticIconMarker inline val paragraph: SemanticIcon\n        get() = this + \"paragraph\"\n\n    @SemanticIconMarker inline val parking: SemanticIcon\n        get() = this + \"parking\"\n\n    @SemanticIconMarker inline val passport: SemanticIcon\n        get() = this + \"passport\"\n\n    @SemanticIconMarker inline val pastafarianism: SemanticIcon\n        get() = this + \"pastafarianism\"\n\n    @SemanticIconMarker inline val paste: SemanticIcon\n        get() = this + \"paste\"\n\n    @SemanticIconMarker inline val patreon: SemanticIcon\n        get() = this + \"patreon\"\n\n    @SemanticIconMarker inline val pause: SemanticIcon\n        get() = this + \"pause\"\n\n    @SemanticIconMarker inline val pause_circle: SemanticIcon\n        get() = this + \"pause circle\"\n\n    @SemanticIconMarker inline val pause_circle_outline: SemanticIcon\n        get() = this + \"pause circle outline\"\n\n    @SemanticIconMarker inline val paw: SemanticIcon\n        get() = this + \"paw\"\n\n    @SemanticIconMarker inline val paypal: SemanticIcon\n        get() = this + \"paypal\"\n\n    @SemanticIconMarker inline val peace: SemanticIcon\n        get() = this + \"peace\"\n\n    @SemanticIconMarker inline val pen: SemanticIcon\n        get() = this + \"pen\"\n\n    @SemanticIconMarker inline val pen_alternate: SemanticIcon\n        get() = this + \"pen alternate\"\n\n    @SemanticIconMarker inline val pen_fancy: SemanticIcon\n        get() = this + \"pen fancy\"\n\n    @SemanticIconMarker inline val pen_nib: SemanticIcon\n        get() = this + \"pen nib\"\n\n    @SemanticIconMarker inline val pen_square: SemanticIcon\n        get() = this + \"pen square\"\n\n    @SemanticIconMarker inline val pencil_alternate: SemanticIcon\n        get() = this + \"pencil alternate\"\n\n    @SemanticIconMarker inline val pencil_ruler: SemanticIcon\n        get() = this + \"pencil ruler\"\n\n    @SemanticIconMarker inline val penny_arcade: SemanticIcon\n        get() = this + \"penny arcade\"\n\n    @SemanticIconMarker inline val people_arrows: SemanticIcon\n        get() = this + \"people arrows\"\n\n    @SemanticIconMarker inline val people_carry: SemanticIcon\n        get() = this + \"people carry\"\n\n    @SemanticIconMarker inline val pepper_hot: SemanticIcon\n        get() = this + \"pepper hot\"\n\n    @SemanticIconMarker inline val percent: SemanticIcon\n        get() = this + \"percent\"\n\n    @SemanticIconMarker inline val percentage: SemanticIcon\n        get() = this + \"percentage\"\n\n    @SemanticIconMarker inline val periscope: SemanticIcon\n        get() = this + \"periscope\"\n\n    @SemanticIconMarker inline val person_booth: SemanticIcon\n        get() = this + \"person booth\"\n\n    @SemanticIconMarker inline val phabricator: SemanticIcon\n        get() = this + \"phabricator\"\n\n    @SemanticIconMarker inline val phoenix_framework: SemanticIcon\n        get() = this + \"phoenix framework\"\n\n    @SemanticIconMarker inline val phoenix_squadron: SemanticIcon\n        get() = this + \"phoenix squadron\"\n\n    @SemanticIconMarker inline val phone: SemanticIcon\n        get() = this + \"phone\"\n\n    @SemanticIconMarker inline val phone_alternate: SemanticIcon\n        get() = this + \"phone alternate\"\n\n    @SemanticIconMarker inline val phone_slash: SemanticIcon\n        get() = this + \"phone slash\"\n\n    @SemanticIconMarker inline val phone_square: SemanticIcon\n        get() = this + \"phone square\"\n\n    @SemanticIconMarker inline val phone_square_alternate: SemanticIcon\n        get() = this + \"phone square alternate\"\n\n    @SemanticIconMarker inline val phone_volume: SemanticIcon\n        get() = this + \"phone volume\"\n\n    @SemanticIconMarker inline val photo_video: SemanticIcon\n        get() = this + \"photo video\"\n\n    @SemanticIconMarker inline val php: SemanticIcon\n        get() = this + \"php\"\n\n    @SemanticIconMarker inline val pied_piper: SemanticIcon\n        get() = this + \"pied piper\"\n\n    @SemanticIconMarker inline val pied_piper_alternate: SemanticIcon\n        get() = this + \"pied piper alternate\"\n\n    @SemanticIconMarker inline val pied_piper_hat: SemanticIcon\n        get() = this + \"pied piper hat\"\n\n    @SemanticIconMarker inline val pied_piper_pp: SemanticIcon\n        get() = this + \"pied piper pp\"\n\n    @SemanticIconMarker inline val pied_piper_square: SemanticIcon\n        get() = this + \"pied piper square\"\n\n    @SemanticIconMarker inline val piggy_bank: SemanticIcon\n        get() = this + \"piggy bank\"\n\n    @SemanticIconMarker inline val pills: SemanticIcon\n        get() = this + \"pills\"\n\n    @SemanticIconMarker inline val pink_users: SemanticIcon\n        get() = this + \"pink users\"\n\n    @SemanticIconMarker inline val pinterest: SemanticIcon\n        get() = this + \"pinterest\"\n\n    @SemanticIconMarker inline val pinterest_p: SemanticIcon\n        get() = this + \"pinterest p\"\n\n    @SemanticIconMarker inline val pinterest_square: SemanticIcon\n        get() = this + \"pinterest square\"\n\n    @SemanticIconMarker inline val pizza_slice: SemanticIcon\n        get() = this + \"pizza slice\"\n\n    @SemanticIconMarker inline val place_of_worship: SemanticIcon\n        get() = this + \"place of worship\"\n\n    @SemanticIconMarker inline val plane: SemanticIcon\n        get() = this + \"plane\"\n\n    @SemanticIconMarker inline val plane_arrival: SemanticIcon\n        get() = this + \"plane arrival\"\n\n    @SemanticIconMarker inline val plane_departure: SemanticIcon\n        get() = this + \"plane departure\"\n\n    @SemanticIconMarker inline val play: SemanticIcon\n        get() = this + \"play\"\n\n    @SemanticIconMarker inline val play_circle: SemanticIcon\n        get() = this + \"play circle\"\n\n    @SemanticIconMarker inline val play_circle_outline: SemanticIcon\n        get() = this + \"play circle outline\"\n\n    @SemanticIconMarker inline val playstation: SemanticIcon\n        get() = this + \"playstation\"\n\n    @SemanticIconMarker inline val plug: SemanticIcon\n        get() = this + \"plug\"\n\n    @SemanticIconMarker inline val plus: SemanticIcon\n        get() = this + \"plus\"\n\n    @SemanticIconMarker inline val plus_circle: SemanticIcon\n        get() = this + \"plus circle\"\n\n    @SemanticIconMarker inline val plus_square: SemanticIcon\n        get() = this + \"plus square\"\n\n    @SemanticIconMarker inline val plus_square_outline: SemanticIcon\n        get() = this + \"plus square outline\"\n\n    @SemanticIconMarker inline val podcast: SemanticIcon\n        get() = this + \"podcast\"\n\n    @SemanticIconMarker inline val poll: SemanticIcon\n        get() = this + \"poll\"\n\n    @SemanticIconMarker inline val poll_horizontal: SemanticIcon\n        get() = this + \"poll horizontal\"\n\n    @SemanticIconMarker inline val poo: SemanticIcon\n        get() = this + \"poo\"\n\n    @SemanticIconMarker inline val poo_storm: SemanticIcon\n        get() = this + \"poo storm\"\n\n    @SemanticIconMarker inline val poop: SemanticIcon\n        get() = this + \"poop\"\n\n    @SemanticIconMarker inline val portrait: SemanticIcon\n        get() = this + \"portrait\"\n\n    @SemanticIconMarker inline val pound_sign: SemanticIcon\n        get() = this + \"pound sign\"\n\n    @SemanticIconMarker inline val power_off: SemanticIcon\n        get() = this + \"power off\"\n\n    @SemanticIconMarker inline val pray: SemanticIcon\n        get() = this + \"pray\"\n\n    @SemanticIconMarker inline val praying_hands: SemanticIcon\n        get() = this + \"praying hands\"\n\n    @SemanticIconMarker inline val prescription: SemanticIcon\n        get() = this + \"prescription\"\n\n    @SemanticIconMarker inline val prescription_bottle: SemanticIcon\n        get() = this + \"prescription bottle\"\n\n    @SemanticIconMarker inline val prescription_bottle_alternate: SemanticIcon\n        get() = this + \"prescription bottle alternate\"\n\n    @SemanticIconMarker inline val primary_users: SemanticIcon\n        get() = this + \"primary users\"\n\n    @SemanticIconMarker inline val print: SemanticIcon\n        get() = this + \"print\"\n\n    @SemanticIconMarker inline val procedures: SemanticIcon\n        get() = this + \"procedures\"\n\n    @SemanticIconMarker inline val product_hunt: SemanticIcon\n        get() = this + \"product hunt\"\n\n    @SemanticIconMarker inline val project_diagram: SemanticIcon\n        get() = this + \"project diagram\"\n\n    @SemanticIconMarker inline val pump_medical: SemanticIcon\n        get() = this + \"pump medical\"\n\n    @SemanticIconMarker inline val pump_soap: SemanticIcon\n        get() = this + \"pump soap\"\n\n    @SemanticIconMarker inline val purple_users: SemanticIcon\n        get() = this + \"purple users\"\n\n    @SemanticIconMarker inline val pushed: SemanticIcon\n        get() = this + \"pushed\"\n\n    @SemanticIconMarker inline val puzzle: SemanticIcon\n        get() = this + \"puzzle\"\n\n    @SemanticIconMarker inline val puzzle_piece: SemanticIcon\n        get() = this + \"puzzle piece\"\n\n    @SemanticIconMarker inline val python: SemanticIcon\n        get() = this + \"python\"\n\n    @SemanticIconMarker inline val qq: SemanticIcon\n        get() = this + \"qq\"\n\n    @SemanticIconMarker inline val qrcode: SemanticIcon\n        get() = this + \"qrcode\"\n\n    @SemanticIconMarker inline val question: SemanticIcon\n        get() = this + \"question\"\n\n    @SemanticIconMarker inline val question_circle: SemanticIcon\n        get() = this + \"question circle\"\n\n    @SemanticIconMarker inline val question_circle_outline: SemanticIcon\n        get() = this + \"question circle outline\"\n\n    @SemanticIconMarker inline val quidditch: SemanticIcon\n        get() = this + \"quidditch\"\n\n    @SemanticIconMarker inline val quinscape: SemanticIcon\n        get() = this + \"quinscape\"\n\n    @SemanticIconMarker inline val quora: SemanticIcon\n        get() = this + \"quora\"\n\n    @SemanticIconMarker inline val quote_left: SemanticIcon\n        get() = this + \"quote left\"\n\n    @SemanticIconMarker inline val quote_right: SemanticIcon\n        get() = this + \"quote right\"\n\n    @SemanticIconMarker inline val quran: SemanticIcon\n        get() = this + \"quran\"\n\n    @SemanticIconMarker inline val r_project: SemanticIcon\n        get() = this + \"r project\"\n\n    @SemanticIconMarker inline val radiation: SemanticIcon\n        get() = this + \"radiation\"\n\n    @SemanticIconMarker inline val radiation_alternate: SemanticIcon\n        get() = this + \"radiation alternate\"\n\n    @SemanticIconMarker inline val rainbow: SemanticIcon\n        get() = this + \"rainbow\"\n\n    @SemanticIconMarker inline val random: SemanticIcon\n        get() = this + \"random\"\n\n    @SemanticIconMarker inline val raspberry_pi: SemanticIcon\n        get() = this + \"raspberry pi\"\n\n    @SemanticIconMarker inline val ravelry: SemanticIcon\n        get() = this + \"ravelry\"\n\n    @SemanticIconMarker inline val react: SemanticIcon\n        get() = this + \"react\"\n\n    @SemanticIconMarker inline val reacteurope: SemanticIcon\n        get() = this + \"reacteurope\"\n\n    @SemanticIconMarker inline val readme: SemanticIcon\n        get() = this + \"readme\"\n\n    @SemanticIconMarker inline val rebel: SemanticIcon\n        get() = this + \"rebel\"\n\n    @SemanticIconMarker inline val receipt: SemanticIcon\n        get() = this + \"receipt\"\n\n    @SemanticIconMarker inline val record_vinyl: SemanticIcon\n        get() = this + \"record vinyl\"\n\n    @SemanticIconMarker inline val recycle: SemanticIcon\n        get() = this + \"recycle\"\n\n    @SemanticIconMarker inline val red_users: SemanticIcon\n        get() = this + \"red users\"\n\n    @SemanticIconMarker inline val reddit: SemanticIcon\n        get() = this + \"reddit\"\n\n    @SemanticIconMarker inline val reddit_alien: SemanticIcon\n        get() = this + \"reddit alien\"\n\n    @SemanticIconMarker inline val reddit_square: SemanticIcon\n        get() = this + \"reddit square\"\n\n    @SemanticIconMarker inline val redhat: SemanticIcon\n        get() = this + \"redhat\"\n\n    @SemanticIconMarker inline val redo: SemanticIcon\n        get() = this + \"redo\"\n\n    @SemanticIconMarker inline val redo_alternate: SemanticIcon\n        get() = this + \"redo alternate\"\n\n    @SemanticIconMarker inline val redriver: SemanticIcon\n        get() = this + \"redriver\"\n\n    @SemanticIconMarker inline val redyeti: SemanticIcon\n        get() = this + \"redyeti\"\n\n    @SemanticIconMarker inline val registered: SemanticIcon\n        get() = this + \"registered\"\n\n    @SemanticIconMarker inline val registered_outline: SemanticIcon\n        get() = this + \"registered outline\"\n\n    @SemanticIconMarker inline val remove_format: SemanticIcon\n        get() = this + \"remove format\"\n\n    @SemanticIconMarker inline val renren: SemanticIcon\n        get() = this + \"renren\"\n\n    @SemanticIconMarker inline val reply: SemanticIcon\n        get() = this + \"reply\"\n\n    @SemanticIconMarker inline val reply_all: SemanticIcon\n        get() = this + \"reply all\"\n\n    @SemanticIconMarker inline val replyd: SemanticIcon\n        get() = this + \"replyd\"\n\n    @SemanticIconMarker inline val republican: SemanticIcon\n        get() = this + \"republican\"\n\n    @SemanticIconMarker inline val researchgate: SemanticIcon\n        get() = this + \"researchgate\"\n\n    @SemanticIconMarker inline val resolving: SemanticIcon\n        get() = this + \"resolving\"\n\n    @SemanticIconMarker inline val restroom: SemanticIcon\n        get() = this + \"restroom\"\n\n    @SemanticIconMarker inline val retweet: SemanticIcon\n        get() = this + \"retweet\"\n\n    @SemanticIconMarker inline val rev: SemanticIcon\n        get() = this + \"rev\"\n\n    @SemanticIconMarker inline val ribbon: SemanticIcon\n        get() = this + \"ribbon\"\n\n    @SemanticIconMarker inline val ring: SemanticIcon\n        get() = this + \"ring\"\n\n    @SemanticIconMarker inline val road: SemanticIcon\n        get() = this + \"road\"\n\n    @SemanticIconMarker inline val robot: SemanticIcon\n        get() = this + \"robot\"\n\n    @SemanticIconMarker inline val rocket: SemanticIcon\n        get() = this + \"rocket\"\n\n    @SemanticIconMarker inline val rocketchat: SemanticIcon\n        get() = this + \"rocketchat\"\n\n    @SemanticIconMarker inline val rockrms: SemanticIcon\n        get() = this + \"rockrms\"\n\n    @SemanticIconMarker inline val route: SemanticIcon\n        get() = this + \"route\"\n\n    @SemanticIconMarker inline val rss: SemanticIcon\n        get() = this + \"rss\"\n\n    @SemanticIconMarker inline val rss_square: SemanticIcon\n        get() = this + \"rss square\"\n\n    @SemanticIconMarker inline val ruble_sign: SemanticIcon\n        get() = this + \"ruble sign\"\n\n    @SemanticIconMarker inline val ruler: SemanticIcon\n        get() = this + \"ruler\"\n\n    @SemanticIconMarker inline val ruler_combined: SemanticIcon\n        get() = this + \"ruler combined\"\n\n    @SemanticIconMarker inline val ruler_horizontal: SemanticIcon\n        get() = this + \"ruler horizontal\"\n\n    @SemanticIconMarker inline val ruler_vertical: SemanticIcon\n        get() = this + \"ruler vertical\"\n\n    @SemanticIconMarker inline val running: SemanticIcon\n        get() = this + \"running\"\n\n    @SemanticIconMarker inline val rupee_sign: SemanticIcon\n        get() = this + \"rupee sign\"\n\n    @SemanticIconMarker inline val sad_cry: SemanticIcon\n        get() = this + \"sad cry\"\n\n    @SemanticIconMarker inline val sad_cry_outline: SemanticIcon\n        get() = this + \"sad cry outline\"\n\n    @SemanticIconMarker inline val sad_tear: SemanticIcon\n        get() = this + \"sad tear\"\n\n    @SemanticIconMarker inline val sad_tear_outline: SemanticIcon\n        get() = this + \"sad tear outline\"\n\n    @SemanticIconMarker inline val safari: SemanticIcon\n        get() = this + \"safari\"\n\n    @SemanticIconMarker inline val salesforce: SemanticIcon\n        get() = this + \"salesforce\"\n\n    @SemanticIconMarker inline val sass: SemanticIcon\n        get() = this + \"sass\"\n\n    @SemanticIconMarker inline val satellite: SemanticIcon\n        get() = this + \"satellite\"\n\n    @SemanticIconMarker inline val satellite_dish: SemanticIcon\n        get() = this + \"satellite dish\"\n\n    @SemanticIconMarker inline val save: SemanticIcon\n        get() = this + \"save\"\n\n    @SemanticIconMarker inline val save_outline: SemanticIcon\n        get() = this + \"save outline\"\n\n    @SemanticIconMarker inline val schlix: SemanticIcon\n        get() = this + \"schlix\"\n\n    @SemanticIconMarker inline val school: SemanticIcon\n        get() = this + \"school\"\n\n    @SemanticIconMarker inline val screwdriver: SemanticIcon\n        get() = this + \"screwdriver\"\n\n    @SemanticIconMarker inline val scribd: SemanticIcon\n        get() = this + \"scribd\"\n\n    @SemanticIconMarker inline val scroll: SemanticIcon\n        get() = this + \"scroll\"\n\n    @SemanticIconMarker inline val sd_card: SemanticIcon\n        get() = this + \"sd card\"\n\n    @SemanticIconMarker inline val search: SemanticIcon\n        get() = this + \"search\"\n\n    @SemanticIconMarker inline val search_dollar: SemanticIcon\n        get() = this + \"search dollar\"\n\n    @SemanticIconMarker inline val search_location: SemanticIcon\n        get() = this + \"search location\"\n\n    @SemanticIconMarker inline val search_minus: SemanticIcon\n        get() = this + \"search minus\"\n\n    @SemanticIconMarker inline val search_plus: SemanticIcon\n        get() = this + \"search plus\"\n\n    @SemanticIconMarker inline val searchengin: SemanticIcon\n        get() = this + \"searchengin\"\n\n    @SemanticIconMarker inline val secondary_users: SemanticIcon\n        get() = this + \"secondary users\"\n\n    @SemanticIconMarker inline val seedling: SemanticIcon\n        get() = this + \"seedling\"\n\n    @SemanticIconMarker inline val sellcast: SemanticIcon\n        get() = this + \"sellcast\"\n\n    @SemanticIconMarker inline val sellsy: SemanticIcon\n        get() = this + \"sellsy\"\n\n    @SemanticIconMarker inline val server: SemanticIcon\n        get() = this + \"server\"\n\n    @SemanticIconMarker inline val servicestack: SemanticIcon\n        get() = this + \"servicestack\"\n\n    @SemanticIconMarker inline val shapes: SemanticIcon\n        get() = this + \"shapes\"\n\n    @SemanticIconMarker inline val share: SemanticIcon\n        get() = this + \"share\"\n\n    @SemanticIconMarker inline val share_alternate: SemanticIcon\n        get() = this + \"share alternate\"\n\n    @SemanticIconMarker inline val share_alternate_square: SemanticIcon\n        get() = this + \"share alternate square\"\n\n    @SemanticIconMarker inline val share_square: SemanticIcon\n        get() = this + \"share square\"\n\n    @SemanticIconMarker inline val share_square_outline: SemanticIcon\n        get() = this + \"share square outline\"\n\n    @SemanticIconMarker inline val shekel_sign: SemanticIcon\n        get() = this + \"shekel sign\"\n\n    @SemanticIconMarker inline val shield_alternate: SemanticIcon\n        get() = this + \"shield alternate\"\n\n    @SemanticIconMarker inline val shield_virus: SemanticIcon\n        get() = this + \"shield virus\"\n\n    @SemanticIconMarker inline val ship: SemanticIcon\n        get() = this + \"ship\"\n\n    @SemanticIconMarker inline val shipping_fast: SemanticIcon\n        get() = this + \"shipping fast\"\n\n    @SemanticIconMarker inline val shirtsinbulk: SemanticIcon\n        get() = this + \"shirtsinbulk\"\n\n    @SemanticIconMarker inline val shoe_prints: SemanticIcon\n        get() = this + \"shoe prints\"\n\n    @SemanticIconMarker inline val shopify: SemanticIcon\n        get() = this + \"shopify\"\n\n    @SemanticIconMarker inline val shopping_bag: SemanticIcon\n        get() = this + \"shopping bag\"\n\n    @SemanticIconMarker inline val shopping_basket: SemanticIcon\n        get() = this + \"shopping basket\"\n\n    @SemanticIconMarker inline val shopping_cart: SemanticIcon\n        get() = this + \"shopping cart\"\n\n    @SemanticIconMarker inline val shopware: SemanticIcon\n        get() = this + \"shopware\"\n\n    @SemanticIconMarker inline val shower: SemanticIcon\n        get() = this + \"shower\"\n\n    @SemanticIconMarker inline val shuttle_van: SemanticIcon\n        get() = this + \"shuttle van\"\n\n    @SemanticIconMarker inline val sign: SemanticIcon\n        get() = this + \"sign\"\n\n    @SemanticIconMarker inline val sign_in_alternate: SemanticIcon\n        get() = this + \"sign in alternate\"\n\n    @SemanticIconMarker inline val sign_language: SemanticIcon\n        get() = this + \"sign language\"\n\n    @SemanticIconMarker inline val sign_out_alternate: SemanticIcon\n        get() = this + \"sign out alternate\"\n\n    @SemanticIconMarker inline val signal: SemanticIcon\n        get() = this + \"signal\"\n\n    @SemanticIconMarker inline val sim_card: SemanticIcon\n        get() = this + \"sim card\"\n\n    @SemanticIconMarker inline val simplybuilt: SemanticIcon\n        get() = this + \"simplybuilt\"\n\n    @SemanticIconMarker inline val sistrix: SemanticIcon\n        get() = this + \"sistrix\"\n\n    @SemanticIconMarker inline val sitemap: SemanticIcon\n        get() = this + \"sitemap\"\n\n    @SemanticIconMarker inline val sith: SemanticIcon\n        get() = this + \"sith\"\n\n    @SemanticIconMarker inline val skating: SemanticIcon\n        get() = this + \"skating\"\n\n    @SemanticIconMarker inline val sketch: SemanticIcon\n        get() = this + \"sketch\"\n\n    @SemanticIconMarker inline val skiing: SemanticIcon\n        get() = this + \"skiing\"\n\n    @SemanticIconMarker inline val skiing_nordic: SemanticIcon\n        get() = this + \"skiing nordic\"\n\n    @SemanticIconMarker inline val skull_crossbones: SemanticIcon\n        get() = this + \"skull crossbones\"\n\n    @SemanticIconMarker inline val skyatlas: SemanticIcon\n        get() = this + \"skyatlas\"\n\n    @SemanticIconMarker inline val skype: SemanticIcon\n        get() = this + \"skype\"\n\n    @SemanticIconMarker inline val slack: SemanticIcon\n        get() = this + \"slack\"\n\n    @SemanticIconMarker inline val slack_hash: SemanticIcon\n        get() = this + \"slack hash\"\n\n    @SemanticIconMarker inline val slash: SemanticIcon\n        get() = this + \"slash\"\n\n    @SemanticIconMarker inline val sleigh: SemanticIcon\n        get() = this + \"sleigh\"\n\n    @SemanticIconMarker inline val sliders_horizontal: SemanticIcon\n        get() = this + \"sliders horizontal\"\n\n    @SemanticIconMarker inline val slideshare: SemanticIcon\n        get() = this + \"slideshare\"\n\n    @SemanticIconMarker inline val small_home: SemanticIcon\n        get() = this + \"small home\"\n\n    @SemanticIconMarker inline val smile: SemanticIcon\n        get() = this + \"smile\"\n\n    @SemanticIconMarker inline val smile_beam: SemanticIcon\n        get() = this + \"smile beam\"\n\n    @SemanticIconMarker inline val smile_beam_outline: SemanticIcon\n        get() = this + \"smile beam outline\"\n\n    @SemanticIconMarker inline val smile_outline: SemanticIcon\n        get() = this + \"smile outline\"\n\n    @SemanticIconMarker inline val smile_wink: SemanticIcon\n        get() = this + \"smile wink\"\n\n    @SemanticIconMarker inline val smile_wink_outline: SemanticIcon\n        get() = this + \"smile wink outline\"\n\n    @SemanticIconMarker inline val smog: SemanticIcon\n        get() = this + \"smog\"\n\n    @SemanticIconMarker inline val smoking: SemanticIcon\n        get() = this + \"smoking\"\n\n    @SemanticIconMarker inline val smoking_ban: SemanticIcon\n        get() = this + \"smoking ban\"\n\n    @SemanticIconMarker inline val sms: SemanticIcon\n        get() = this + \"sms\"\n\n    @SemanticIconMarker inline val snapchat: SemanticIcon\n        get() = this + \"snapchat\"\n\n    @SemanticIconMarker inline val snapchat_ghost: SemanticIcon\n        get() = this + \"snapchat ghost\"\n\n    @SemanticIconMarker inline val snapchat_square: SemanticIcon\n        get() = this + \"snapchat square\"\n\n    @SemanticIconMarker inline val snowboarding: SemanticIcon\n        get() = this + \"snowboarding\"\n\n    @SemanticIconMarker inline val snowflake: SemanticIcon\n        get() = this + \"snowflake\"\n\n    @SemanticIconMarker inline val snowflake_outline: SemanticIcon\n        get() = this + \"snowflake outline\"\n\n    @SemanticIconMarker inline val snowman: SemanticIcon\n        get() = this + \"snowman\"\n\n    @SemanticIconMarker inline val snowplow: SemanticIcon\n        get() = this + \"snowplow\"\n\n    @SemanticIconMarker inline val soap: SemanticIcon\n        get() = this + \"soap\"\n\n    @SemanticIconMarker inline val socks: SemanticIcon\n        get() = this + \"socks\"\n\n    @SemanticIconMarker inline val solar_panel: SemanticIcon\n        get() = this + \"solar panel\"\n\n    @SemanticIconMarker inline val sort: SemanticIcon\n        get() = this + \"sort\"\n\n    @SemanticIconMarker inline val sort_alphabet_down: SemanticIcon\n        get() = this + \"sort alphabet down\"\n\n    @SemanticIconMarker inline val sort_alphabet_down_alternate: SemanticIcon\n        get() = this + \"sort alphabet down alternate\"\n\n    @SemanticIconMarker inline val sort_alphabet_up: SemanticIcon\n        get() = this + \"sort alphabet up\"\n\n    @SemanticIconMarker inline val sort_alphabet_up_alternate: SemanticIcon\n        get() = this + \"sort alphabet up alternate\"\n\n    @SemanticIconMarker inline val sort_amount_down: SemanticIcon\n        get() = this + \"sort amount down\"\n\n    @SemanticIconMarker inline val sort_amount_down_alternate: SemanticIcon\n        get() = this + \"sort amount down alternate\"\n\n    @SemanticIconMarker inline val sort_amount_up: SemanticIcon\n        get() = this + \"sort amount up\"\n\n    @SemanticIconMarker inline val sort_amount_up_alternate: SemanticIcon\n        get() = this + \"sort amount up alternate\"\n\n    @SemanticIconMarker inline val sort_down: SemanticIcon\n        get() = this + \"sort down\"\n\n    @SemanticIconMarker inline val sort_numeric_down: SemanticIcon\n        get() = this + \"sort numeric down\"\n\n    @SemanticIconMarker inline val sort_numeric_down_alternate: SemanticIcon\n        get() = this + \"sort numeric down alternate\"\n\n    @SemanticIconMarker inline val sort_numeric_up: SemanticIcon\n        get() = this + \"sort numeric up\"\n\n    @SemanticIconMarker inline val sort_numeric_up_alternate: SemanticIcon\n        get() = this + \"sort numeric up alternate\"\n\n    @SemanticIconMarker inline val sort_up: SemanticIcon\n        get() = this + \"sort up\"\n\n    @SemanticIconMarker inline val soundcloud: SemanticIcon\n        get() = this + \"soundcloud\"\n\n    @SemanticIconMarker inline val sourcetree: SemanticIcon\n        get() = this + \"sourcetree\"\n\n    @SemanticIconMarker inline val spa: SemanticIcon\n        get() = this + \"spa\"\n\n    @SemanticIconMarker inline val space_shuttle: SemanticIcon\n        get() = this + \"space shuttle\"\n\n    @SemanticIconMarker inline val speakap: SemanticIcon\n        get() = this + \"speakap\"\n\n    @SemanticIconMarker inline val speaker_deck: SemanticIcon\n        get() = this + \"speaker deck\"\n\n    @SemanticIconMarker inline val spell_check: SemanticIcon\n        get() = this + \"spell check\"\n\n    @SemanticIconMarker inline val spider: SemanticIcon\n        get() = this + \"spider\"\n\n    @SemanticIconMarker inline val spinner: SemanticIcon\n        get() = this + \"spinner\"\n\n    @SemanticIconMarker inline val spinner_loading: SemanticIcon\n        get() = this + \"spinner loading\"\n\n    @SemanticIconMarker inline val splotch: SemanticIcon\n        get() = this + \"splotch\"\n\n    @SemanticIconMarker inline val spotify: SemanticIcon\n        get() = this + \"spotify\"\n\n    @SemanticIconMarker inline val spray_can: SemanticIcon\n        get() = this + \"spray can\"\n\n    @SemanticIconMarker inline val square: SemanticIcon\n        get() = this + \"square\"\n\n    @SemanticIconMarker inline val square_full: SemanticIcon\n        get() = this + \"square full\"\n\n    @SemanticIconMarker inline val square_outline: SemanticIcon\n        get() = this + \"square outline\"\n\n    @SemanticIconMarker inline val square_root_alternate: SemanticIcon\n        get() = this + \"square root alternate\"\n\n    @SemanticIconMarker inline val squarespace: SemanticIcon\n        get() = this + \"squarespace\"\n\n    @SemanticIconMarker inline val stack_exchange: SemanticIcon\n        get() = this + \"stack exchange\"\n\n    @SemanticIconMarker inline val stack_overflow: SemanticIcon\n        get() = this + \"stack overflow\"\n\n    @SemanticIconMarker inline val stackpath: SemanticIcon\n        get() = this + \"stackpath\"\n\n    @SemanticIconMarker inline val stamp: SemanticIcon\n        get() = this + \"stamp\"\n\n    @SemanticIconMarker inline val star: SemanticIcon\n        get() = this + \"star\"\n\n    @SemanticIconMarker inline val star_and_crescent: SemanticIcon\n        get() = this + \"star and crescent\"\n\n    @SemanticIconMarker inline val star_half: SemanticIcon\n        get() = this + \"star half\"\n\n    @SemanticIconMarker inline val star_half_alternate: SemanticIcon\n        get() = this + \"star half alternate\"\n\n    @SemanticIconMarker inline val star_half_outline: SemanticIcon\n        get() = this + \"star half outline\"\n\n    @SemanticIconMarker inline val star_of_david: SemanticIcon\n        get() = this + \"star of david\"\n\n    @SemanticIconMarker inline val star_of_life: SemanticIcon\n        get() = this + \"star of life\"\n\n    @SemanticIconMarker inline val star_outline: SemanticIcon\n        get() = this + \"star outline\"\n\n    @SemanticIconMarker inline val staylinked: SemanticIcon\n        get() = this + \"staylinked\"\n\n    @SemanticIconMarker inline val steam: SemanticIcon\n        get() = this + \"steam\"\n\n    @SemanticIconMarker inline val steam_square: SemanticIcon\n        get() = this + \"steam square\"\n\n    @SemanticIconMarker inline val steam_symbol: SemanticIcon\n        get() = this + \"steam symbol\"\n\n    @SemanticIconMarker inline val step_backward: SemanticIcon\n        get() = this + \"step backward\"\n\n    @SemanticIconMarker inline val step_forward: SemanticIcon\n        get() = this + \"step forward\"\n\n    @SemanticIconMarker inline val stethoscope: SemanticIcon\n        get() = this + \"stethoscope\"\n\n    @SemanticIconMarker inline val sticker_mule: SemanticIcon\n        get() = this + \"sticker mule\"\n\n    @SemanticIconMarker inline val sticky_note: SemanticIcon\n        get() = this + \"sticky note\"\n\n    @SemanticIconMarker inline val sticky_note_outline: SemanticIcon\n        get() = this + \"sticky note outline\"\n\n    @SemanticIconMarker inline val stop: SemanticIcon\n        get() = this + \"stop\"\n\n    @SemanticIconMarker inline val stop_circle: SemanticIcon\n        get() = this + \"stop circle\"\n\n    @SemanticIconMarker inline val stop_circle_outline: SemanticIcon\n        get() = this + \"stop circle outline\"\n\n    @SemanticIconMarker inline val stopwatch: SemanticIcon\n        get() = this + \"stopwatch\"\n\n    @SemanticIconMarker inline val store: SemanticIcon\n        get() = this + \"store\"\n\n    @SemanticIconMarker inline val store_alternate: SemanticIcon\n        get() = this + \"store alternate\"\n\n    @SemanticIconMarker inline val store_alternate_slash: SemanticIcon\n        get() = this + \"store alternate slash\"\n\n    @SemanticIconMarker inline val store_slash: SemanticIcon\n        get() = this + \"store slash\"\n\n    @SemanticIconMarker inline val strava: SemanticIcon\n        get() = this + \"strava\"\n\n    @SemanticIconMarker inline val stream: SemanticIcon\n        get() = this + \"stream\"\n\n    @SemanticIconMarker inline val street_view: SemanticIcon\n        get() = this + \"street view\"\n\n    @SemanticIconMarker inline val strikethrough: SemanticIcon\n        get() = this + \"strikethrough\"\n\n    @SemanticIconMarker inline val stripe: SemanticIcon\n        get() = this + \"stripe\"\n\n    @SemanticIconMarker inline val stripe_s: SemanticIcon\n        get() = this + \"stripe s\"\n\n    @SemanticIconMarker inline val stroopwafel: SemanticIcon\n        get() = this + \"stroopwafel\"\n\n    @SemanticIconMarker inline val studiovinari: SemanticIcon\n        get() = this + \"studiovinari\"\n\n    @SemanticIconMarker inline val stumbleupon: SemanticIcon\n        get() = this + \"stumbleupon\"\n\n    @SemanticIconMarker inline val stumbleupon_circle: SemanticIcon\n        get() = this + \"stumbleupon circle\"\n\n    @SemanticIconMarker inline val subscript: SemanticIcon\n        get() = this + \"subscript\"\n\n    @SemanticIconMarker inline val subway: SemanticIcon\n        get() = this + \"subway\"\n\n    @SemanticIconMarker inline val suitcase: SemanticIcon\n        get() = this + \"suitcase\"\n\n    @SemanticIconMarker inline val suitcase_rolling: SemanticIcon\n        get() = this + \"suitcase rolling\"\n\n    @SemanticIconMarker inline val sun: SemanticIcon\n        get() = this + \"sun\"\n\n    @SemanticIconMarker inline val sun_outline: SemanticIcon\n        get() = this + \"sun outline\"\n\n    @SemanticIconMarker inline val superpowers: SemanticIcon\n        get() = this + \"superpowers\"\n\n    @SemanticIconMarker inline val superscript: SemanticIcon\n        get() = this + \"superscript\"\n\n    @SemanticIconMarker inline val supple: SemanticIcon\n        get() = this + \"supple\"\n\n    @SemanticIconMarker inline val surprise: SemanticIcon\n        get() = this + \"surprise\"\n\n    @SemanticIconMarker inline val surprise_outline: SemanticIcon\n        get() = this + \"surprise outline\"\n\n    @SemanticIconMarker inline val suse: SemanticIcon\n        get() = this + \"suse\"\n\n    @SemanticIconMarker inline val swatchbook: SemanticIcon\n        get() = this + \"swatchbook\"\n\n    @SemanticIconMarker inline val swift: SemanticIcon\n        get() = this + \"swift\"\n\n    @SemanticIconMarker inline val swimmer: SemanticIcon\n        get() = this + \"swimmer\"\n\n    @SemanticIconMarker inline val swimming_pool: SemanticIcon\n        get() = this + \"swimming pool\"\n\n    @SemanticIconMarker inline val symfony: SemanticIcon\n        get() = this + \"symfony\"\n\n    @SemanticIconMarker inline val synagogue: SemanticIcon\n        get() = this + \"synagogue\"\n\n    @SemanticIconMarker inline val sync: SemanticIcon\n        get() = this + \"sync\"\n\n    @SemanticIconMarker inline val sync_alternate: SemanticIcon\n        get() = this + \"sync alternate\"\n\n    @SemanticIconMarker inline val syringe: SemanticIcon\n        get() = this + \"syringe\"\n\n    @SemanticIconMarker inline val table: SemanticIcon\n        get() = this + \"table\"\n\n    @SemanticIconMarker inline val table_tennis: SemanticIcon\n        get() = this + \"table tennis\"\n\n    @SemanticIconMarker inline val tablet: SemanticIcon\n        get() = this + \"tablet\"\n\n    @SemanticIconMarker inline val tablet_alternate: SemanticIcon\n        get() = this + \"tablet alternate\"\n\n    @SemanticIconMarker inline val tablets: SemanticIcon\n        get() = this + \"tablets\"\n\n    @SemanticIconMarker inline val tachometer_alternate: SemanticIcon\n        get() = this + \"tachometer alternate\"\n\n    @SemanticIconMarker inline val tag: SemanticIcon\n        get() = this + \"tag\"\n\n    @SemanticIconMarker inline val tags: SemanticIcon\n        get() = this + \"tags\"\n\n    @SemanticIconMarker inline val tape: SemanticIcon\n        get() = this + \"tape\"\n\n    @SemanticIconMarker inline val tasks: SemanticIcon\n        get() = this + \"tasks\"\n\n    @SemanticIconMarker inline val taxi: SemanticIcon\n        get() = this + \"taxi\"\n\n    @SemanticIconMarker inline val teal_users: SemanticIcon\n        get() = this + \"teal users\"\n\n    @SemanticIconMarker inline val teamspeak: SemanticIcon\n        get() = this + \"teamspeak\"\n\n    @SemanticIconMarker inline val teeth: SemanticIcon\n        get() = this + \"teeth\"\n\n    @SemanticIconMarker inline val teeth_open: SemanticIcon\n        get() = this + \"teeth open\"\n\n    @SemanticIconMarker inline val telegram: SemanticIcon\n        get() = this + \"telegram\"\n\n    @SemanticIconMarker inline val telegram_plane: SemanticIcon\n        get() = this + \"telegram plane\"\n\n    @SemanticIconMarker inline val temperature_high: SemanticIcon\n        get() = this + \"temperature high\"\n\n    @SemanticIconMarker inline val temperature_low: SemanticIcon\n        get() = this + \"temperature low\"\n\n    @SemanticIconMarker inline val tencent_weibo: SemanticIcon\n        get() = this + \"tencent weibo\"\n\n    @SemanticIconMarker inline val tenge: SemanticIcon\n        get() = this + \"tenge\"\n\n    @SemanticIconMarker inline val terminal: SemanticIcon\n        get() = this + \"terminal\"\n\n    @SemanticIconMarker inline val text_height: SemanticIcon\n        get() = this + \"text height\"\n\n    @SemanticIconMarker inline val text_width: SemanticIcon\n        get() = this + \"text width\"\n\n    @SemanticIconMarker inline val th: SemanticIcon\n        get() = this + \"th\"\n\n    @SemanticIconMarker inline val th_large: SemanticIcon\n        get() = this + \"th large\"\n\n    @SemanticIconMarker inline val th_list: SemanticIcon\n        get() = this + \"th list\"\n\n    @SemanticIconMarker inline val theater_masks: SemanticIcon\n        get() = this + \"theater masks\"\n\n    @SemanticIconMarker inline val themeco: SemanticIcon\n        get() = this + \"themeco\"\n\n    @SemanticIconMarker inline val themeisle: SemanticIcon\n        get() = this + \"themeisle\"\n\n    @SemanticIconMarker inline val thermometer: SemanticIcon\n        get() = this + \"thermometer\"\n\n    @SemanticIconMarker inline val thermometer_empty: SemanticIcon\n        get() = this + \"thermometer empty\"\n\n    @SemanticIconMarker inline val thermometer_full: SemanticIcon\n        get() = this + \"thermometer full\"\n\n    @SemanticIconMarker inline val thermometer_half: SemanticIcon\n        get() = this + \"thermometer half\"\n\n    @SemanticIconMarker inline val thermometer_quarter: SemanticIcon\n        get() = this + \"thermometer quarter\"\n\n    @SemanticIconMarker inline val thermometer_three_quarters: SemanticIcon\n        get() = this + \"thermometer three quarters\"\n\n    @SemanticIconMarker inline val think_peaks: SemanticIcon\n        get() = this + \"think peaks\"\n\n    @SemanticIconMarker inline val thumbs_down: SemanticIcon\n        get() = this + \"thumbs down\"\n\n    @SemanticIconMarker inline val thumbs_down_outline: SemanticIcon\n        get() = this + \"thumbs down outline\"\n\n    @SemanticIconMarker inline val thumbs_up: SemanticIcon\n        get() = this + \"thumbs up\"\n\n    @SemanticIconMarker inline val thumbs_up_outline: SemanticIcon\n        get() = this + \"thumbs up outline\"\n\n    @SemanticIconMarker inline val thumbtack: SemanticIcon\n        get() = this + \"thumbtack\"\n\n    @SemanticIconMarker inline val ticket_alternate: SemanticIcon\n        get() = this + \"ticket alternate\"\n\n    @SemanticIconMarker inline val times: SemanticIcon\n        get() = this + \"times\"\n\n    @SemanticIconMarker inline val times_circle: SemanticIcon\n        get() = this + \"times circle\"\n\n    @SemanticIconMarker inline val times_circle_outline: SemanticIcon\n        get() = this + \"times circle outline\"\n\n    @SemanticIconMarker inline val tint: SemanticIcon\n        get() = this + \"tint\"\n\n    @SemanticIconMarker inline val tint_slash: SemanticIcon\n        get() = this + \"tint slash\"\n\n    @SemanticIconMarker inline val tiny_home: SemanticIcon\n        get() = this + \"tiny home\"\n\n    @SemanticIconMarker inline val tired: SemanticIcon\n        get() = this + \"tired\"\n\n    @SemanticIconMarker inline val tired_outline: SemanticIcon\n        get() = this + \"tired outline\"\n\n    @SemanticIconMarker inline val toggle_off: SemanticIcon\n        get() = this + \"toggle off\"\n\n    @SemanticIconMarker inline val toggle_on: SemanticIcon\n        get() = this + \"toggle on\"\n\n    @SemanticIconMarker inline val toilet: SemanticIcon\n        get() = this + \"toilet\"\n\n    @SemanticIconMarker inline val toilet_paper: SemanticIcon\n        get() = this + \"toilet paper\"\n\n    @SemanticIconMarker inline val toilet_paper_slash: SemanticIcon\n        get() = this + \"toilet paper slash\"\n\n    @SemanticIconMarker inline val toolbox: SemanticIcon\n        get() = this + \"toolbox\"\n\n    @SemanticIconMarker inline val tools: SemanticIcon\n        get() = this + \"tools\"\n\n    @SemanticIconMarker inline val tooth: SemanticIcon\n        get() = this + \"tooth\"\n\n    @SemanticIconMarker inline val top_left_corner_add: SemanticIcon\n        get() = this + \"top left corner add\"\n\n    @SemanticIconMarker inline val top_right_corner_add: SemanticIcon\n        get() = this + \"top right corner add\"\n\n    @SemanticIconMarker inline val torah: SemanticIcon\n        get() = this + \"torah\"\n\n    @SemanticIconMarker inline val torii_gate: SemanticIcon\n        get() = this + \"torii gate\"\n\n    @SemanticIconMarker inline val tractor: SemanticIcon\n        get() = this + \"tractor\"\n\n    @SemanticIconMarker inline val trade_federation: SemanticIcon\n        get() = this + \"trade federation\"\n\n    @SemanticIconMarker inline val trademark: SemanticIcon\n        get() = this + \"trademark\"\n\n    @SemanticIconMarker inline val traffic_light: SemanticIcon\n        get() = this + \"traffic light\"\n\n    @SemanticIconMarker inline val trailer: SemanticIcon\n        get() = this + \"trailer\"\n\n    @SemanticIconMarker inline val train: SemanticIcon\n        get() = this + \"train\"\n\n    @SemanticIconMarker inline val tram: SemanticIcon\n        get() = this + \"tram\"\n\n    @SemanticIconMarker inline val transgender: SemanticIcon\n        get() = this + \"transgender\"\n\n    @SemanticIconMarker inline val transgender_alternate: SemanticIcon\n        get() = this + \"transgender alternate\"\n\n    @SemanticIconMarker inline val trash: SemanticIcon\n        get() = this + \"trash\"\n\n    @SemanticIconMarker inline val trash_alternate: SemanticIcon\n        get() = this + \"trash alternate\"\n\n    @SemanticIconMarker inline val trash_alternate_outline: SemanticIcon\n        get() = this + \"trash alternate outline\"\n\n    @SemanticIconMarker inline val trash_restore: SemanticIcon\n        get() = this + \"trash restore\"\n\n    @SemanticIconMarker inline val trash_restore_alternate: SemanticIcon\n        get() = this + \"trash restore alternate\"\n\n    @SemanticIconMarker inline val tree: SemanticIcon\n        get() = this + \"tree\"\n\n    @SemanticIconMarker inline val trello: SemanticIcon\n        get() = this + \"trello\"\n\n    @SemanticIconMarker inline val tripadvisor: SemanticIcon\n        get() = this + \"tripadvisor\"\n\n    @SemanticIconMarker inline val trophy: SemanticIcon\n        get() = this + \"trophy\"\n\n    @SemanticIconMarker inline val truck: SemanticIcon\n        get() = this + \"truck\"\n\n    @SemanticIconMarker inline val truck_monster: SemanticIcon\n        get() = this + \"truck monster\"\n\n    @SemanticIconMarker inline val truck_moving: SemanticIcon\n        get() = this + \"truck moving\"\n\n    @SemanticIconMarker inline val truck_packing: SemanticIcon\n        get() = this + \"truck packing\"\n\n    @SemanticIconMarker inline val truck_pickup: SemanticIcon\n        get() = this + \"truck pickup\"\n\n    @SemanticIconMarker inline val tshirt: SemanticIcon\n        get() = this + \"tshirt\"\n\n    @SemanticIconMarker inline val tty: SemanticIcon\n        get() = this + \"tty\"\n\n    @SemanticIconMarker inline val tumblr: SemanticIcon\n        get() = this + \"tumblr\"\n\n    @SemanticIconMarker inline val tumblr_square: SemanticIcon\n        get() = this + \"tumblr square\"\n\n    @SemanticIconMarker inline val tv: SemanticIcon\n        get() = this + \"tv\"\n\n    @SemanticIconMarker inline val twitch: SemanticIcon\n        get() = this + \"twitch\"\n\n    @SemanticIconMarker inline val twitter: SemanticIcon\n        get() = this + \"twitter\"\n\n    @SemanticIconMarker inline val twitter_square: SemanticIcon\n        get() = this + \"twitter square\"\n\n    @SemanticIconMarker inline val typo3: SemanticIcon\n        get() = this + \"typo3\"\n\n    @SemanticIconMarker inline val uber: SemanticIcon\n        get() = this + \"uber\"\n\n    @SemanticIconMarker inline val ubuntu: SemanticIcon\n        get() = this + \"ubuntu\"\n\n    @SemanticIconMarker inline val uikit: SemanticIcon\n        get() = this + \"uikit\"\n\n    @SemanticIconMarker inline val umbraco: SemanticIcon\n        get() = this + \"umbraco\"\n\n    @SemanticIconMarker inline val umbrella: SemanticIcon\n        get() = this + \"umbrella\"\n\n    @SemanticIconMarker inline val umbrella_beach: SemanticIcon\n        get() = this + \"umbrella beach\"\n\n    @SemanticIconMarker inline val underline: SemanticIcon\n        get() = this + \"underline\"\n\n    @SemanticIconMarker inline val undo: SemanticIcon\n        get() = this + \"undo\"\n\n    @SemanticIconMarker inline val undo_alternate: SemanticIcon\n        get() = this + \"undo alternate\"\n\n    @SemanticIconMarker inline val uniregistry: SemanticIcon\n        get() = this + \"uniregistry\"\n\n    @SemanticIconMarker inline val unity: SemanticIcon\n        get() = this + \"unity\"\n\n    @SemanticIconMarker inline val universal_access: SemanticIcon\n        get() = this + \"universal access\"\n\n    @SemanticIconMarker inline val university: SemanticIcon\n        get() = this + \"university\"\n\n    @SemanticIconMarker inline val unlink: SemanticIcon\n        get() = this + \"unlink\"\n\n    @SemanticIconMarker inline val unlock: SemanticIcon\n        get() = this + \"unlock\"\n\n    @SemanticIconMarker inline val unlock_alternate: SemanticIcon\n        get() = this + \"unlock alternate\"\n\n    @SemanticIconMarker inline val untappd: SemanticIcon\n        get() = this + \"untappd\"\n\n    @SemanticIconMarker inline val upload: SemanticIcon\n        get() = this + \"upload\"\n\n    @SemanticIconMarker inline val ups: SemanticIcon\n        get() = this + \"ups\"\n\n    @SemanticIconMarker inline val usb: SemanticIcon\n        get() = this + \"usb\"\n\n    @SemanticIconMarker inline val user: SemanticIcon\n        get() = this + \"user\"\n\n    @SemanticIconMarker inline val user_alternate: SemanticIcon\n        get() = this + \"user alternate\"\n\n    @SemanticIconMarker inline val user_alternate_slash: SemanticIcon\n        get() = this + \"user alternate slash\"\n\n    @SemanticIconMarker inline val user_astronaut: SemanticIcon\n        get() = this + \"user astronaut\"\n\n    @SemanticIconMarker inline val user_check: SemanticIcon\n        get() = this + \"user check\"\n\n    @SemanticIconMarker inline val user_circle: SemanticIcon\n        get() = this + \"user circle\"\n\n    @SemanticIconMarker inline val user_circle_outline: SemanticIcon\n        get() = this + \"user circle outline\"\n\n    @SemanticIconMarker inline val user_clock: SemanticIcon\n        get() = this + \"user clock\"\n\n    @SemanticIconMarker inline val user_cog: SemanticIcon\n        get() = this + \"user cog\"\n\n    @SemanticIconMarker inline val user_edit: SemanticIcon\n        get() = this + \"user edit\"\n\n    @SemanticIconMarker inline val user_friends: SemanticIcon\n        get() = this + \"user friends\"\n\n    @SemanticIconMarker inline val user_graduate: SemanticIcon\n        get() = this + \"user graduate\"\n\n    @SemanticIconMarker inline val user_injured: SemanticIcon\n        get() = this + \"user injured\"\n\n    @SemanticIconMarker inline val user_lock: SemanticIcon\n        get() = this + \"user lock\"\n\n    @SemanticIconMarker inline val user_md: SemanticIcon\n        get() = this + \"user md\"\n\n    @SemanticIconMarker inline val user_minus: SemanticIcon\n        get() = this + \"user minus\"\n\n    @SemanticIconMarker inline val user_ninja: SemanticIcon\n        get() = this + \"user ninja\"\n\n    @SemanticIconMarker inline val user_nurse: SemanticIcon\n        get() = this + \"user nurse\"\n\n    @SemanticIconMarker inline val user_outline: SemanticIcon\n        get() = this + \"user outline\"\n\n    @SemanticIconMarker inline val user_plus: SemanticIcon\n        get() = this + \"user plus\"\n\n    @SemanticIconMarker inline val user_secret: SemanticIcon\n        get() = this + \"user secret\"\n\n    @SemanticIconMarker inline val user_shield: SemanticIcon\n        get() = this + \"user shield\"\n\n    @SemanticIconMarker inline val user_slash: SemanticIcon\n        get() = this + \"user slash\"\n\n    @SemanticIconMarker inline val user_tag: SemanticIcon\n        get() = this + \"user tag\"\n\n    @SemanticIconMarker inline val user_tie: SemanticIcon\n        get() = this + \"user tie\"\n\n    @SemanticIconMarker inline val user_times: SemanticIcon\n        get() = this + \"user times\"\n\n    @SemanticIconMarker inline val users: SemanticIcon\n        get() = this + \"users\"\n\n    @SemanticIconMarker inline val users_cog: SemanticIcon\n        get() = this + \"users cog\"\n\n    @SemanticIconMarker inline val usps: SemanticIcon\n        get() = this + \"usps\"\n\n    @SemanticIconMarker inline val ussunnah: SemanticIcon\n        get() = this + \"ussunnah\"\n\n    @SemanticIconMarker inline val utensil_spoon: SemanticIcon\n        get() = this + \"utensil spoon\"\n\n    @SemanticIconMarker inline val utensils: SemanticIcon\n        get() = this + \"utensils\"\n\n    @SemanticIconMarker inline val vaadin: SemanticIcon\n        get() = this + \"vaadin\"\n\n    @SemanticIconMarker inline val vector_square: SemanticIcon\n        get() = this + \"vector square\"\n\n    @SemanticIconMarker inline val venus: SemanticIcon\n        get() = this + \"venus\"\n\n    @SemanticIconMarker inline val venus_double: SemanticIcon\n        get() = this + \"venus double\"\n\n    @SemanticIconMarker inline val venus_mars: SemanticIcon\n        get() = this + \"venus mars\"\n\n    @SemanticIconMarker inline val vertically_flipped_cloud: SemanticIcon\n        get() = this + \"vertically flipped cloud\"\n\n    @SemanticIconMarker inline val viacoin: SemanticIcon\n        get() = this + \"viacoin\"\n\n    @SemanticIconMarker inline val viadeo: SemanticIcon\n        get() = this + \"viadeo\"\n\n    @SemanticIconMarker inline val viadeo_square: SemanticIcon\n        get() = this + \"viadeo square\"\n\n    @SemanticIconMarker inline val vial: SemanticIcon\n        get() = this + \"vial\"\n\n    @SemanticIconMarker inline val vials: SemanticIcon\n        get() = this + \"vials\"\n\n    @SemanticIconMarker inline val viber: SemanticIcon\n        get() = this + \"viber\"\n\n    @SemanticIconMarker inline val video: SemanticIcon\n        get() = this + \"video\"\n\n    @SemanticIconMarker inline val video_slash: SemanticIcon\n        get() = this + \"video slash\"\n\n    @SemanticIconMarker inline val vihara: SemanticIcon\n        get() = this + \"vihara\"\n\n    @SemanticIconMarker inline val vimeo: SemanticIcon\n        get() = this + \"vimeo\"\n\n    @SemanticIconMarker inline val vimeo_square: SemanticIcon\n        get() = this + \"vimeo square\"\n\n    @SemanticIconMarker inline val vimeo_v: SemanticIcon\n        get() = this + \"vimeo v\"\n\n    @SemanticIconMarker inline val vine: SemanticIcon\n        get() = this + \"vine\"\n\n    @SemanticIconMarker inline val violet_users: SemanticIcon\n        get() = this + \"violet users\"\n\n    @SemanticIconMarker inline val virus: SemanticIcon\n        get() = this + \"virus\"\n\n    @SemanticIconMarker inline val virus_slash: SemanticIcon\n        get() = this + \"virus slash\"\n\n    @SemanticIconMarker inline val viruses: SemanticIcon\n        get() = this + \"viruses\"\n\n    @SemanticIconMarker inline val vk: SemanticIcon\n        get() = this + \"vk\"\n\n    @SemanticIconMarker inline val vnv: SemanticIcon\n        get() = this + \"vnv\"\n\n    @SemanticIconMarker inline val voicemail: SemanticIcon\n        get() = this + \"voicemail\"\n\n    @SemanticIconMarker inline val volleyball_ball: SemanticIcon\n        get() = this + \"volleyball ball\"\n\n    @SemanticIconMarker inline val volume_down: SemanticIcon\n        get() = this + \"volume down\"\n\n    @SemanticIconMarker inline val volume_mute: SemanticIcon\n        get() = this + \"volume mute\"\n\n    @SemanticIconMarker inline val volume_off: SemanticIcon\n        get() = this + \"volume off\"\n\n    @SemanticIconMarker inline val volume_up: SemanticIcon\n        get() = this + \"volume up\"\n\n    @SemanticIconMarker inline val vote_yea: SemanticIcon\n        get() = this + \"vote yea\"\n\n    @SemanticIconMarker inline val vuejs: SemanticIcon\n        get() = this + \"vuejs\"\n\n    @SemanticIconMarker inline val walking: SemanticIcon\n        get() = this + \"walking\"\n\n    @SemanticIconMarker inline val wallet: SemanticIcon\n        get() = this + \"wallet\"\n\n    @SemanticIconMarker inline val warehouse: SemanticIcon\n        get() = this + \"warehouse\"\n\n    @SemanticIconMarker inline val water: SemanticIcon\n        get() = this + \"water\"\n\n    @SemanticIconMarker inline val wave_square: SemanticIcon\n        get() = this + \"wave square\"\n\n    @SemanticIconMarker inline val waze: SemanticIcon\n        get() = this + \"waze\"\n\n    @SemanticIconMarker inline val weebly: SemanticIcon\n        get() = this + \"weebly\"\n\n    @SemanticIconMarker inline val weibo: SemanticIcon\n        get() = this + \"weibo\"\n\n    @SemanticIconMarker inline val weight: SemanticIcon\n        get() = this + \"weight\"\n\n    @SemanticIconMarker inline val weixin: SemanticIcon\n        get() = this + \"weixin\"\n\n    @SemanticIconMarker inline val whatsapp: SemanticIcon\n        get() = this + \"whatsapp\"\n\n    @SemanticIconMarker inline val whatsapp_square: SemanticIcon\n        get() = this + \"whatsapp square\"\n\n    @SemanticIconMarker inline val wheelchair: SemanticIcon\n        get() = this + \"wheelchair\"\n\n    @SemanticIconMarker inline val whmcs: SemanticIcon\n        get() = this + \"whmcs\"\n\n    @SemanticIconMarker inline val wifi: SemanticIcon\n        get() = this + \"wifi\"\n\n    @SemanticIconMarker inline val wikipedia_w: SemanticIcon\n        get() = this + \"wikipedia w\"\n\n    @SemanticIconMarker inline val wind: SemanticIcon\n        get() = this + \"wind\"\n\n    @SemanticIconMarker inline val window_close: SemanticIcon\n        get() = this + \"window close\"\n\n    @SemanticIconMarker inline val window_close_outline: SemanticIcon\n        get() = this + \"window close outline\"\n\n    @SemanticIconMarker inline val window_maximize: SemanticIcon\n        get() = this + \"window maximize\"\n\n    @SemanticIconMarker inline val window_maximize_outline: SemanticIcon\n        get() = this + \"window maximize outline\"\n\n    @SemanticIconMarker inline val window_minimize: SemanticIcon\n        get() = this + \"window minimize\"\n\n    @SemanticIconMarker inline val window_minimize_outline: SemanticIcon\n        get() = this + \"window minimize outline\"\n\n    @SemanticIconMarker inline val window_restore: SemanticIcon\n        get() = this + \"window restore\"\n\n    @SemanticIconMarker inline val window_restore_outline: SemanticIcon\n        get() = this + \"window restore outline\"\n\n    @SemanticIconMarker inline val windows: SemanticIcon\n        get() = this + \"windows\"\n\n    @SemanticIconMarker inline val wine_bottle: SemanticIcon\n        get() = this + \"wine bottle\"\n\n    @SemanticIconMarker inline val wine_glass: SemanticIcon\n        get() = this + \"wine glass\"\n\n    @SemanticIconMarker inline val wine_glass_alternate: SemanticIcon\n        get() = this + \"wine glass alternate\"\n\n    @SemanticIconMarker inline val wix: SemanticIcon\n        get() = this + \"wix\"\n\n    @SemanticIconMarker inline val wizards_of_the_coast: SemanticIcon\n        get() = this + \"wizards of the coast\"\n\n    @SemanticIconMarker inline val wolf_pack_battalion: SemanticIcon\n        get() = this + \"wolf pack battalion\"\n\n    @SemanticIconMarker inline val won_sign: SemanticIcon\n        get() = this + \"won sign\"\n\n    @SemanticIconMarker inline val wordpress: SemanticIcon\n        get() = this + \"wordpress\"\n\n    @SemanticIconMarker inline val wordpress_simple: SemanticIcon\n        get() = this + \"wordpress simple\"\n\n    @SemanticIconMarker inline val world: SemanticIcon\n        get() = this + \"world\"\n\n    @SemanticIconMarker inline val wpbeginner: SemanticIcon\n        get() = this + \"wpbeginner\"\n\n    @SemanticIconMarker inline val wpexplorer: SemanticIcon\n        get() = this + \"wpexplorer\"\n\n    @SemanticIconMarker inline val wpforms: SemanticIcon\n        get() = this + \"wpforms\"\n\n    @SemanticIconMarker inline val wpressr: SemanticIcon\n        get() = this + \"wpressr\"\n\n    @SemanticIconMarker inline val wrench: SemanticIcon\n        get() = this + \"wrench\"\n\n    @SemanticIconMarker inline val x_ray: SemanticIcon\n        get() = this + \"x ray\"\n\n    @SemanticIconMarker inline val xbox: SemanticIcon\n        get() = this + \"xbox\"\n\n    @SemanticIconMarker inline val xing: SemanticIcon\n        get() = this + \"xing\"\n\n    @SemanticIconMarker inline val xing_square: SemanticIcon\n        get() = this + \"xing square\"\n\n    @SemanticIconMarker inline val y_combinator: SemanticIcon\n        get() = this + \"y combinator\"\n\n    @SemanticIconMarker inline val yahoo: SemanticIcon\n        get() = this + \"yahoo\"\n\n    @SemanticIconMarker inline val yammer: SemanticIcon\n        get() = this + \"yammer\"\n\n    @SemanticIconMarker inline val yandex: SemanticIcon\n        get() = this + \"yandex\"\n\n    @SemanticIconMarker inline val yandex_international: SemanticIcon\n        get() = this + \"yandex international\"\n\n    @SemanticIconMarker inline val yarn: SemanticIcon\n        get() = this + \"yarn\"\n\n    @SemanticIconMarker inline val yellow_users: SemanticIcon\n        get() = this + \"yellow users\"\n\n    @SemanticIconMarker inline val yelp: SemanticIcon\n        get() = this + \"yelp\"\n\n    @SemanticIconMarker inline val yen_sign: SemanticIcon\n        get() = this + \"yen sign\"\n\n    @SemanticIconMarker inline val yin_yang: SemanticIcon\n        get() = this + \"yin yang\"\n\n    @SemanticIconMarker inline val yoast: SemanticIcon\n        get() = this + \"yoast\"\n\n    @SemanticIconMarker inline val youtube: SemanticIcon\n        get() = this + \"youtube\"\n\n    @SemanticIconMarker inline val youtube_square: SemanticIcon\n        get() = this + \"youtube square\"\n\n    @SemanticIconMarker inline val zhihu: SemanticIcon\n        get() = this + \"zhihu\"\n}\n","@file:Suppress(\"Detekt.TooManyFunctions\", \"unused\", \"UnsafeCastFromDynamic\")\n\npackage de.peekandpoke.kraft.components\n\nimport kotlinx.html.CommonAttributeGroupFacade\nimport kotlinx.html.js.*\nimport org.w3c.dom.DragEvent\nimport org.w3c.dom.events.*\nimport org.w3c.dom.pointerevents.PointerEvent\n\n/**\n * Adds an onAnimationEnd handler.\n *\n * The event is raised when a css animation ends.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/animationend_event\n */\nfun CommonAttributeGroupFacade.onAnimationEnd(handler: (Event) -> Unit) {\n    consumer.onTagEvent(this, \"onanimationend\", handler.asDynamic())\n}\n\n/**\n * Adds an auxClick handler.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/auxclick_event\n */\nfun CommonAttributeGroupFacade.onAuxClick(handler: (PointerEvent) -> Unit) {\n    consumer.onTagEvent(this, \"onauxclick\", handler.asDynamic())\n}\n\n/**\n * Adds an onBlur handler.\n *\n * This event does NOT bubble while [onFocusOut] does.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/blur_event\n */\nfun CommonAttributeGroupFacade.onBlur(handler: (Event) -> Unit) {\n    onBlurFunction = handler.asDynamic()\n}\n\n/**\n * Adds an onChange handler.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event\n */\nfun CommonAttributeGroupFacade.onChange(handler: (Event) -> Unit) {\n    onChangeFunction = handler.asDynamic()\n}\n\n/**\n * Adds an onClick handler.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event\n */\nfun CommonAttributeGroupFacade.onClick(handler: (PointerEvent) -> Unit) {\n    onClickFunction = handler.asDynamic()\n}\n\n/**\n * Adds an onClick handler.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event\n */\nfun CommonAttributeGroupFacade.onClickStoppingEvent(handler: (PointerEvent) -> Unit) = onClick { e ->\n    e.preventDefault()\n    e.stopPropagation()\n    handler(e.asDynamic())\n}\n\n\n/**\n * Adds an onClick and an onAuxClick handler.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/auxclick_event\n */\nfun CommonAttributeGroupFacade.onClickOrAuxClick(handler: (PointerEvent) -> Unit) {\n    onClick(handler)\n    onAuxClick(handler)\n}\n\n/**\n * Adds an onContextMenu handler.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/contextmenu_event\n */\nfun CommonAttributeGroupFacade.onContextMenu(handler: (PointerEvent) -> Unit) {\n    onContextMenuFunction = handler.asDynamic()\n}\n\n/**\n * Adds an onContextMenu handler and prevents the default.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/contextmenu_event\n */\nfun CommonAttributeGroupFacade.onContextMenuStoppingEvent(handler: (UIEvent) -> Unit) = onContextMenu { e ->\n    e.preventDefault()\n    e.stopPropagation()\n    handler(e.asDynamic())\n}\n\n/**\n * Adds an onDragOver handler and prevents the default.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dragover_event\n */\nfun CommonAttributeGroupFacade.onDragOver(handler: (DragEvent) -> Unit) {\n    onDragOverFunction = handler.asDynamic()\n}\n\n/**\n * Adds an onDragLeave handler and prevents the default.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dragleave_event\n */\nfun CommonAttributeGroupFacade.onDragLeave(handler: (DragEvent) -> Unit) {\n    onDragLeaveFunction = handler.asDynamic()\n}\n\n/**\n * Adds an onDrop handler and prevents the default.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/drop_event\n */\nfun CommonAttributeGroupFacade.onDrop(handler: (DragEvent) -> Unit) {\n    onDropFunction = handler.asDynamic()\n}\n\n/**\n * Adds an onError handler.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/error_event\n */\nfun CommonAttributeGroupFacade.onError(handler: (Event) -> Unit) {\n    onErrorFunction = handler.asDynamic()\n}\n\n/**\n * Adds an onFocus handler.\n *\n * This event does NOT bubble while [onFocusIn] does.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/focus_event\n */\nfun CommonAttributeGroupFacade.onFocus(handler: (FocusEvent) -> Unit) {\n    onFocusFunction = handler.asDynamic()\n}\n\n/**\n * Add an onFocusIn handler.\n *\n * The event DOES bubble while [onFocus] does not.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/focusin_event\n */\nfun CommonAttributeGroupFacade.onFocusIn(handler: (FocusEvent) -> Unit) {\n    onFocusInFunction = handler.asDynamic()\n}\n\n/**\n * Add an onFocusOut handler.\n *\n * This event DOES bubble while [onBlur] does not.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/focusout_event\n */\nfun CommonAttributeGroupFacade.onFocusOut(handler: (FocusEvent) -> Unit) {\n    onFocusOutFunction = handler.asDynamic()\n}\n\n/**\n * Adds an onInput handler.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event\n */\nfun CommonAttributeGroupFacade.onInput(handler: (InputEvent) -> Unit) {\n    onInputFunction = handler.asDynamic()\n}\n\n/**\n * Adds an onKeyDown handler.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event\n */\nfun CommonAttributeGroupFacade.onKeyDown(handler: (KeyboardEvent) -> Unit) {\n    onKeyDownFunction = handler.asDynamic()\n}\n\n/**\n * Adds an onKeyPress handler.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/keypress_event\n */\n@Deprecated(\"Use onKeyDown instead\", ReplaceWith(\"onKeyDown\"))\nfun CommonAttributeGroupFacade.onKeyPress(handler: (KeyboardEvent) -> Unit) {\n    onKeyPressFunction = handler.asDynamic()\n}\n\n/**\n * Adds an onKeyUp handler.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/keyup_event\n */\nfun CommonAttributeGroupFacade.onKeyUp(handler: (KeyboardEvent) -> Unit) {\n    onKeyUpFunction = handler.asDynamic()\n}\n\n/**\n * Adds an onMouseDown handler.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/mousedown_event\n */\nfun CommonAttributeGroupFacade.onMouseDown(handler: (MouseEvent) -> Unit) {\n    onMouseDownFunction = handler.asDynamic()\n}\n\n/**\n * Adds an onMouseDown handler.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseenter_event\n */\nfun CommonAttributeGroupFacade.onMouseEnter(handler: (MouseEvent) -> Unit) {\n    consumer.onTagEvent(this, \"onmouseenter\", handler.asDynamic())\n}\n\n/**\n * Adds an onMouseDown handler.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseleave_event\n */\nfun CommonAttributeGroupFacade.onMouseLeave(handler: (MouseEvent) -> Unit) {\n    consumer.onTagEvent(this, \"onmouseleave\", handler.asDynamic())\n}\n\n/**\n * Adds an onMouseMove handler.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/mousemove_event\n */\nfun CommonAttributeGroupFacade.onMouseMove(handler: (MouseEvent) -> Unit) {\n    onMouseMoveFunction = handler.asDynamic()\n}\n\n/**\n * Adds an onMouseOver handler.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseover_event\n */\nfun CommonAttributeGroupFacade.onMouseOver(handler: (MouseEvent) -> Unit) {\n    onMouseOverFunction = handler.asDynamic()\n}\n\n/**\n * Adds an onMouseOut handler.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseout_event\n */\nfun CommonAttributeGroupFacade.onMouseOut(handler: (MouseEvent) -> Unit) {\n    onMouseOutFunction = handler.asDynamic()\n}\n\n/**\n * Adds an onMouseUp handler.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseup_event\n */\nfun CommonAttributeGroupFacade.onMouseUp(handler: (MouseEvent) -> Unit) {\n    onMouseUpFunction = handler.asDynamic()\n}\n\n/**\n * Adds an onWheel handler when the mouse wheel is used.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/wheel_event\n */\nfun CommonAttributeGroupFacade.onWheel(handler: (WheelEvent) -> Unit) {\n    onWheelFunction = handler.asDynamic()\n}\n\n/**\n * Add an onSelect handler.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/select_event\n */\nfun CommonAttributeGroupFacade.onSelect(handler: (InputEvent) -> Unit) {\n    onSelectFunction = handler.asDynamic()\n}\n\n/**\n * onSubmit handler\n */\nfun CommonAttributeGroupFacade.onSubmit(handler: (Event) -> Unit) {\n    onSubmitFunction = {\n        it.preventDefault()\n        handler(it.asDynamic())\n    }\n}\n","package de.peekandpoke.kraft.streams.addons\n\nimport de.peekandpoke.kraft.streams.Stream\nimport de.peekandpoke.kraft.streams.StreamWrapper\nimport de.peekandpoke.kraft.utils.DebouncingTimer\n\n/**\n * Debounce the incoming values by the given [delayMs]\n */\nfun <T> Stream<T>.debounce(\n    delayMs: Int,\n    delayFirstMs: Int = 3,\n): Stream<T> = StreamDebounceOperator(this, delayMs, delayFirstMs)\n\nfun debouncedFunc(delayMs: Int = 200, block: () -> Unit): () -> Unit {\n    val timer = DebouncingTimer(delayMs)\n\n    return {\n        timer.invoke(block)\n    }\n}\n\nfun debouncedFuncExceptFirst(delayMs: Int = 200, block: () -> Unit): () -> Unit {\n    val timer = DebouncingTimer(delayMs = delayMs, delayFirstMs = 3)\n\n    return {\n        timer.invoke(block)\n    }\n}\n\n/**\n * Implementation of a debouncing stream\n */\nprivate class StreamDebounceOperator<T>(\n    wrapped: Stream<T>,\n    delayMs: Int,\n    delayFirstMs: Int,\n) : StreamWrapper<T>(wrapped) {\n\n    private val debounce = DebouncingTimer(delayMs, delayFirstMs)\n\n    override fun handleIncoming(value: T) {\n        debounce {\n            super.handleIncoming(value)\n        }\n    }\n}\n","package de.peekandpoke.kraft.addons.semanticui.forms.old.select\n\nimport de.peekandpoke.kraft.semanticui.SemanticTag\nimport org.w3c.dom.HTMLInputElement\n\ninternal class SelectFieldController<T>(private val component: SelectFieldComponent<T>) {\n\n    enum class State {\n        Closed,\n        Opening,\n        Open,\n        Closing,\n    }\n\n    var state by component.value(State.Closed)\n\n    ////  STATE MODIFICATIONS  /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    fun toggleState() {\n        state = when (state) {\n            State.Closed -> State.Opening\n            State.Closing -> State.Opening\n\n            State.Open -> State.Closing\n            State.Opening -> State.Closing\n        }\n\n        if (isOpen()) {\n            getInputField()?.focus()\n        }\n    }\n\n    fun advanceState() {\n        state = when (state) {\n            State.Closed, State.Open -> state\n            State.Closing -> State.Closed\n            State.Opening -> State.Open\n        }\n    }\n\n    fun isClosed() = state == State.Closed || state == State.Closing\n\n    fun isOpen() = !isClosed()\n\n    fun close() {\n        state = when (state) {\n            State.Closed, State.Closing -> state\n            else -> State.Closing\n        }\n    }\n\n    fun open() {\n        state = when (state) {\n            State.Open, State.Opening -> state\n            else -> State.Opening\n        }\n    }\n\n    fun getInputField() = component.dom?.querySelector(\"input.search\") as? HTMLInputElement\n\n    ////  RENDERING  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    fun applyStateOnField(tag: SemanticTag): SemanticTag = when (state) {\n        State.Open -> tag.active.visible\n        State.Opening -> tag.active.visible\n        State.Closing -> tag.visible\n        State.Closed -> tag\n    }\n\n    fun applyStateOnOptions(tag: SemanticTag): SemanticTag = when (state) {\n        State.Open -> tag.transition.visible\n        State.Opening -> tag.transition.visible.with(\"slide down in\")\n        State.Closing -> tag.transition.visible.with(\"slide down out\")\n        State.Closed -> tag.transition.hidden\n    }\n}\n","package de.peekandpoke.kraft.addons.semanticui.forms.old.select\n\nimport de.peekandpoke.kraft.components.comp\nimport kotlinx.html.Tag\nimport kotlin.reflect.KMutableProperty0\n\nfun SelectFieldComponent.Config<String>.option(realValue: String) =\n    option(realValue = realValue, formValue = realValue) { +realValue }\n\n@Suppress(\"FunctionName\")\nfun <T : Any?> Tag.SelectField(\n    value: T,\n    onChange: (T) -> Unit,\n    configure: SelectFieldComponent.Config<T>.() -> Unit = {}\n) =\n    SelectFieldComponent.Config(\n        value = value, onChange = onChange,\n    ).apply(configure)\n        .let { config -> comp(config.asProps) { ctx -> SelectFieldComponent(ctx) } }\n\n@Suppress(\"FunctionName\")\nfun <T> Tag.SelectField(\n    property: KMutableProperty0<T>,\n    configure: SelectFieldComponent.Config<T>.() -> Unit = {}\n) =\n    SelectField(property.get(), property::set, configure)\n","package de.peekandpoke.kraft.components\n\nimport de.peekandpoke.kraft.components.state.ComponentStateProperty\nimport de.peekandpoke.kraft.components.state.ComponentStreamProperty\nimport de.peekandpoke.kraft.streams.Stream\nimport de.peekandpoke.kraft.streams.StreamSource\nimport de.peekandpoke.kraft.streams.Unsubscribe\nimport de.peekandpoke.kraft.utils.launch\nimport de.peekandpoke.kraft.vdom.VDom\nimport de.peekandpoke.kraft.vdom.VDomEngine\nimport de.peekandpoke.ultra.common.MutableTypedAttributes\nimport kotlinx.coroutines.delay\nimport org.w3c.dom.HTMLElement\nimport kotlin.properties.ReadOnlyProperty\n\n/**\n * Base class of all Components\n */\n@Suppress(\"FunctionName\", \"Detekt.TooManyFunctions\")\nabstract class Component<PROPS>(val ctx: Ctx<PROPS>) {\n\n    companion object {\n        private var nextDomKey = 1\n\n        fun getNextDomKey() = \"--component-$nextDomKey--\".also { nextDomKey += 1 }\n    }\n\n    /**\n     * Lifecycle hooks for components\n     */\n    class LifeCycle<PROPS> {\n        /**\n         * Hook with no callback parameters\n         */\n        class Hook {\n            private val listeners = mutableListOf<() -> Unit>()\n\n            /**\n             * Registers a listener.\n             */\n            operator fun invoke(block: () -> Unit) {\n                listeners.add(block)\n            }\n\n            /**\n             * Notifies all listeners.\n             */\n            fun notify() {\n                listeners.forEach { it() }\n            }\n        }\n\n        /**\n         * Hook for props update\n         */\n        inner class NextPropsHook<PROPS> {\n            private val listeners = mutableListOf<(newProps: PROPS, previousProps: PROPS) -> Unit>()\n\n            /**\n             * Registers a listener.\n             */\n            operator fun invoke(block: (new: PROPS, old: PROPS) -> Unit) {\n                listeners.add(block)\n            }\n\n            /**\n             * Notifies all listeners.\n             */\n            fun notify(new: PROPS, old: PROPS) {\n                listeners.forEach { it(new, old) }\n            }\n        }\n\n        /**\n         * Brings the [LifeCycle] object into scope.\n         */\n        operator fun invoke(block: LifeCycle<PROPS>.() -> Unit) {\n            this.block()\n        }\n\n        /** Hook called when the component was mounted */\n        val onMount = Hook()\n\n        /** Hook called when the DOM of the component was updated */\n        val onUpdate = Hook()\n\n        /** Hook called when the component was unmounted */\n        val onUnmount = Hook()\n\n        /** Hook called when the component receives new props */\n        val onNextProps = NextPropsHook<PROPS>()\n    }\n\n    /** The attributes of the component */\n    val attributes: MutableTypedAttributes = MutableTypedAttributes.empty()\n\n    /** Accessor for the parent component */\n    val parent: Component<*>? get() = _parent\n\n    /** Public getter for the Props */\n    val props: PROPS get() = _props\n\n    /** The Dom node to which the component is rendered */\n    val dom: HTMLElement? get() = _dom\n\n    /** The life-cycle [LifeCycle] that the component exposes */\n    val lifecycle: LifeCycle<PROPS> = LifeCycle()\n\n    /** An automatically generated unique dom key for the component instance. */\n    val autoDomKey: String = getNextDomKey()\n\n    /** Pointer to the low level bridge Component for example for Preact */\n    internal var lowLevelBridgeComponent: Any? = null\n\n    /** Backing field for the [parent] */\n    private var _parent: Component<*>? = ctx.parent\n\n    /** Backing field for the [props] */\n    private var _props: PROPS = ctx.props\n\n    /** Backing field for the [dom] */\n    private var _dom: HTMLElement? = null\n\n    /** Flag indicating if the component needs to be redrawn */\n    private var needsRedraw = true\n\n    /** Render cache with the last render result */\n    private var renderCache: dynamic = null\n\n\n    /** A list of stream unsubscribe functions. Will be called when the component is removed */\n    private val unSubscribers = mutableListOf<Unsubscribe>()\n\n    /** Map of state values of any kind */\n    internal val internalData = mutableMapOf<String, Any?>()\n\n    /**\n     * Every component needs to implement this method\n     */\n    abstract fun VDom.render()\n\n    //  Life-cycle hooks  /////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Called when the component is mounted\n     */\n    internal fun onMount(dom: HTMLElement?) {\n        _setDom(dom)\n\n        lifecycle.onMount.notify()\n    }\n\n    /**\n     * Called when the dom was updated. This is called after the render cycle.\n     */\n    internal fun onUpdate(dom: HTMLElement?) {\n        _setDom(dom)\n\n        lifecycle.onUpdate.notify()\n    }\n\n    /**\n     * Called when the component was removed from the dom\n     *\n     * Unsubscribes all async / stream listeners.\n     * Calls [onUnmount] on the component.\n     * Clears the [dom] reference.\n     */\n    internal fun onUnmount() {\n        // unsubscribe from all stream subscriptions\n        unSubscribers.forEach { it() }\n\n        lifecycle.onUnmount.notify()\n\n        _setDom(null)\n    }\n\n    /**\n     * Called when the component receives new props.\n     *\n     * This function is only called when shouldRedraw(nextProps) returns true.\n     *\n     * @param new The new props the component just received\n     * @param old The previous props the component had\n     */\n    private fun onNextProps(new: PROPS, old: PROPS) {\n        if (new != old) {\n            lifecycle.onNextProps.notify(new = new, old = old)\n        }\n    }\n\n    /**\n     * Returns 'true' when the component should redraw.\n     *\n     * By default, returns [props] != [nextProps]\n     */\n    open fun shouldRedraw(nextProps: PROPS): Boolean {\n//        console.log(\"nextProps\", this, nextProps, props, nextProps != props)\n        return props != nextProps\n    }\n\n    /**\n     * Triggers a redraw\n     */\n    fun triggerRedraw() {\n        if (needsRedraw) {\n            return\n        }\n\n        needsRedraw = true\n\n        ctx.engine.triggerRedraw(this)\n    }\n\n    //  Stream Helpers  ///////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Subscribes to a [Stream].\n     *\n     * When the components is destroyed, the subscription will be unsubscribed automatically.\n     */\n    operator fun <T> Stream<T>.invoke(handler: (T) -> Unit): () -> Unit {\n\n        return this.subscribeToStream(handler).apply {\n            unSubscribers.add(this)\n        }\n    }\n\n    /**\n     * Subscribes to a [Stream].\n     *\n     * When the components is destroyed, the subscription will be unsubscribed automatically.\n     */\n    internal fun <T> Stream<T>.subscribe(handler: (T) -> Unit): () -> Unit = this(handler)\n\n    //  State Helpers  ///////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Creates a read write property for the components state.\n     *\n     * When the value of the property is changed the component will redraw itself.\n     *\n     * @param initial  The initial value of the property\n     * @param onChange Callback to be called when the value has changed\n     */\n    fun <T> value(initial: T, onChange: ((T) -> Unit)? = null): ComponentStateProperty<T> {\n\n        return ComponentStateProperty(\n            component = this,\n            initialValue = initial,\n            onChange = onChange\n        )\n    }\n\n    /**\n     * Creates a property that is subscribed to a stream.\n     *\n     * The property will always contain the current value of the stream.\n     * When a new value is received from the stream the component redraws itself.\n     *\n     * @param stream The stream to subscribe to.\n     */\n    fun <T> subscribingTo(stream: Stream<T>, onNext: ((T) -> Unit)? = null): ReadOnlyProperty<Any?, T> {\n\n        var first = true\n\n        stream {\n\n            // The first value will be received right away.\n            // This can lead to situations where the [onNext] callback tries to use the property right away.\n            // But the property is not yet initialized and a very cryptic null pointer errors will arise.\n            // To work around this, we hold the first value back, because the property will be initialized properly.\n            if (first) {\n                first = false\n\n                launch {\n                    delay(1)\n                    // notify about the change and trigger redraw\n                    onNext?.invoke(it)\n                    // redraw the component\n                    triggerRedraw()\n                }\n            } else {\n                // notify about the change and trigger redraw\n                onNext?.invoke(it)\n                // redraw the component\n                triggerRedraw()\n            }\n        }\n\n        return ReadOnlyProperty { _, _ -> stream() }\n    }\n\n    /**\n     * Creates a property that is backed by a [StreamSource]\n     *\n     * When ever a value is written to the property it will also by passed into the stream.\n     * The stream will be configured using [config] and will be then be subscribed to.\n     *\n     * This way we can implement e.g. debouncing of input values, for example:\n     *\n     * ```\n     * private var search by stream(\"\", { debounce(300) }) { reload() }\n     * ```\n     *\n     * @param initial The initial value\n     * @param config  Configures the stream before subscribing to it\n     * @param handler Handler for values published by the stream\n     */\n    fun <T> stream(\n        initial: T,\n        config: (Stream<T>.() -> Stream<T>)? = null,\n        handler: (T) -> Unit = {}\n    ): ComponentStreamProperty<T> {\n\n        val stream = StreamSource(initial)\n\n        // Configure the stream, subscribe and invoke the handler with all new values\n        val configured = when (config) {\n            null -> stream\n            else -> stream.config()\n        }\n\n        // Subscribe to the configured stream.\n        // NOTICE: little hack here with \"launch\", to prevent the value being published twice.\n        launch {\n            delay(1)\n            configured { handler(it) }\n        }\n\n        return ComponentStreamProperty(component = this, stream = stream)\n    }\n\n    //  Ref Helpers  /////////////////////////////////////////////////////////////////////////////////////////////////\n\n    fun <C : Component<*>> createRef() = ComponentRef.Tracker<C>()\n\n    //  Private functions  //////////////////////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Internal function for setting the [dom] element of the component\n     */\n    private fun _setDom(dom: HTMLElement?) {\n        this._dom = dom\n    }\n\n    /**\n     * Internal function called by the [VDomEngine] when the component is about to be rendered.\n     *\n     * Return 'true' when the component needs a re-draw.\n     *\n     * The [newCtx] contains the next set of [PROPS]. These are passed to [shouldRedraw].\n     */\n    internal fun _internalShouldComponentUpdate(newCtx: Ctx<PROPS>): Boolean {\n\n        if (shouldRedraw(newCtx.props)) {\n            needsRedraw = true\n        }\n\n        val previousProps = _props\n\n        _props = newCtx.props\n        _parent = newCtx.parent\n\n        onNextProps(_props, previousProps)\n\n        return needsRedraw\n    }\n\n    /**\n     * Internal function called by the [VDomEngine] to render the component.\n     *\n     * This method checks for [needsRedraw].\n     * When 'true' then [render] method of the component is called and the result is put into the [renderCache].\n     * When 'false' the [render] method is not called and the [renderCache] is returned.\n     */\n    internal fun _internalRender(): dynamic {\n        if (!needsRedraw) {\n            return renderCache\n        }\n\n        needsRedraw = false\n\n//        console.log(\"rendering component\", this)\n\n        renderCache = ctx.engine.render(this) { render() }\n\n        return renderCache\n    }\n}\n","package de.peekandpoke.kraft.components\n\nimport de.peekandpoke.kraft.vdom.VDomEngine\n\ntypealias NoProps = Ctx<Any?>\n\ndata class Ctx<out PROPS>(\n    val engine: VDomEngine,\n    val parent: Component<*>?,\n    val props: PROPS\n) {\n    companion object {\n        fun of(engine: VDomEngine) = Ctx(engine, null, null)\n    }\n}\n","package de.peekandpoke.kraft.components\n\n/**\n * Base component that has no props and no state\n */\nabstract class PureComponent(ctx: NoProps) : Component<Any?>(ctx)\n","@file:Suppress(\"Detekt.TooManyFunctions\")\n\npackage de.peekandpoke.kraft.components\n\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\n\n/**\n * Creates a functional component with no parameters\n */\nfun component(\n    func: VDom.() -> Unit\n): Tag.() -> Unit = {\n    comp { FuncComp0(it, func) }\n}\n\n/**\n * Creates a functional component with 1 parameter\n */\nfun <P1> component(\n    func: VDom.(P1) -> Unit\n): Tag.(P1) -> Unit = { p1: P1 ->\n    comp(FuncComp1.Props(p1)) { FuncComp1(it, func) }\n}\n\n/**\n * Creates a functional component with 2 parameters\n */\nfun <P1, P2> component(\n    func: VDom.(P1, P2) -> Unit\n): Tag.(P1, P2) -> Unit =\n    { p1: P1, p2: P2 ->\n        comp(FuncComp2.Props(p1, p2)) { FuncComp2(it, func) }\n    }\n\n/**\n * Creates a functional component with 3 parameters\n */\nfun <P1, P2, P3> component(\n    func: VDom.(P1, P2, P3) -> Unit\n): Tag.(P1, P2, P3) -> Unit =\n    { p1: P1, p2: P2, p3: P3 ->\n        comp(FuncComp3.Props(p1, p2, p3)) { FuncComp3(it, func) }\n    }\n\n/**\n * Creates a functional component with 4 parameters\n */\nfun <P1, P2, P3, P4> component(\n    func: VDom.(P1, P2, P3, P4) -> Unit\n): Tag.(P1, P2, P3, P4) -> Unit =\n    { p1: P1, p2: P2, p3: P3, p4: P4 ->\n        comp(FuncComp4.Props(p1, p2, p3, p4)) { FuncComp4(it, func) }\n    }\n\n/**\n * Creates a functional component with 5 parameters\n */\nfun <P1, P2, P3, P4, P5> component(\n    func: VDom.(P1, P2, P3, P4, P5) -> Unit\n): Tag.(P1, P2, P3, P4, P5) -> Unit =\n    { p1: P1, p2: P2, p3: P3, p4: P4, p5: P5 ->\n        comp(FuncComp5.Props(p1, p2, p3, p4, p5)) { FuncComp5(it, func) }\n    }\n\n/**\n * Creates a functional component with 6 parameters\n */\nfun <P1, P2, P3, P4, P5, P6> component(\n    func: VDom.(P1, P2, P3, P4, P5, P6) -> Unit\n): Tag.(P1, P2, P3, P4, P5, P6) -> Unit =\n    { p1: P1, p2: P2, p3: P3, p4: P4, p5: P5, p6: P6 ->\n        comp(FuncComp6.Props(p1, p2, p3, p4, p5, p6)) { FuncComp6(it, func) }\n    }\n\n/**\n * Creates a functional component with 7 parameters\n */\nfun <P1, P2, P3, P4, P5, P6, P7> component(\n    func: VDom.(P1, P2, P3, P4, P5, P6, P7) -> Unit\n): Tag.(P1, P2, P3, P4, P5, P6, P7) -> Unit =\n    { p1: P1, p2: P2, p3: P3, p4: P4, p5: P5, p6: P6, p7: P7 ->\n        comp(FuncComp7.Props(p1, p2, p3, p4, p5, p6, p7)) { FuncComp7(it, func) }\n    }\n\n/**\n * Creates a functional component with 8 parameters\n */\nfun <P1, P2, P3, P4, P5, P6, P7, P8> component(\n    func: VDom.(P1, P2, P3, P4, P5, P6, P7, P8) -> Unit\n): Tag.(P1, P2, P3, P4, P5, P6, P7, P8) -> Unit =\n    { p1: P1, p2: P2, p3: P3, p4: P4, p5: P5, p6: P6, p7: P7, p8: P8 ->\n        comp(FuncComp8.Props(p1, p2, p3, p4, p5, p6, p7, p8)) { FuncComp8(it, func) }\n    }\n\n/**\n * Creates a functional component with 9 parameters\n */\nfun <P1, P2, P3, P4, P5, P6, P7, P8, P9> component(\n    func: VDom.(P1, P2, P3, P4, P5, P6, P7, P8, P9) -> Unit\n): Tag.(P1, P2, P3, P4, P5, P6, P7, P8, P9) -> Unit =\n    { p1: P1, p2: P2, p3: P3, p4: P4, p5: P5, p6: P6, p7: P7, p8: P8, p9: P9 ->\n        comp(FuncComp9.Props(p1, p2, p3, p4, p5, p6, p7, p8, p9)) { FuncComp9(it, func) }\n    }\n\n/**\n * Creates a functional component with 9 parameters\n */\nfun <P1, P2, P3, P4, P5, P6, P7, P8, P9, P10> component(\n    func: VDom.(P1, P2, P3, P4, P5, P6, P7, P8, P9, P10) -> Unit\n): Tag.(P1, P2, P3, P4, P5, P6, P7, P8, P9, P10) -> Unit =\n    { p1: P1, p2: P2, p3: P3, p4: P4, p5: P5, p6: P6, p7: P7, p8: P8, p9: P9, p10: P10 ->\n        comp(FuncComp10.Props(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)) { FuncComp10(it, func) }\n    }\n\ninternal class FuncComp0(\n    ctx: NoProps,\n    private val fn: VDom.() -> Unit,\n) : PureComponent(ctx) {\n    override fun VDom.render() {\n        fn()\n    }\n}\n\ninternal class FuncComp1<P1>(\n    ctx: Ctx<Props<P1>>,\n    private val fn: VDom.(P1) -> Unit,\n) : Component<FuncComp1.Props<P1>>(ctx) {\n\n    data class Props<P1>(\n        val p1: P1,\n    )\n\n    override fun VDom.render() {\n        fn(\n            props.p1,\n        )\n    }\n}\n\ninternal class FuncComp2<P1, P2>(\n    ctx: Ctx<Props<P1, P2>>,\n    private val fn: VDom.(P1, P2) -> Unit,\n) : Component<FuncComp2.Props<P1, P2>>(ctx) {\n\n    data class Props<P1, P2>(\n        val p1: P1,\n        val p2: P2,\n    )\n\n    override fun VDom.render() {\n        fn(\n            props.p1,\n            props.p2,\n        )\n    }\n}\n\ninternal class FuncComp3<P1, P2, P3>(\n    ctx: Ctx<Props<P1, P2, P3>>,\n    private val fn: VDom.(P1, P2, P3) -> Unit,\n) : Component<FuncComp3.Props<P1, P2, P3>>(ctx) {\n\n    data class Props<P1, P2, P3>(\n        val p1: P1,\n        val p2: P2,\n        val p3: P3,\n    )\n\n    override fun VDom.render() {\n        fn(\n            props.p1,\n            props.p2,\n            props.p3,\n        )\n    }\n}\n\ninternal class FuncComp4<P1, P2, P3, P4>(\n    ctx: Ctx<Props<P1, P2, P3, P4>>,\n    private val fn: VDom.(P1, P2, P3, P4) -> Unit,\n) : Component<FuncComp4.Props<P1, P2, P3, P4>>(ctx) {\n\n    data class Props<P1, P2, P3, P4>(\n        val p1: P1,\n        val p2: P2,\n        val p3: P3,\n        val p4: P4,\n    )\n\n    override fun VDom.render() {\n        fn(\n            props.p1,\n            props.p2,\n            props.p3,\n            props.p4,\n        )\n    }\n}\n\ninternal class FuncComp5<P1, P2, P3, P4, P5>(\n    ctx: Ctx<Props<P1, P2, P3, P4, P5>>,\n    private val fn: VDom.(P1, P2, P3, P4, P5) -> Unit,\n) : Component<FuncComp5.Props<P1, P2, P3, P4, P5>>(ctx) {\n\n    data class Props<P1, P2, P3, P4, P5>(\n        val p1: P1,\n        val p2: P2,\n        val p3: P3,\n        val p4: P4,\n        val p5: P5,\n    )\n\n    override fun VDom.render() {\n        fn(\n            props.p1,\n            props.p2,\n            props.p3,\n            props.p4,\n            props.p5,\n        )\n    }\n}\n\ninternal class FuncComp6<P1, P2, P3, P4, P5, P6>(\n    ctx: Ctx<Props<P1, P2, P3, P4, P5, P6>>,\n    private val fn: VDom.(P1, P2, P3, P4, P5, P6) -> Unit,\n) : Component<FuncComp6.Props<P1, P2, P3, P4, P5, P6>>(ctx) {\n\n    data class Props<P1, P2, P3, P4, P5, P6>(\n        val p1: P1,\n        val p2: P2,\n        val p3: P3,\n        val p4: P4,\n        val p5: P5,\n        val p6: P6,\n    )\n\n    override fun VDom.render() {\n        fn(\n            props.p1,\n            props.p2,\n            props.p3,\n            props.p4,\n            props.p5,\n            props.p6,\n        )\n    }\n}\n\ninternal class FuncComp7<P1, P2, P3, P4, P5, P6, P7>(\n    ctx: Ctx<Props<P1, P2, P3, P4, P5, P6, P7>>,\n    private val fn: VDom.(P1, P2, P3, P4, P5, P6, P7) -> Unit,\n) : Component<FuncComp7.Props<P1, P2, P3, P4, P5, P6, P7>>(ctx) {\n\n    data class Props<P1, P2, P3, P4, P5, P6, P7>(\n        val p1: P1,\n        val p2: P2,\n        val p3: P3,\n        val p4: P4,\n        val p5: P5,\n        val p6: P6,\n        val p7: P7,\n    )\n\n    override fun VDom.render() {\n        fn(\n            props.p1,\n            props.p2,\n            props.p3,\n            props.p4,\n            props.p5,\n            props.p6,\n            props.p7,\n        )\n    }\n}\n\ninternal class FuncComp8<P1, P2, P3, P4, P5, P6, P7, P8>(\n    ctx: Ctx<Props<P1, P2, P3, P4, P5, P6, P7, P8>>,\n    private val fn: VDom.(P1, P2, P3, P4, P5, P6, P7, P8) -> Unit,\n) : Component<FuncComp8.Props<P1, P2, P3, P4, P5, P6, P7, P8>>(ctx) {\n\n    data class Props<P1, P2, P3, P4, P5, P6, P7, P8>(\n        val p1: P1,\n        val p2: P2,\n        val p3: P3,\n        val p4: P4,\n        val p5: P5,\n        val p6: P6,\n        val p7: P7,\n        val p8: P8,\n    )\n\n    override fun VDom.render() {\n        fn(\n            props.p1,\n            props.p2,\n            props.p3,\n            props.p4,\n            props.p5,\n            props.p6,\n            props.p7,\n            props.p8,\n        )\n    }\n}\n\ninternal class FuncComp9<P1, P2, P3, P4, P5, P6, P7, P8, P9>(\n    ctx: Ctx<Props<P1, P2, P3, P4, P5, P6, P7, P8, P9>>,\n    private val fn: VDom.(P1, P2, P3, P4, P5, P6, P7, P8, P9) -> Unit,\n) : Component<FuncComp9.Props<P1, P2, P3, P4, P5, P6, P7, P8, P9>>(ctx) {\n\n    data class Props<P1, P2, P3, P4, P5, P6, P7, P8, P9>(\n        val p1: P1,\n        val p2: P2,\n        val p3: P3,\n        val p4: P4,\n        val p5: P5,\n        val p6: P6,\n        val p7: P7,\n        val p8: P8,\n        val p9: P9,\n    )\n\n    override fun VDom.render() {\n        fn(\n            props.p1,\n            props.p2,\n            props.p3,\n            props.p4,\n            props.p5,\n            props.p6,\n            props.p7,\n            props.p8,\n            props.p9,\n        )\n    }\n}\n\ninternal class FuncComp10<P1, P2, P3, P4, P5, P6, P7, P8, P9, P10>(\n    ctx: Ctx<Props<P1, P2, P3, P4, P5, P6, P7, P8, P9, P10>>,\n    private val fn: VDom.(P1, P2, P3, P4, P5, P6, P7, P8, P9, P10) -> Unit,\n) : Component<FuncComp10.Props<P1, P2, P3, P4, P5, P6, P7, P8, P9, P10>>(ctx) {\n\n    data class Props<P1, P2, P3, P4, P5, P6, P7, P8, P9, P10>(\n        val p1: P1,\n        val p2: P2,\n        val p3: P3,\n        val p4: P4,\n        val p5: P5,\n        val p6: P6,\n        val p7: P7,\n        val p8: P8,\n        val p9: P9,\n        val p10: P10,\n    )\n\n    override fun VDom.render() {\n        fn(\n            props.p1,\n            props.p2,\n            props.p3,\n            props.p4,\n            props.p5,\n            props.p6,\n            props.p7,\n            props.p8,\n            props.p9,\n            props.p10,\n        )\n    }\n}\n","package de.peekandpoke.kraft.components.state\n\nimport de.peekandpoke.kraft.components.Component\nimport de.peekandpoke.kraft.utils.launch\nimport kotlin.properties.ObservableProperty\nimport kotlin.reflect.KProperty\n\nclass ComponentStateProperty<T>(\n    private val component: Component<*>,\n    private val initialValue: T,\n    private val onChange: ((T) -> Unit)? = null,\n) : ObservableProperty<T>(initialValue) {\n\n    override fun afterChange(property: KProperty<*>, oldValue: T, newValue: T) {\n        if (oldValue != newValue) {\n            // notify about the change and trigger redraw\n            onChange?.invoke(newValue)\n            // force the component to redraw\n            component.triggerRedraw()\n        }\n    }\n\n    infix fun setupBy(block: suspend () -> Unit): ComponentStateProperty<T> = apply {\n        launch { block() }\n    }\n\n    infix fun onChange(onChange: (T) -> Unit): ComponentStateProperty<T> =\n        ComponentStateProperty(component = component, initialValue = initialValue, onChange = onChange)\n}\n","package de.peekandpoke.kraft.components.state\n\nimport de.peekandpoke.kraft.components.Component\nimport de.peekandpoke.kraft.streams.StreamSource\nimport kotlin.properties.ObservableProperty\nimport kotlin.reflect.KProperty\n\nclass ComponentStreamProperty<T>(\n    val component: Component<*>,\n    val stream: StreamSource<T>,\n) : ObservableProperty<T>(stream()) {\n\n    override fun afterChange(property: KProperty<*>, oldValue: T, newValue: T) {\n\n        if (oldValue != newValue) {\n            // notify about the change and trigger redraw\n            stream(newValue)\n            // force the component to redraw\n            component.triggerRedraw()\n        }\n    }\n}\n","package de.peekandpoke.kraft.components.state\n\nimport de.peekandpoke.kraft.components.Component\nimport de.peekandpoke.kraft.utils.launch\nimport kotlinx.coroutines.delay\nimport kotlinx.coroutines.flow.Flow\nimport kotlinx.coroutines.flow.catch\nimport kotlin.properties.ObservableProperty\nimport kotlin.properties.ReadWriteProperty\nimport kotlin.reflect.KProperty\nimport kotlin.reflect.KType\n\nclass FunctionalComponentStateProperty<P>(\n    val component: Component<*>,\n    val initial: () -> P,\n    type: KType,\n) : ReadWriteProperty<Any?, P> {\n\n    private val lazyInitCallbacks = mutableListOf<suspend () -> Flow<P>>()\n\n    private val onChangeCallbacks = mutableListOf<(P) -> Unit>()\n\n    private val typeStr: String = type.toString()\n\n    override fun getValue(thisRef: Any?, property: KProperty<*>): P {\n\n        @Suppress(\"UNCHECKED_CAST\")\n        return component.internalData.getOrPut(property.getPropertyKey()) {\n            launch {\n                if (lazyInitCallbacks.isNotEmpty()) {\n                    // We delay by 1ms to avoid immediate results of the initializers\n                    delay(1)\n\n                    lazyInitCallbacks.forEach { init ->\n                        init()\n                            .catch { e -> console.error(e) }\n                            .collect { setValue(thisRef, property, it) }\n                    }\n                }\n            }\n\n            // We return and set the initial value\n            initial()\n        } as P\n    }\n\n    override fun setValue(thisRef: Any?, property: KProperty<*>, value: P) {\n        val oldValue = getValue(thisRef, property)\n\n        component.internalData[property.getPropertyKey()] = value\n\n        if (oldValue != value) {\n\n            onChangeCallbacks.forEach {\n                it(value)\n            }\n\n            component.triggerRedraw()\n        }\n    }\n\n    /**\n     * Adds a callback that will initialize the property when it is accessed for the first time.\n     */\n    fun initLazy(block: suspend () -> Flow<P>): FunctionalComponentStateProperty<P> = apply {\n        lazyInitCallbacks.add(block)\n    }\n\n    /**\n     * Adds a callback that will be called whenever the value has changed\n     */\n    fun onChange(block: (P) -> Unit): FunctionalComponentStateProperty<P> = apply {\n        onChangeCallbacks.add(block)\n    }\n\n    private fun KProperty<*>.getPropertyKey(): String = \"value::$name::$typeStr\"\n}\n","package de.peekandpoke.kraft.components.state\n\nimport de.peekandpoke.kraft.components.Component\nimport de.peekandpoke.kraft.streams.Stream\nimport kotlin.properties.ReadOnlyProperty\nimport kotlin.reflect.KProperty\nimport kotlin.reflect.KType\n\nclass FunctionalComponentStreamProperty<T>(\n    val component: Component<*>,\n    val stream: Stream<T>,\n    type: KType,\n) : ReadOnlyProperty<Any?, T> {\n\n    private val typeStr: String = type.toString()\n\n    override fun getValue(thisRef: Any?, property: KProperty<*>): T {\n\n        component.internalData.getOrPut(property.getFullName()) {\n            with(component) {\n                var first = true\n                stream.subscribe {\n                    // The first value will be received right away, but we do not want to trigger a re-draw.\n                    if (first) {\n                        first = false\n                    } else {\n                        // redraw the component\n                        triggerRedraw()\n                    }\n                }\n            }\n        }\n\n        return stream()\n    }\n\n    private fun KProperty<*>.getFullName() = \"sub::$name::$typeStr\"\n}\n","package de.peekandpoke.kraft\n\nimport de.peekandpoke.ultra.common.datetime.kotlinx.initializeJsJodaTimezones\n\n@DslMarker\nannotation class KraftDsl\n\nclass Kraft internal constructor() {\n    companion object {\n        /**\n         * Initializes all external libraries and the returns [Kraft].\n         */\n        fun initialize(): Kraft {\n            initializeJsJodaTimezones()\n\n            return Kraft()\n        }\n    }\n}\n","package de.peekandpoke.kraft.messages\n\n/**\n * Base impl for [Message].\n */\nabstract class MessageBase<S>(override val sender: S) : Message<S> {\n    /** Property indicating if the propagation of the message was stopped */\n    override val isStopped get() = _isStopped\n\n    /** Backing field for isStopped */\n    private var _isStopped = false\n\n    /** Stops the event from propagation */\n    fun stop() {\n        _isStopped = true\n    }\n}\n\n","package de.peekandpoke.kraft.messages\n\nimport de.peekandpoke.kraft.streams.Stream\nimport de.peekandpoke.kraft.streams.StreamSource\n\nclass MessagesHandler {\n    private val _stream = StreamSource<Message<*>?>(null)\n\n    val stream: Stream<Message<*>?> = _stream\n\n    fun send(message: Message<*>) {\n        _stream(message)\n    }\n}\n","package de.peekandpoke.kraft.streams\n\n/**\n * Base class for stream wrappers that map the value type from [WRAPPED] to [RESULT]\n *\n * @param WRAPPED The value type of the wrapped stream\n * @param RESULT  The value type of the resulting stream\n */\nopen class StreamMapper<WRAPPED, RESULT>(\n    /** The wrapped stream */\n    private val wrapped: Stream<WRAPPED>,\n    /** Maps the value of the [wrapped] stream to the result ([WRAPPED] to [RESULT]) */\n    private val mapper: (WRAPPED) -> RESULT,\n    /** Calculates the initial value */\n    private val initial: () -> RESULT = { mapper(wrapped()) }\n) : StreamWrapperBase<WRAPPED, RESULT>(\n    wrapped = wrapped\n) {\n    private var latest: RESULT? = null\n\n    override fun invoke(): RESULT {\n        // If we are not subscribed to the wrapped we might miss values.\n        // So we need to get the value directly.\n        if (!isSubscribedToWrapped()) {\n            return mapper(wrapped()).also { latest = it }\n        }\n\n        // Otherwise we can\n        return latest ?: initial().also { latest = it }\n    }\n\n    override fun handleIncoming(value: WRAPPED) {\n        mapper(value)?.let {\n            latest = it\n            publish(it)\n        }\n    }\n}\n","package de.peekandpoke.kraft.streams\n\n/**\n * Define a stream source to which new values can be written.\n */\ninterface StreamSource<T> : Stream<T> {\n\n    companion object {\n        operator fun <T> invoke(initial: T): StreamSource<T> = StreamSourceImpl(initial)\n    }\n\n    /**\n     * The initial value of the stream source.\n     */\n    val initialValue: T\n\n    /**\n     * Get the readonly version of this stream.\n     */\n    val readonly get() = this as Stream<T>\n\n    /**\n     * The subscription the stream source has.\n     */\n    val subscriptions: Set<StreamHandler<T>>\n\n    /**\n     * Returns the current value of the stream\n     */\n    override operator fun invoke(): T\n\n    /**\n     * Sends the next value to the stream\n     */\n    operator fun invoke(next: T)\n\n    /**\n     * Calls the [block] with the current value of the stream and sends to return value to the stream.\n     *\n     * The new value is only sent when it is different from the current value.\n     */\n    operator fun invoke(block: (T) -> T) {\n        val current = this()\n        val next = block(current)\n\n        if (current != next) {\n            this(next)\n        }\n    }\n\n    /**\n     * Modifies the current value by calling the [block] and sends it the result as the next value.\n     *\n     * The [block] will have the current value of the stream as the scopes this pointer.\n     */\n    fun modify(block: T.() -> T): Unit = invoke(block(invoke()))\n\n    /**\n     * Resets the stream source to its initial value.\n     */\n    fun reset(): T {\n        invoke(initialValue)\n\n        return invoke()\n    }\n\n    /**\n     * Removes all subscriptions\n     */\n    fun removeAllSubscriptions()\n}\n","package de.peekandpoke.kraft.streams\n\nopen class StreamSourceImpl<T>(initial: T) : StreamSource<T> {\n\n    /**\n     * The initial value of the stream source.\n     */\n    override val initialValue = initial\n\n    /**\n     * The current value of the stream\n     */\n    protected var current: T = initial\n\n    /**\n     * All subscriptions to the stream\n     */\n    override val subscriptions: MutableSet<(T) -> Unit> = mutableSetOf()\n\n    /**\n     * @see StreamSource.invoke\n     */\n    override operator fun invoke(): T = current\n\n    /**\n     * @see StreamSource.invoke\n     */\n    override operator fun invoke(next: T) {\n        current = next\n        subscriptions.forEach { it(current) }\n    }\n\n    /**\n     * @see StreamSource.subscribeToStream\n     */\n    override fun subscribeToStream(sub: StreamHandler<T>): Unsubscribe {\n        this.subscriptions.add(sub)\n\n        onSub()\n\n        sub(current)\n\n        return {\n            subscriptions.remove(sub)\n            onUnSub()\n        }\n    }\n\n    /**\n     * @see StreamSource.removeAllSubscriptions\n     */\n    override fun removeAllSubscriptions() {\n        this.subscriptions.clear()\n    }\n\n    /**\n     * Hook called when a subscription was added\n     */\n    protected open fun onSub() {}\n\n    /**\n     * Hook called when a subscription was unsubscribed\n     */\n    protected open fun onUnSub() {}\n}\n","package de.peekandpoke.kraft.streams\n\n/**\n * Base class for stream wrappers that keep the value type\n *\n * @param [wrapped] The wrapped stream\n */\nabstract class StreamWrapper<T>(private val wrapped: Stream<T>) : StreamWrapperBase<T, T>(\n    wrapped = wrapped\n) {\n    override fun invoke(): T = wrapped()\n\n    override fun handleIncoming(value: T): Unit = publish(value)\n}\n","package de.peekandpoke.kraft.streams\n\n/**\n * Base class for all stream wrappers\n */\nabstract class StreamWrapperBase<WRAPPED, RESULT>(\n    /** The wrapped stream */\n    private val wrapped: Stream<WRAPPED>,\n) : Stream<RESULT> {\n\n    /** Unsubscribe function for the subscription on the wrapped stream */\n    private var wrappedUnsubscribe: Unsubscribe? = null\n\n    /** All subscriptions to this stream */\n    private val subscriptions = mutableSetOf<StreamHandler<RESULT>>()\n\n    /**\n     * Returns 'true' if the stream has subscriptions\n     */\n    protected fun isSubscribedToWrapped(): Boolean {\n        return wrappedUnsubscribe != null\n    }\n\n    /**\n     * Handles the next incoming value of the wrapped stream\n     */\n    protected abstract fun handleIncoming(value: WRAPPED)\n\n    /**\n     * Adds a subscription to the stream.\n     *\n     * On subscribing the subscription is immediately called with the current value.\n     *\n     * Returns an unsubscribe function. Calling this function unsubscribes from the stream.\n     *\n     * NOTICE: It is the callers' obligation to unsubscribe from the stream.\n     */\n    override fun subscribeToStream(sub: StreamHandler<RESULT>): Unsubscribe {\n\n        // Subscribe to the wrapped stream if necessary\n        if (wrappedUnsubscribe == null) {\n            // console.log(\"Subscribing to wrapped\")\n\n            wrappedUnsubscribe = wrapped.subscribeToStream {\n                handleIncoming(it)\n            }\n        }\n\n        this.subscriptions.add(sub)\n\n        sub(invoke())\n\n        return {\n            subscriptions.remove(sub)\n\n            // Unsubscribe from the wrapped stream if necessary\n            if (subscriptions.isEmpty()) {\n                // console.log(\"Un-Subscribing from wrapped\")\n\n                wrappedUnsubscribe?.invoke()\n                wrappedUnsubscribe = null\n            }\n        }\n    }\n\n    /**\n     * Publishes the next value\n     */\n    protected fun publish(value: RESULT) {\n        subscriptions.forEach { it(value) }\n    }\n}\n","package de.peekandpoke.kraft.streams.addons\n\nimport de.peekandpoke.kraft.streams.Stream\nimport de.peekandpoke.kraft.streams.StreamSourceImpl\nimport kotlinx.browser.window\nimport kotlin.js.Date\nimport kotlin.math.round\nimport kotlin.time.Duration\n\nfun ticker(intervalMs: Int): Stream<Long> = Ticker(intervalMs)\n\nfun ticker(interval: Duration): Stream<Long> = ticker(interval.inWholeMilliseconds.toInt())\n\ninternal class Ticker(\n    private val intervalMs: Int,\n) : StreamSourceImpl<Long>(0) {\n\n    private val start = Date.now()\n\n    private var interval: Int? = null\n\n    override fun onSub() {\n        if (interval == null) {\n            interval = window.setInterval(::handler, intervalMs)\n        }\n    }\n\n    override fun onUnSub() {\n        if (subscriptions.isEmpty() && interval != null) {\n            window.clearInterval(interval!!)\n            interval = null\n        }\n    }\n\n    private fun handler() {\n        val now = Date.now()\n\n        val counter = round((now - start) / intervalMs).toLong()\n\n        this.invoke(counter)\n    }\n}\n","package de.peekandpoke.kraft.utils\n\n/**\n * Helper class implementing a debouncing timer.\n *\n * The block() passed to [schedule] will only be executed after [delayMs]\n * if no other call to [schedule] occurred in the meanwhile.\n */\nclass DebouncingTimer(private val delayMs: Int, private val delayFirstMs: Int = delayMs) {\n\n    private var counter = 0\n    private var timerId: Int? = null\n\n    /**\n     * Schedules [block] to be called after the timeout.\n     */\n    operator fun invoke(block: () -> Unit) {\n        if (counter++ == 0) {\n            schedule(delayFirstMs, block)\n        } else {\n            schedule(delayMs, block)\n        }\n    }\n\n    /**\n     * Schedules the next timeout.\n     */\n    private fun schedule(delay: Int, block: () -> Unit) {\n        timerId?.let { clearTimeout(it) }\n\n        timerId = setTimeout(delay) {\n            timerId = null\n            block()\n        }\n    }\n}\n","package de.peekandpoke.kraft.utils\n\nimport kotlinx.browser.window\nimport org.w3c.dom.Window\n\n\n/**\n * Helper function for a nicer use of [Window.setTimeout] returning an Int.\n *\n * @return The timer id\n */\nfun setTimeout(timeMs: Int, block: () -> Unit): Int {\n    return window.setTimeout(block, timeMs)\n}\n\n/**\n * Helper function for a nicer use of [Window.clearTimeout].\n */\nfun clearTimeout(timerId: Int) {\n    window.clearTimeout(timerId)\n}\n\n/**\n * Helper function for a nicer use of [Window.setInterval] returning an Int.\n *\n * @return The timer id\n */\nfun setInterval(timeMs: Int, block: () -> Unit): Int {\n    return window.setInterval(block, timeMs)\n}\n\n/**\n * Helper function for a nicer use of [Window.clearInterval].\n */\nfun clearInterval(timerId: Int) {\n    window.clearInterval(timerId)\n}\n","package de.peekandpoke.kraft.utils\n\nimport de.peekandpoke.kraft.streams.Stream\nimport de.peekandpoke.kraft.streams.StreamSource\nimport de.peekandpoke.kraft.streams.Unsubscribe\nimport kotlinx.browser.document\nimport kotlinx.browser.window\nimport org.w3c.dom.events.Event\n\nclass ResponsiveController(\n    private val breakpoints: Breakpoints = Breakpoints.default\n) : Stream<ResponsiveController.State> {\n\n    enum class DisplayType {\n        Desktop,\n        Tablet,\n        Mobile;\n\n        val isDesktop get() = this == Desktop\n        val isNotDesktop = !isDesktop\n\n        val isMobile get() = this == Mobile\n        val isNotMobile = !isMobile\n    }\n\n    data class Breakpoints(\n        val tablet: Int,\n        val desktop: Int,\n    ) {\n        companion object {\n            val default = Breakpoints(tablet = 768, desktop = 1200)\n        }\n    }\n\n    data class State(\n        val windowSize: Vector2D,\n        val displayType: DisplayType,\n    ) {\n        val isDesktop = displayType.isDesktop\n        val isNotDesktop = !isDesktop\n\n        val isMobile = displayType.isMobile\n        val isNotMobile = !isMobile\n    }\n\n    private val stream = StreamSource(createState())\n\n    override fun invoke(): State = stream()\n\n    override fun subscribeToStream(sub: (State) -> Unit): Unsubscribe = stream.subscribeToStream(sub)\n\n    init {\n        window.addEventListener(\"resize\", ::onWindowResize)\n    }\n\n    private fun createState(): State {\n        val w = document.body?.clientWidth ?: 1200\n        val h = document.body?.clientHeight ?: 768\n\n        return State(\n            windowSize = Vector2D(w.toDouble(), h.toDouble()),\n            displayType = when {\n                w >= breakpoints.desktop -> DisplayType.Desktop\n                w >= breakpoints.tablet -> DisplayType.Tablet\n                else -> DisplayType.Mobile\n            }\n        )\n    }\n\n    private fun onWindowResize(@Suppress(\"UNUSED_PARAMETER\") evt: Event) {\n        stream.modify {\n            createState()\n        }\n    }\n}\n","package de.peekandpoke.kraft.utils\n\nimport kotlinx.browser.window\nimport kotlinx.coroutines.*\n\nprivate val dispatcher = window.asCoroutineDispatcher()\n\n//private val dispatcher = Dispatchers.Unconfined\nprivate val scope: CoroutineScope = CoroutineScope(dispatcher + SupervisorJob())\n\nfun <T : Any?> launch(block: suspend () -> T): Job {\n    return scope.launch {\n        block()\n    }\n}\n\nfun <T : Any?> async(block: suspend () -> T): Deferred<T> {\n    return scope.async {\n        block()\n    }\n}\n","package de.peekandpoke.kraft.utils\n\nimport org.w3c.dom.HTMLElement\n\nfun HTMLElement?.absolutePosition(): Vector2D = this?.let { absolutePosition() } ?: Vector2D.zero\n\nfun HTMLElement.absolutePosition(): Vector2D {\n\n    val bounds = getBoundingClientRect()\n\n    return Vector2D(bounds.left, bounds.top)\n}\n","package de.peekandpoke.kraft.utils\n\ndata class Vector2D(val x: Double, val y: Double) {\n    companion object {\n        val zero = Vector2D(0.0, 0.0)\n    }\n\n    operator fun plus(other: Vector2D) = Vector2D(x = x + other.x, y = y + other.y)\n\n    operator fun minus(other: Vector2D) = Vector2D(x = x - other.x, y = y - other.y)\n\n    operator fun div(value: Double) = Vector2D(x = x / value, y = y / value)\n\n    operator fun times(value: Double) = Vector2D(x = x * value, y = y * value)\n}\n\ndata class Rectangle(val x1: Double, val y1: Double, val width: Double, val height: Double) {\n    val topLeft by lazy { Vector2D(x1, y1) }\n    val bottomLeft by lazy { Vector2D(x1, y1 + height) }\n    val topRight by lazy { Vector2D(x1 + width, y1) }\n    val bottomRight by lazy { Vector2D(x1 + width, y1 + height) }\n}\n","package de.peekandpoke.kraft.utils\n\nimport js.objects.Object\n\nfun jsIsObject(o: dynamic): Boolean = jsTypeOf(o) == \"object\"\n\n@Suppress(\"UNUSED_PARAMETER\")\nfun jsIsArray(o: dynamic): Boolean = js(\"(Array.isArray(o))\") as Boolean\n\nfun jsObject(): dynamic = js(\"({})\")\nfun jsArray(): dynamic = js(\"([])\")\n\nfun <T> jsObject(block: T.() -> Unit): T {\n    val obj = jsObject() as T\n    block(obj)\n    return obj\n}\n\nfun jsObjectOf(vararg pairs: Pair<String, dynamic>): dynamic {\n    val obj = jsObject()\n\n    pairs.forEach { (k, v) -> obj[k] = v }\n\n    return obj\n}\n\nfun jsObjectToMap(obj: dynamic): Map<String, Any?> {\n    return Object.keys(obj as Any)\n        .associateWith { jsToKotlin(obj[it]) }\n}\n\nfun jsArrayToList(arr: dynamic): List<Any?> {\n    val result = mutableListOf<Any?>()\n\n    arr.forEach { item ->\n        result.add(jsToKotlin(item))\n    }\n\n    return result.toList()\n}\n\nfun jsToKotlin(it: dynamic): Any? {\n    if (it == null) {\n        return null\n    }\n\n    if (jsIsArray(it)) {\n        return jsArrayToList(it)\n    }\n\n    if (jsIsObject(it)) {\n        return jsObjectToMap(it)\n    }\n\n    return it\n}\n\n/**\n * Converts a map to a raw javascript object\n */\nval <T> Map<String, T>.js\n    get() : dynamic {\n        val obj = jsObject()\n\n        forEach { (k, v) -> obj[k] = v }\n\n        return obj\n    }\n\nval <T> List<T>.js\n    get(): dynamic {\n        val arr = jsArray()\n\n        @Suppress(\"UnsafeCastFromDynamic\")\n        forEach { arr.push(it) }\n\n        return arr\n    }\n\n","package de.peekandpoke.kraft.vdom\n\nimport de.peekandpoke.kraft.components.Component\nimport kotlinx.html.FlowContent\n\nclass VDom(engine: VDomEngine, val component: Component<*>? = null) : FlowContent {\n\n    fun render(builder: VDom.() -> Any?): dynamic {\n        builder()\n        return consumer.finalize().render()\n    }\n\n    override val consumer = engine.createTagConsumer(component)\n\n    override val attributes: MutableMap<String, String>\n        get() = mutableMapOf()\n\n    override val attributesEntries: Collection<Map.Entry<String, String>>\n        get() = emptyList()\n\n    override val emptyTag: Boolean = false\n\n    override val inlineTag: Boolean = false\n\n    override val namespace: String? = null\n\n    override val tagName: String = \"\"\n}\n","package de.peekandpoke.kraft.vdom.preact\n\nimport de.peekandpoke.kraft.components.Component\nimport de.peekandpoke.kraft.components.ComponentRef\nimport de.peekandpoke.kraft.components.Ctx\nimport de.peekandpoke.kraft.utils.js\nimport de.peekandpoke.kraft.utils.jsArray\nimport de.peekandpoke.kraft.utils.jsObject\nimport de.peekandpoke.kraft.vdom.VDomElement\nimport kotlinx.html.Tag\nimport kotlinx.html.Unsafe\nimport kotlinx.html.org.w3c.dom.events.Event\nimport preact.h\nimport kotlin.reflect.KClass\n\ninternal interface PreactElements {\n\n    class PreactComponentRef<C : Component<*>> : ComponentRef<C> {\n\n        internal var ll: PreactLLC? = null\n\n        override fun getOrNull(): C? {\n            @Suppress(\"UNCHECKED_CAST\")\n            return ll?.getComponent() as? C?\n        }\n    }\n\n    data class RootElement(\n        val children: MutableList<VDomElement> = mutableListOf(),\n    ) : VDomElement {\n        override fun appendChild(child: VDomElement) {\n            children.add(child)\n        }\n\n        override fun render(): dynamic {\n            val result = jsArray()\n\n            for (child in children) {\n                result.push(child.render())\n            }\n\n            return result\n        }\n    }\n\n    data class ComponentElement<P, C : Component<P>>(\n        private val componentCtx: Ctx<P>,\n        private val creatorFn: (Ctx<P>) -> C,\n        private val cls: KClass<C>,\n    ) : VDomElement {\n\n        val ref = PreactComponentRef<C>()\n        val ctor = PreactLLC.getLowLevelComponentCtor(cls)\n\n        override fun render(): dynamic {\n\n            return h(\n                ctor,\n                jsObject<PreactLLCProps> {\n                    this.__ctx = componentCtx\n                    @Suppress(\"UNCHECKED_CAST\")\n                    this.__ctor = creatorFn as (Ctx<*>) -> Component<*>\n                    this.__ref = ref\n                },\n            )\n        }\n    }\n\n    data class ContentElement(\n        val content: CharSequence,\n    ) : VDomElement {\n        override fun render(): dynamic {\n            return content\n        }\n    }\n\n    data class TagElement(\n        val tag: Tag,\n        val children: MutableList<VDomElement> = mutableListOf(),\n        val events: MutableMap<String, (Event) -> Any?> = mutableMapOf(),\n    ) : VDomElement {\n\n        private var unsafeContents: MutableList<UnsafeContentBlock>? = null\n\n        fun addUnsafeContent(content: UnsafeContentBlock) {\n            when (val u = unsafeContents) {\n                null -> mutableListOf<UnsafeContentBlock>().also { unsafeContents = it }\n                else -> u\n            }.add(content)\n        }\n\n        override fun appendChild(child: VDomElement) {\n            children.add(child)\n        }\n\n        override fun addEvent(name: String, callback: (Event) -> Any?) {\n            events[name] = callback\n        }\n\n        override fun render(): dynamic {\n            // Convert attributes to plain js object\n            val attrs = tag.attributes.js\n\n            unsafeContents?.let { unsafe ->\n                val allUnsafe = unsafe.joinToString(\"\\n\") { it.content }\n                attrs.dangerouslySetInnerHTML = jsObject {\n                    __html = allUnsafe\n                }\n            }\n\n            // Create a low level array for the render results of the children\n            val childArr = jsArray()\n\n            // map the children to a native array\n            for (child in children) {\n                childArr.push(child.render())\n            }\n\n            // Merge the events into the attributes\n            events.forEach { (k, v) -> attrs[k] = v }\n\n            // Render with mithril\n            return h(tag.tagName, attrs, childArr)\n        }\n    }\n\n    class UnsafeContentBlock : Unsafe {\n        var content = \"\"\n            private set\n\n        override fun String.unaryPlus() {\n            content += this\n        }\n    }\n}\n","package de.peekandpoke.kraft.vdom.preact\n\nimport de.peekandpoke.kraft.utils.jsObject\nimport de.peekandpoke.kraft.vdom.preact.PreactLLC.Companion.getLowLevelComponentCtor\nimport org.w3c.dom.HTMLElement\nimport kotlin.reflect.KClass\nimport de.peekandpoke.kraft.components.Component as KraftComponent\nimport preact.Component as PreactComponent\n\n/**\n * Internal representation of a low level [PreactComponent].\n *\n * Notice that we create a separate subclass of [PreactLLC] for each component class.\n * This is done in [getLowLevelComponentCtor].\n */\ninternal abstract class PreactLLC(\n    val props: PreactLLCProps,\n    context: dynamic,\n) : PreactComponent(props, context) {\n\n    companion object {\n\n        /**\n         * Caches the low level [PreactComponent] constructor for each [KraftComponent].\n         */\n        private val compClass2LLC = mutableMapOf<KClass<out KraftComponent<*>>, dynamic>()\n\n        /**\n         * Creates a subclass of [PreactLLC] for every unique [cls] given.\n         *\n         * The created subclass is reused for the same [cls].\n         *\n         * Why do we do this:\n         *\n         * This helps the Preact VDOM in diffing.\n         * There are some situation, where one component is swapped with another.\n         * This was leading to a lot of weird [ClassCastException] errors.\n         * This approach seems to prevent the problem.\n         */\n        internal fun getLowLevelComponentCtor(cls: KClass<out KraftComponent<*>>): dynamic {\n            return compClass2LLC.getOrPut(cls) {\n\n                // console.log(\"===== component classes: ${compClass2LLC.size} ==\")\n                // console.log(\"++ \", cls.js)\n\n                //\n                // NOTICE: This needs to be exactly here. Only like this we get a unique subclass for every cls.\n                //\n                class Impl(props: PreactLLCProps, context: dynamic) : PreactLLC(props, context)\n\n                // Return the newly created ctor\n                ::Impl.also { ctor ->\n                    // We need to do this to trick, so Preact will see this as a component type:\n                    // see https://github.com/preactjs/preact/blob/10.5.14/src/diff/index.js#L75\n                    ctor.asDynamic().prototype = jsObject {\n                        render = {}\n                    }\n\n                    // console.log(\">> $ctor\")\n                    // console.log(\">> ${ctor.hashCode()}\")\n                }\n            }\n        }\n    }\n\n    /**\n     * The [KraftComponent] which is wrapped by this low level component\n     */\n    @Suppress(\"UNCHECKED_CAST\")\n    private var component: KraftComponent<Any?>? = (props.__ctor(props.__ctx) as KraftComponent<Any?>).also {\n        // Set this low level instance on the component\n        it.lowLevelBridgeComponent = this@PreactLLC\n        // Set this low level instance on the ref\n        props.__ref.ll = this@PreactLLC\n    }\n\n    /**\n     * Get the [KraftComponent] which is wrapped by this low level component\n     */\n    internal fun getComponent(): KraftComponent<Any?>? {\n        return component\n    }\n\n    /**\n     * Hook, called when the component was mounted into the DOM\n     *\n     * See [PreactComponent.componentDidMount]\n     */\n    override fun componentDidMount() {\n        // Update the ref\n        props.__ref.ll = this\n\n        component?.onMount(getDom())\n    }\n\n    /**\n     * Hook, called when the component was updated / re-rendered\n     *\n     * See [PreactComponent.componentDidUpdate]\n     */\n    override fun componentDidUpdate(prevProps: dynamic, prevState: dynamic, snapshot: dynamic) {\n        component?.onUpdate(getDom())\n    }\n\n    /**\n     * Hook, called when the component is about to be unmounted from the DOM\n     *\n     * See [PreactComponent.componentWillUnmount]\n     */\n    override fun componentWillUnmount() {\n        component?.onUnmount()\n        component = null\n    }\n\n    /**\n     * Callback to determine whether the component should update / re-render itself\n     *\n     * See [PreactComponent.shouldComponentUpdate]\n     */\n    override fun shouldComponentUpdate(nextProps: PreactLLCProps, nextState: dynamic): Boolean {\n        // Update the ref\n        nextProps.__ref.ll = this\n\n        return component?._internalShouldComponentUpdate(nextProps.__ctx) ?: false\n    }\n\n    /**\n     * Renders the contents of the component.\n     *\n     * See [PreactComponent.render]\n     */\n    override fun render(props: PreactLLCProps, state: dynamic, context: dynamic): dynamic {\n        return component?._internalRender()\n    }\n\n    /**\n     * Catches component errors.\n     *\n     * See [PreactComponent.componentDidCatch]\n     */\n    override fun componentDidCatch(error: dynamic) {\n        console.log(\"componentDidCatch\", component)\n        console.error(\"Error\", error)\n\n        super.componentDidCatch(error)\n    }\n\n    /**\n     * Get the root [HTMLElement] of the rendered content of the component\n     *\n     * See [PreactComponent.base]\n     */\n    private fun getDom(): HTMLElement? = this.base as? HTMLElement\n}\n","package de.peekandpoke.kraft.vdom.preact\n\nimport de.peekandpoke.kraft.components.Component\nimport de.peekandpoke.kraft.components.ComponentRef\nimport de.peekandpoke.kraft.components.Ctx\nimport de.peekandpoke.kraft.vdom.VDomElement\nimport de.peekandpoke.kraft.vdom.VDomTagConsumer\nimport kotlinx.html.Entities\nimport kotlinx.html.Tag\nimport kotlinx.html.Unsafe\nimport kotlinx.html.org.w3c.dom.events.Event\nimport kotlin.reflect.KClass\n\n/**\n * Implementation of [VDomTagConsumer] for the mithril engine\n *\n * see: https://mithril.js.org\n */\ninternal class PreactTagConsumer(\n    override val engine: PreactVDomEngine,\n    override val host: Component<*>?,\n) : VDomTagConsumer {\n\n    /** Flag whether the debug mode is enabled */\n    override val isDebugMode: Boolean = engine.options.debugMode\n\n    /** The root element */\n    private val root = PreactElements.RootElement()\n\n    /** The stack of elements we are visiting */\n    private val stack = mutableListOf<VDomElement>(root)\n\n    override fun <P, C : Component<P>> onComponent(\n        props: P,\n        creatorFn: (Ctx<P>) -> C,\n        cls: KClass<C>,\n    ): ComponentRef<C> {\n//        console.log(\"onComponent\", params, component)\n\n        val element = PreactElements.ComponentElement(\n            Ctx(engine, host, props),\n            creatorFn,\n            cls,\n        )\n\n        stack.last().appendChild(element)\n\n        return element.ref\n    }\n\n    override fun finalize(): VDomElement {\n//        console.log(\"finalize\")\n\n        return stack.first()\n    }\n\n    override fun onTagAttributeChange(tag: Tag, attribute: String, value: String?) {\n//        console.log(\"onTagAttributeChange\", tag, attribute, value)\n    }\n\n    override fun onTagComment(content: CharSequence) {\n        console.log(\"onTagComment\", content)\n    }\n\n    override fun onTagContent(content: CharSequence) {\n//        console.log(\"onTagContent\", content)\n\n        stack.last().appendChild(\n            PreactElements.ContentElement(content)\n        )\n    }\n\n    override fun onTagContentEntity(entity: Entities) {\n//        console.log(\"onTagContentEntity\", entity)\n    }\n\n    override fun onTagContentUnsafe(block: Unsafe.() -> Unit) {\n        // see https://github.com/preactjs/preact/issues/844\n        (stack.last() as? PreactElements.TagElement)\n            ?.addUnsafeContent(\n                PreactElements.UnsafeContentBlock().apply(block)\n            )\n    }\n\n    override fun onTagEnd(tag: Tag) {\n//        console.log(\"onTagEnd\", tag)\n\n        stack.removeLast()\n    }\n\n    override fun onTagEvent(tag: Tag, event: String, value: (Event) -> Unit) {\n//        console.log(\"onTagEvent\", tag, event, value)\n\n        stack.last().addEvent(event, value)\n    }\n\n    override fun onTagStart(tag: Tag) {\n//        console.log(\"onTagStart\", tag)\n\n        val element = PreactElements.TagElement(\n            tag = tag\n        )\n\n        stack.last().appendChild(element)\n\n        stack.add(element)\n    }\n}\n","package de.peekandpoke.kraft.vdom.preact\n\nimport de.peekandpoke.kraft.utils.jsObject\nimport de.peekandpoke.kraft.vdom.VDom\nimport de.peekandpoke.kraft.vdom.VDomEngine\nimport de.peekandpoke.kraft.vdom.VDomTagConsumer\nimport org.w3c.dom.HTMLElement\nimport de.peekandpoke.kraft.components.Component as KraftComponent\nimport preact.Component as PreactComponent\n\nclass PreactVDomEngine(override val options: VDomEngine.Options) : VDomEngine {\n\n    companion object {\n        operator fun invoke(\n            element: HTMLElement,\n            options: VDomEngine.Options = VDomEngine.Options.default,\n            view: VDom.() -> Any?,\n        ): PreactVDomEngine {\n            return PreactVDomEngine(options).apply {\n                mount(element, view)\n            }\n        }\n    }\n\n    override fun mount(element: HTMLElement, view: VDom.() -> Any?) {\n\n        val lowLevelRoot = render { view() }\n\n        preact.render(lowLevelRoot, element)\n    }\n\n    override fun createTagConsumer(host: KraftComponent<*>?): VDomTagConsumer {\n        return PreactTagConsumer(this, host)\n    }\n\n    override fun triggerRedraw(component: KraftComponent<*>) {\n        (component.lowLevelBridgeComponent as? PreactComponent)?.setState(jsObject())\n    }\n}\n","package de.peekandpoke.kraft.addons.forms.validation.comparable\n\nimport de.peekandpoke.kraft.addons.forms.validation.GenericRule\nimport de.peekandpoke.kraft.addons.forms.validation.KraftFormsRuleDsl\nimport de.peekandpoke.kraft.addons.forms.validation.Rule\n\n@KraftFormsRuleDsl\nfun <T : Comparable<T>> inRange(\n    from: T,\n    to: T,\n    message: (T) -> String,\n): Rule<T> = GenericRule(\n    messageFn = message,\n    checkFn = { it in from..to },\n)\n\n@KraftFormsRuleDsl\nfun <T : Comparable<T>> greaterThan(\n    value: T,\n    message: (T) -> String,\n): Rule<T> = GenericRule(\n    messageFn = message,\n    checkFn = { it > value },\n)\n\n@KraftFormsRuleDsl\nfun <T : Comparable<T>> greaterThanOrEqual(\n    value: T,\n    message: (T) -> String,\n): Rule<T> = GenericRule(\n    messageFn = message,\n    checkFn = { it >= value }\n)\n\n@KraftFormsRuleDsl\nfun <T : Comparable<T>> lessThan(\n    value: T,\n    message: (T) -> String,\n): Rule<T> = GenericRule(\n    messageFn = message,\n    checkFn = { it < value }\n)\n\n@KraftFormsRuleDsl\nfun <T : Comparable<T>> lessThanOrEqual(\n    value: T,\n    message: (T) -> String,\n): Rule<T> = GenericRule(\n    messageFn = message,\n    checkFn = { it <= value }\n)\n","package de.peekandpoke.kraft.addons.forms.validation.numbers\n\nimport de.peekandpoke.kraft.addons.forms.validation.GenericRule\nimport de.peekandpoke.kraft.addons.forms.validation.KraftFormsRuleDsl\nimport de.peekandpoke.kraft.addons.forms.validation.Rule\n\n@KraftFormsRuleDsl\nfun <T : Number?> inRange(\n    from: Number,\n    to: Number,\n    message: (T) -> String,\n): Rule<T> = GenericRule(\n    messageFn = message,\n    checkFn = {\n        (it ?: 0).let { v -> from.toDouble() <= v.toDouble() && v.toDouble() <= to.toDouble() }\n    },\n)\n\n@KraftFormsRuleDsl\nfun <T : Number?> inRange(\n    from: Number,\n    to: Number,\n    message: String = \"Must be in range $from .. $to\",\n): Rule<T> =\n    inRange(from, to) { message }\n\n@KraftFormsRuleDsl\nfun <T : Number?> greaterThan(\n    value: Number,\n    message: (T) -> String,\n): Rule<T> = GenericRule(\n    messageFn = message,\n    checkFn = { value.toDouble() < (it ?: 0).toDouble() },\n)\n\n@KraftFormsRuleDsl\nfun <T : Number?> greaterThan(\n    value: Number,\n    message: String = \"Must be greater than $value\",\n): Rule<T> =\n    greaterThan(value) { message }\n\n@KraftFormsRuleDsl\nfun <T : Number?> greaterThanOrEqual(\n    value: Number,\n    message: (T) -> String,\n): Rule<T> = GenericRule(\n    messageFn = message,\n    checkFn = { value.toDouble() <= (it ?: 0).toDouble() }\n)\n\n@KraftFormsRuleDsl\nfun <T : Number?> greaterThanOrEqual(\n    value: Number,\n    message: String = \"Must be greater than $value or equal\",\n): Rule<T> =\n    greaterThanOrEqual(value) { message }\n\n@KraftFormsRuleDsl\nfun <T : Number?> lessThan(\n    value: Number,\n    message: (T) -> String,\n): Rule<T> = GenericRule(\n    messageFn = message,\n    checkFn = { value.toDouble() > (it ?: 0).toDouble() }\n)\n\n@KraftFormsRuleDsl\nfun <T : Number?> lessThan(\n    value: Number,\n    message: String = \"Must be less than $value\",\n): Rule<T> =\n    lessThan(value) { message }\n\n@KraftFormsRuleDsl\nfun <T : Number?> lessThanOrEqual(\n    value: Number,\n    message: (T) -> String,\n): Rule<T> = GenericRule(\n    messageFn = message,\n    checkFn = { value.toDouble() >= (it ?: 0).toDouble() }\n)\n\n@KraftFormsRuleDsl\nfun <T : Number?> lessThanOrEqual(\n    value: Number,\n    message: String = \"Must be less than $value or equal\",\n): Rule<T> =\n    lessThanOrEqual(value) { message }\n","package de.peekandpoke.kraft.addons.forms\n\nimport de.peekandpoke.kraft.components.Component\n\n@DslMarker\nannotation class KraftFormsDsl\n\n@DslMarker\nannotation class KraftFormsSettingDsl\n\n@KraftFormsDsl\nfun <T> Component<T>.formController(): FormController {\n    return FormController(component = this, stopEvents = true)\n}\n\n@KraftFormsDsl\nfun <T> Component<T>.formObserver(): FormController {\n    return FormController(component = this, stopEvents = false)\n}\n","package de.peekandpoke.kraft.addons.routing\n\nfun router(builder: RouterBuilder.() -> Unit): Router = RouterBuilder().apply(builder).build()\n\ntypealias RouterProvider = () -> Router\n","package de.peekandpoke.kraft.examples.fomanticui\n\nimport de.peekandpoke.kraft.addons.routing.RouterComponent\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\nimport kotlinx.html.div\n\n@Suppress(\"FunctionName\")\nfun Tag.App() = comp {\n    App(it)\n}\n\nclass App(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    @Suppress(\"unused\")\n    private val activeRoute by subscribingTo(router.current)\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n\n        console.info(\"rendering app ...\")\n\n        div(\"pusher\") {\n            div(\"full height\") {\n                div(\"toc\") {\n                    AppMenu()\n                }\n            }\n\n            div(\"article\") {\n                RouterComponent(router = router)\n            }\n        }\n    }\n}\n","package de.peekandpoke.kraft.examples.fomanticui\n\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.semanticui.noui\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.*\n\n@Suppress(\"FunctionName\")\nfun Tag.AppMenu() = comp {\n    AppMenu(it)\n}\n\nclass AppMenu(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n\n        ui.vertical.inverted.menu {\n            noui.item {\n                ui.with(\"logo\").icon.image A {\n                    href = routes.homeSlash()\n                    img(src = \"https://fomantic-ui.com/images/logo.png\")\n                }\n\n                a(href = routes.homeSlash()) {\n                    b { +\"FomanticUI + KRAFT\" }\n                }\n            }\n\n            noui.item {\n                noui.header { +\"KRAFT Howto\" }\n                noui.menu {\n                    noui.item A { href = routes.howtoKraftGettingStarted(); +\"Getting started\" }\n                    noui.item A { href = routes.howtoKraftComponentBasics(); +\"Component Basics\" }\n                    noui.item A { href = routes.howtoKraftComponentState(); +\"Component State\" }\n                }\n            }\n\n            noui.item {\n                noui.header { +\"Forms Howto\" }\n                noui.menu {\n                    noui.item A { href = routes.howtoFormsDemo(); +\"Demo\" }\n                }\n            }\n\n            noui.item {\n                noui.header { +\"Building blocks\" }\n                noui.menu {\n                    noui.item A { href = routes.howtoBlocksDragAndDrop(); +\"Drag & Drop\" }\n                    noui.item A { href = routes.howtoBlocksListField(); +\"List field\" }\n                }\n            }\n\n            noui.item {\n                noui.header { +\"Elements\" }\n                noui.menu {\n                    noui.item A { href = routes.elementsButton(); +\"Button\"; percentLabel(66) }\n                    noui.item A { href = routes.elementsContainer(); +\"Container\" }\n                    noui.item A { href = routes.elementsDivider(); +\"Divider\" }\n                    noui.item A { href = routes.elementsEmoji(); +\"Emoji\"; todoLabel() }\n                    noui.item A { href = routes.elementsFlag(); +\"Flag\" }\n                    noui.item A { href = routes.elementsHeader(); +\"Header\" }\n                    noui.item A { href = routes.elementsIcon(); +\"Icon\" }\n                    noui.item A { href = routes.elementsImage(); +\"Image\" }\n                    noui.item A { href = routes.elementsInput(); +\"Input\"; todoLabel() }\n                    noui.item A { href = routes.elementsLabel(); +\"Label\" }\n                    noui.item A { href = routes.elementsList(); +\"List\" }\n                    noui.item A { href = routes.elementsLoader(); +\"Loader\" }\n                    noui.item A { href = routes.elementsPlaceholder(); +\"Placeholder\" }\n                    noui.item A { href = routes.elementsRail(); +\"Rail\"; todoLabel() }\n                    noui.item A { href = routes.elementsReveal(); +\"Reveal\" }\n                    noui.item A { href = routes.elementsSegment(); +\"Segment\"; }\n                    noui.item A { href = routes.elementsStep(); +\"Step\"; todoLabel() }\n                    noui.item A { href = routes.elementsText(); +\"Text\" }\n                }\n            }\n\n            noui.item {\n                noui.header { +\"Collections\" }\n                noui.menu {\n                    noui.item A { href = routes.collectionsBreadcrumb(); +\"Breadcrumb\"; todoLabel() }\n                    noui.item A { href = routes.collectionsForm(); +\"Form\"; todoLabel() }\n                    noui.item A { href = routes.collectionsGrid(); +\"Grid\" }\n                    noui.item A { href = routes.collectionsMenu(); +\"Menu\"; todoLabel() }\n                    noui.item A { href = routes.collectionsMessage(); +\"Message\" }\n                    noui.item A { href = routes.collectionsTable(); +\"Table\"; percentLabel(50) }\n                }\n            }\n\n            noui.item {\n                noui.header { +\"Views\" }\n                noui.menu {\n                    noui.item A { href = routes.viewsAdvertisement(); +\"Advertisement\"; todoLabel() }\n                    noui.item A { href = routes.viewsCard(); +\"Card\" }\n                    noui.item A { href = routes.viewsComment(); +\"Comment\" }\n                    noui.item A { href = routes.viewsFeed(); +\"Feed\"; todoLabel() }\n                    noui.item A { href = routes.viewsItem(); +\"Item\" }\n                    noui.item A { href = routes.viewsStatistic(); +\"Statistic\" }\n                }\n            }\n        }\n    }\n\n    private fun FlowContent.todoLabel() {\n        ui.basic.inverted.red.label { +\"TODO\" }\n    }\n\n    private fun FlowContent.percentLabel(percent: Int) {\n        ui.basic.inverted.yellow.label { +\"$percent %\" }\n    }\n}\n","package de.peekandpoke.kraft.examples.fomanticui.helpers\n\nimport de.peekandpoke.kraft.addons.prismjs.PrismKotlin\nimport de.peekandpoke.kraft.addons.prismjs.PrismPlugin.CopyToClipboard.Companion.copyToClipboard\nimport de.peekandpoke.kraft.addons.prismjs.PrismPlugin.LineNumbers.Companion.lineNumbers\nimport de.peekandpoke.kraft.components.Component\nimport de.peekandpoke.kraft.components.Ctx\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.semanticui.semantic\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.FlowContent\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.HorizontalContentAndCode(\n    code: String,\n    example: FlowContent.() -> Unit\n) = ContentAndCode(\n    code = code,\n    direction = ContentAndCode.Direction.Horizontal,\n    example = example,\n)\n\n@Suppress(\"FunctionName\")\nfun Tag.VerticalContentAndCode(\n    code: String,\n    example: FlowContent.() -> Unit\n) = ContentAndCode(\n    code = code,\n    direction = ContentAndCode.Direction.Vertical,\n    example = example,\n)\n\n@Suppress(\"FunctionName\")\nfun Tag.ContentAndCode(\n    code: String,\n    direction: ContentAndCode.Direction,\n    example: FlowContent.() -> Unit\n) = comp(\n    ContentAndCode.Props(\n        code = code,\n        direction = direction,\n        example = example,\n    )\n) {\n    ContentAndCode(it)\n}\n\nclass ContentAndCode(ctx: Ctx<Props>) : Component<ContentAndCode.Props>(ctx) {\n\n    //  PROPS  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    data class Props(\n        val code: String,\n        val direction: Direction,\n        val example: FlowContent.() -> Unit,\n    )\n\n    enum class Direction {\n        Horizontal,\n        Vertical,\n    }\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n\n        val format = when (props.direction) {\n            Direction.Horizontal -> semantic { two }\n            Direction.Vertical -> semantic { one }\n        }\n\n        ui.stackable.format().column.grid {\n            ui.column {\n                props.example(this)\n            }\n\n            ui.column {\n                PrismKotlin(props.code.trimIndent()) {\n                    lineNumbers()\n                    copyToClipboard()\n                }\n            }\n        }\n    }\n}\n","package de.peekandpoke.kraft.examples.fomanticui.helpers\n\nimport de.peekandpoke.kraft.addons.prismjs.PrismHtml\nimport de.peekandpoke.kraft.addons.prismjs.PrismKotlin\nimport de.peekandpoke.kraft.addons.prismjs.PrismPlugin.CopyToClipboard.Companion.copyToClipboard\nimport de.peekandpoke.kraft.addons.prismjs.PrismPlugin.LineNumbers.Companion.lineNumbers\nimport de.peekandpoke.kraft.addons.prismjs.PrismPlugin.ShowLanguage.Companion.showLanguage\nimport de.peekandpoke.kraft.semanticui.icon\nimport de.peekandpoke.kraft.semanticui.noui\nimport de.peekandpoke.kraft.semanticui.ui\nimport kotlinx.html.*\n\nfun FlowContent.readTheFomanticUiDocs(url: String) {\n    ui.positive.message {\n        icon.book()\n\n        a(href = url, target = \"_blank\") {\n            +\"Read the docs in Fomantic-UI at $url\"\n        }\n    }\n}\n\nfun FlowContent.example(block: DIV.() -> Unit) {\n    div(\"example\") {\n        block()\n    }\n}\n\nfun FlowContent.shortParagraphWireFrame() {\n    p {\n        ui.wireframe.image Img {\n            src = \"images/wireframe/short-paragraph.png\"\n        }\n    }\n}\n\nfun FlowContent.mediaParagraphWireFrame() {\n    p {\n        ui.wireframe.image Img {\n            src = \"images/wireframe/media-paragraph.png\"\n        }\n    }\n}\n\nfun FlowContent.kotlinToHtml(\n    kotlin: String,\n    html: String,\n) {\n    ui.segment {\n        ui.two.column.very.relaxed.grid {\n            noui.column {\n                ui.header { +\"Kotlin\" }\n                PrismKotlin(kotlin) {\n                    lineNumbers()\n                    showLanguage()\n                    copyToClipboard()\n                }\n            }\n\n            noui.column {\n                ui.header { +\"HTML\" }\n                PrismHtml(html) {\n                    lineNumbers()\n                    showLanguage()\n                    copyToClipboard()\n                }\n            }\n        }\n        ui.vertical.divider { +\">>\" }\n    }\n}\n","package de.peekandpoke.kraft.examples.fomanticui.helpers\n\nimport de.peekandpoke.kraft.semanticui.SemanticFn\n\nval allSizes = listOf<SemanticFn>(\n    { mini },\n    { tiny },\n    { small },\n    { medium },\n    { large },\n    { big },\n    { huge },\n    { massive },\n)\n","package de.peekandpoke.kraft.examples.fomanticui.helpers\n\nimport de.peekandpoke.kraft.components.key\nimport de.peekandpoke.kraft.semanticui.noui\nimport de.peekandpoke.kraft.semanticui.ui\nimport kotlinx.html.*\nimport kotlin.reflect.KProperty1\n\ndata class PropRenderer<T, V>(\n    val prop: KProperty1<T, V>,\n    val toStr: (V) -> String?,\n) {\n    fun render(obj: T): String? {\n        return prop.get(obj)?.let { toStr(it) }\n    }\n}\n\noperator fun <T, V> KProperty1<T, V>.invoke(toStr: (V) -> String?) = PropRenderer(this, toStr)\n\nfun <T> FlowContent.renderStateAndDraftTable(\n    state: T,\n    draft: T,\n    properties: List<PropRenderer<T, *>>,\n) {\n    ui.striped.celled.table Table {\n        thead {\n            tr {\n                th { +\"Field\" }\n                th { +\"State\" }\n                th { +\"Draft\" }\n            }\n        }\n        tbody {\n\n            properties.forEach { prop ->\n                tr {\n                    key = prop.prop.name\n\n                    td(\"collapsing\") { +prop.prop.name }\n                    td {\n                        renderCell(state, prop)\n                    }\n                    td {\n                        renderCell(draft, prop)\n                    }\n                }\n            }\n        }\n    }\n}\n\nprivate fun <T> TD.renderCell(obj: T, prop: PropRenderer<T, *>) {\n    val value = prop.prop.get(obj)\n\n    if (value != null) {\n        ui.horizontal.list {\n            noui.item {\n                ui.basic.label { +\"${value::class.simpleName}\" }\n            }\n            noui.item {\n                +\"${prop.render(obj)}\"\n            }\n        }\n    } else {\n        ui.basic.label { +\"null\" }\n    }\n}\n","package de.peekandpoke.kraft.examples.fomanticui\n\nimport de.peekandpoke.kraft.Kraft\nimport de.peekandpoke.kraft.addons.routing.Router\nimport de.peekandpoke.kraft.addons.routing.router\nimport de.peekandpoke.kraft.examples.fomanticui.pages.NotFoundPage\nimport de.peekandpoke.kraft.utils.ResponsiveController\nimport de.peekandpoke.kraft.vdom.preact.PreactVDomEngine\nimport kotlinx.browser.document\nimport org.w3c.dom.HTMLElement\n\n/** Initializes KRAFT */\nval kraft = Kraft.initialize()\n\n/** Create the routes */\nval routes = Routes()\n\n/** Create the router */\nval router: Router = router {\n    mount(routes)\n\n    catchAll { NotFoundPage() }\n}\n\n/** Create the responsive controller */\nval responsiveCtrl = ResponsiveController()\n\nfun main() {\n    val mountPoint = document.getElementById(\"spa\") as HTMLElement\n\n    PreactVDomEngine(mountPoint) {\n        App()\n    }\n\n    router.navigateToWindowUri()\n}\n","package de.peekandpoke.kraft.examples.fomanticui\n\nimport de.peekandpoke.kraft.addons.routing.RouterBuilder\nimport de.peekandpoke.kraft.addons.routing.Static\nimport de.peekandpoke.kraft.examples.fomanticui.pages.collections.breadcrumb.BreadcrumbPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.collections.form.FormPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.collections.grid.GridPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.collections.menu.MenuPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.collections.message.MessagePage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.collections.table.TablePage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.elements.button.ButtonPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.elements.container.ContainerPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.elements.divider.DividerPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.elements.emoji.EmojiPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.elements.flag.FlagPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.elements.header.HeaderPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.elements.icon.IconPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.elements.image.ImagePage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.elements.input.InputPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.elements.label.LabelPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.elements.list.ListPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.elements.loader.LoaderPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.elements.placeholder.PlaceholderPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.elements.rail.RailPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.elements.reveal.RevealPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.elements.segment.SegmentPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.elements.step.StepPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.elements.text.TextPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.home.HomePage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.howto.blocks.dnd.DragAndDropPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.howto.blocks.listfield.ListFieldPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.howto.forms.demo.FormDemosPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.howto.kraft.KraftComponentBasicsPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.howto.kraft.KraftComponentStatePage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.howto.kraft.KraftGettingStartedPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.views.advertisement.AdvertisementPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.views.card.CardPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.views.comment.CommentPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.views.feed.FeedPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.views.item.ItemPage\nimport de.peekandpoke.kraft.examples.fomanticui.pages.views.statistic.StatisticPage\n\nclass Routes {\n    val home = Static(\"\")\n    val homeSlash = Static(\"/\")\n\n    val howtoKraftGettingStarted = Static(\"/howto/kraft/getting-started\")\n    val howtoKraftComponentBasics = Static(\"/howto/kraft/components/basics\")\n    val howtoKraftComponentState = Static(\"/howto/kraft/components/state\")\n\n    val howtoFormsDemo = Static(\"/howto/forms/demo\")\n\n    val howtoBlocksDragAndDrop = Static(\"/howto/blocks/drag-and-drop\")\n    val howtoBlocksListField = Static(\"/howto/blocks/list-field\")\n\n    val elementsButton = Static(\"/elements/button\")\n    val elementsContainer = Static(\"/elements/container\")\n    val elementsDivider = Static(\"/elements/divider\")\n    val elementsEmoji = Static(\"/elements/emoji\")\n    val elementsFlag = Static(\"/elements/flag\")\n    val elementsHeader = Static(\"/elements/header\")\n    val elementsIcon = Static(\"/elements/icon\")\n    val elementsImage = Static(\"/elements/image\")\n    val elementsInput = Static(\"/elements/input\")\n    val elementsLabel = Static(\"/elements/label\")\n    val elementsList = Static(\"/elements/list\")\n    val elementsLoader = Static(\"/elements/loader\")\n    val elementsPlaceholder = Static(\"/elements/placeholder\")\n    val elementsRail = Static(\"/elements/rail\")\n    val elementsReveal = Static(\"/elements/reveal\")\n    val elementsSegment = Static(\"/elements/segment\")\n    val elementsStep = Static(\"/elements/step\")\n    val elementsText = Static(\"/elements/text\")\n\n    val collectionsBreadcrumb = Static(\"/collections/breadcrumb\")\n    val collectionsForm = Static(\"/collections/form\")\n    val collectionsGrid = Static(\"/collections/grid\")\n    val collectionsMenu = Static(\"/collections/menu\")\n    val collectionsMessage = Static(\"/collections/message\")\n    val collectionsTable = Static(\"/collections/table\")\n\n    val viewsAdvertisement = Static(\"/views/advertisement\")\n    val viewsCard = Static(\"/views/card\")\n    val viewsComment = Static(\"/views/comment\")\n    val viewsFeed = Static(\"/views/feed\")\n    val viewsItem = Static(\"/views/item\")\n    val viewsStatistic = Static(\"/views/statistic\")\n}\n\nfun RouterBuilder.mount(routes: Routes) {\n    mount(routes.home) { HomePage() }\n    mount(routes.homeSlash) { HomePage() }\n\n    mount(routes.howtoKraftGettingStarted) { KraftGettingStartedPage() }\n    mount(routes.howtoKraftComponentBasics) { KraftComponentBasicsPage() }\n    mount(routes.howtoKraftComponentState) { KraftComponentStatePage() }\n\n    mount(routes.howtoFormsDemo) { FormDemosPage() }\n\n    mount(routes.howtoBlocksDragAndDrop) { DragAndDropPage() }\n    mount(routes.howtoBlocksListField) { ListFieldPage() }\n\n    mount(routes.elementsButton) { ButtonPage() }\n    mount(routes.elementsContainer) { ContainerPage() }\n    mount(routes.elementsDivider) { DividerPage() }\n    mount(routes.elementsEmoji) { EmojiPage() }\n    mount(routes.elementsFlag) { FlagPage() }\n    mount(routes.elementsHeader) { HeaderPage() }\n    mount(routes.elementsIcon) { IconPage() }\n    mount(routes.elementsImage) { ImagePage() }\n    mount(routes.elementsInput) { InputPage() }\n    mount(routes.elementsLabel) { LabelPage() }\n    mount(routes.elementsList) { ListPage() }\n    mount(routes.elementsLoader) { LoaderPage() }\n    mount(routes.elementsPlaceholder) { PlaceholderPage() }\n    mount(routes.elementsRail) { RailPage() }\n    mount(routes.elementsReveal) { RevealPage() }\n    mount(routes.elementsSegment) { SegmentPage() }\n    mount(routes.elementsStep) { StepPage() }\n    mount(routes.elementsText) { TextPage() }\n\n    mount(routes.collectionsBreadcrumb) { BreadcrumbPage() }\n    mount(routes.collectionsForm) { FormPage() }\n    mount(routes.collectionsGrid) { GridPage() }\n    mount(routes.collectionsMenu) { MenuPage() }\n    mount(routes.collectionsMessage) { MessagePage() }\n    mount(routes.collectionsTable) { TablePage() }\n\n    mount(routes.viewsAdvertisement) { AdvertisementPage() }\n    mount(routes.viewsCard) { CardPage() }\n    mount(routes.viewsComment) { CommentPage() }\n    mount(routes.viewsFeed) { FeedPage() }\n    mount(routes.viewsItem) { ItemPage() }\n    mount(routes.viewsStatistic) { StatisticPage() }\n}\n","package de.peekandpoke.kraft.examples.fomanticui.pages\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.NotFoundPage() = comp {\n    NotFoundPage(it)\n}\n\nclass NotFoundPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Oops ... Not Found\")\n\n        ui.basic.segment {\n            ui.header H1 {\n                +\"Oops ... this page does not exist.\"\n            }\n        }\n    }\n}\n","package de.peekandpoke.kraft.examples.fomanticui.pages.collections.breadcrumb\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.BreadcrumbPage() = comp {\n    BreadcrumbPage(it)\n}\n\nclass BreadcrumbPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Collections | Breadcrumb\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Breadcrumb\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/collections/breadcrumb.html\")\n        }\n    }\n}\n","package de.peekandpoke.kraft.examples.fomanticui.pages.collections.form\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.FormPage() = comp {\n    FormPage(it)\n}\n\nclass FormPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Collections | Form\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Form\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/collections/form.html\")\n        }\n    }\n}\n","@file:Suppress(\"DuplicatedCode\")\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.collections.grid\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.HorizontalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.VerticalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.examples.fomanticui.routes\nimport de.peekandpoke.kraft.semanticui.css\nimport de.peekandpoke.kraft.semanticui.noui\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport generated.ExtractedCodeBlocks\nimport kotlinx.css.Color\nimport kotlinx.css.backgroundColor\nimport kotlinx.html.*\n\n@Suppress(\"FunctionName\")\nfun Tag.GridPage() = comp {\n    GridPage(it)\n}\n\nclass GridPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Collections | Grid\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Grid\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/collections/grid.html\")\n\n            ui.dividing.header H2 { +\"Grids\" }\n\n            renderGrids()\n            renderColumns()\n            renderRows()\n            renderGutters()\n            renderNegativeMargins()\n            renderPageGrids()\n\n            ui.dividing.header H2 { +\"Columns\" }\n\n            renderAutomaticFlow()\n            renderColumnContent()\n            renderColumnWidths()\n\n            ui.dividing.header H2 { +\"Rows\" }\n\n            renderRowGrouping()\n            renderRowClearingContent()\n            renderRowSpecialGrids()\n\n            ui.dividing.header H2 { +\"Varying Grids\" }\n\n            renderNestingGrids()\n            renderColored()\n            renderAutomaticColumnCount()\n            renderCenteringContent()\n\n            ui.dividing.header H2 { +\"Responsive Grids\" }\n\n            renderResponsiveContainers()\n            renderResponsiveStackable()\n            renderResponsiveReverseOrder()\n            renderResponsiveDoubling()\n            renderResponsiveManualTweaks()\n        }\n    }\n\n    private fun FlowContent.renderGrids() = example {\n        ui.header H3 { +\"Grids\" }\n\n        p { +\"Using a grid makes content appear to flow more naturally on your page.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_grid_GridPage_kt_renderGrids,\n        ) {\n            ui.basic.segment.with(\"grid-docs\") {\n                // <CodeBlock renderGrids>\n                ui.grid {\n                    noui.four.wide.column {}\n                    noui.four.wide.column {}\n                    noui.four.wide.column {}\n                    noui.four.wide.column {}\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderColumns() = example {\n        ui.header H3 { +\"Columns\" }\n\n        p {\n            +\"\"\"\n                Grids divide horizontal space into indivisible units called \"columns\". All columns in a grid must \n                specify their width as proportion of the total available row width.\n            \"\"\".trimIndent()\n        }\n\n        p {\n            +\"All grid systems choose an arbitrary column count to allow per row. Fomantic's default theme uses \"\n            b { +\"16 columns\" }\n        }\n\n        p {\n            +\"The example below shows four \"\n            ui.label { +\"four wide\" }\n            +\" columns will fit in the first row, \"\n            ui.label { +\"16 / 4 = 4\" }\n            +\", and three various sized columns in the second row. \"\n            ui.label { +\"2 + 8 + 6 = 16\" }\n        }\n\n        p {\n            +\"The default column count, and other arbitrary features of grids can be changed by adjusting Fomantic \"\n            +\"UI's underlying \"\n            a(href = \"https://fomantic-ui.com/usage/theming.html\") { +\"theming variables.\" }\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_grid_GridPage_kt_renderColumns,\n        ) {\n            ui.basic.segment.with(\"grid-docs\") {\n                // <CodeBlock renderColumns>\n                ui.grid {\n                    noui.four.wide.column {}\n                    noui.four.wide.column {}\n                    noui.four.wide.column {}\n                    noui.four.wide.column {}\n                    noui.two.wide.column {}\n                    noui.eight.wide.column {}\n                    noui.six.wide.column {}\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderRows() = example {\n        ui.header H3 { +\"Rows\" }\n\n        p { +\"Rows are groups of columns which are aligned horizontally.\" }\n\n        p {\n            +\"Rows can either be explicit, marked with an additional \"\n            ui.label { +\"row\" }\n            +\" element, or implicit, automatically occurring when no more space is left in a previous row.\"\n        }\n\n        p {\n            +\"After each group of columns vertical spacing is added to separate each group of columns, \"\n            +\"creating vertical rhythm.\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_grid_GridPage_kt_renderRows,\n        ) {\n            ui.basic.segment.with(\"grid-docs\") {\n                // <CodeBlock renderRows>\n                ui.grid {\n                    noui.row {\n                        noui.four.wide.column {}\n                        noui.four.wide.column {}\n                        noui.four.wide.column {}\n                    }\n                    noui.row {\n                        noui.four.wide.column {}\n                        noui.four.wide.column {}\n                        noui.four.wide.column {}\n                        noui.four.wide.column {}\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderGutters() = example {\n        ui.header H3 { +\"Gutters\" }\n\n        p {\n            +\"Grid columns are separated by areas of white space referred to as \\\"gutters\\\". Gutters improve \"\n            +\"legibility by providing, \"\n            a(href = \"https://en.wikipedia.org/wiki/Negative_space\") { +\"negative space\" }\n            +\" between page elements.\"\n        }\n\n        p {\n            +\"Gutters remain a constant size regardless of the width of the grid, or how many columns are in a row. \"\n            +\"To increase the size of gutters in a particular grid, you can use a \"\n            ui.label { +\"relaxed grid\" }\n            +\" variation.\"\n        }\n\n        p {\n            +\"After each group of columns vertical spacing is added to separate each group of columns, \"\n            +\"creating vertical rhythm.\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_grid_GridPage_kt_renderGutters,\n        ) {\n            ui.basic.segment.with(\"grid-docs\") {\n                // <CodeBlock renderGutters>\n                ui.grid {\n                    noui.two.column.row {\n                        noui.column {}\n                        noui.column {}\n                    }\n                    noui.three.column.row {\n                        noui.column {}\n                        noui.column {}\n                        noui.column {}\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_grid_GridPage_kt_renderGutters_2,\n        ) {\n            ui.basic.segment.with(\"grid-docs\") {\n                // <CodeBlock renderGutters_2>\n                ui.relaxed.grid {\n                    noui.two.column.row {\n                        noui.column {}\n                        noui.column {}\n                    }\n                    noui.three.column.row {\n                        noui.column {}\n                        noui.column {}\n                        noui.column {}\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_grid_GridPage_kt_renderGutters_3,\n        ) {\n            ui.basic.segment.with(\"grid-docs\") {\n                // <CodeBlock renderGutters_3>\n                ui.very.relaxed.grid {\n                    noui.two.column.row {\n                        noui.column {}\n                        noui.column {}\n                    }\n                    noui.three.column.row {\n                        noui.column {}\n                        noui.column {}\n                        noui.column {}\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderNegativeMargins() = example {\n        ui.header H3 { +\"Gutters\" }\n\n        p {\n            +\"Since all grid columns include gutters, grids use \"\n            a(href = \"http://csswizardry.com/2011/08/building-better-grid-systems/\") { +\"negative margins\" }\n            +\" to make sure that the first and last columns sit flush with content outside the grid.\"\n        }\n\n        p {\n            +\"In the following example, you can see even though the top row has padding, the \"\n            ui.label { +\"attached button\" }\n            +\" still sits flush with the edge of the grid.\"\n        }\n\n        p {\n            +\"In some cases, like when a column or row is \"\n            ui.label { +\"colored\" }\n            +\", you may want to avoid using negative margins. You can do this by using a \"\n            ui.label { +\"padded grid\" }\n            +\" variation.\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_grid_GridPage_kt_renderNegativeMargins,\n        ) {\n            ui.basic.segment.with(\"grid-docs\") {\n                // <CodeBlock renderNegativeMargins>\n                ui.top.attached.button { +\"Button before grid\" }\n                ui.grid {\n                    noui.sixteen.wide.column {}\n                    noui.ten.wide.column {}\n                    noui.six.wide.column {}\n                }\n                ui.bottom.attached.button { +\"Button after grid\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderPageGrids() = example {\n        ui.header H3 { +\"Page Grids\" }\n\n        p { +\"Grids are fluid and will automatically flow in size to take the maximum available width.\" }\n\n        p {\n            a(href = routes.elementsContainer()) { +\"Containers\" }\n            +\" are elements designed to limit page content to a reasonable maximum width for display based \"\n            +\"on the size of the user's screen.\"\n        }\n\n        p {\n            +\"Using a \"\n            ui.label { +\"ui grid container\" }\n            +\" is the best way to include top-level page content inside a grid.\"\n        }\n    }\n\n    private fun FlowContent.renderAutomaticFlow() = example {\n        ui.header H3 { +\"Automatic Flow\" }\n\n        p {\n            +\"Most grids do not need to specify rows. Content will automatically flow to the next row when all the \"\n            +\"grid columns are taken in the current row.\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_grid_GridPage_kt_renderAutomaticFlow,\n        ) {\n            ui.basic.segment.with(\"grid-docs\") {\n                // <CodeBlock renderAutomaticFlow>\n                ui.grid {\n                    noui.eight.wide.column {}\n                    noui.eight.wide.column {}\n                    noui.eight.wide.column {}\n                    noui.eight.wide.column {}\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderColumnContent() = example {\n        ui.header H3 { +\"Column Content\" }\n\n        p {\n            +\"Since columns use padding to create gutters, content stylings should not be applied directly to \"\n            +\"columns, but to elements inside of columns.\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_grid_GridPage_kt_renderColumnContent,\n        ) {\n            ui.basic.segment {\n                // <CodeBlock renderColumnContent>\n                ui.three.column.grid {\n                    noui.column {\n                        ui.segment {\n                            ui.fitted.image Img { src = \"images/wireframe/image.png\" }\n                        }\n                    }\n                    noui.column {\n                        ui.segment {\n                            ui.fitted.image Img { src = \"images/wireframe/image.png\" }\n                        }\n                    }\n                    noui.column {\n                        ui.segment {\n                            ui.fitted.image Img { src = \"images/wireframe/image.png\" }\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderColumnWidths() = example {\n        ui.header H3 { +\"Column Widths\" }\n\n        p {\n            +\"Column widths can be specified using \"\n            ui.label { +\"(x) wide\" }\n            +\" class names. If a column cannot fit in a row it will automatically flow to the next row\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_grid_GridPage_kt_renderColumnWidths,\n        ) {\n            ui.basic.segment.with(\"grid-docs\") {\n                // <CodeBlock renderColumnWidths>\n                ui.grid {\n                    noui.eight.wide.column {}\n                    noui.eight.wide.column {}\n                    noui.ten.wide.column {}\n                    noui.six.wide.column {}\n                    noui.four.wide.column {}\n                    noui.twelve.wide.column {}\n                    noui.two.wide.column {}\n                    noui.fourteen.wide.column {}\n                    noui.sixteen.wide.column {}\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderRowGrouping() = example {\n        ui.header H3 { +\"Grouping\" }\n\n        p { +\"Row wrappers allow you to apply variations to a group of columns.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_grid_GridPage_kt_renderRowGrouping,\n        ) {\n            ui.basic.segment.with(\"grid-docs\") {\n                // <CodeBlock renderRowGrouping>\n                ui.four.column.grid {\n                    noui.two.column.row {\n                        noui.column {}\n                    }\n                    noui.column {}\n                    noui.column {}\n                    noui.column {}\n                    noui.column {}\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderRowClearingContent() = example {\n        ui.header H3 { +\"Clearing Content\" }\n\n        p {\n            +\"Row wrappers will automatically clear previous columns, making them useful when using \"\n            ui.label { +\"floated\" }\n            +\" variations.\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_grid_GridPage_kt_renderRowClearingContent,\n        ) {\n            ui.basic.segment.with(\"grid-docs\") {\n                // <CodeBlock renderRowClearingContent>\n                ui.grid {\n                    noui.four.column.row {\n                        noui.left.floated.column {}\n                        noui.right.floated.column {}\n                    }\n                    noui.three.wide.column {}\n                    noui.eight.wide.column {}\n                    noui.five.wide.column {}\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderRowSpecialGrids() = example {\n        ui.header H3 { +\"Special Grids\" }\n\n        p {\n            +\"Additionally, some types of grids, like \"\n            ui.label { +\"divided\" }\n            +\" or \"\n            ui.label { +\"celled\" }\n            +\" require row wrappers to apply formatting correctly.\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_grid_GridPage_kt_renderRowSpecialGrids,\n        ) {\n            ui.basic.segment {\n                // <CodeBlock renderRowSpecialGrids>\n                ui.internally.celled.grid {\n                    noui.row {\n                        noui.three.wide.column {\n                            ui.fitted.image Img { src = \"images/wireframe/image.png\" }\n                        }\n                        noui.ten.wide.column {\n                            ui.fitted.image Img { src = \"images/wireframe/short-paragraph.png\" }\n                        }\n                        noui.three.wide.column {\n                            ui.fitted.image Img { src = \"images/wireframe/image.png\" }\n                        }\n                    }\n                    noui.row {\n                        noui.three.wide.column {\n                            ui.fitted.image Img { src = \"images/wireframe/image.png\" }\n                        }\n                        noui.ten.wide.column {\n                            ui.fitted.image Img { src = \"images/wireframe/media-paragraph.png\" }\n                            ui.fitted.image Img { src = \"images/wireframe/short-paragraph.png\" }\n                        }\n                        noui.three.wide.column {\n                            ui.fitted.image Img { src = \"images/wireframe/image.png\" }\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderNestingGrids() = example {\n        ui.header H3 { +\"Nesting Grids\" }\n\n        p { +\"Grids can be placed inside of other grids, letting you sub-divide columns.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_grid_GridPage_kt_renderNestingGrids,\n        ) {\n            ui.basic.segment.with(\"nested-grid-docs\") {\n                // <CodeBlock renderNestingGrids>\n                ui.two.column.grid {\n                    noui.column {\n                        ui.three.column.grid {\n                            noui.column {}\n                            noui.column {}\n                            noui.column {}\n                        }\n                    }\n                    noui.column {}\n                }\n                ui.two.column.grid {\n                    noui.column {}\n                    noui.column {\n                        ui.grid {\n                            noui.six.wide.column {}\n                            noui.ten.wide.column {}\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderColored() = example {\n        ui.header H3 { +\"Colored\" }\n\n        p {\n            +\"Grids can use named colors variations to add background colors, but only with \"\n            ui.label { +\"padded grid\" }\n            +\" that do not include negative margins.\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_grid_GridPage_kt_renderColored,\n        ) {\n            ui.basic.segment {\n                // <CodeBlock renderColored>\n                ui.equal.width.center.aligned.padded.grid {\n                    noui.row {\n                        noui.olive.column { +\"Olive\" }\n                        noui.black.column { +\"Black\" }\n                    }\n                    noui.row {\n                        css { backgroundColor = Color(\"#869D05\") }\n                        noui.column { +\"Custom colored row\" }\n                    }\n                    noui.row {\n                        noui.orange.column { +\"Olive\" }\n                        noui.red.column { +\"Black\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderAutomaticColumnCount() = example {\n        ui.header H3 { +\"Automatic Column Count\" }\n\n        p {\n            +\"The \"\n            ui.label { +\"equal width\" }\n            +\" variation will automatically divide column width evenly. This is useful with dynamic content \"\n            +\"where you do not know the column count in advance.\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_grid_GridPage_kt_renderAutomaticColumnCount,\n        ) {\n            ui.basic.segment.with(\"grid-docs\") {\n                // <CodeBlock renderAutomaticColumnCount>\n                ui.equal.width.grid {\n                    noui.column {}\n                    noui.column {}\n                    noui.column {}\n                    noui.equal.width.row {\n                        noui.column {}\n                        noui.column {}\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderCenteringContent() = example {\n        ui.header H3 { +\"Centering Content\" }\n\n        p {\n            +\"If a row does not take up all sixteen grid columns, you can use a \"\n            ui.label { +\"centered\" }\n            +\" variation to center the column contents inside the grid.\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_grid_GridPage_kt_renderAutomaticColumnCount,\n        ) {\n            ui.basic.segment.with(\"grid-docs\") {\n                // <CodeBlock renderCenteringContent>\n                ui.two.column.centered.grid {\n                    noui.column {}\n                    noui.four.column.centered.row {\n                        noui.column {}\n                        noui.column {}\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderResponsiveContainers() = example {\n        ui.header H3 { +\"Centering Content\" }\n\n        p {\n            +\"A \"\n            a(href = routes.elementsContainer()) { +\"container\" }\n            +\" can be used alongside a grid to provide a responsive, fixed width container for wrapping the \"\n            +\"contents of a page.\"\n        }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_grid_GridPage_kt_renderResponsiveContainers,\n        ) {\n            ui.basic.segment.with(\"grid-docs\") {\n                // <CodeBlock renderResponsiveContainers>\n                ui.grid.container {\n                    noui.four.wide.column {}\n                    noui.four.wide.column {}\n                    noui.four.wide.column {}\n                    noui.four.wide.column {}\n                    noui.four.wide.column {}\n                    noui.four.wide.column {}\n                    noui.four.wide.column {}\n                    noui.four.wide.column {}\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderResponsiveStackable() = example {\n        ui.header H3 { +\"Stackable\" }\n\n        p {\n            +\"A \"\n            ui.label { +\"stackable grid\" }\n            +\" will automatically stack rows to a single columns on mobile devices\"\n        }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_grid_GridPage_kt_renderResponsiveStackable,\n        ) {\n            ui.basic.segment.with(\"grid-docs\") {\n                // <CodeBlock renderResponsiveStackable>\n                ui.stackable.grid {\n                    noui.four.wide.column {}\n                    noui.four.wide.column {}\n                    noui.four.wide.column {}\n                    noui.four.wide.column {}\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderResponsiveReverseOrder() = example {\n        ui.header H3 { +\"Reverse Order\" }\n\n        p {\n            +\"Fomantic includes special \"\n            ui.label { +\"reversed\" }\n            +\" variations that allow you to reverse the order of columns or rows by device\"\n        }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_grid_GridPage_kt_renderResponsiveReverseOrder,\n        ) {\n            ui.basic.segment {\n                // <CodeBlock renderResponsiveReverseOrder>\n                ui.mobile.reversed.equal.width.grid {\n                    noui.column {\n                        ui.segment { +\"First\" }\n                    }\n                    noui.column {\n                        ui.segment { +\"Second\" }\n                    }\n                    noui.column {\n                        ui.segment { +\"Third\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderResponsiveDoubling() = example {\n        ui.header H3 { +\"Doubling\" }\n\n        p {\n            +\"A \"\n            ui.label { +\"doubling\" }\n            +\" grid will double column widths for each device jump.\"\n        }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_grid_GridPage_kt_renderResponsiveDoubling,\n        ) {\n            ui.basic.segment.with(\"grid-docs\") {\n                // <CodeBlock renderResponsiveDoubling>\n                ui.grid {\n                    noui.doubling.eight.column.row {\n                        repeat(8) { noui.column() }\n                    }\n                    noui.doubling.six.column.row {\n                        repeat(6) { noui.column() }\n                    }\n                    noui.doubling.four.column.row {\n                        repeat(4) { noui.column() }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderResponsiveManualTweaks() = example {\n        ui.header H3 { +\"Manual Tweaks\" }\n\n        p {\n            +\"Although design patterns like \"\n            ui.label { +\"doubling\" }\n            +\" or \"\n            ui.label { +\"stackable\" }\n            +\" are useful at simplifying responsive styling, you can also manually tweak device presentation \"\n            +\"by specifying \"\n            ui.label { +\"(x) wide device\" }\n            +\" or \"\n            ui.label { +\"device only\" }\n            +\" columns or rows.\"\n        }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_grid_GridPage_kt_renderResponsiveManualTweaks,\n        ) {\n            ui.basic.segment {\n                // <CodeBlock renderResponsiveManualTweaks>\n                ui.centered.grid {\n                    noui.computer.only.row {\n                        ui.column {\n                            ui.segment { +\"computer only\" }\n                        }\n                    }\n                    repeat(5) {\n                        noui.six.wide.tablet.eight.wide.computer.column {\n                            ui.segment { +\"six wide tablet eight wide computer\" }\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n}\n","package de.peekandpoke.kraft.examples.fomanticui.pages.collections.menu\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.MenuPage() = comp {\n    MenuPage(it)\n}\n\nclass MenuPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Collections | Menu\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Menu\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/collections/menu.html\")\n        }\n    }\n}\n","package de.peekandpoke.kraft.examples.fomanticui.pages.collections.message\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.HorizontalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.mediaParagraphWireFrame\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.semanticui.icon\nimport de.peekandpoke.kraft.semanticui.noui\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport generated.ExtractedCodeBlocks\nimport kotlinx.html.FlowContent\nimport kotlinx.html.Tag\nimport kotlinx.html.li\nimport kotlinx.html.p\n\n@Suppress(\"FunctionName\")\nfun Tag.MessagePage() = comp {\n    MessagePage(it)\n}\n\nclass MessagePage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Collections | Message\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Message\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/collections/message.html\")\n\n            ui.dividing.header H2 { +\"Types\" }\n\n            renderMessage()\n            renderListMessage()\n            renderIconMessage()\n\n            ui.dividing.header H2 { +\"States\" }\n\n            renderHiddenState()\n            renderVisibleState()\n\n            ui.dividing.header H2 { +\"Variations\" }\n\n            renderCenterAligned()\n            renderRightAligned()\n            renderFloating()\n            renderCompact()\n            renderAttached()\n            renderWarning()\n            renderInfo()\n            renderPositiveOrSuccess()\n            renderNegativeOrError()\n            renderColored()\n            renderSize()\n        }\n    }\n\n    private fun FlowContent.renderMessage() = example {\n        ui.header H3 { +\"Message\" }\n\n        p { +\"A basic message\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_message_MessagePage_kt_renderMessage,\n        ) {\n            // <CodeBlock renderMessage>\n            ui.message {\n                ui.header { +\"Changes in Service\" }\n                p { +\"We just updated our privacy policy here to better service our customers.\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderListMessage() = example {\n        ui.header H3 { +\"List Message\" }\n\n        p { +\"A message with a list\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_message_MessagePage_kt_renderListMessage,\n        ) {\n            // <CodeBlock renderListMessage>\n            ui.message {\n                ui.header { +\"New Site Features\" }\n                noui.list Ul {\n                    li { +\"You can now have cover images on blog pages\" }\n                    li { +\"Drafts will now auto-save while writing\" }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderIconMessage() = example {\n        ui.header H3 { +\"Icon Message\" }\n\n        p { +\"A message can contain an icon.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_message_MessagePage_kt_renderIconMessage_1,\n        ) {\n            // <CodeBlock renderIconMessage_1>\n            ui.icon.message {\n                icon.inbox()\n                noui.content {\n                    noui.header { +\"Have you heard about our mailing list?\" }\n                    p { +\"Get the best news in your e-mail every day.\" }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_message_MessagePage_kt_renderIconMessage_2,\n        ) {\n            // <CodeBlock renderIconMessage_2>\n            ui.icon.message {\n                icon.loading.circle_notch()\n                noui.content {\n                    noui.header { +\"Just one second \" }\n                    p { +\"We're fetching that content for you.\" }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderHiddenState() = example {\n        ui.header H3 { +\"Hidden\" }\n\n        p { +\"A message can be hidden\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_message_MessagePage_kt_renderHiddenState,\n        ) {\n            // <CodeBlock renderHiddenState>\n            ui.hidden.message {\n                +\"You can't see me\"\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderVisibleState() = example {\n        ui.header H3 { +\"Visible\" }\n\n        p { +\"A message can be set to visible to force itself to be shown.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_message_MessagePage_kt_renderVisibleState,\n        ) {\n            // <CodeBlock renderVisibleState>\n            ui.visible.message {\n                +\"You can always see me\"\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderCenterAligned() = example {\n        ui.header H3 { +\"Center Aligned\" }\n\n        p { +\"A message can be displayed center aligned\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_message_MessagePage_kt_renderCenterAligned,\n        ) {\n            // <CodeBlock renderCenterAligned>\n            ui.center.aligned.message {\n                noui.content {\n                    noui.header { +\"Center aligned\" }\n                    p { +\"The content also center aligned\" }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderRightAligned() = example {\n        ui.header H3 { +\"Right Aligned\" }\n\n        p { +\"A message can be displayed right aligned\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_message_MessagePage_kt_renderRightAligned,\n        ) {\n            // <CodeBlock renderRightAligned>\n            ui.right.aligned.message {\n                noui.content {\n                    noui.header { +\"Right aligned\" }\n                    p { +\"The content also right aligned\" }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderFloating() = example {\n        ui.header H3 { +\"Floating\" }\n\n        p { +\"A message can float above content that it is related to\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_message_MessagePage_kt_renderFloating,\n        ) {\n            // <CodeBlock renderFloating>\n            ui.floating.message {\n                +\"This message is floating / raised.\"\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderCompact() = example {\n        ui.header H3 { +\"Compact\" }\n\n        p { +\"A message can only take up the width of its content.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_message_MessagePage_kt_renderCompact,\n        ) {\n            // <CodeBlock renderCompact>\n            ui.compact.message {\n                +\"Get all the best inventions in your e-mail every day. Sign up now!\"\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderAttached() = example {\n        ui.header H3 { +\"Attached\" }\n\n        p { +\"A message can be formatted to attach itself to other content\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_message_MessagePage_kt_renderAttached,\n        ) {\n            // <CodeBlock renderAttached>\n            ui.top.attached.message {\n                +\"This message is top attached\"\n            }\n            ui.attached.segment {\n                mediaParagraphWireFrame()\n            }\n            ui.bottom.attached.warning.message {\n                icon.question()\n                +\"Any questions?\"\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderWarning() = example {\n        ui.header H3 { +\"Warning\" }\n\n        p { +\"A message may be formatted to display warning messages.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_message_MessagePage_kt_renderWarning,\n        ) {\n            // <CodeBlock renderWarning>\n            ui.warning.message {\n                noui.header { +\"This is a warning message\" }\n                p { +\"This is some content\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderInfo() = example {\n        ui.header H3 { +\"Info\" }\n\n        p { +\"A message may be formatted to display information.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_message_MessagePage_kt_renderInfo,\n        ) {\n            // <CodeBlock renderInfo>\n            ui.info.message {\n                noui.header { +\"This is an info message\" }\n                p { +\"This is some content\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderPositiveOrSuccess() = example {\n        ui.header H3 { +\"Positive / Success\" }\n\n        p { +\"A message may be formatted to display a positive message.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_message_MessagePage_kt_renderPositiveOrSuccess_1,\n        ) {\n            // <CodeBlock renderPositiveOrSuccess_1>\n            ui.positive.message {\n                noui.header { +\"This is a positive message\" }\n                p { +\"This is some content\" }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_message_MessagePage_kt_renderPositiveOrSuccess_2,\n        ) {\n            // <CodeBlock renderPositiveOrSuccess_2>\n            ui.success.message {\n                noui.header { +\"This is a success message\" }\n                p { +\"This is some content\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderNegativeOrError() = example {\n        ui.header H3 { +\"Negative / Error\" }\n\n        p { +\"A message may be formatted to display a negative message.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_message_MessagePage_kt_renderNegativeOrError_1,\n        ) {\n            // <CodeBlock renderNegativeOrError_1>\n            ui.negative.message {\n                noui.header { +\"This is a negative message\" }\n                p { +\"This is some content\" }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_message_MessagePage_kt_renderNegativeOrError_2,\n        ) {\n            // <CodeBlock renderNegativeOrError_2>\n            ui.error.message {\n                noui.header { +\"This is an error message\" }\n                p { +\"This is some content\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderColored() = example {\n        ui.header H3 { +\"Colored\" }\n\n        p { +\"A message can be formatted to be different colors\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_message_MessagePage_kt_renderColored,\n        ) {\n            // <CodeBlock renderColored>\n            ui.red.message { +\"red\" }\n            ui.orange.message { +\"orange\" }\n            ui.yellow.message { +\"yellow\" }\n            ui.olive.message { +\"olive\" }\n            ui.green.message { +\"green\" }\n            ui.teal.message { +\"teal\" }\n            ui.blue.message { +\"blue\" }\n            ui.violet.message { +\"violet\" }\n            ui.purple.message { +\"purple\" }\n            ui.pink.message { +\"pink\" }\n            ui.brown.message { +\"brown\" }\n            ui.grey.message { +\"grey\" }\n            ui.black.message { +\"black\" }\n            ui.white.message { +\"white\" }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderSize() = example {\n        ui.header H3 { +\"Size\" }\n\n        p { +\"A message can have different sizes\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_message_MessagePage_kt_renderSize,\n        ) {\n            // <CodeBlock renderSize>\n            ui.mini.message { +\"mini\" }\n            ui.tiny.message { +\"tiny\" }\n            ui.small.message { +\"small\" }\n            ui.medium.message { +\"medium\" }\n            ui.large.message { +\"large\" }\n            ui.big.message { +\"big\" }\n            ui.huge.message { +\"huge\" }\n            ui.massive.message { +\"massive\" }\n            // </CodeBlock>\n        }\n    }\n}\n","package de.peekandpoke.kraft.examples.fomanticui.pages.collections.table\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.HorizontalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.semanticui.icon\nimport de.peekandpoke.kraft.semanticui.noui\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport de.peekandpoke.ultra.common.fixture.LoremIpsum\nimport generated.ExtractedCodeBlocks\nimport kotlinx.html.*\n\n@Suppress(\"FunctionName\")\nfun Tag.TablePage() = comp {\n    TablePage(it)\n}\n\nclass TablePage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Collections | Table\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Table\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/collections/table.html\")\n\n            ui.dividing.header H2 { +\"Types\" }\n\n            renderTable()\n            renderDefinition()\n            renderStructured()\n\n            ui.dividing.header H2 { +\"Types\" }\n\n            renderPositiveOrNegative()\n            renderError()\n            renderWarning()\n            renderActive()\n            renderDisabled()\n            renderColoredCells()\n            renderMarked()\n\n            ui.dividing.header H2 { +\"Variations\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/collections/table.html#single-line\")\n\n        }\n    }\n\n    private fun FlowContent.renderTable() = example {\n        ui.header H3 { +\"Table\" }\n\n        p { +\"A standard table\" }\n\n        ui.info.message {\n            +\" Tables will automatically stack their layouts for mobile devices. To disable this behavior, use the \"\n            ui.label { +\"unstackable\" }\n            +\" variation or \"\n            ui.label { +\"tablet stackable\" }\n            +\" to allow responsive adjustments for tablet. \"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_table_TablePage_kt_renderTable_1,\n        ) {\n            // <CodeBlock renderTable_1>\n            ui.celled.table Table {\n                thead {\n                    tr {\n                        th { +\"Name\" }\n                        th { +\"Age\" }\n                        th { +\"Job\" }\n                    }\n                }\n                tbody {\n                    tr {\n                        td { +\"James\" }\n                        td { +\"24\" }\n                        td { +\"Engineer\" }\n                    }\n                    tr {\n                        td { +\"Jill\" }\n                        td { +\"26\" }\n                        td { +\"Engineer\" }\n                    }\n                    tr {\n                        td { +\"Elyse\" }\n                        td { +\"24\" }\n                        td { +\"Engineer\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_table_TablePage_kt_renderTable_2,\n        ) {\n            // <CodeBlock renderTable_2>\n            ui.celled.padded.table Table {\n                thead {\n                    tr {\n                        th(classes = \"single line\") { +\"Evidence Rating\" }\n                        th { +\"Effect\" }\n                        th { +\"Consensus\" }\n                        th { +\"Comments\" }\n                    }\n                }\n                tbody {\n                    tr {\n                        td { ui.center.aligned.header H2 { +\"A\" } }\n                        td(classes = \"single line\") { +\"Power Output\" }\n                        td(classes = \"right aligned\") {\n                            +\"80%\"\n                            br()\n                            a(href = \"#\") { +\"18 studies\" }\n                        }\n                        td { +LoremIpsum(15) }\n                    }\n                    tr {\n                        td { ui.center.aligned.header H2 { +\"A\" } }\n                        td(classes = \"single line\") { +\"Weight\" }\n                        td(classes = \"right aligned\") {\n                            +\"100%\"\n                            br()\n                            a(href = \"#\") { +\"65 studies\" }\n                        }\n                        td { +LoremIpsum(15) }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_table_TablePage_kt_renderTable_3,\n        ) {\n            // <CodeBlock renderTable_3>\n            ui.very.basic.collapsing.celled.table Table {\n                thead {\n                    tr {\n                        th { +\"Employee\" }\n                        th { +\"Correct Guesses\" }\n                    }\n                }\n                tbody {\n                    tr {\n                        td {\n                            ui.image.header.header H4 {\n                                ui.mini.rounded.image Img { src = \"images/avatar2/large/eve.png\" }\n                                noui.content {\n                                    +\"Eve\"\n                                    noui.sub.header { +\"Human Resources\" }\n                                }\n                            }\n                        }\n                        td { +\"22\" }\n                    }\n                    tr {\n                        td {\n                            ui.image.header.header H4 {\n                                ui.mini.rounded.image Img { src = \"images/avatar2/large/kristy.png\" }\n                                noui.content {\n                                    +\"Kristy\"\n                                    noui.sub.header { +\"Fabric Design\" }\n                                }\n                            }\n                        }\n                        td { +\"17\" }\n                    }\n                    tr {\n                        td {\n                            ui.image.header.header H4 {\n                                ui.mini.rounded.image Img { src = \"images/avatar2/large/matthew.png\" }\n                                noui.content {\n                                    +\"Matthew\"\n                                    noui.sub.header { +\"Entertainment\" }\n                                }\n                            }\n                        }\n                        td { +\"11\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_table_TablePage_kt_renderTable_4,\n        ) {\n            // <CodeBlock renderTable_4>\n            ui.celled.striped.table Table {\n                thead {\n                    tr {\n                        th {\n                            colSpan = \"3\"\n                            +\"Employee\"\n                        }\n                    }\n                }\n                tbody {\n                    tr {\n                        td(classes = \"collapsing\") {\n                            icon.folder()\n                            +\"node_modules\"\n                        }\n                        td { +\"Initial commit\" }\n                        td(classes = \"right aligned collapsing\") { +\"15 hours ago\" }\n                    }\n                    tr {\n                        td(classes = \"collapsing\") {\n                            icon.folder()\n                            +\"test\"\n                        }\n                        td { +\"test commit\" }\n                        td(classes = \"right aligned collapsing\") { +\"9 hours ago\" }\n                    }\n                    tr {\n                        td(classes = \"collapsing\") {\n                            icon.file()\n                            +\"package.json\"\n                        }\n                        td { +\"Initial commit\" }\n                        td(classes = \"right aligned collapsing\") { +\"15 hours ago\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderDefinition() = example {\n        ui.header H3 { +\"Definition\" }\n\n        p { +\"A table may be formatted to emphasize a first column that defines a rows content\" }\n\n        ui.info.message {\n            +\"Definition tables are designed to display on a single background color. \"\n            +\"You can adjust this by changing \"\n            ui.label { +\"@definitionPageBackground\" }\n            +\", or specifying a background color on the first cell\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_table_TablePage_kt_renderDefinition_1,\n        ) {\n            // <CodeBlock renderDefinition_1>\n            ui.definition.table Table {\n                thead {\n                    tr {\n                        th { }\n                        th { +\"Arguments\" }\n                        th { +\"Description\" }\n                    }\n                }\n                tbody {\n                    tr {\n                        td { +\"reset rating\" }\n                        td { +\"None\" }\n                        td { +\"Resets rating to default value\" }\n                    }\n                    tr {\n                        td { +\"set rating\" }\n                        td { +\"rating (integer)\" }\n                        td { +\"Sets the current star rating to specified value\" }\n                    }\n                    tr {\n                        td { +\"Elyse\" }\n                        td { +\"24\" }\n                        td { +\"Engineer\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_table_TablePage_kt_renderDefinition_2,\n        ) {\n            // <CodeBlock renderDefinition_2>\n            ui.compact.celled.definition.table Table {\n                thead {\n                    tr {\n                        th { }\n                        th { +\"Name\" }\n                        th { +\"Registration date\" }\n                        th { +\"E-mail address\" }\n                        th { +\"Premium plan\" }\n                    }\n                }\n                tbody {\n                    tr {\n                        td(classes = \"collapsing\") {\n                            ui.fitted.slider.checkbox {\n                                input { type = InputType.checkBox }\n                                label()\n                            }\n                        }\n                        td { +\"John Lilki\" }\n                        td { +\"September 11, 2014\" }\n                        td { +\"jhlilk22@example.com\" }\n                        td { +\"No\" }\n                    }\n                    tr {\n                        td(classes = \"collapsing\") {\n                            ui.fitted.slider.checkbox {\n                                input { type = InputType.checkBox }\n                                label()\n                            }\n                        }\n                        td { +\"Jamie Harington\" }\n                        td { +\"January 11, 2014\" }\n                        td { +\"jamieharingonton@example.com\" }\n                        td { +\"Yes\" }\n                    }\n                    tr {\n                        td(classes = \"collapsing\") {\n                            ui.fitted.slider.checkbox {\n                                input { type = InputType.checkBox }\n                                label()\n                            }\n                        }\n                        td { +\"Jill Lewis\" }\n                        td { +\"May 11, 2014\" }\n                        td { +\"jilsewris22@example.com\" }\n                        td { +\"Yes\" }\n                    }\n                }\n                tfoot {\n                    tr {\n                        th {}\n                        th {\n                            colSpan = \"4\"\n                            ui.right.floated.small.primary.labeled.icon.button {\n                                icon.user()\n                                +\"Add user\"\n                            }\n                            ui.small.button { +\"Approve\" }\n                            ui.small.button { +\"Approve All\" }\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        ui.info.message {\n            +\"If you work with the \"\n            ui.label { +\"rowspan\" }\n            +\" table technique, fomantic provides a helper class \"\n            ui.label { +\"rowspanned\" }\n            +\" to be used for an invisible td column to make sure the styling stays consistent\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_table_TablePage_kt_renderDefinition_3,\n        ) {\n            // <CodeBlock renderDefinition_3>\n            ui.definition.table Table {\n                tbody {\n                    tr {\n                        td { rowSpan = \"2\"; +\"Category rowspanned\" }\n                        td { +\"Row one\" }\n                    }\n                    tr {\n                        td(classes = \"rowspanned\") { }\n                        td { +\"Row two\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderStructured() = example {\n\n        ui.dividing.header H3 { +\"Structured\" }\n\n        readTheFomanticUiDocs(\"https://fomantic-ui.com/collections/table.html#structured\")\n    }\n\n    private fun FlowContent.renderPositiveOrNegative() = example {\n        ui.header H3 { +\"Positive / Negative\" }\n\n        p { +\"A cell or row may let a user know whether a value is good or bad\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_table_TablePage_kt_renderPositiveOrNegative,\n        ) {\n            // <CodeBlock renderPositiveOrNegative>\n            ui.celled.table Table {\n                thead {\n                    tr {\n                        th { +\"Name\" }\n                        th { +\"Status\" }\n                        th { +\"Notes\" }\n                    }\n                }\n                tbody {\n                    tr {\n                        td { +\"No name\" }\n                        td { +\"Unknown\" }\n                        td(classes = \"negative\") { +\"None\" }\n                    }\n                    tr(classes = \"positive\") {\n                        td { +\"Jimmy\" }\n                        td { icon.check(); +\"Approved\" }\n                        td { +\"None\" }\n                    }\n                    tr(classes = \"negative\") {\n                        td { +\"Jamie\" }\n                        td { icon.times(); +\"Rejected\" }\n                        td { +\"None\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderError() = example {\n        ui.header H3 { +\"Error\" }\n\n        p { +\"A cell or row may call attention to an error or a negative value\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_table_TablePage_kt_renderError,\n        ) {\n            // <CodeBlock renderError>\n            ui.celled.table Table {\n                thead {\n                    tr {\n                        th { +\"Name\" }\n                        th { +\"Status\" }\n                        th { +\"Notes\" }\n                    }\n                }\n                tbody {\n                    tr {\n                        td { +\"No name\" }\n                        td { +\"Unknown\" }\n                        td(classes = \"error\") { icon.exclamation_circle(); +\"Error\" }\n                    }\n                    tr(classes = \"error\") {\n                        td { +\"Jimmy\" }\n                        td { icon.check(); +\"Approved\" }\n                        td { +\"None\" }\n                    }\n                    tr {\n                        td { +\"Jamie\" }\n                        td { icon.times(); +\"Rejected\" }\n                        td { +\"None\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderWarning() = example {\n        ui.header H3 { +\"Warning\" }\n\n        p { +\"A cell or row may warn a user\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_table_TablePage_kt_renderWarning,\n        ) {\n            // <CodeBlock renderWarning>\n            ui.celled.table Table {\n                thead {\n                    tr {\n                        th { +\"Name\" }\n                        th { +\"Status\" }\n                        th { +\"Notes\" }\n                    }\n                }\n                tbody {\n                    tr {\n                        td { +\"No name\" }\n                        td { +\"Unknown\" }\n                        td(classes = \"warning\") { icon.exclamation_circle(); +\"Error\" }\n                    }\n                    tr(classes = \"warning\") {\n                        td { +\"Jimmy\" }\n                        td { icon.check(); +\"Approved\" }\n                        td { +\"None\" }\n                    }\n                    tr {\n                        td { +\"Jamie\" }\n                        td { icon.times(); +\"Rejected\" }\n                        td { +\"None\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderActive() = example {\n        ui.header H3 { +\"Active\" }\n\n        p { +\"A cell or row can be active or selected by a user\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_table_TablePage_kt_renderActive,\n        ) {\n            // <CodeBlock renderActive>\n            ui.celled.table Table {\n                thead {\n                    tr {\n                        th { +\"Name\" }\n                        th { +\"Status\" }\n                        th { +\"Notes\" }\n                    }\n                }\n                tbody {\n                    tr {\n                        td { +\"No name\" }\n                        td { +\"Unknown\" }\n                        td(classes = \"active\") { icon.exclamation_circle(); +\"Error\" }\n                    }\n                    tr(classes = \"active\") {\n                        td { +\"Jimmy\" }\n                        td { icon.check(); +\"Approved\" }\n                        td { +\"None\" }\n                    }\n                    tr {\n                        td { +\"Jamie\" }\n                        td { icon.times(); +\"Rejected\" }\n                        td { +\"None\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderDisabled() = example {\n        ui.header H3 { +\"Disabled\" }\n\n        p { +\"A cell can be disabled\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_table_TablePage_kt_renderDisabled,\n        ) {\n            // <CodeBlock renderDisabled>\n            ui.celled.table Table {\n                thead {\n                    tr {\n                        th { +\"Name\" }\n                        th { +\"Status\" }\n                        th { +\"Notes\" }\n                    }\n                }\n                tbody {\n                    tr {\n                        td { +\"No name\" }\n                        td { +\"Unknown\" }\n                        td(classes = \"disabled\") { icon.exclamation_circle(); +\"Error\" }\n                    }\n                    tr(classes = \"disabled\") {\n                        td { +\"Jimmy\" }\n                        td { icon.check(); +\"Approved\" }\n                        td { +\"None\" }\n                    }\n                    tr {\n                        td { +\"Jamie\" }\n                        td { icon.times(); +\"Rejected\" }\n                        td { +\"None\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderColoredCells() = example {\n        ui.header H3 { +\"Colored Cells\" }\n\n        p { +\"A cell can be styled by the central color palette colors\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_collections_table_TablePage_kt_renderColoredCells,\n        ) {\n            // <CodeBlock renderColoredCells>\n            ui.celled.table Table {\n                thead {\n                    tr {\n                        th { +\"Name\" }\n                        th { +\"Status\" }\n                        th { +\"Notes\" }\n                    }\n                }\n                tbody {\n                    tr {\n                        td(classes = \"orange\") { +\"No name\" }\n                        td { +\"Unknown\" }\n                        td(classes = \"disabled\") { icon.exclamation_circle(); +\"Error\" }\n                    }\n                    tr(classes = \"blue\") {\n                        td { +\"Jimmy\" }\n                        td { icon.check(); +\"Approved\" }\n                        td { +\"None\" }\n                    }\n                    tr {\n                        td { +\"Jamie\" }\n                        td { icon.times(); +\"Rejected\" }\n                        td(classes = \"green\") { +\"None\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderMarked() = example {\n\n        ui.dividing.header H3 { +\"Marked\" }\n\n        readTheFomanticUiDocs(\"https://fomantic-ui.com/collections/table.html#marked\")\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.elements.button\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.components.onClick\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.VerticalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.semanticui.icon\nimport de.peekandpoke.kraft.semanticui.noui\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport generated.ExtractedCodeBlocks\nimport kotlinx.html.FlowContent\nimport kotlinx.html.Tag\nimport kotlinx.html.a\nimport kotlinx.html.div\n\n@Suppress(\"FunctionName\")\nfun Tag.ButtonPage() = comp {\n    ButtonPage(it)\n}\n\nclass ButtonPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    private var buttonState: Boolean by value(false)\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Elements | Button\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Button\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/elements/button.html#/definition\")\n\n            ui.dividing.header H2 { +\"Types\" }\n\n            renderStandardButton()\n            renderEmphasizedButton()\n            renderTertiaryButton()\n            renderBasicButton()\n            renderStatesOfButton()\n            renderAnimatedButton()\n            renderIconButton()\n            renderLabeledButton()\n            renderInvertedButton()\n\n            ui.dividing.header H2 { +\"Groups\" }\n\n            renderButtonGroup()\n\n            ui.dividing.header H2 { +\"Variations\" }\n\n            renderSocialButtons()\n            renderSizedButtons()\n            renderFloatedButtons()\n            renderFluidButtons()\n            renderCompactButtons()\n            renderCircularButtons()\n\n            ui.dividing.header H2 { +\"... more ...\" }\n\n            a(href = \"https://fomantic-ui.com/elements/button.html#vertical-buttons\") {\n                +\"See more\"\n            }\n        }\n    }\n\n    private fun FlowContent.renderStandardButton() = example {\n        ui.header { +\"A standard Button\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_standardButton_1,\n        ) {\n            // <CodeBlock standardButton_1>\n            ui.button {\n                onClick { buttonState = !buttonState }\n                +if (buttonState) \"Following\" else \"Follow\"\n            }\n            // </CodeBlock>\n        }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_standardButton_2,\n        ) {\n            // <CodeBlock standardButton_2>\n            ui.red.button { +\"red\" }\n            ui.orange.button { +\"orange\" }\n            ui.yellow.button { +\"yellow\" }\n            ui.olive.button { +\"olive\" }\n            ui.green.button { +\"green\" }\n            ui.teal.button { +\"teal\" }\n            ui.blue.button { +\"blue\" }\n            ui.violet.button { +\"violet\" }\n            ui.purple.button { +\"purple\" }\n            ui.pink.button { +\"pink\" }\n            ui.brown.button { +\"brown\" }\n            ui.black.button { +\"black\" }\n            ui.white.button { +\"white\" }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderEmphasizedButton() = example {\n        ui.header { +\"Emphasized Button\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderEmphasizedButton,\n        ) {\n            // <CodeBlock renderEmphasizedButton>\n            ui.primary.button { +\"Primary\" }\n            ui.secondary.button { +\"Secondary\" }\n            ui.positive.button { +\"Positive\" }\n            ui.warning.button { +\"Warning\" }\n            ui.negative.button { +\"Negative\" }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderTertiaryButton() = example {\n        ui.header { +\"Tertiary Button\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderTertiaryButton_1,\n        ) {\n            // <CodeBlock renderTertiaryButton_1>\n            ui.tertiary.button { +\"Tertiary\" }\n            // </CodeBlock>\n        }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderTertiaryButton_2,\n        ) {\n            // <CodeBlock renderTertiaryButton_2>\n            ui.red.tertiary.button { +\"red\" }\n            ui.orange.tertiary.button { +\"orange\" }\n            ui.yellow.tertiary.button { +\"yellow\" }\n            ui.olive.tertiary.button { +\"olive\" }\n            ui.green.tertiary.button { +\"green\" }\n            ui.teal.tertiary.button { +\"teal\" }\n            ui.blue.tertiary.button { +\"blue\" }\n            ui.violet.tertiary.button { +\"violet\" }\n            ui.purple.tertiary.button { +\"purple\" }\n            ui.pink.tertiary.button { +\"pink\" }\n            ui.brown.tertiary.button { +\"brown\" }\n            ui.black.tertiary.button { +\"black\" }\n            ui.white.tertiary.button { +\"white\" }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderBasicButton() = example {\n        ui.header { +\"Basic Button\" }\n\n        ui.stackable.three.column.grid {\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderBasicButton_1,\n                ) {\n                    // <CodeBlock renderBasicButton_1>\n                    ui.basic.icon.button {\n                        icon.clock()\n                    }\n                    // </CodeBlock>\n                }\n            }\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderBasicButton_2,\n                ) {\n                    // <CodeBlock renderBasicButton_2>\n                    ui.basic.button {\n                        icon.mouse()\n                        +\"Click me\"\n                    }\n                    // </CodeBlock>\n                }\n            }\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderBasicButton_3,\n                ) {\n                    // <CodeBlock renderBasicButton_3>\n                    ui.basic.blue.button {\n                        icon.mouse_pointer()\n                        +\"Click me\"\n                    }\n                    // </CodeBlock>\n                }\n            }\n        }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderBasicButton_4,\n        ) {\n            // <CodeBlock renderBasicButton_4>\n            ui.red.basic.button { +\"red\" }\n            ui.orange.basic.button { +\"orange\" }\n            ui.yellow.basic.button { +\"yellow\" }\n            ui.olive.basic.button { +\"olive\" }\n            ui.green.basic.button { +\"green\" }\n            ui.teal.basic.button { +\"teal\" }\n            ui.blue.basic.button { +\"blue\" }\n            ui.violet.basic.button { +\"violet\" }\n            ui.purple.basic.button { +\"purple\" }\n            ui.pink.basic.button { +\"pink\" }\n            ui.brown.basic.button { +\"brown\" }\n            ui.black.basic.button { +\"black\" }\n            ui.white.basic.button { +\"white\" }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderStatesOfButton() = example {\n        ui.header { +\"Active and Disabled states\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderStatesOfButton_1,\n        ) {\n            // <CodeBlock renderStatesOfButton_1>\n            ui.active.button { +\"Active\" }\n            ui.active.primary.button { +\"Primary\" }\n            ui.active.secondary.button { +\"Secondary\" }\n            // </CodeBlock>\n        }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderStatesOfButton_2,\n        ) {\n            // <CodeBlock renderStatesOfButton_2>\n            ui.disabled.button { +\"Disabled\" }\n            ui.disabled.primary.button { +\"Primary\" }\n            ui.disabled.secondary.button { +\"Secondary\" }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderAnimatedButton() = example {\n        ui.header { +\"Animated Button\" }\n\n        ui.stackable.three.column.grid {\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderAnimatedButton_1,\n                ) {\n                    // <CodeBlock renderAnimatedButton_1>\n                    ui.animated.button {\n                        noui.visible.content { +\"Next\" }\n                        noui.hidden.content {\n                            icon.arrow_right()\n                        }\n                    }\n                    // </CodeBlock>\n                }\n            }\n\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderAnimatedButton_2,\n                ) {\n                    // <CodeBlock renderAnimatedButton_2>\n                    ui.vertical.animated.button {\n                        noui.hidden.content { +\"Shop\" }\n                        noui.visible.content {\n                            icon.shopping_cart()\n                        }\n                    }\n                    // </CodeBlock>\n                }\n            }\n\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderAnimatedButton_3,\n                ) {\n                    // <CodeBlock renderAnimatedButton_3>\n                    ui.animated.fade.button {\n                        noui.visible.content { +\"Sign-up for a Pro account\" }\n                        noui.hidden.content { +\"\\$12.99 a month\" }\n                    }\n                    // </CodeBlock>\n                }\n            }\n        }\n    }\n\n    private fun FlowContent.renderIconButton() = example {\n        ui.header { +\"Icon Button\" }\n\n        ui.stackable.three.column.grid {\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderIconButton_1,\n                ) {\n                    // <CodeBlock renderIconButton_1>\n                    ui.icon.button {\n                        icon.clock()\n                    }\n                    // </CodeBlock>\n                }\n            }\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderIconButton_2,\n                ) {\n                    // <CodeBlock renderIconButton_2>\n                    ui.basic.red.labeled.icon.button {\n                        icon.pause()\n                        +\"Pause\"\n                    }\n                    // </CodeBlock>\n                }\n            }\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderIconButton_3,\n                ) {\n                    // <CodeBlock renderIconButton_3>\n                    ui.blue.right.labeled.icon.button {\n                        icon.play()\n                        +\"Play\"\n                    }\n                    // </CodeBlock>\n                }\n            }\n        }\n    }\n\n    private fun FlowContent.renderLabeledButton() = example {\n        ui.header { +\"Labelled Button\" }\n\n        ui.stackable.three.column.grid {\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderLabeledButton_1,\n                ) {\n                    // <CodeBlock renderLabeledButton_1>\n                    ui.labeled.button {\n                        ui.button {\n                            icon.heart(); +\"Like\"\n                        }\n                        ui.basic.label A {\n                            +\"2,048\"\n                        }\n                    }\n                    // </CodeBlock>\n                }\n            }\n\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderLabeledButton_2,\n                ) {\n                    // <CodeBlock renderLabeledButton_2>\n                    ui.left.labeled.button {\n                        ui.basic.right.pointing.label A {\n                            +\"2,048\"\n                        }\n                        ui.button {\n                            icon.heart(); +\"Like\"\n                        }\n                    }\n                    // </CodeBlock>\n                }\n            }\n\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderLabeledButton_3,\n                ) {\n                    // <CodeBlock renderLabeledButton_3>\n                    ui.left.labeled.button {\n                        ui.basic.label A {\n                            +\"2,048\"\n                        }\n                        ui.icon.button {\n                            icon.code_branch()\n                        }\n                    }\n                    // </CodeBlock>\n                }\n            }\n\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderLabeledButton_4,\n                ) {\n                    // <CodeBlock renderLabeledButton_4>\n                    ui.labeled.button {\n                        ui.red.button {\n                            icon.heart(); +\"Like\"\n                        }\n                        ui.red.basic.label A {\n                            +\"2,048\"\n                        }\n                    }\n                    // </CodeBlock>\n                }\n            }\n\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderLabeledButton_5,\n                ) {\n                    // <CodeBlock renderLabeledButton_5>\n                    ui.labeled.button {\n                        ui.basic.blue.button {\n                            icon.code_branch(); +\"Forks\"\n                        }\n                        ui.basic.left.pointing.blue.label A {\n                            +\"2,048\"\n                        }\n                    }\n                    // </CodeBlock>\n                }\n            }\n        }\n    }\n\n    private fun FlowContent.renderInvertedButton() = example {\n        ui.header { +\"Inverted Button\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderInvertedButton_1,\n        ) {\n            ui.inverted.segment {\n                // <CodeBlock renderInvertedButton_1>\n                ui.inverted.button { +\"standard\" }\n                ui.inverted.primary.button { +\"primary\" }\n                ui.inverted.secondary.button { +\"secondary\" }\n                ui.inverted.positive.button { +\"positive\" }\n                ui.inverted.negative.button { +\"negative\" }\n                ui.inverted.red.button { +\"red\" }\n                ui.inverted.orange.button { +\"orange\" }\n                ui.inverted.yellow.button { +\"yellow\" }\n                ui.inverted.olive.button { +\"olive\" }\n                ui.inverted.green.button { +\"green\" }\n                ui.inverted.teal.button { +\"teal\" }\n                ui.inverted.blue.button { +\"blue\" }\n                ui.inverted.violet.button { +\"violet\" }\n                ui.inverted.purple.button { +\"purple\" }\n                ui.inverted.pink.button { +\"pink\" }\n                ui.inverted.brown.button { +\"brown\" }\n                ui.inverted.black.button { +\"black\" }\n                ui.inverted.white.button { +\"white\" }\n                // </CodeBlock>\n            }\n        }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderInvertedButton_2,\n        ) {\n            ui.inverted.segment {\n                // <CodeBlock renderInvertedButton_2>\n                ui.inverted.basic.button { +\"standard\" }\n                ui.inverted.basic.primary.button { +\"primary\" }\n                ui.inverted.basic.secondary.button { +\"secondary\" }\n                ui.inverted.basic.positive.button { +\"positive\" }\n                ui.inverted.basic.negative.button { +\"negative\" }\n                ui.inverted.basic.red.button { +\"red\" }\n                ui.inverted.basic.orange.button { +\"orange\" }\n                ui.inverted.basic.yellow.button { +\"yellow\" }\n                ui.inverted.basic.olive.button { +\"olive\" }\n                ui.inverted.basic.green.button { +\"green\" }\n                ui.inverted.basic.teal.button { +\"teal\" }\n                ui.inverted.basic.blue.button { +\"blue\" }\n                ui.inverted.basic.violet.button { +\"violet\" }\n                ui.inverted.basic.purple.button { +\"purple\" }\n                ui.inverted.basic.pink.button { +\"pink\" }\n                ui.inverted.basic.brown.button { +\"brown\" }\n                ui.inverted.basic.black.button { +\"black\" }\n                ui.inverted.basic.white.button { +\"white\" }\n                // </CodeBlock>\n            }\n        }\n    }\n\n    private fun FlowContent.renderButtonGroup() = example {\n        ui.header { +\"Button Group\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderButtonGroup_1,\n        ) {\n            // <CodeBlock renderButtonGroup_1>\n            ui.buttons {\n\n                ui.button { +\"One\" }\n                ui.button { +\"Two\" }\n                ui.button { +\"Three\" }\n            }\n            // </CodeBlock>\n        }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderButtonGroup_2,\n        ) {\n            // <CodeBlock renderButtonGroup_2>\n            ui.icon.buttons {\n                ui.button { icon.align_left() }\n                ui.button { icon.align_center() }\n                ui.button { icon.align_justify() }\n            }\n            ui.icon.buttons {\n                ui.button { icon.bold() }\n                ui.button { icon.underline() }\n                ui.button { icon.text_width() }\n            }\n            // </CodeBlock>\n        }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderButtonGroup_3,\n        ) {\n            // <CodeBlock renderButtonGroup_3>\n            ui.buttons {\n                ui.button { +\"Cancel\" }\n                div(\"or\") {}\n                ui.positive.button { +\"Save\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderSocialButtons() = example {\n        ui.header { +\"Social Buttons\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderSocialButtons,\n        ) {\n            // <CodeBlock renderSocialButtons>\n            // Facebook\n            ui.facebook.button { icon.facebook(); +\"Facebook\" }\n            ui.facebook.icon.button { icon.facebook_f() }\n            // Google+\n            ui.google_plus.button { icon.google_plus(); +\"Google Plus\" }\n            ui.google_plus.icon.button { icon.google_plus() }\n            // Instagram\n            ui.instagram.button { icon.instagram(); +\"Instagram\" }\n            ui.instagram.icon.button { icon.instagram() }\n            // Linkedin\n            ui.linkedin.button { icon.linkedin(); +\"Linkedin\" }\n            ui.linkedin.icon.button { icon.linkedin() }\n            // Telegram\n            ui.telegram.button { icon.telegram(); +\"Telegram\" }\n            ui.telegram.icon.button { icon.telegram() }\n            // Twitter\n            ui.twitter.button { icon.twitter(); +\"Twitter\" }\n            ui.twitter.icon.button { icon.twitter() }\n            // WhatsApp\n            ui.whatsapp.button { icon.whatsapp(); +\"WhatsApp\" }\n            ui.whatsapp.icon.button { icon.whatsapp() }\n            // VK\n            ui.vk.button { icon.vk(); +\"VK\" }\n            ui.vk.icon.button { icon.vk() }\n            // Youtube\n            ui.youtube.button { icon.youtube(); +\"Youtube\" }\n            ui.youtube.icon.button { icon.youtube() }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderSizedButtons() = example {\n        ui.header { +\"Sized Buttons\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderSizedButtons,\n        ) {\n            // <CodeBlock renderSizedButtons>\n            ui.mini.button { +\"mini\" }\n            ui.tiny.button { +\"tiny\" }\n            ui.small.button { +\"small\" }\n            ui.medium.button { +\"medium\" }\n            ui.large.button { +\"large\" }\n            ui.big.button { +\"big\" }\n            ui.huge.button { +\"huge\" }\n            ui.massive.button { +\"massive\" }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderFloatedButtons() = example {\n        ui.header { +\"Floated Buttons\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderFloatedButtons,\n        ) {\n            // <CodeBlock renderFloatedButtons>\n            ui.left.floated.button { +\"Left floated\" }\n            ui.right.floated.button { +\"Right floated\" }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderFluidButtons() = example {\n        ui.header { +\"Fluid Buttons\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderFluidButtons,\n        ) {\n            // <CodeBlock renderFluidButtons>\n            ui.fluid.button { +\"Fluid\" }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderCompactButtons() = example {\n        ui.header { +\"Compact Buttons\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderCompactButtons,\n        ) {\n            // <CodeBlock renderCompactButtons>\n            ui.compact.button {\n                +\"Compact\"\n            }\n            ui.compact.icon.button {\n                icon.pause()\n            }\n            ui.compact.labeled.icon.button {\n                icon.pause()\n                +\"Pause\"\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderCircularButtons() = example {\n        ui.header { +\"Circular Buttons\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_button_ButtonPage_kt_renderCircularButtons,\n        ) {\n            // <CodeBlock renderCircularButtons>\n            ui.circular.icon.button {\n                icon.cogs()\n            }\n            ui.circular.facebook.icon.button {\n                icon.facebook_f()\n            }\n            ui.circular.green.icon.button {\n                icon.envelope()\n            }\n            // </CodeBlock>\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.elements.container\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.VerticalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.mediaParagraphWireFrame\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport generated.ExtractedCodeBlocks\nimport kotlinx.html.FlowContent\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.ContainerPage() = comp {\n    ContainerPage(it)\n}\n\nclass ContainerPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Elements | Container\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Header\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/elements/container.html\")\n\n            ui.dividing.header H2 { +\"Usage\" }\n\n            renderBasicUsage()\n        }\n    }\n\n    private fun FlowContent.renderBasicUsage() = example {\n        ui.header H3 { +\"Basic usage\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_container_ContainerPage_kt_renderBasicUsage,\n        ) {\n            // <CodeBlock renderBasicUsage>\n            ui.container {\n                ui.segment {\n                    mediaParagraphWireFrame()\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.elements.divider\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.HorizontalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.shortParagraphWireFrame\nimport de.peekandpoke.kraft.semanticui.icon\nimport de.peekandpoke.kraft.semanticui.noui\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport de.peekandpoke.ultra.common.fixture.LoremIpsum\nimport generated.ExtractedCodeBlocks\nimport kotlinx.html.FlowContent\nimport kotlinx.html.Tag\nimport kotlinx.html.p\n\n@Suppress(\"FunctionName\")\nfun Tag.DividerPage() = comp {\n    DividerPage(it)\n}\n\nclass DividerPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Elements | Divider\")\n\n        ui.basic.segment {\n            ui.header H1 { +\"Divider\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/elements/divider.html#/definition\")\n\n            ui.dividing.header H2 { +\"Types\" }\n\n            renderStandard()\n            renderVertical()\n            renderHorizontal()\n            renderHorizontalAlignment()\n\n            ui.dividing.header H2 { +\"Variations\" }\n\n            renderInverted()\n            renderFitted()\n            renderHidden()\n            renderSection()\n            renderClearing()\n        }\n    }\n\n    private fun FlowContent.renderStandard() = example {\n        ui.header H2 { +\"Standard Divider\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_divider_DividerPage_kt_renderStandard\n        ) {\n            // <CodeBlock renderStandard>\n            ui.segment {\n\n                ui.divider {}\n                shortParagraphWireFrame()\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderVertical() = example {\n        ui.header H2 { +\"Vertical Divider\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_divider_DividerPage_kt_renderVertical,\n        ) {\n            // <CodeBlock renderVertical>\n            ui.segment {\n                ui.two.column.very.relaxed.grid {\n                    noui.column {\n                        shortParagraphWireFrame()\n                        shortParagraphWireFrame()\n                    }\n                    noui.column {\n                        shortParagraphWireFrame()\n                        shortParagraphWireFrame()\n                    }\n                }\n                ui.vertical.divider { +\"and\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderHorizontal() = example {\n        ui.header H2 { +\"Horizontal Divider\" }\n\n        p { +\"A divider can segment content horizontally\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_divider_DividerPage_kt_renderHorizontal_1,\n        ) {\n            // <CodeBlock renderHorizontal_1>\n            shortParagraphWireFrame()\n\n            ui.horizontal.divider { +\"or\" }\n\n            shortParagraphWireFrame()\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_divider_DividerPage_kt_renderHorizontal_2,\n        ) {\n            // <CodeBlock renderHorizontal_2>\n            ui.horizontal.divider.header {\n                icon.tag()\n                +\"Description\"\n            }\n\n            shortParagraphWireFrame()\n\n            ui.horizontal.divider.header {\n                icon.chart_bar()\n                +\"Specification\"\n            }\n\n            shortParagraphWireFrame()\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderHorizontalAlignment() = example {\n        ui.header H2 { +\"Horizontal Alignment\" }\n\n        p { +\"A horizontal divider can be aligned\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_divider_DividerPage_kt_renderHorizontalAlignment_1,\n        ) {\n            // <CodeBlock renderHorizontalAlignment_1>\n            ui.horizontal.left.aligned.divider {\n                icon.align_left()\n                +\"Left aligned\"\n            }\n            ui.horizontal.center.aligned.divider {\n                icon.align_center()\n                +\"Center aligned\"\n            }\n            ui.horizontal.right.aligned.divider {\n                icon.align_center()\n                +\"Right aligned\"\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderInverted() = example {\n        ui.header H2 { +\"Inverted\" }\n\n        p { +\"A divider can have its colors inverted\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_divider_DividerPage_kt_renderInverted_1,\n        ) {\n            // <CodeBlock renderInverted_1>\n            ui.inverted.segment {\n                shortParagraphWireFrame()\n\n                ui.inverted.divider { }\n\n                shortParagraphWireFrame()\n\n                ui.inverted.horizontal.divider { +\"or\" }\n\n                shortParagraphWireFrame()\n            }\n\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderFitted() = example {\n        ui.header H2 { +\"Fitted\" }\n\n        p { +\"A divider can be fitted, without any space above or below it.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_divider_DividerPage_kt_renderFitted,\n        ) {\n            // <CodeBlock renderFitted>\n            +LoremIpsum(words = 50)\n\n            ui.fitted.divider { }\n\n            +LoremIpsum(words = 50)\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderHidden() = example {\n        ui.header H2 { +\"Hidden\" }\n\n        p { +\"A hidden divider divides content without creating a dividing line\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_divider_DividerPage_kt_renderHidden,\n        ) {\n            // <CodeBlock renderHidden>\n            +LoremIpsum(words = 50)\n\n            ui.hidden.divider { }\n\n            +LoremIpsum(words = 50)\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderSection() = example {\n        ui.header H2 { +\"Section\" }\n\n        p { +\"A divider can provide greater margins to divide sections of content\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_divider_DividerPage_kt_renderSection,\n        ) {\n            // <CodeBlock renderSection>\n            +LoremIpsum(words = 50)\n\n            ui.section.divider { }\n\n            +LoremIpsum(words = 50)\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderClearing() = example {\n        ui.header H2 { +\"Clearing\" }\n\n        p { +\"A divider can clear the contents above it\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_divider_DividerPage_kt_renderClearing,\n        ) {\n            // <CodeBlock renderClearing>\n            ui.segment {\n                ui.right.floated.header { +\"Right floated\" }\n                ui.clearing.divider {}\n                shortParagraphWireFrame()\n            }\n            // </CodeBlock>\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.elements.emoji\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.EmojiPage() = comp {\n    EmojiPage(it)\n}\n\nclass EmojiPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Elements | Emoji\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Emoji\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/elements/emoji.html\")\n\n            ui.dividing.header H2 { +\"Types\" }\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.elements.flag\n\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.HorizontalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.semanticui.flag\nimport de.peekandpoke.kraft.vdom.VDom\nimport generated.ExtractedCodeBlocks\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.FlagExamples() = comp {\n    FlagExamples(it)\n}\n\nclass FlagExamples(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n\n        example {\n\n            HorizontalContentAndCode(\n                ExtractedCodeBlocks.pages_elements_flag_FlagExamples_kt_renderSimpleExample,\n            ) {\n                // <CodeBlock renderSimpleExample>\n                flag.germany()\n                flag.japan()\n                flag.indonesia()\n                // </CodeBlock>\n            }\n        }\n    }\n}\n","@file:Suppress(\n        \"Detekt:TooManyFunctions\",\n        \"Detekt:LargeClass\",\n        \"Detekt:LongMethod\",\n        \"Detekt:VariableNaming\",\n)\n\npackage de.peekandpoke.kraft.semanticui\n\nimport kotlinx.html.FlowContent\nimport kotlinx.html.I\nimport kotlinx.html.attributesMapOf\nimport kotlinx.html.body\nimport kotlinx.html.stream.createHTML\n\n@Suppress(\"unused\", \"PropertyName\")\nclass SemanticFlag(private val parent: FlowContent) {\n\n    companion object {\n        val all = listOf(\n                \"afghanistan\",\n                \"aland islands\",\n                \"albania\",\n                \"algeria\",\n                \"american samoa\",\n                \"andorra\",\n                \"angola\",\n                \"anguilla\",\n                \"antigua\",\n                \"argentina\",\n                \"armenia\",\n                \"aruba\",\n                \"australia\",\n                \"austria\",\n                \"azerbaijan\",\n                \"bahamas\",\n                \"bahrain\",\n                \"bangladesh\",\n                \"barbados\",\n                \"belarus\",\n                \"belgium\",\n                \"belize\",\n                \"benin\",\n                \"bermuda\",\n                \"bhutan\",\n                \"bolivia\",\n                \"bosnia\",\n                \"botswana\",\n                \"bouvet island\",\n                \"brazil\",\n                \"british virgin islands\",\n                \"brunei\",\n                \"bulgaria\",\n                \"burkina faso\",\n                \"burma\",\n                \"burundi\",\n                \"caicos islands\",\n                \"cambodia\",\n                \"cameroon\",\n                \"canada\",\n                \"cape verde\",\n                \"cayman islands\",\n                \"central african republic\",\n                \"chad\",\n                \"chile\",\n                \"china\",\n                \"christmas island\",\n                \"cocos islands\",\n                \"colombia\",\n                \"comoros\",\n                \"congo brazzaville\",\n                \"congo\",\n                \"cook islands\",\n                \"costa rica\",\n                \"cote divoire\",\n                \"croatia\",\n                \"cuba\",\n                \"cyprus\",\n                \"czech republic\",\n                \"denmark\",\n                \"djibouti\",\n                \"dominica\",\n                \"dominican republic\",\n                \"ecuador\",\n                \"egypt\",\n                \"el salvador\",\n                \"england\",\n                \"equatorial guinea\",\n                \"eritrea\",\n                \"estonia\",\n                \"ethiopia\",\n                \"european union\",\n                \"falkland islands\",\n                \"faroe islands\",\n                \"fiji\",\n                \"finland\",\n                \"france\",\n                \"french guiana\",\n                \"french polynesia\",\n                \"french territories\",\n                \"gabon\",\n                \"gambia\",\n                \"georgia\",\n                \"germany\",\n                \"ghana\",\n                \"gibraltar\",\n                \"greece\",\n                \"greenland\",\n                \"grenada\",\n                \"guadeloupe\",\n                \"guam\",\n                \"guatemala\",\n                \"guinea\",\n                \"guinea-bissau\",\n                \"guyana\",\n                \"haiti\",\n                \"heard island\",\n                \"honduras\",\n                \"hong kong\",\n                \"hungary\",\n                \"iceland\",\n                \"india\",\n                \"indian ocean territory\",\n                \"indonesia\",\n                \"iran\",\n                \"iraq\",\n                \"ireland\",\n                \"israel\",\n                \"italy\",\n                \"jamaica\",\n                \"jan mayen\",\n                \"japan\",\n                \"jordan\",\n                \"kazakhstan\",\n                \"kenya\",\n                \"kiribati\",\n                \"kuwait\",\n                \"kyrgyzstan\",\n                \"laos\",\n                \"latvia\",\n                \"lebanon\",\n                \"lesotho\",\n                \"liberia\",\n                \"libya\",\n                \"liechtenstein\",\n                \"lithuania\",\n                \"luxembourg\",\n                \"macau\",\n                \"macedonia\",\n                \"madagascar\",\n                \"malawi\",\n                \"malaysia\",\n                \"maldives\",\n                \"mali\",\n                \"malta\",\n                \"marshall islands\",\n                \"martinique\",\n                \"mauritania\",\n                \"mauritius\",\n                \"mayotte\",\n                \"mexico\",\n                \"micronesia\",\n                \"moldova\",\n                \"monaco\",\n                \"mongolia\",\n                \"montenegro\",\n                \"montserrat\",\n                \"morocco\",\n                \"mozambique\",\n                \"namibia\",\n                \"nauru\",\n                \"nepal\",\n                \"netherlands antilles\",\n                \"netherlands\",\n                \"new caledonia\",\n                \"new guinea\",\n                \"new zealand\",\n                \"nicaragua\",\n                \"niger\",\n                \"nigeria\",\n                \"niue\",\n                \"norfolk island\",\n                \"north korea\",\n                \"northern mariana islands\",\n                \"norway\",\n                \"oman\",\n                \"pakistan\",\n                \"palau\",\n                \"palestine\",\n                \"panama\",\n                \"paraguay\",\n                \"peru\",\n                \"philippines\",\n                \"pitcairn islands\",\n                \"poland\",\n                \"portugal\",\n                \"puerto rico\",\n                \"qatar\",\n                \"reunion\",\n                \"romania\",\n                \"russia\",\n                \"rwanda\",\n                \"saint helena\",\n                \"saint kitts and nevis\",\n                \"saint lucia\",\n                \"saint pierre\",\n                \"saint vincent\",\n                \"samoa\",\n                \"san marino\",\n                \"sandwich islands\",\n                \"sao tome\",\n                \"saudi arabia\",\n                \"scotland\",\n                \"senegal\",\n                \"serbia\",\n                \"seychelles\",\n                \"sierra leone\",\n                \"singapore\",\n                \"slovakia\",\n                \"slovenia\",\n                \"solomon islands\",\n                \"somalia\",\n                \"south africa\",\n                \"south korea\",\n                \"spain\",\n                \"sri lanka\",\n                \"sudan\",\n                \"suriname\",\n                \"swaziland\",\n                \"sweden\",\n                \"switzerland\",\n                \"syria\",\n                \"taiwan\",\n                \"tajikistan\",\n                \"tanzania\",\n                \"thailand\",\n                \"timorleste\",\n                \"togo\",\n                \"tokelau\",\n                \"tonga\",\n                \"trinidad\",\n                \"tunisia\",\n                \"turkey\",\n                \"turkmenistan\",\n                \"tuvalu\",\n                \"uae\",\n                \"uganda\",\n                \"ukraine\",\n                \"united kingdom\",\n                \"united states\",\n                \"uruguay\",\n                \"us minor islands\",\n                \"us virgin islands\",\n                \"uzbekistan\",\n                \"vanuatu\",\n                \"vatican city\",\n                \"venezuela\",\n                \"vietnam\",\n                \"wales\",\n                \"wallis and futuna\",\n                \"western sahara\",\n                \"yemen\",\n                \"zambia\",\n                \"zimbabwe\",\n        )\n\n        fun cssClassOf(block: SemanticFlag.() -> SemanticFlag): String {\n            return cssClassOfAsList(block).joinToString(\" \")\n        }\n\n        fun cssClassOfAsList(block: SemanticFlag.() -> SemanticFlag): List<String> {\n            lateinit var classes: List<String>\n\n            createHTML().body {\n                classes = flag.block().cssClasses.filter { it.isNotBlank() }\n            }\n\n            return classes\n        }\n    }\n\n    private val cssClasses = mutableListOf<String>()\n\n    private fun attrs() = attributesMapOf(\"class\", cssClasses.joinToString(\" \") + \" flag\")\n\n    operator fun plus(cls: String): SemanticFlag = apply { cssClasses.add(cls) }\n\n    operator fun plus(classes: Array<out String>): SemanticFlag = apply { cssClasses.addAll(classes) }\n\n    fun render(block: I.() -> Unit = {}): Unit = I(attrs(), parent.consumer).visitNoInline(block)\n\n    operator fun invoke(): Unit = render()\n\n    operator fun invoke(block: I.() -> Unit): Unit = render(block)\n\n    @SemanticUiCssMarker\n    fun with(cls: String): SemanticFlag = this + cls\n\n    @SemanticUiConditionalMarker\n    fun given(condition: Boolean, action: SemanticFlag.() -> SemanticFlag): SemanticFlag = when (condition) {\n        false -> this\n        else -> this.action()\n    }\n\n    @SemanticUiConditionalMarker\n    fun givenNot(condition: Boolean, action: SemanticFlag.() -> SemanticFlag): SemanticFlag = given(!condition, action)\n\n    @SemanticUiConditionalMarker val then: SemanticFlag get() = this\n\n    // /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Flags ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    @SemanticFlagMarker inline val afghanistan: SemanticFlag\n        get() = this + \"afghanistan\"\n\n    @SemanticFlagMarker inline val aland_islands: SemanticFlag\n        get() = this + \"aland islands\"\n\n    @SemanticFlagMarker inline val albania: SemanticFlag\n        get() = this + \"albania\"\n\n    @SemanticFlagMarker inline val algeria: SemanticFlag\n        get() = this + \"algeria\"\n\n    @SemanticFlagMarker inline val american_samoa: SemanticFlag\n        get() = this + \"american samoa\"\n\n    @SemanticFlagMarker inline val andorra: SemanticFlag\n        get() = this + \"andorra\"\n\n    @SemanticFlagMarker inline val angola: SemanticFlag\n        get() = this + \"angola\"\n\n    @SemanticFlagMarker inline val anguilla: SemanticFlag\n        get() = this + \"anguilla\"\n\n    @SemanticFlagMarker inline val antigua: SemanticFlag\n        get() = this + \"antigua\"\n\n    @SemanticFlagMarker inline val argentina: SemanticFlag\n        get() = this + \"argentina\"\n\n    @SemanticFlagMarker inline val armenia: SemanticFlag\n        get() = this + \"armenia\"\n\n    @SemanticFlagMarker inline val aruba: SemanticFlag\n        get() = this + \"aruba\"\n\n    @SemanticFlagMarker inline val australia: SemanticFlag\n        get() = this + \"australia\"\n\n    @SemanticFlagMarker inline val austria: SemanticFlag\n        get() = this + \"austria\"\n\n    @SemanticFlagMarker inline val azerbaijan: SemanticFlag\n        get() = this + \"azerbaijan\"\n\n    @SemanticFlagMarker inline val bahamas: SemanticFlag\n        get() = this + \"bahamas\"\n\n    @SemanticFlagMarker inline val bahrain: SemanticFlag\n        get() = this + \"bahrain\"\n\n    @SemanticFlagMarker inline val bangladesh: SemanticFlag\n        get() = this + \"bangladesh\"\n\n    @SemanticFlagMarker inline val barbados: SemanticFlag\n        get() = this + \"barbados\"\n\n    @SemanticFlagMarker inline val belarus: SemanticFlag\n        get() = this + \"belarus\"\n\n    @SemanticFlagMarker inline val belgium: SemanticFlag\n        get() = this + \"belgium\"\n\n    @SemanticFlagMarker inline val belize: SemanticFlag\n        get() = this + \"belize\"\n\n    @SemanticFlagMarker inline val benin: SemanticFlag\n        get() = this + \"benin\"\n\n    @SemanticFlagMarker inline val bermuda: SemanticFlag\n        get() = this + \"bermuda\"\n\n    @SemanticFlagMarker inline val bhutan: SemanticFlag\n        get() = this + \"bhutan\"\n\n    @SemanticFlagMarker inline val bolivia: SemanticFlag\n        get() = this + \"bolivia\"\n\n    @SemanticFlagMarker inline val bosnia: SemanticFlag\n        get() = this + \"bosnia\"\n\n    @SemanticFlagMarker inline val botswana: SemanticFlag\n        get() = this + \"botswana\"\n\n    @SemanticFlagMarker inline val bouvet_island: SemanticFlag\n        get() = this + \"bouvet island\"\n\n    @SemanticFlagMarker inline val brazil: SemanticFlag\n        get() = this + \"brazil\"\n\n    @SemanticFlagMarker inline val british_virgin_islands: SemanticFlag\n        get() = this + \"british virgin islands\"\n\n    @SemanticFlagMarker inline val brunei: SemanticFlag\n        get() = this + \"brunei\"\n\n    @SemanticFlagMarker inline val bulgaria: SemanticFlag\n        get() = this + \"bulgaria\"\n\n    @SemanticFlagMarker inline val burkina_faso: SemanticFlag\n        get() = this + \"burkina faso\"\n\n    @SemanticFlagMarker inline val burma: SemanticFlag\n        get() = this + \"burma\"\n\n    @SemanticFlagMarker inline val burundi: SemanticFlag\n        get() = this + \"burundi\"\n\n    @SemanticFlagMarker inline val caicos_islands: SemanticFlag\n        get() = this + \"caicos islands\"\n\n    @SemanticFlagMarker inline val cambodia: SemanticFlag\n        get() = this + \"cambodia\"\n\n    @SemanticFlagMarker inline val cameroon: SemanticFlag\n        get() = this + \"cameroon\"\n\n    @SemanticFlagMarker inline val canada: SemanticFlag\n        get() = this + \"canada\"\n\n    @SemanticFlagMarker inline val cape_verde: SemanticFlag\n        get() = this + \"cape verde\"\n\n    @SemanticFlagMarker inline val cayman_islands: SemanticFlag\n        get() = this + \"cayman islands\"\n\n    @SemanticFlagMarker inline val central_african_republic: SemanticFlag\n        get() = this + \"central african republic\"\n\n    @SemanticFlagMarker inline val chad: SemanticFlag\n        get() = this + \"chad\"\n\n    @SemanticFlagMarker inline val chile: SemanticFlag\n        get() = this + \"chile\"\n\n    @SemanticFlagMarker inline val china: SemanticFlag\n        get() = this + \"china\"\n\n    @SemanticFlagMarker inline val christmas_island: SemanticFlag\n        get() = this + \"christmas island\"\n\n    @SemanticFlagMarker inline val cocos_islands: SemanticFlag\n        get() = this + \"cocos islands\"\n\n    @SemanticFlagMarker inline val colombia: SemanticFlag\n        get() = this + \"colombia\"\n\n    @SemanticFlagMarker inline val comoros: SemanticFlag\n        get() = this + \"comoros\"\n\n    @SemanticFlagMarker inline val congo: SemanticFlag\n        get() = this + \"congo\"\n\n    @SemanticFlagMarker inline val congo_brazzaville: SemanticFlag\n        get() = this + \"congo brazzaville\"\n\n    @SemanticFlagMarker inline val cook_islands: SemanticFlag\n        get() = this + \"cook islands\"\n\n    @SemanticFlagMarker inline val costa_rica: SemanticFlag\n        get() = this + \"costa rica\"\n\n    @SemanticFlagMarker inline val cote_divoire: SemanticFlag\n        get() = this + \"cote divoire\"\n\n    @SemanticFlagMarker inline val croatia: SemanticFlag\n        get() = this + \"croatia\"\n\n    @SemanticFlagMarker inline val cuba: SemanticFlag\n        get() = this + \"cuba\"\n\n    @SemanticFlagMarker inline val cyprus: SemanticFlag\n        get() = this + \"cyprus\"\n\n    @SemanticFlagMarker inline val czech_republic: SemanticFlag\n        get() = this + \"czech republic\"\n\n    @SemanticFlagMarker inline val denmark: SemanticFlag\n        get() = this + \"denmark\"\n\n    @SemanticFlagMarker inline val djibouti: SemanticFlag\n        get() = this + \"djibouti\"\n\n    @SemanticFlagMarker inline val dominica: SemanticFlag\n        get() = this + \"dominica\"\n\n    @SemanticFlagMarker inline val dominican_republic: SemanticFlag\n        get() = this + \"dominican republic\"\n\n    @SemanticFlagMarker inline val ecuador: SemanticFlag\n        get() = this + \"ecuador\"\n\n    @SemanticFlagMarker inline val egypt: SemanticFlag\n        get() = this + \"egypt\"\n\n    @SemanticFlagMarker inline val el_salvador: SemanticFlag\n        get() = this + \"el salvador\"\n\n    @SemanticFlagMarker inline val england: SemanticFlag\n        get() = this + \"england\"\n\n    @SemanticFlagMarker inline val equatorial_guinea: SemanticFlag\n        get() = this + \"equatorial guinea\"\n\n    @SemanticFlagMarker inline val eritrea: SemanticFlag\n        get() = this + \"eritrea\"\n\n    @SemanticFlagMarker inline val estonia: SemanticFlag\n        get() = this + \"estonia\"\n\n    @SemanticFlagMarker inline val ethiopia: SemanticFlag\n        get() = this + \"ethiopia\"\n\n    @SemanticFlagMarker inline val european_union: SemanticFlag\n        get() = this + \"european union\"\n\n    @SemanticFlagMarker inline val falkland_islands: SemanticFlag\n        get() = this + \"falkland islands\"\n\n    @SemanticFlagMarker inline val faroe_islands: SemanticFlag\n        get() = this + \"faroe islands\"\n\n    @SemanticFlagMarker inline val fiji: SemanticFlag\n        get() = this + \"fiji\"\n\n    @SemanticFlagMarker inline val finland: SemanticFlag\n        get() = this + \"finland\"\n\n    @SemanticFlagMarker inline val france: SemanticFlag\n        get() = this + \"france\"\n\n    @SemanticFlagMarker inline val french_guiana: SemanticFlag\n        get() = this + \"french guiana\"\n\n    @SemanticFlagMarker inline val french_polynesia: SemanticFlag\n        get() = this + \"french polynesia\"\n\n    @SemanticFlagMarker inline val french_territories: SemanticFlag\n        get() = this + \"french territories\"\n\n    @SemanticFlagMarker inline val gabon: SemanticFlag\n        get() = this + \"gabon\"\n\n    @SemanticFlagMarker inline val gambia: SemanticFlag\n        get() = this + \"gambia\"\n\n    @SemanticFlagMarker inline val georgia: SemanticFlag\n        get() = this + \"georgia\"\n\n    @SemanticFlagMarker inline val germany: SemanticFlag\n        get() = this + \"germany\"\n\n    @SemanticFlagMarker inline val ghana: SemanticFlag\n        get() = this + \"ghana\"\n\n    @SemanticFlagMarker inline val gibraltar: SemanticFlag\n        get() = this + \"gibraltar\"\n\n    @SemanticFlagMarker inline val greece: SemanticFlag\n        get() = this + \"greece\"\n\n    @SemanticFlagMarker inline val greenland: SemanticFlag\n        get() = this + \"greenland\"\n\n    @SemanticFlagMarker inline val grenada: SemanticFlag\n        get() = this + \"grenada\"\n\n    @SemanticFlagMarker inline val guadeloupe: SemanticFlag\n        get() = this + \"guadeloupe\"\n\n    @SemanticFlagMarker inline val guam: SemanticFlag\n        get() = this + \"guam\"\n\n    @SemanticFlagMarker inline val guatemala: SemanticFlag\n        get() = this + \"guatemala\"\n\n    @SemanticFlagMarker inline val guinea: SemanticFlag\n        get() = this + \"guinea\"\n\n    @SemanticFlagMarker inline val guineabissau: SemanticFlag\n        get() = this + \"guinea-bissau\"\n\n    @SemanticFlagMarker inline val guyana: SemanticFlag\n        get() = this + \"guyana\"\n\n    @SemanticFlagMarker inline val haiti: SemanticFlag\n        get() = this + \"haiti\"\n\n    @SemanticFlagMarker inline val heard_island: SemanticFlag\n        get() = this + \"heard island\"\n\n    @SemanticFlagMarker inline val honduras: SemanticFlag\n        get() = this + \"honduras\"\n\n    @SemanticFlagMarker inline val hong_kong: SemanticFlag\n        get() = this + \"hong kong\"\n\n    @SemanticFlagMarker inline val hungary: SemanticFlag\n        get() = this + \"hungary\"\n\n    @SemanticFlagMarker inline val iceland: SemanticFlag\n        get() = this + \"iceland\"\n\n    @SemanticFlagMarker inline val india: SemanticFlag\n        get() = this + \"india\"\n\n    @SemanticFlagMarker inline val indian_ocean_territory: SemanticFlag\n        get() = this + \"indian ocean territory\"\n\n    @SemanticFlagMarker inline val indonesia: SemanticFlag\n        get() = this + \"indonesia\"\n\n    @SemanticFlagMarker inline val iran: SemanticFlag\n        get() = this + \"iran\"\n\n    @SemanticFlagMarker inline val iraq: SemanticFlag\n        get() = this + \"iraq\"\n\n    @SemanticFlagMarker inline val ireland: SemanticFlag\n        get() = this + \"ireland\"\n\n    @SemanticFlagMarker inline val israel: SemanticFlag\n        get() = this + \"israel\"\n\n    @SemanticFlagMarker inline val italy: SemanticFlag\n        get() = this + \"italy\"\n\n    @SemanticFlagMarker inline val jamaica: SemanticFlag\n        get() = this + \"jamaica\"\n\n    @SemanticFlagMarker inline val jan_mayen: SemanticFlag\n        get() = this + \"jan mayen\"\n\n    @SemanticFlagMarker inline val japan: SemanticFlag\n        get() = this + \"japan\"\n\n    @SemanticFlagMarker inline val jordan: SemanticFlag\n        get() = this + \"jordan\"\n\n    @SemanticFlagMarker inline val kazakhstan: SemanticFlag\n        get() = this + \"kazakhstan\"\n\n    @SemanticFlagMarker inline val kenya: SemanticFlag\n        get() = this + \"kenya\"\n\n    @SemanticFlagMarker inline val kiribati: SemanticFlag\n        get() = this + \"kiribati\"\n\n    @SemanticFlagMarker inline val kuwait: SemanticFlag\n        get() = this + \"kuwait\"\n\n    @SemanticFlagMarker inline val kyrgyzstan: SemanticFlag\n        get() = this + \"kyrgyzstan\"\n\n    @SemanticFlagMarker inline val laos: SemanticFlag\n        get() = this + \"laos\"\n\n    @SemanticFlagMarker inline val latvia: SemanticFlag\n        get() = this + \"latvia\"\n\n    @SemanticFlagMarker inline val lebanon: SemanticFlag\n        get() = this + \"lebanon\"\n\n    @SemanticFlagMarker inline val lesotho: SemanticFlag\n        get() = this + \"lesotho\"\n\n    @SemanticFlagMarker inline val liberia: SemanticFlag\n        get() = this + \"liberia\"\n\n    @SemanticFlagMarker inline val libya: SemanticFlag\n        get() = this + \"libya\"\n\n    @SemanticFlagMarker inline val liechtenstein: SemanticFlag\n        get() = this + \"liechtenstein\"\n\n    @SemanticFlagMarker inline val lithuania: SemanticFlag\n        get() = this + \"lithuania\"\n\n    @SemanticFlagMarker inline val luxembourg: SemanticFlag\n        get() = this + \"luxembourg\"\n\n    @SemanticFlagMarker inline val macau: SemanticFlag\n        get() = this + \"macau\"\n\n    @SemanticFlagMarker inline val macedonia: SemanticFlag\n        get() = this + \"macedonia\"\n\n    @SemanticFlagMarker inline val madagascar: SemanticFlag\n        get() = this + \"madagascar\"\n\n    @SemanticFlagMarker inline val malawi: SemanticFlag\n        get() = this + \"malawi\"\n\n    @SemanticFlagMarker inline val malaysia: SemanticFlag\n        get() = this + \"malaysia\"\n\n    @SemanticFlagMarker inline val maldives: SemanticFlag\n        get() = this + \"maldives\"\n\n    @SemanticFlagMarker inline val mali: SemanticFlag\n        get() = this + \"mali\"\n\n    @SemanticFlagMarker inline val malta: SemanticFlag\n        get() = this + \"malta\"\n\n    @SemanticFlagMarker inline val marshall_islands: SemanticFlag\n        get() = this + \"marshall islands\"\n\n    @SemanticFlagMarker inline val martinique: SemanticFlag\n        get() = this + \"martinique\"\n\n    @SemanticFlagMarker inline val mauritania: SemanticFlag\n        get() = this + \"mauritania\"\n\n    @SemanticFlagMarker inline val mauritius: SemanticFlag\n        get() = this + \"mauritius\"\n\n    @SemanticFlagMarker inline val mayotte: SemanticFlag\n        get() = this + \"mayotte\"\n\n    @SemanticFlagMarker inline val mexico: SemanticFlag\n        get() = this + \"mexico\"\n\n    @SemanticFlagMarker inline val micronesia: SemanticFlag\n        get() = this + \"micronesia\"\n\n    @SemanticFlagMarker inline val moldova: SemanticFlag\n        get() = this + \"moldova\"\n\n    @SemanticFlagMarker inline val monaco: SemanticFlag\n        get() = this + \"monaco\"\n\n    @SemanticFlagMarker inline val mongolia: SemanticFlag\n        get() = this + \"mongolia\"\n\n    @SemanticFlagMarker inline val montenegro: SemanticFlag\n        get() = this + \"montenegro\"\n\n    @SemanticFlagMarker inline val montserrat: SemanticFlag\n        get() = this + \"montserrat\"\n\n    @SemanticFlagMarker inline val morocco: SemanticFlag\n        get() = this + \"morocco\"\n\n    @SemanticFlagMarker inline val mozambique: SemanticFlag\n        get() = this + \"mozambique\"\n\n    @SemanticFlagMarker inline val namibia: SemanticFlag\n        get() = this + \"namibia\"\n\n    @SemanticFlagMarker inline val nauru: SemanticFlag\n        get() = this + \"nauru\"\n\n    @SemanticFlagMarker inline val nepal: SemanticFlag\n        get() = this + \"nepal\"\n\n    @SemanticFlagMarker inline val netherlands: SemanticFlag\n        get() = this + \"netherlands\"\n\n    @SemanticFlagMarker inline val netherlands_antilles: SemanticFlag\n        get() = this + \"netherlands antilles\"\n\n    @SemanticFlagMarker inline val new_caledonia: SemanticFlag\n        get() = this + \"new caledonia\"\n\n    @SemanticFlagMarker inline val new_guinea: SemanticFlag\n        get() = this + \"new guinea\"\n\n    @SemanticFlagMarker inline val new_zealand: SemanticFlag\n        get() = this + \"new zealand\"\n\n    @SemanticFlagMarker inline val nicaragua: SemanticFlag\n        get() = this + \"nicaragua\"\n\n    @SemanticFlagMarker inline val niger: SemanticFlag\n        get() = this + \"niger\"\n\n    @SemanticFlagMarker inline val nigeria: SemanticFlag\n        get() = this + \"nigeria\"\n\n    @SemanticFlagMarker inline val niue: SemanticFlag\n        get() = this + \"niue\"\n\n    @SemanticFlagMarker inline val norfolk_island: SemanticFlag\n        get() = this + \"norfolk island\"\n\n    @SemanticFlagMarker inline val north_korea: SemanticFlag\n        get() = this + \"north korea\"\n\n    @SemanticFlagMarker inline val northern_mariana_islands: SemanticFlag\n        get() = this + \"northern mariana islands\"\n\n    @SemanticFlagMarker inline val norway: SemanticFlag\n        get() = this + \"norway\"\n\n    @SemanticFlagMarker inline val oman: SemanticFlag\n        get() = this + \"oman\"\n\n    @SemanticFlagMarker inline val pakistan: SemanticFlag\n        get() = this + \"pakistan\"\n\n    @SemanticFlagMarker inline val palau: SemanticFlag\n        get() = this + \"palau\"\n\n    @SemanticFlagMarker inline val palestine: SemanticFlag\n        get() = this + \"palestine\"\n\n    @SemanticFlagMarker inline val panama: SemanticFlag\n        get() = this + \"panama\"\n\n    @SemanticFlagMarker inline val paraguay: SemanticFlag\n        get() = this + \"paraguay\"\n\n    @SemanticFlagMarker inline val peru: SemanticFlag\n        get() = this + \"peru\"\n\n    @SemanticFlagMarker inline val philippines: SemanticFlag\n        get() = this + \"philippines\"\n\n    @SemanticFlagMarker inline val pitcairn_islands: SemanticFlag\n        get() = this + \"pitcairn islands\"\n\n    @SemanticFlagMarker inline val poland: SemanticFlag\n        get() = this + \"poland\"\n\n    @SemanticFlagMarker inline val portugal: SemanticFlag\n        get() = this + \"portugal\"\n\n    @SemanticFlagMarker inline val puerto_rico: SemanticFlag\n        get() = this + \"puerto rico\"\n\n    @SemanticFlagMarker inline val qatar: SemanticFlag\n        get() = this + \"qatar\"\n\n    @SemanticFlagMarker inline val reunion: SemanticFlag\n        get() = this + \"reunion\"\n\n    @SemanticFlagMarker inline val romania: SemanticFlag\n        get() = this + \"romania\"\n\n    @SemanticFlagMarker inline val russia: SemanticFlag\n        get() = this + \"russia\"\n\n    @SemanticFlagMarker inline val rwanda: SemanticFlag\n        get() = this + \"rwanda\"\n\n    @SemanticFlagMarker inline val saint_helena: SemanticFlag\n        get() = this + \"saint helena\"\n\n    @SemanticFlagMarker inline val saint_kitts_and_nevis: SemanticFlag\n        get() = this + \"saint kitts and nevis\"\n\n    @SemanticFlagMarker inline val saint_lucia: SemanticFlag\n        get() = this + \"saint lucia\"\n\n    @SemanticFlagMarker inline val saint_pierre: SemanticFlag\n        get() = this + \"saint pierre\"\n\n    @SemanticFlagMarker inline val saint_vincent: SemanticFlag\n        get() = this + \"saint vincent\"\n\n    @SemanticFlagMarker inline val samoa: SemanticFlag\n        get() = this + \"samoa\"\n\n    @SemanticFlagMarker inline val san_marino: SemanticFlag\n        get() = this + \"san marino\"\n\n    @SemanticFlagMarker inline val sandwich_islands: SemanticFlag\n        get() = this + \"sandwich islands\"\n\n    @SemanticFlagMarker inline val sao_tome: SemanticFlag\n        get() = this + \"sao tome\"\n\n    @SemanticFlagMarker inline val saudi_arabia: SemanticFlag\n        get() = this + \"saudi arabia\"\n\n    @SemanticFlagMarker inline val scotland: SemanticFlag\n        get() = this + \"scotland\"\n\n    @SemanticFlagMarker inline val senegal: SemanticFlag\n        get() = this + \"senegal\"\n\n    @SemanticFlagMarker inline val serbia: SemanticFlag\n        get() = this + \"serbia\"\n\n    @SemanticFlagMarker inline val seychelles: SemanticFlag\n        get() = this + \"seychelles\"\n\n    @SemanticFlagMarker inline val sierra_leone: SemanticFlag\n        get() = this + \"sierra leone\"\n\n    @SemanticFlagMarker inline val singapore: SemanticFlag\n        get() = this + \"singapore\"\n\n    @SemanticFlagMarker inline val slovakia: SemanticFlag\n        get() = this + \"slovakia\"\n\n    @SemanticFlagMarker inline val slovenia: SemanticFlag\n        get() = this + \"slovenia\"\n\n    @SemanticFlagMarker inline val solomon_islands: SemanticFlag\n        get() = this + \"solomon islands\"\n\n    @SemanticFlagMarker inline val somalia: SemanticFlag\n        get() = this + \"somalia\"\n\n    @SemanticFlagMarker inline val south_africa: SemanticFlag\n        get() = this + \"south africa\"\n\n    @SemanticFlagMarker inline val south_korea: SemanticFlag\n        get() = this + \"south korea\"\n\n    @SemanticFlagMarker inline val spain: SemanticFlag\n        get() = this + \"spain\"\n\n    @SemanticFlagMarker inline val sri_lanka: SemanticFlag\n        get() = this + \"sri lanka\"\n\n    @SemanticFlagMarker inline val sudan: SemanticFlag\n        get() = this + \"sudan\"\n\n    @SemanticFlagMarker inline val suriname: SemanticFlag\n        get() = this + \"suriname\"\n\n    @SemanticFlagMarker inline val swaziland: SemanticFlag\n        get() = this + \"swaziland\"\n\n    @SemanticFlagMarker inline val sweden: SemanticFlag\n        get() = this + \"sweden\"\n\n    @SemanticFlagMarker inline val switzerland: SemanticFlag\n        get() = this + \"switzerland\"\n\n    @SemanticFlagMarker inline val syria: SemanticFlag\n        get() = this + \"syria\"\n\n    @SemanticFlagMarker inline val taiwan: SemanticFlag\n        get() = this + \"taiwan\"\n\n    @SemanticFlagMarker inline val tajikistan: SemanticFlag\n        get() = this + \"tajikistan\"\n\n    @SemanticFlagMarker inline val tanzania: SemanticFlag\n        get() = this + \"tanzania\"\n\n    @SemanticFlagMarker inline val thailand: SemanticFlag\n        get() = this + \"thailand\"\n\n    @SemanticFlagMarker inline val timorleste: SemanticFlag\n        get() = this + \"timorleste\"\n\n    @SemanticFlagMarker inline val togo: SemanticFlag\n        get() = this + \"togo\"\n\n    @SemanticFlagMarker inline val tokelau: SemanticFlag\n        get() = this + \"tokelau\"\n\n    @SemanticFlagMarker inline val tonga: SemanticFlag\n        get() = this + \"tonga\"\n\n    @SemanticFlagMarker inline val trinidad: SemanticFlag\n        get() = this + \"trinidad\"\n\n    @SemanticFlagMarker inline val tunisia: SemanticFlag\n        get() = this + \"tunisia\"\n\n    @SemanticFlagMarker inline val turkey: SemanticFlag\n        get() = this + \"turkey\"\n\n    @SemanticFlagMarker inline val turkmenistan: SemanticFlag\n        get() = this + \"turkmenistan\"\n\n    @SemanticFlagMarker inline val tuvalu: SemanticFlag\n        get() = this + \"tuvalu\"\n\n    @SemanticFlagMarker inline val uae: SemanticFlag\n        get() = this + \"uae\"\n\n    @SemanticFlagMarker inline val uganda: SemanticFlag\n        get() = this + \"uganda\"\n\n    @SemanticFlagMarker inline val ukraine: SemanticFlag\n        get() = this + \"ukraine\"\n\n    @SemanticFlagMarker inline val united_kingdom: SemanticFlag\n        get() = this + \"united kingdom\"\n\n    @SemanticFlagMarker inline val united_states: SemanticFlag\n        get() = this + \"united states\"\n\n    @SemanticFlagMarker inline val uruguay: SemanticFlag\n        get() = this + \"uruguay\"\n\n    @SemanticFlagMarker inline val us_minor_islands: SemanticFlag\n        get() = this + \"us minor islands\"\n\n    @SemanticFlagMarker inline val us_virgin_islands: SemanticFlag\n        get() = this + \"us virgin islands\"\n\n    @SemanticFlagMarker inline val uzbekistan: SemanticFlag\n        get() = this + \"uzbekistan\"\n\n    @SemanticFlagMarker inline val vanuatu: SemanticFlag\n        get() = this + \"vanuatu\"\n\n    @SemanticFlagMarker inline val vatican_city: SemanticFlag\n        get() = this + \"vatican city\"\n\n    @SemanticFlagMarker inline val venezuela: SemanticFlag\n        get() = this + \"venezuela\"\n\n    @SemanticFlagMarker inline val vietnam: SemanticFlag\n        get() = this + \"vietnam\"\n\n    @SemanticFlagMarker inline val wales: SemanticFlag\n        get() = this + \"wales\"\n\n    @SemanticFlagMarker inline val wallis_and_futuna: SemanticFlag\n        get() = this + \"wallis and futuna\"\n\n    @SemanticFlagMarker inline val western_sahara: SemanticFlag\n        get() = this + \"western sahara\"\n\n    @SemanticFlagMarker inline val yemen: SemanticFlag\n        get() = this + \"yemen\"\n\n    @SemanticFlagMarker inline val zambia: SemanticFlag\n        get() = this + \"zambia\"\n\n    @SemanticFlagMarker inline val zimbabwe: SemanticFlag\n        get() = this + \"zimbabwe\"\n}\n","package de.peekandpoke.kraft.examples.fomanticui.pages.elements.flag\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.FlagPage() = comp {\n    FlagPage(it)\n}\n\nclass FlagPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Elements | Flag\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Flag\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/elements/flag.html\")\n\n            ui.dividing.header H2 { +\"Simple Usage\" }\n            FlagExamples()\n\n            ui.dividing.header H2 { +\"Flag search\" }\n            FlagSearch()\n        }\n    }\n}\n","package de.peekandpoke.kraft.examples.fomanticui.pages.elements.flag\n\nimport de.peekandpoke.kraft.addons.semanticui.forms.UiInputField\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.semanticui.SemanticFlag\nimport de.peekandpoke.kraft.semanticui.flag\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\nimport kotlinx.html.div\n\n@Suppress(\"FunctionName\")\nfun Tag.FlagSearch() = comp {\n    FlagSearch(it)\n}\n\nclass FlagSearch(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    private var search by value(\"\")\n\n    private val filtered\n        get(): List<String> {\n\n            val parts = search.split(\" \").filter { it.isNotBlank() }.map { it.lowercase() }\n\n            return when (parts.isEmpty()) {\n                true -> SemanticFlag.all\n                else -> SemanticFlag.all.filter { name ->\n                    parts.any { name.lowercase().contains(it) }\n                }\n            }\n        }\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n\n        ui.segment {\n            ui.form {\n                UiInputField(::search) {\n                    placeholder(\"Search for flags\")\n                }\n            }\n        }\n\n        ui.segment {\n\n            ui.ten.column.grid {\n                filtered.forEach { name ->\n                    ui.center.aligned.column {\n                        flag.with(name).render()\n                        div {\n                            +name\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.elements.header\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.components.onClick\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.*\nimport de.peekandpoke.kraft.semanticui.css\nimport de.peekandpoke.kraft.semanticui.icon\nimport de.peekandpoke.kraft.semanticui.noui\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport generated.ExtractedCodeBlocks\nimport kotlinx.css.fontSize\nimport kotlinx.css.px\nimport kotlinx.html.FlowContent\nimport kotlinx.html.Tag\nimport kotlinx.html.p\nimport kotlinx.html.span\n\n@Suppress(\"FunctionName\")\nfun Tag.HeaderPage() = comp {\n    HeaderPage(it)\n}\n\nclass HeaderPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    private var size by value(20)\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Elements | Header\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Header\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/elements/header.html\")\n\n            ui.dividing.header H2 { +\"Types\" }\n\n            renderPageHeaders()\n            renderCustomHeaders()\n            renderIconHeaders()\n            renderSubHeaders()\n\n            ui.dividing.header H2 { +\"Content\" }\n\n            renderImageHeaders()\n            renderIconContentHeaders()\n            renderSubHeaderContentHeaders()\n\n            ui.dividing.header H2 { +\"Variations\" }\n\n            renderDisabledHeaders()\n            renderDividingHeaders()\n            renderBlockHeaders()\n            renderAttachedHeaders()\n            renderFloatingHeaders()\n            renderTextAlignmentHeaders()\n            renderColoredHeaders()\n            renderInvertedHeaders()\n        }\n    }\n\n    private fun FlowContent.renderPageHeaders() = example {\n        ui.header H3 { +\"Page headers\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_header_HeaderPage_kt_renderPageHeaders,\n        ) {\n            // <CodeBlock renderPageHeaders>\n            ui.header H1 { +\"First header\" }\n            shortParagraphWireFrame()\n\n            ui.header H2 { +\"Seconds header\" }\n            shortParagraphWireFrame()\n\n            ui.header H3 { +\"Third header\" }\n            shortParagraphWireFrame()\n\n            ui.header H4 { +\"Fourth header\" }\n            shortParagraphWireFrame()\n\n            ui.header H5 { +\"Fifth header\" }\n            shortParagraphWireFrame()\n\n            ui.header H6 { +\"Sixth header\" }\n            shortParagraphWireFrame()\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderCustomHeaders() = example {\n        ui.header H3 { +\"Custom headers\" }\n\n        ui.buttons {\n            ui.icon.button {\n                onClick { size-- }\n                icon.minus()\n            }\n            ui.icon.button {\n                onClick { size++ }\n                icon.plus()\n            }\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_header_HeaderPage_kt_renderCustomHeaders,\n        ) {\n            // <CodeBlock renderCustomHeaders>\n            ui.vertical.segment {\n                css {\n                    fontSize = size.px\n                }\n\n                ui.massive.header { +\"Massive header\" }\n                shortParagraphWireFrame()\n\n                ui.huge.header { +\"Huge header\" }\n                shortParagraphWireFrame()\n\n                ui.big.header { +\"Big header\" }\n                shortParagraphWireFrame()\n\n                ui.large.header { +\"Large header\" }\n                shortParagraphWireFrame()\n\n                ui.medium.header { +\"Medium header\" }\n                shortParagraphWireFrame()\n\n                ui.small.header { +\"Small header\" }\n                shortParagraphWireFrame()\n\n                ui.tiny.header { +\"Tiny header\" }\n                shortParagraphWireFrame()\n\n                ui.mini.header { +\"Mini header\" }\n                shortParagraphWireFrame()\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderIconHeaders() = example {\n        ui.header H3 { +\"Icon headers\" }\n\n        p { +\"A header can be formatted to emphasize an icon\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_header_HeaderPage_kt_renderIconHeaders_1,\n        ) {\n            // <CodeBlock renderIconHeaders_1>\n            ui.center.aligned.icon.header H2 {\n                icon.cogs()\n                noui.content {\n                    +\"Account Settings\"\n                    noui.sub.header {\n                        +\"Manage your account settings and set e-mail preferences.\"\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_header_HeaderPage_kt_renderIconHeaders_2,\n        ) {\n            // <CodeBlock renderIconHeaders_2>\n            ui.center.aligned.icon.header H2 {\n                icon.circular.users()\n                noui.content {\n                    +\"Friends\"\n                    shortParagraphWireFrame()\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderSubHeaders() = example {\n        ui.header H3 { +\"Sub headers\" }\n\n        p { +\"Headers may be formatted to label smaller or de-emphasized content.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_header_HeaderPage_kt_renderSubHeaders_1,\n        ) {\n            // <CodeBlock renderSubHeaders_1>\n            ui.sub.header { +\"Price\" }\n            span { +\"€ 10,99\" }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_header_HeaderPage_kt_renderSubHeaders_2,\n        ) {\n            // <CodeBlock renderSubHeaders_2>\n            ui.horizontal.list {\n                noui.item {\n                    ui.mini.circular.image Img {\n                        src = \"/images/avatar2/large/molly.png\"\n                    }\n                    noui.content {\n                        ui.sub.header { +\"Molly\" }\n                        +\"Coordindator\"\n                    }\n                }\n                noui.item {\n                    ui.mini.circular.image Img {\n                        src = \"/images/avatar2/large/elyse.png\"\n                    }\n                    noui.content {\n                        ui.sub.header { +\"Elyse\" }\n                        +\"Developer\"\n                    }\n                }\n                noui.item {\n                    ui.mini.circular.image Img {\n                        src = \"/images/avatar2/large/eve.png\"\n                    }\n                    noui.content {\n                        ui.sub.header { +\"Eve\" }\n                        +\"Project Manager\"\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderImageHeaders() = example {\n        ui.header H3 { +\"Image headers\" }\n\n        p { +\"A header may contain an image.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_header_HeaderPage_kt_renderImageHeaders_1,\n        ) {\n            // <CodeBlock renderImageHeaders_1>\n            ui.header H2 {\n                ui.image Img { src = \"images/icons/school.png\" }\n                noui.content { +\"Learn More\" }\n            }\n            shortParagraphWireFrame()\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_header_HeaderPage_kt_renderImageHeaders_2,\n        ) {\n            // <CodeBlock renderImageHeaders_2>\n            ui.header H2 {\n                ui.circular.image Img { src = \"images/avatar2/large/patrick.png\" }\n                +\"Patrick\"\n            }\n            shortParagraphWireFrame()\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_header_HeaderPage_kt_renderImageHeaders_3,\n        ) {\n            // <CodeBlock renderImageHeaders_3>\n            ui.header H2 {\n                ui.image Img { src = \"images/icons/school.png\" }\n                noui.content {\n                    +\"Plugins\"\n                    noui.sub.header { +\"Check out our plug-in marketplace\" }\n                }\n            }\n            shortParagraphWireFrame()\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderIconContentHeaders() = example {\n        ui.header H3 { +\"Icon headers\" }\n\n        p { +\"A header may contain an icon.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_header_HeaderPage_kt_renderIconContentHeaders_1,\n        ) {\n            // <CodeBlock renderIconContentHeaders_1>\n            ui.header H2 {\n                icon.plug()\n                noui.content { +\"Uptime Guarantee\" }\n            }\n            shortParagraphWireFrame()\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_header_HeaderPage_kt_renderIconContentHeaders_2,\n        ) {\n            // <CodeBlock renderIconContentHeaders_2>\n            ui.header H2 {\n                icon.cogs()\n                noui.content {\n                    +\"Account Settings\"\n                    noui.sub.header { +\"Manage your preferences\" }\n                }\n            }\n            shortParagraphWireFrame()\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderSubHeaderContentHeaders() = example {\n        ui.header H3 { +\"Subheader\" }\n\n        p { +\"Headers may contain subheaders.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_header_HeaderPage_kt_renderSubHeaderContentHeaders_1,\n        ) {\n            // <CodeBlock renderSubHeaderContentHeaders_1>\n            ui.header H2 {\n                +\"Account Settings\"\n                noui.sub.header { +\"Manage your preferences\" }\n            }\n            shortParagraphWireFrame()\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_header_HeaderPage_kt_renderSubHeaderContentHeaders_2,\n        ) {\n            // <CodeBlock renderSubHeaderContentHeaders_2>\n            ui.header H1 {\n                +\"H1\"\n                noui.sub.header { +\"Sub Header\" }\n            }\n            ui.header H2 {\n                +\"H2\"\n                noui.sub.header { +\"Sub Header\" }\n            }\n            ui.header H3 {\n                +\"H3\"\n                noui.sub.header { +\"Sub Header\" }\n            }\n            ui.header H4 {\n                +\"H4\"\n                noui.sub.header { +\"Sub Header\" }\n            }\n            ui.header H5 {\n                +\"H5\"\n                noui.sub.header { +\"Sub Header\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderDisabledHeaders() = example {\n        ui.header H3 { +\"Disabled\" }\n\n        p { +\"A header can show that it is inactive.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_header_HeaderPage_kt_renderDisabledHeaders,\n        ) {\n            // <CodeBlock renderDisabledHeaders>\n            ui.disabled.header H2 {\n                +\"Account Settings\"\n                noui.sub.header { +\"Manage your preferences\" }\n            }\n            shortParagraphWireFrame()\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderDividingHeaders() = example {\n        ui.header H3 { +\"Dividing headers\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_header_HeaderPage_kt_renderDividingHeaders,\n        ) {\n            // <CodeBlock renderDividingHeaders>\n            shortParagraphWireFrame()\n\n            ui.dividing.header H3 { +\"This header is dividing\" }\n\n            shortParagraphWireFrame()\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderBlockHeaders() = example {\n        ui.header H3 { +\"Block headers\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_header_HeaderPage_kt_renderBlockHeaders,\n        ) {\n            // <CodeBlock renderBlockHeaders>\n            ui.block.header H3 { +\"Block header\" }\n\n            mediaParagraphWireFrame()\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderAttachedHeaders() = example {\n        ui.header H3 { +\"Attached headers\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_header_HeaderPage_kt_renderAttachedHeaders,\n        ) {\n            // <CodeBlock renderAttachedHeaders>\n            ui.top.attached.header { +\"Top attached header\" }\n\n            ui.attached.segment {\n                shortParagraphWireFrame()\n            }\n\n            ui.attached.header { +\"Attached header\" }\n\n            ui.attached.segment {\n                shortParagraphWireFrame()\n            }\n\n            ui.bottom.attached.header { +\"Bottom attached header\" }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderFloatingHeaders() = example {\n        ui.header H3 { +\"Floating headers\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_header_HeaderPage_kt_renderFloatingHeaders,\n        ) {\n            // <CodeBlock renderFloatingHeaders>\n            ui.clearing.segment {\n                ui.right.floated.header {\n                    +\"Go forward\"\n                }\n                ui.left.floated.header {\n                    +\"Go backward\"\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderTextAlignmentHeaders() = example {\n        ui.header H3 { +\"Floating headers\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_header_HeaderPage_kt_renderTextAlignmentHeaders,\n        ) {\n            // <CodeBlock renderTextAlignmentHeaders>\n            ui.segment {\n                ui.right.aligned.header { +\"Right\" }\n                ui.left.aligned.header { +\"Left\" }\n                ui.justified.header { +\"This should take up the full width even if only one line\" }\n                ui.center.aligned.header { +\"Center\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderColoredHeaders() = example {\n        ui.header H3 { +\"Colored headers\" }\n\n        p { +\"A header can be formatted with different colors\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_header_HeaderPage_kt_renderColoredHeaders,\n        ) {\n            // <CodeBlock renderColoredHeaders>\n            ui.primary.header { +\"primary\" }\n            ui.secondary.header { +\"secondary\" }\n\n            ui.red.header { +\"red\" }\n            ui.orange.header { +\"orange\" }\n            ui.yellow.header { +\"yellow\" }\n            ui.olive.header { +\"olive\" }\n            ui.green.header { +\"green\" }\n            ui.teal.header { +\"teal\" }\n            ui.blue.header { +\"blue\" }\n            ui.violet.header { +\"violet\" }\n            ui.purple.header { +\"purple\" }\n            ui.pink.header { +\"pink\" }\n            ui.brown.header { +\"brown\" }\n            ui.grey.header { +\"grey\" }\n            ui.black.header { +\"black\" }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderInvertedHeaders() = example {\n        ui.header H3 { +\"Inverted headers\" }\n\n        p { +\"A header can have its colors inverted for contrast\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_header_HeaderPage_kt_renderInvertedHeaders,\n        ) {\n            // <CodeBlock renderInvertedHeaders>\n            ui.inverted.segment {\n                ui.inverted.primary.header { +\"primary\" }\n                ui.inverted.secondary.header { +\"secondary\" }\n\n                ui.inverted.red.header { +\"red\" }\n                ui.inverted.orange.header { +\"orange\" }\n                ui.inverted.yellow.header { +\"yellow\" }\n                ui.inverted.olive.header { +\"olive\" }\n                ui.inverted.green.header { +\"green\" }\n                ui.inverted.teal.header { +\"teal\" }\n                ui.inverted.blue.header { +\"blue\" }\n                ui.inverted.violet.header { +\"violet\" }\n                ui.inverted.purple.header { +\"purple\" }\n                ui.inverted.pink.header { +\"pink\" }\n                ui.inverted.brown.header { +\"brown\" }\n                ui.inverted.grey.header { +\"grey\" }\n                ui.inverted.black.header { +\"black\" }\n            }\n            // </CodeBlock>\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.elements.icon\n\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.VerticalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.semanticui.icon\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport generated.ExtractedCodeBlocks\nimport kotlinx.html.FlowContent\nimport kotlinx.html.Tag\nimport kotlinx.html.div\n\n@Suppress(\"FunctionName\")\nfun Tag.IconExamples() = comp {\n    IconExamples(it)\n}\n\nclass IconExamples(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        renderSizes()\n        renderColors()\n        renderFeatures()\n        renderIconGroupsAndCorners()\n    }\n\n    private fun FlowContent.renderSizes() = example {\n        ui.dividing.header { +\"Sizes\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_icon_IconExamples_kt_renderSizes,\n        ) {\n            ui.doubling.eight.column.middle.aligned.grid {\n                // <CodeBlock renderSizes>\n                ui.center.aligned.column {\n                    icon.mini.chess()\n                    div { +\"mini\" }\n                }\n                ui.center.aligned.column {\n                    icon.tiny.chess()\n                    div { +\"tiny\" }\n                }\n                ui.center.aligned.column {\n                    icon.small.chess()\n                    div { +\"small\" }\n                }\n                ui.center.aligned.column {\n                    icon.medium.chess()\n                    div { +\"medium\" }\n                }\n                ui.center.aligned.column {\n                    icon.large.chess()\n                    div { +\"large\" }\n                }\n                ui.center.aligned.column {\n                    icon.big.chess()\n                    div { +\"big\" }\n                }\n                ui.center.aligned.column {\n                    icon.huge.chess()\n                    div { +\"huge\" }\n                }\n                ui.center.aligned.column {\n                    icon.massive.chess()\n                    div { +\"massive\" }\n                }\n                // </CodeBlock>\n            }\n        }\n    }\n\n    private fun FlowContent.renderColors() = example {\n        ui.dividing.header { +\"Colors\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_icon_IconExamples_kt_renderColors,\n        ) {\n            ui.doubling.eight.column.grid {\n                // <CodeBlock renderColors>\n                ui.center.aligned.column {\n                    icon.large.red.couch()\n                    div { +\"red\" }\n                }\n                ui.center.aligned.column {\n                    icon.large.orange.couch()\n                    div { +\"orange\" }\n                }\n                ui.center.aligned.column {\n                    icon.large.yellow.couch()\n                    div { +\"yellow\" }\n                }\n                ui.center.aligned.column {\n                    icon.large.olive.couch()\n                    div { +\"olive\" }\n                }\n                ui.center.aligned.column {\n                    icon.large.green.couch()\n                    div { +\"green\" }\n                }\n                ui.center.aligned.column {\n                    icon.large.teal.couch()\n                    div { +\"teal\" }\n                }\n                ui.center.aligned.column {\n                    icon.large.blue.couch()\n                    div { +\"blue\" }\n                }\n                ui.center.aligned.column {\n                    icon.large.violet.couch()\n                    div { +\"violet\" }\n                }\n                ui.center.aligned.column {\n                    icon.large.purple.couch()\n                    div { +\"purple\" }\n                }\n                ui.center.aligned.column {\n                    icon.large.pink.couch()\n                    div { +\"pink\" }\n                }\n                ui.center.aligned.column {\n                    icon.large.brown.couch()\n                    div { +\"brown\" }\n                }\n                ui.center.aligned.column {\n                    icon.large.grey.couch()\n                    div { +\"grey\" }\n                }\n                ui.center.aligned.column {\n                    icon.large.black.couch()\n                    div { +\"black\" }\n                }\n                ui.center.aligned.column {\n                    icon.large.white.couch()\n                    div { +\"white\" }\n                }\n                ui.center.aligned.inverted.blue.column {\n                    icon.large.white.couch()\n                    div { +\"white\" }\n                }\n                // </CodeBlock>\n            }\n        }\n    }\n\n    private fun FlowContent.renderFeatures() = example {\n        ui.dividing.header { +\"Features\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_icon_IconExamples_kt_renderFeatures,\n        ) {\n            ui.doubling.eight.column.grid {\n                // <CodeBlock renderFeatures>\n                ui.center.aligned.column {\n                    icon.disabled.big.red.couch()\n                    div { +\"disabled\" }\n                }\n                ui.center.aligned.column {\n                    icon.big.loading.spinner()\n                    icon.big.loading.circle_notch()\n                    icon.big.loading.asterisk()\n                    icon.big.loading.user()\n                    div { +\"loading\" }\n                }\n                ui.center.aligned.column {\n                    +\"Fitted\"\n                    icon.fitted.globe()\n                    +\"icon\"\n                }\n                ui.center.aligned.column {\n                    icon.big.blue.link.question()\n                    div { +\"link\" }\n                }\n                ui.center.aligned.column {\n                    icon.big.horizontally.flipped.question()\n                    icon.big.vertically.flipped.question()\n                    div { +\"flipped\" }\n                }\n                ui.center.aligned.column {\n                    icon.big.clockwise.rotated.question()\n                    icon.big.counterclockwise.rotated.question()\n                    div { +\"rotated\" }\n                }\n                ui.center.aligned.column {\n                    icon.circular.users()\n                    icon.circular.teal.users()\n                    icon.circular.inverted.users()\n                    icon.circular.inverted.teal.users()\n                    div { +\"circular\" }\n                }\n                ui.center.aligned.column {\n                    icon.circular.colored.red.users()\n                    icon.circular.colored.green.users()\n                    icon.circular.colored.blue.users()\n                    div { +\"colored circular\" }\n                }\n                ui.center.aligned.column {\n                    icon.bordered.users()\n                    icon.bordered.teal.users()\n                    icon.bordered.inverted.users()\n                    icon.bordered.inverted.teal.users()\n                    div { +\"bordered\" }\n                }\n                ui.center.aligned.column {\n                    icon.bordered.colored.red.users()\n                    icon.bordered.colored.green.users()\n                    icon.bordered.colored.blue.users()\n                    div { +\"colored bordered\" }\n                }\n                // </CodeBlock>\n            }\n        }\n    }\n\n    private fun FlowContent.renderIconGroupsAndCorners() = example {\n        ui.dividing.header { +\"Grouped icons & cornered icons\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_icon_IconExamples_kt_renderIconGroupsAndCorners,\n        ) {\n            ui.doubling.eight.column.grid {\n                // <CodeBlock renderIconGroupsAndCorners>\n                ui.center.aligned.column {\n                    ui.big.icons I {\n                        icon.big.green.circle_outline()\n                        icon.user()\n                    }\n                }\n                ui.center.aligned.column {\n                    ui.big.icons I {\n                        icon.big.red.dont.render()\n                        icon.user()\n                    }\n                }\n                ui.center.aligned.column {\n                    ui.big.icons I {\n                        icon.user()\n                        icon.top.left.corner.plus()\n                    }\n                }\n                ui.center.aligned.column {\n                    ui.big.icons I {\n                        icon.user()\n                        icon.top.right.corner.plus()\n                    }\n                }\n                ui.center.aligned.column {\n                    ui.big.icons I {\n                        icon.user()\n                        icon.bottom.right.corner.plus()\n                    }\n                }\n                ui.center.aligned.column {\n                    ui.big.icons I {\n                        icon.user()\n                        icon.bottom.left.corner.plus()\n                    }\n                }\n                ui.center.aligned.column {\n                    ui.big.icons I {\n                        icon.twitter()\n                        icon.bottom.right.corner.inverted.plus()\n                    }\n                }\n                // </CodeBlock>\n            }\n        }\n    }\n}\n","package de.peekandpoke.kraft.examples.fomanticui.pages.elements.icon\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.IconPage() = comp {\n    IconPage(it)\n}\n\nclass IconPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Elements | Icon\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Icon\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/elements/icon.html#/definition\")\n\n            IconExamples()\n\n            ui.dividing.header H2 { +\"Icon search\" }\n            IconSearch()\n        }\n    }\n}\n","package de.peekandpoke.kraft.examples.fomanticui.pages.elements.icon\n\nimport de.peekandpoke.kraft.addons.semanticui.forms.UiInputField\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.semanticui.SemanticIcon\nimport de.peekandpoke.kraft.semanticui.icon\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\nimport kotlinx.html.div\n\n@Suppress(\"FunctionName\")\nfun Tag.IconSearch() = comp {\n    IconSearch(it)\n}\n\nclass IconSearch(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    private var search by value(\"\")\n\n    private val filtered\n        get(): List<String> {\n\n            val parts = search.split(\" \").filter { it.isNotBlank() }.map { it.lowercase() }\n\n            return when (parts.isEmpty()) {\n                true -> SemanticIcon.all\n                else -> SemanticIcon.all.filter { name ->\n                    parts.any { name.lowercase().contains(it) }\n                }\n            }\n        }\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n\n        ui.segment {\n            ui.form {\n                UiInputField(::search) {\n                    placeholder(\"Search for icons\")\n                }\n            }\n        }\n\n        ui.segment {\n\n            ui.ten.column.grid {\n                filtered.forEach { name ->\n\n                    ui.center.aligned.column {\n                        icon.big.with(name).render()\n                        div {\n                            +name\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.elements.image\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.HorizontalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.VerticalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport de.peekandpoke.ultra.common.fixture.LoremIpsum\nimport generated.ExtractedCodeBlocks\nimport kotlinx.html.*\n\n@Suppress(\"FunctionName\")\nfun Tag.ImagePage() = comp {\n    ImagePage(it)\n}\n\nclass ImagePage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Elements | Image\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Image\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/elements/image.html\")\n\n            ui.dividing.header H2 { +\"Types\" }\n\n            renderBasicImage()\n            renderLinkImage()\n\n            ui.dividing.header H2 { +\"States\" }\n\n            renderHiddenImage()\n            renderDisabledImage()\n\n            ui.dividing.header H2 { +\"Variations\" }\n\n            renderAvatarImage()\n            renderBorderedImage()\n            renderFluidImage()\n            renderRoundedImage()\n            renderCircularImage()\n            renderVerticalAlignmentImage()\n            renderCenteredImage()\n            renderSpacedImage()\n            renderFloatedImage()\n\n            ui.dividing.header H2 { +\"Groups\" }\n\n            renderSizedGroupsOfImages()\n        }\n    }\n\n    private fun FlowContent.renderBasicImage() = example {\n        ui.header H3 { +\"Basic image\" }\n\n        ui.message {\n            +\"Unless a size is specified, images will use the original dimensions of the image up \"\n            +\"to the size of its container.. \"\n        }\n\n        ui.stackable.three.column.grid {\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_image_ImagePage_kt_renderBasicImage_1,\n                ) {\n                    // <CodeBlock renderBasicImage_1>\n                    ui.image Img { src = \"images/wireframe/image.png\" }\n                    // </CodeBlock>\n                }\n            }\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_image_ImagePage_kt_renderBasicImage_2,\n                ) {\n                    // <CodeBlock renderBasicImage_2>\n                    ui.small.image Img { src = \"images/wireframe/image.png\" }\n                    // </CodeBlock>\n                }\n            }\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_image_ImagePage_kt_renderBasicImage_3,\n                ) {\n                    // <CodeBlock renderBasicImage_3>\n                    ui.large.image Img { src = \"images/wireframe/image.png\" }\n                    // </CodeBlock>\n                }\n            }\n        }\n    }\n\n    private fun FlowContent.renderLinkImage() = example {\n        ui.header H3 { +\"Link image\" }\n\n        p { +\"An image can be formatted to link to other content.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_image_ImagePage_kt_renderLinkImage,\n        ) {\n            // <CodeBlock renderLinkImage>\n            ui.medium.image A {\n                href = \"https://example.com\"\n                img { src = \"images/wireframe/image.png\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderHiddenImage() = example {\n        ui.header H3 { +\"Hidden\" }\n\n        p { +\"An image can be hidden.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_image_ImagePage_kt_renderHiddenImage,\n        ) {\n            // <CodeBlock renderHiddenImage>\n            ui.hidden.image Img {\n                src = \"images/wireframe/image.png\"\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderDisabledImage() = example {\n        ui.header H3 { +\"Disabled\" }\n\n        p { +\"An image can be disabled.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_image_ImagePage_kt_renderDisabledImage,\n        ) {\n            // <CodeBlock renderDisabledImage>\n            ui.disabled.medium.image Img {\n                src = \"images/wireframe/image.png\"\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderAvatarImage() = example {\n        ui.header H3 { +\"Avatar\" }\n\n        p { +\"An image may be formatted to appear inline with text as an avatar.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_image_ImagePage_kt_renderAvatarImage,\n        ) {\n            // <CodeBlock renderAvatarImage>\n            ui.avatar.image Img {\n                src = \"images/wireframe/image.png\"\n            }\n            span { +\"Username\" }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderBorderedImage() = example {\n        ui.header H3 { +\"Bordered\" }\n\n        p { +\"An image may include a border to emphasize the edges of white or transparent content.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_image_ImagePage_kt_renderBorderedImage,\n        ) {\n            // <CodeBlock renderBorderedImage>\n            ui.medium.bordered.image Img {\n                src = \"images/wireframe/white-image.png\"\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderFluidImage() = example {\n        ui.header H3 { +\"Fluid\" }\n\n        p { +\"An image can take up the width of its container.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_image_ImagePage_kt_renderFluidImage,\n        ) {\n            // <CodeBlock renderFluidImage>\n            ui.segment {\n                ui.fluid.image Img {\n                    src = \"images/avatar2/large/eve.png\"\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderRoundedImage() = example {\n        ui.header H3 { +\"Rounded\" }\n\n        p { +\"An image may appear rounded.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_image_ImagePage_kt_renderRoundedImage,\n        ) {\n            // <CodeBlock renderRoundedImage>\n            ui.medium.rounded.image Img {\n                src = \"images/wireframe/image.png\"\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderCircularImage() = example {\n        ui.header H3 { +\"Circular\" }\n\n        p { +\"An image may appear circular.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_image_ImagePage_kt_renderCircularImage,\n        ) {\n            // <CodeBlock renderCircularImage>\n            ui.medium.circular.image Img {\n                src = \"images/avatar2/large/elliot.jpg\"\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderVerticalAlignmentImage() = example {\n        ui.header H3 { +\"Vertical Alignment\" }\n\n        p { +\"An image can specify its vertical alignment.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_image_ImagePage_kt_renderVerticalAlignmentImage,\n        ) {\n            // <CodeBlock renderVerticalAlignmentImage>\n            ui.segment {\n                ui.top.aligned.tiny.right.spaced.image Img { src = \"images/wireframe/image.png\" }\n                span { +\"Top aligned\" }\n\n                ui.divider {}\n\n                ui.middle.aligned.tiny.right.spaced.image Img { src = \"images/wireframe/image.png\" }\n                span { +\"Top aligned\" }\n\n                ui.divider {}\n\n                ui.bottom.aligned.tiny.right.spaced.image Img { src = \"images/wireframe/image.png\" }\n                span { +\"Top aligned\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderCenteredImage() = example {\n        ui.header H3 { +\"Centered\" }\n\n        p { +\"An image can appear centered in a content block\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_image_ImagePage_kt_renderCenteredImage,\n        ) {\n            // <CodeBlock renderCenteredImage>\n            ui.segment {\n                ui.medium.centered.image Img { src = \"images/wireframe/image.png\" }\n                +LoremIpsum.words(50)\n                ui.small.centered.image Img { src = \"images/wireframe/image.png\" }\n                +LoremIpsum.words(50)\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderSpacedImage() = example {\n        ui.header H3 { +\"Spaced\" }\n\n        p { +\"An image can specify that it needs an additional spacing to separate it from nearby content\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_image_ImagePage_kt_renderSpacedImage_1,\n        ) {\n            // <CodeBlock renderSpacedImage_1>\n            ui.segment {\n                ui.mini.right.spaced.image Img { src = \"images/wireframe/image.png\" }\n                +LoremIpsum.words(10)\n                ui.mini.spaced.image Img { src = \"images/wireframe/image.png\" }\n                +LoremIpsum.words(10)\n                ui.mini.left.spaced.image Img { src = \"images/wireframe/image.png\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderFloatedImage() = example {\n        ui.header H3 { +\"Floated\" }\n\n        p { +\"An image can sit to the left or right of other content\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_image_ImagePage_kt_renderFloatedImage,\n        ) {\n            // <CodeBlock renderFloatedImage>\n            ui.segment {\n                ui.small.left.floated.image Img { src = \"images/wireframe/image.png\" }\n\n                p { +LoremIpsum.words(35) }\n\n                ui.small.right.floated.image Img { src = \"images/wireframe/image.png\" }\n\n                p { +LoremIpsum.words(35) }\n\n                p { +LoremIpsum.words(35) }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderSizedGroupsOfImages() = example {\n        ui.header H3 { +\"Size\" }\n\n        p { +\"A group of images can be formatted to have the same size.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_image_ImagePage_kt_renderSizedGroupsOfImages_1,\n        ) {\n            // <CodeBlock renderSizedGroupsOfImages_1>\n            ui.tiny.images {\n                ui.images Img { src = \"images/avatar2/large/elliot.jpg\" }\n                ui.images Img { src = \"images/avatar2/large/eve.png\" }\n                ui.images Img { src = \"images/avatar2/large/elyse.png\" }\n                ui.images Img { src = \"images/avatar2/large/molly.png\" }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_image_ImagePage_kt_renderSizedGroupsOfImages_2,\n        ) {\n            // <CodeBlock renderSizedGroupsOfImages_2>\n            ui.small.images {\n                ui.images Img { src = \"images/avatar2/large/elliot.jpg\" }\n                ui.images Img { src = \"images/avatar2/large/eve.png\" }\n                ui.images Img { src = \"images/avatar2/large/elyse.png\" }\n                ui.images Img { src = \"images/avatar2/large/molly.png\" }\n            }\n            // </CodeBlock>\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.elements.input\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.InputPage() = comp {\n    InputPage(it)\n}\n\nclass InputPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Elements | Input\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Input\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/elements/input.html\")\n\n            ui.dividing.header H2 { +\"Types\" }\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.elements.label\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.HorizontalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.VerticalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.semanticui.css\nimport de.peekandpoke.kraft.semanticui.icon\nimport de.peekandpoke.kraft.semanticui.noui\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport de.peekandpoke.ultra.common.fixture.LoremIpsum\nimport generated.ExtractedCodeBlocks\nimport kotlinx.css.Overflow\nimport kotlinx.css.overflow\nimport kotlinx.html.*\n\n@Suppress(\"FunctionName\")\nfun Tag.LabelPage() = comp {\n    LabelPage(it)\n}\n\nclass LabelPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Elements | Label\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Label\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/elements/label.html\")\n\n            ui.dividing.header H2 { +\"Types\" }\n\n            renderLabel()\n            renderImageLabel()\n            renderPointingLabel()\n            renderCornerLabel()\n            renderTagLabel()\n            renderRibbonLabel()\n            renderAttachedLabel()\n            renderHorizontalLabel()\n            renderFloatingLabel()\n\n            ui.dividing.header H2 { +\"Content\" }\n\n            renderDetailContentLabel()\n            renderIconContentLabel()\n            renderImageContentLabel()\n            renderLinkContentLabel()\n\n            ui.dividing.header H2 { +\"Variations\" }\n\n            renderCircularLabel()\n            renderBasicLabel()\n            renderColoredLabel()\n            renderSizedLabel()\n\n            ui.dividing.header H2 { +\"Groups\" }\n\n            renderGroupSize()\n            renderColoredGroup()\n            renderBasicGroup()\n            renderTagGroup()\n            renderCircularGroup()\n\n            ui.dividing.header H2 { +\"Inverted\" }\n\n            renderInvertedVariants()\n        }\n    }\n\n    private fun FlowContent.renderLabel() = example {\n        ui.header H3 { +\"Label\" }\n\n        p { +\"A label\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderLabel,\n        ) {\n            // <CodeBlock renderLabel>\n            ui.label {\n                icon.mail()\n                +\"23\"\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderImageLabel() = example {\n        ui.header H3 { +\"Image\" }\n\n        p { +\"A label can be formatted to emphasize an image\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderImageLabel_1,\n        ) {\n            // <CodeBlock renderImageLabel_1>\n            ui.image.label {\n                img { src = \"images/avatar2/large/elyse.png\" }\n                +\"Elyse\"\n            }\n            ui.image.label {\n                img { src = \"images/avatar2/large/elliot.jpg\" }\n                +\"Elliot\"\n            }\n            ui.image.label {\n                img { src = \"images/avatar2/large/molly.png\" }\n                +\"Molly\"\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderImageLabel_2,\n        ) {\n            // <CodeBlock renderImageLabel_2>\n            ui.blue.image.label A {\n                img { src = \"images/avatar2/large/elyse.png\" }\n                +\"Elyse\"\n                noui.detail { +\"Friend\" }\n            }\n            ui.green.image.label A {\n                img { src = \"images/avatar2/large/elliot.jpg\" }\n                +\"Elliot\"\n                noui.detail { +\"Student\" }\n            }\n            ui.orange.image.label A {\n                img { src = \"images/avatar2/large/molly.png\" }\n                +\"Molly\"\n                noui.detail { +\"Co-worker\" }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderImageLabel_3,\n        ) {\n            // <CodeBlock renderImageLabel_3>\n            ui.image.label {\n                img { src = \"images/avatar2/large/elyse.png\" }\n                +\"Elyse\"\n                icon.delete()\n            }\n            ui.image.label {\n                img { src = \"images/avatar2/large/elliot.jpg\" }\n                +\"Elliot\"\n                icon.green.delete()\n            }\n            ui.image.label {\n                img { src = \"images/avatar2/large/molly.png\" }\n                +\"Molly\"\n                icon.red.delete()\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderPointingLabel() = example {\n        ui.header H3 { +\"Pointing\" }\n\n        p { +\"A label can point to content next to it\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderPointingLabel_1,\n        ) {\n            // <CodeBlock renderPointingLabel_1>\n            ui.fluid.form {\n                noui.field {\n                    input { type = InputType.text; placeholder = \"First name\" }\n                    ui.pointing.label {\n                        +\"Please enter a value\"\n                    }\n                }\n\n                ui.divider()\n\n                noui.field {\n                    ui.pointing.below.label {\n                        +\"Please enter a value\"\n                    }\n                    input { type = InputType.text; placeholder = \"Last name\" }\n                }\n\n                ui.divider()\n\n                noui.inline.field {\n                    input { type = InputType.text; placeholder = \"Username\" }\n                    ui.left.pointing.blue.label {\n                        +\"Please enter a value\"\n                    }\n                }\n\n                ui.divider()\n\n                noui.inline.field {\n                    ui.right.pointing.red.label {\n                        +\"Please enter a value\"\n                    }\n                    input { type = InputType.text; placeholder = \"Password\" }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderCornerLabel() = example {\n        ui.header H3 { +\"Corner\" }\n\n        p { +\"A label can position itself in the corner of an element\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderCornerLabel_1,\n        ) {\n            // <CodeBlock renderCornerLabel_1>\n            ui.two.column.grid {\n                ui.column {\n                    ui.fluid.image {\n                        ui.left.corner.label { icon.heart() }\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                }\n                ui.column {\n                    ui.fluid.image {\n                        ui.right.corner.red.label { icon.star() }\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        ui.yellow.message {\n            +\"If the container is \"\n            ui.label { +\"rounded\" }\n            +\" you will need to add \"\n            ui.label { +\"overflow: hidden\" }\n            +\" to produce a rounded label\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderCornerLabel_2,\n        ) {\n            // <CodeBlock renderCornerLabel_2>\n            ui.two.column.grid {\n                ui.column {\n                    ui.fluid.rounded.image {\n                        css {\n                            overflow = Overflow.hidden\n                        }\n                        ui.left.corner.label { icon.heart() }\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                }\n                ui.column {\n                    ui.fluid.rounded.image {\n                        css {\n                            overflow = Overflow.hidden\n                        }\n                        ui.right.corner.red.label { icon.star() }\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderTagLabel() = example {\n        ui.header H3 { +\"Tag\" }\n\n        p { +\"A label can appear as a tag\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderTagLabel_1,\n        ) {\n            // <CodeBlock renderTagLabel_1>\n            ui.tag.label A { +\"New\" }\n            ui.red.tag.label A { +\"Upcoming\" }\n            ui.teal.tag.label A { +\"Featured\" }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderRibbonLabel() = example {\n        ui.header H3 { +\"Ribbon\" }\n\n        p { +\"A label can appear as a ribbon attaching itself to an element.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderRibbonLabel_1,\n        ) {\n            ui.basic.segment {\n                // <CodeBlock renderRibbonLabel_1>\n                ui.raised.segment {\n                    ui.red.ribbon.label { +\"Overview\" }\n                    span { +\"Account details\" }\n                    p { +LoremIpsum(30) }\n                }\n                ui.raised.segment {\n                    ui.blue.ribbon.label { icon.users(); +\"Community\" }\n                    span { +\"User comments\" }\n                    p { +LoremIpsum(30) }\n                }\n                ui.raised.segment {\n                    ui.green.ribbon.label { icon.cogs() }\n                    span { +\"Settings\" }\n                    p { +LoremIpsum(30) }\n                }\n                // </CodeBlock>\n            }\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderRibbonLabel_2,\n        ) {\n            ui.basic.segment {\n                // <CodeBlock renderRibbonLabel_2>\n                ui.raised.segment {\n                    ui.red.right.ribbon.label { +\"Overview\" }\n                    span { +\"Account details\" }\n                    p { +LoremIpsum(30) }\n                }\n                ui.raised.segment {\n                    ui.blue.right.ribbon.label { icon.users(); +\"Community\" }\n                    span { +\"User comments\" }\n                    p { +LoremIpsum(30) }\n                }\n                ui.raised.segment {\n                    ui.green.right.ribbon.label { icon.cogs() }\n                    span { +\"Settings\" }\n                    p { +LoremIpsum(30) }\n                }\n                // </CodeBlock>\n            }\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderRibbonLabel_3,\n        ) {\n            ui.basic.segment {                // <CodeBlock renderRibbonLabel_3>\n                ui.two.column.grid {\n                    ui.column {\n                        ui.fluid.image {\n                            ui.black.ribbon.label { icon.hotel(); +\"Hotel\" }\n                            img { src = \"images/wireframe/image.png\" }\n                        }\n                    }\n                    ui.column {\n                        ui.fluid.bordered.image {\n                            ui.blue.right.ribbon.label { icon.utensil_spoon(); +\"Food\" }\n                            img { src = \"images/wireframe/white-image.png\" }\n                        }\n                    }\n                }\n                // </CodeBlock>\n            }\n        }\n    }\n\n    private fun FlowContent.renderAttachedLabel() = example {\n        ui.header H3 { +\"Attached\" }\n\n        p { +\"A label can attach to a content segment\" }\n\n        ui.yellow.message {\n            p {\n                +\"Attached labels attempt to intelligently pad other content to account for their position, \"\n                +\"but may not in all cases apply this padding correctly.\"\n            }\n            p {\n                +\"If this happens you may need to manually correct the padding of the other elements \"\n                +\"inside the container.\"\n            }\n        }\n\n        ui.two.column.grid {\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderAttachedLabel_1,\n                ) {\n                    // <CodeBlock renderAttachedLabel_1>\n                    ui.segment {\n                        ui.top.attached.label { +\"top attached\" }\n                        p {\n                            +LoremIpsum(30)\n                        }\n                    }\n                    // </CodeBlock>\n                }\n            }\n\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderAttachedLabel_2,\n                ) {\n                    // <CodeBlock renderAttachedLabel_2>\n                    ui.segment {\n                        ui.bottom.attached.label { +\"bottom attached\" }\n                        p {\n                            +LoremIpsum(30)\n                        }\n                    }\n                    // </CodeBlock>\n                }\n            }\n\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderAttachedLabel_3,\n                ) {\n                    // <CodeBlock renderAttachedLabel_3>\n                    ui.segment {\n                        ui.top.right.attached.label { +\"top right attached\" }\n                        p {\n                            +LoremIpsum(30)\n                        }\n                    }\n                    // </CodeBlock>\n                }\n            }\n\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderAttachedLabel_4,\n                ) {\n                    // <CodeBlock renderAttachedLabel_4>\n                    ui.segment {\n                        ui.top.left.attached.label { +\"top left attached\" }\n                        p {\n                            +LoremIpsum(30)\n                        }\n                    }\n                    // </CodeBlock>\n                }\n            }\n\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderAttachedLabel_5,\n                ) {\n                    // <CodeBlock renderAttachedLabel_5>\n                    ui.segment {\n                        ui.bottom.right.attached.label { +\"bottom right attached\" }\n                        p {\n                            +LoremIpsum(30)\n                        }\n                    }\n                    // </CodeBlock>\n                }\n            }\n\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderAttachedLabel_6,\n                ) {\n                    // <CodeBlock renderAttachedLabel_6>\n                    ui.segment {\n                        ui.bottom.left.attached.label { +\"bottom left attached\" }\n                        p {\n                            +LoremIpsum(30)\n                        }\n                    }\n                    // </CodeBlock>\n                }\n            }\n        }\n    }\n\n    private fun FlowContent.renderHorizontalLabel() = example {\n        ui.header H3 { +\"Horizontal\" }\n\n        p { +\"A horizontal label is formatted to label content along-side it horizontally.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderHorizontalLabel_1,\n        ) {\n            // <CodeBlock renderHorizontalLabel_1>\n            ui.divided.selection.list {\n                noui.item A {\n                    ui.red.horizontal.label { +\"Fruit\" }\n                    +\"Kumquats\"\n                }\n                noui.item A {\n                    ui.pink.horizontal.label { +\"Candy\" }\n                    +\"Ice cream\"\n                }\n                noui.item A {\n                    ui.orange.horizontal.label { +\"Orange\" }\n                    +\"Orange\"\n                }\n                noui.item A {\n                    ui.horizontal.label { +\"Dog\" }\n                    +\"Poodle\"\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderFloatingLabel() = example {\n        ui.header H3 { +\"Floating\" }\n\n        p { +\"A label can float above or below another element.\" }\n\n        ui.yellow.message {\n            +\"A floating label must be positioned inside a container with\"\n            ui.horizontal.label { +\"position: relative\" }\n            +\"to display properly.\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderFloatingLabel_1,\n        ) {\n            // <CodeBlock renderFloatingLabel_1>\n            ui.compact.menu {\n                noui.item A {\n                    +\"Message\"\n                    ui.red.floating.label { +\"23\" }\n                }\n                noui.item A {\n                    +\"Friend\"\n                    ui.pink.floating.label { +\"22\" }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        ui.info.message { +\"Label can be floating to the left\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderFloatingLabel_2,\n        ) {\n            // <CodeBlock renderFloatingLabel_2>\n            ui.compact.menu {\n                noui.item A {\n                    icon.mail()\n                    +\"Message\"\n                    ui.red.left.floating.label { +\"23 Mails\" }\n                }\n                noui.item A {\n                    icon.users()\n                    +\"Friend\"\n                    ui.pink.left.floating.label { +\"22 Friends\" }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        ui.info.message { +\"Label can be floating at the bottom\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderFloatingLabel_3,\n        ) {\n            // <CodeBlock renderFloatingLabel_3>\n            ui.compact.menu {\n                noui.item A {\n                    icon.mail()\n                    +\"Message\"\n                    ui.red.bottom.floating.label { +\"23 Mails\" }\n                }\n                noui.item A {\n                    icon.users()\n                    +\"Friend\"\n                    ui.pink.bottom.floating.label { +\"22 Friends\" }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        ui.info.message { +\"Label can be floating at the bottom left\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderFloatingLabel_4,\n        ) {\n            // <CodeBlock renderFloatingLabel_4>\n            ui.compact.menu {\n                noui.item A {\n                    icon.mail()\n                    +\"Message\"\n                    ui.red.bottom.left.floating.label { +\"23 Mails\" }\n                }\n                noui.item A {\n                    icon.users()\n                    +\"Friend\"\n                    ui.pink.bottom.left.floating.label { +\"22 Friends\" }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        ui.info.message { +\"Floating Labels containing large text can be aligned to the left or right\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderFloatingLabel_5,\n        ) {\n            // <CodeBlock renderFloatingLabel_5>\n            ui.compact.menu {\n                noui.item A {\n                    icon.mail()\n                    +\"Messages from KRAFT users\"\n                    ui.left.aligned.floating.red.label { +\"23 Mails unread\" }\n                }\n                noui.item A {\n                    icon.users()\n                    +\"Friends of the KRAFT community\"\n                    ui.right.aligned.floating.pink.label { +\"22 Friends online\" }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        ui.info.message { +\"Floating Labels containing large text can be aligned to the bottom left or right\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderFloatingLabel_6,\n        ) {\n            // <CodeBlock renderFloatingLabel_6>\n            ui.compact.menu {\n                noui.item A {\n                    icon.mail()\n                    +\"Messages from KRAFT users\"\n                    ui.bottom.left.aligned.floating.red.label { +\"23 Mails unread\" }\n                }\n                noui.item A {\n                    icon.users()\n                    +\"Friends of the KRAFT community\"\n                    ui.bottom.right.aligned.floating.pink.label { +\"22 Friends online\" }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderDetailContentLabel() = example {\n        ui.header H3 { +\"Detail\" }\n\n        p { +\"A label can contain a detail\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderDetailContentLabel,\n        ) {\n            // <CodeBlock renderDetailContentLabel>\n            ui.label {\n                +\"Dogs\"\n                noui.detail { +\"23\" }\n            }\n\n            ui.green.label {\n                +\"Trees\"\n                noui.detail { icon.tree() }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderIconContentLabel() = example {\n        ui.header H3 { +\"Icon\" }\n\n        p { +\"A label can include an icon\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderIconContentLabel,\n        ) {\n            // <CodeBlock renderIconContentLabel>\n            ui.label { icon.mail(); +\"Mail\" }\n            ui.red.label { icon.exclamation_triangle(); +\"Error\" }\n            ui.brown.label { icon.dog(); +\"Dog\" }\n            ui.black.label { icon.cat(); +\"Cat\" }\n            // </CodeBlock>\n        }\n\n        ui.info.message { +\"Icons can be placed to the right inside a label.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderIconContentLabel_2,\n        ) {\n            // <CodeBlock renderIconContentLabel_2>\n            ui.right.icon.label { +\"Mail\"; icon.mail() }\n            ui.right.icon.red.label { +\"Error\"; icon.exclamation_triangle() }\n            ui.right.icon.brown.label { +\"Dog\"; icon.dog() }\n            ui.right.icon.black.label { +\"Cat\"; icon.cat() }\n            // </CodeBlock>\n        }\n\n        ui.info.message { +\"Labels can contain individual icons without text.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderIconContentLabel_3,\n        ) {\n            // <CodeBlock renderIconContentLabel_3>\n            ui.icon.label { icon.mail() }\n            ui.icon.red.label { icon.exclamation_triangle() }\n            ui.icon.brown.label { icon.dog() }\n            ui.icon.black.label { icon.cat() }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderImageContentLabel() = example {\n        ui.header H3 { +\"Image\" }\n\n        p { +\"A label can include an image\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderImageContentLabel,\n        ) {\n            // <CodeBlock renderImageContentLabel>\n            ui.label A {\n                ui.right.spaced.avatar.image Img { src = \"images/avatar2/large/elliot.jpg\" }\n                +\"Elliot\"\n            }\n            ui.basic.green.label A {\n                ui.right.spaced.rounded.image Img { src = \"images/avatar2/large/eve.png\" }\n                +\"Eve\"\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderLinkContentLabel() = example {\n        ui.header H3 { +\"Link\" }\n\n        p { +\"A label can be a link or contain an item that links\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderLinkContentLabel,\n        ) {\n            // <CodeBlock renderLinkContentLabel>\n            ui.label A {\n                icon.mail()\n                +\"23\"\n            }\n\n            ui.label {\n                icon.mail()\n                +\"23\"\n                noui.detail A {\n                    href = \"https://example.com\"\n                    +\"View\"\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderCircularLabel() = example {\n        ui.header H3 { +\"Circular\" }\n\n        p { +\"A label can be circular\" }\n\n        ui.stackable.three.column.grid {\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderCircularLabel,\n                ) {\n                    // <CodeBlock renderCircularLabel>\n                    ui.circular.red.label { +\"1\" }\n                    ui.circular.orange.label { +\"2\" }\n                    ui.circular.yellow.label { +\"3\" }\n                    ui.circular.olive.label { +\"4\" }\n                    ui.circular.green.label { +\"5\" }\n                    ui.circular.teal.label { +\"6\" }\n                    ui.circular.blue.label { +\"7\" }\n                    ui.circular.violet.label { +\"8\" }\n                    ui.circular.purple.label { +\"9\" }\n                    ui.circular.pink.label { +\"10\" }\n                    ui.circular.brown.label { +\"11\" }\n                    ui.circular.grey.label { +\"12\" }\n                    ui.circular.black.label { +\"13\" }\n                    ui.circular.white.label { +\"14\" }\n                    // </CodeBlock>\n                }\n            }\n\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderCircularLabel_2,\n                ) {\n                    // <CodeBlock renderCircularLabel_2>\n                    ui.circular.red.icon.label { icon.mail() }\n                    ui.circular.orange.icon.label { icon.mail() }\n                    ui.circular.yellow.icon.label { icon.mail() }\n                    ui.circular.olive.icon.label { icon.mail() }\n                    ui.circular.green.icon.label { icon.mail() }\n                    ui.circular.teal.icon.label { icon.mail() }\n                    ui.circular.blue.icon.label { icon.mail() }\n                    ui.circular.violet.icon.label { icon.mail() }\n                    ui.circular.purple.icon.label { icon.mail() }\n                    ui.circular.pink.icon.label { icon.mail() }\n                    ui.circular.brown.icon.label { icon.mail() }\n                    ui.circular.grey.icon.label { icon.mail() }\n                    ui.circular.black.icon.label { icon.mail() }\n                    ui.circular.white.icon.label { icon.mail() }\n                    // </CodeBlock>\n                }\n            }\n\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderCircularLabel_3,\n                ) {\n                    // <CodeBlock renderCircularLabel_3>\n                    ui.circular.empty.red.label { }\n                    ui.circular.empty.orange.label { }\n                    ui.circular.empty.yellow.label { }\n                    ui.circular.empty.olive.label { }\n                    ui.circular.empty.green.label { }\n                    ui.circular.empty.teal.label { }\n                    ui.circular.empty.blue.label { }\n                    ui.circular.empty.violet.label { }\n                    ui.circular.empty.purple.label { }\n                    ui.circular.empty.pink.label { }\n                    ui.circular.empty.brown.label { }\n                    ui.circular.empty.grey.label { }\n                    ui.circular.empty.black.label { }\n                    ui.circular.empty.white.label { }\n                    // </CodeBlock>\n                }\n            }\n        }\n    }\n\n    private fun FlowContent.renderBasicLabel() = example {\n        ui.header H3 { +\"Basic\" }\n\n        p { +\"A label can be basic\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderBasicLabel,\n        ) {\n            // <CodeBlock renderBasicLabel>\n            ui.basic.label { +\"Basic\" }\n            ui.basic.pointing.label { +\"Pointing\" }\n            ui.basic.image.label {\n                img(src = \"images/avatar2/large/elliot.jpg\")\n                +\"Elliot\"\n            }\n            ui.basic.red.label { +\"Red\" }\n            ui.basic.blue.label { +\"Blue\" }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderBasicLabel_2,\n        ) {\n            // <CodeBlock renderBasicLabel_2>\n            ui.basic.tag.label { +\"Basic\" }\n            ui.basic.tag.red.label { +\"Red\" }\n            ui.basic.tag.blue.label { +\"Blue\" }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderColoredLabel() = example {\n        ui.header H3 { +\"Colored\" }\n\n        p { +\"A label can have different colors\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderColoredLabel,\n        ) {\n            // <CodeBlock renderColoredLabel>\n            ui.primary.label { +\"primary\" }\n            ui.secondary.label { +\"secondary\" }\n            ui.red.label { +\"red\" }\n            ui.orange.label { +\"orange\" }\n            ui.yellow.label { +\"yellow\" }\n            ui.olive.label { +\"olive\" }\n            ui.green.label { +\"green\" }\n            ui.teal.label { +\"teal\" }\n            ui.blue.label { +\"blue\" }\n            ui.violet.label { +\"violet\" }\n            ui.purple.label { +\"purple\" }\n            ui.pink.label { +\"pink\" }\n            ui.brown.label { +\"brown\" }\n            ui.grey.label { +\"grey\" }\n            ui.black.label { +\"black\" }\n            ui.white.label { +\"white\" }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderSizedLabel() = example {\n        ui.header H3 { +\"Size\" }\n\n        p { +\"A label can be small or large\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderSizedLabel,\n        ) {\n            // <CodeBlock renderSizedLabel>\n            ui.mini.label { +\"mini\" }\n            ui.tiny.label { +\"tiny\" }\n            ui.small.label { +\"small\" }\n            ui.medium.label { +\"medium\" }\n            ui.large.label { +\"large\" }\n            ui.huge.label { +\"huge\" }\n            ui.massive.label { +\"massive\" }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderGroupSize() = example {\n        ui.header H3 { +\"Group Size\" }\n\n        p { +\"Labels can share sizes together\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderGroupSize,\n        ) {\n            // <CodeBlock renderGroupSize>\n            ui.huge.labels {\n                ui.label { +\"Fun\" }\n                ui.label { +\"Happy\" }\n                ui.label { +\"Smart\" }\n                ui.label { +\"Witty\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderColoredGroup() = example {\n        ui.header H3 { +\"Colored Group\" }\n\n        p { +\"Labels can share colors together\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderColoredGroup,\n        ) {\n            // <CodeBlock renderColoredGroup>\n            ui.blue.labels {\n                ui.label { +\"Fun\" }\n                ui.label { +\"Happy\" }\n                ui.label { +\"Smart\" }\n                ui.label { +\"Witty\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderBasicGroup() = example {\n        ui.header H3 { +\"Basic Group\" }\n\n        p { +\"Labels can share their style together\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderBasicGroup,\n        ) {\n            // <CodeBlock renderBasicGroup>\n            ui.basic.labels {\n                ui.label { +\"Fun\" }\n                ui.label { +\"Happy\" }\n                ui.label { +\"Smart\" }\n                ui.label { +\"Witty\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderTagGroup() = example {\n        ui.header H3 { +\"Tag Group\" }\n\n        p { +\"Labels can share tag formatting\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderTagGroup,\n        ) {\n            // <CodeBlock renderTagGroup>\n            ui.tag.labels {\n                ui.label { +\"Fun\" }\n                ui.label { +\"Happy\" }\n                ui.label { +\"Smart\" }\n                ui.label { +\"Witty\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderCircularGroup() = example {\n        ui.header H3 { +\"Circular Group\" }\n\n        p { +\"Labels can share shapes\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderCircularGroup,\n        ) {\n            // <CodeBlock renderCircularGroup>\n            ui.circular.labels {\n                ui.label { +\"Fun\" }\n                ui.label { +\"Happy\" }\n                ui.label { +\"Smart\" }\n                ui.label { +\"Witty\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderInvertedVariants() = example {\n        ui.header H3 { +\"All variants can be inverted\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_label_LabelPage_kt_renderInvertedVariants,\n        ) {\n            // <CodeBlock renderInvertedVariants>\n            ui.inverted.segment {\n                ui.primary.inverted.label { +\"primary\" }\n                ui.secondary.inverted.label { +\"secondary\" }\n                ui.red.inverted.label { +\"red\" }\n                ui.orange.inverted.label { +\"orange\" }\n                ui.yellow.inverted.label { +\"yellow\" }\n                ui.olive.inverted.label { +\"olive\" }\n                ui.green.inverted.label { +\"green\" }\n                ui.violet.inverted.label { +\"violet\" }\n                ui.purple.inverted.label { +\"purple\" }\n                ui.brown.inverted.label { +\"brown\" }\n                ui.black.inverted.label { +\"black\" }\n                ui.white.inverted.label { +\"white\" }\n\n                ui.hidden.divider()\n\n                ui.basic.primary.inverted.label { +\"primary\" }\n                ui.basic.secondary.inverted.label { +\"secondary\" }\n                ui.basic.red.inverted.label { +\"red\" }\n                ui.basic.orange.inverted.label { +\"orange\" }\n                ui.basic.yellow.inverted.label { +\"yellow\" }\n                ui.basic.olive.inverted.label { +\"olive\" }\n                ui.basic.green.inverted.label { +\"green\" }\n                ui.basic.violet.inverted.label { +\"violet\" }\n                ui.basic.purple.inverted.label { +\"purple\" }\n                ui.basic.brown.inverted.label { +\"brown\" }\n                ui.basic.black.inverted.label { +\"black\" }\n                ui.basic.white.inverted.label { +\"white\" }\n\n                ui.hidden.divider()\n\n                ui.primary.inverted.tag.label { +\"primary\" }\n                ui.secondary.inverted.tag.label { +\"secondary\" }\n                ui.red.inverted.tag.label { +\"red\" }\n                ui.orange.inverted.tag.label { +\"orange\" }\n                ui.yellow.inverted.tag.label { +\"yellow\" }\n                ui.olive.inverted.tag.label { +\"olive\" }\n                ui.green.inverted.tag.label { +\"green\" }\n                ui.violet.inverted.tag.label { +\"violet\" }\n                ui.purple.inverted.tag.label { +\"purple\" }\n                ui.brown.inverted.tag.label { +\"brown\" }\n                ui.black.inverted.tag.label { +\"black\" }\n                ui.white.inverted.tag.label { +\"white\" }\n            }\n            // </CodeBlock>\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.elements.list\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.HorizontalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.allSizes\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.semanticui.icon\nimport de.peekandpoke.kraft.semanticui.noui\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport de.peekandpoke.ultra.common.fixture.LoremIpsum\nimport generated.ExtractedCodeBlocks\nimport kotlinx.html.*\n\n@Suppress(\"FunctionName\")\nfun Tag.ListPage() = comp {\n    ListPage(it)\n}\n\nclass ListPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Elements | List\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"List\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/elements/list.html\")\n\n            ui.dividing.header H2 { +\"Types\" }\n\n            renderList()\n            renderBulletedList()\n            renderOrderedList()\n            renderLinkList()\n\n            ui.dividing.header H2 { +\"Content\" }\n\n            renderImageContent()\n            renderHeaderContent()\n            renderDescriptionContent()\n\n            ui.dividing.header H2 { +\"Variations\" }\n\n            renderHorizontalList()\n            renderInvertedList()\n            renderSelectionList()\n            renderAnimatedList()\n            renderRelaxedList()\n            renderDividedList()\n            renderCelledList()\n            renderSizedList()\n\n            ui.dividing.header H2 { +\"Content Variations\" }\n\n            renderVerticalAlignment()\n            renderFloatedContent()\n        }\n    }\n\n    private fun FlowContent.renderList() = example {\n        ui.header H3 { +\"List\" }\n\n        p { +\"A list groups related content\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderList_1,\n        ) {\n            // <CodeBlock renderList_1>\n            ui.list {\n                noui.item { +\"Apples\" }\n                noui.item { +\"Pears\" }\n                noui.item { +\"Oranges\" }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderList_2,\n        ) {\n            // <CodeBlock renderList_2>\n            ui.list {\n                noui.item {\n                    icon.fruitapple()\n                    noui.content { +\"Apples\" }\n                }\n                noui.item {\n                    icon.venus()\n                    noui.content { +\"Venus\" }\n                }\n                noui.item {\n                    icon.cogs()\n                    noui.content {\n                        a(href = \"https://example/com\") { +\"Settings\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderList_3,\n        ) {\n            // <CodeBlock renderList_3>\n            ui.divided.list {\n                noui.item {\n                    icon.large.middle.aligned.github()\n                    noui.content {\n                        noui.header {\n                            a(href = \"https://github.com/peekandpoke/kraft\") { +\"PeekAndPoke/kraft\" }\n                        }\n                        noui.description {\n                            +\"Updated 10 mins ago\"\n                        }\n                    }\n                }\n                noui.item {\n                    icon.large.middle.aligned.github()\n                    noui.content {\n                        noui.header {\n                            a(href = \"https://github.com/peekandpoke/ultra\") { +\"PeekAndPoke/ultra\" }\n                        }\n                        noui.description {\n                            +\"Updated 10 mins ago\"\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderList_4,\n        ) {\n            // <CodeBlock renderList_4>\n            ui.list {\n                noui.item {\n                    icon.folder()\n                    noui.content {\n                        noui.header { +\"src\" }\n                        noui.description { +\"Source files\" }\n                        noui.list {\n                            noui.item {\n                                icon.folder()\n                                noui.content {\n                                    noui.header { +\"site\" }\n                                    noui.description { +\"Site's theme\" }\n                                }\n                            }\n                            noui.item {\n                                icon.folder()\n                                noui.content {\n                                    noui.header { +\"themes\" }\n                                    noui.description { +\"Packages theme files\" }\n                                    noui.list {\n                                        noui.item {\n                                            icon.folder()\n                                            noui.content {\n                                                noui.header { +\"default\" }\n                                                noui.description { +\"Default theme\" }\n                                            }\n                                        }\n                                        noui.item {\n                                            icon.folder()\n                                            noui.content {\n                                                noui.header { +\"my_theme\" }\n                                                noui.description { +\"My theme\" }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            noui.item {\n                                icon.file()\n                                noui.content {\n                                    noui.header { +\"theme.config\" }\n                                    noui.description { +\"Theme configuration\" }\n                                }\n                            }\n                        }\n                    }\n                }\n                noui.item {\n                    icon.folder()\n                    noui.content {\n                        noui.header { +\"dist\" }\n                        noui.description { +\"Compiles files\" }\n                        noui.list {\n                            noui.item {\n                                icon.folder()\n                                noui.content {\n                                    noui.header { +\"components\" }\n                                    noui.description { +\"Individuals component files\" }\n                                }\n                            }\n                        }\n                    }\n                }\n                noui.item {\n                    icon.file()\n                    noui.content {\n                        noui.header { +\"semantic.json\" }\n                        noui.description { +\"Contains build settings\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderBulletedList() = example {\n        ui.header H3 { +\"Bulleted\" }\n\n        p { +\"A list can mark items with a bullet\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderBulletedList_1,\n        ) {\n            // <CodeBlock renderBulletedList_1>\n            ui.bulleted.list {\n                noui.item { +\"Gaining Access\" }\n                noui.item { +\"Inviting Friends\" }\n                noui.item {\n                    +\"Benefits\"\n                    noui.list {\n                        noui.item { a(href = \"https://example.com\") { +\"List to somewhere\" } }\n                        noui.item { +\"Rebates\" }\n                        noui.item { +\"Discounts\" }\n                    }\n                }\n                noui.item { +\"Warranty\" }\n            }\n            // </CodeBlock>\n        }\n\n        ui.info.message {\n            +\"For convenience, a simple bulleted list can also use \"\n            ui.label { +\"ul\" }\n            +\" tag.\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderBulletedList_2,\n        ) {\n            // <CodeBlock renderBulletedList_2>\n            ui.list Ul {\n                li { +\"Gaining Access\" }\n                li { +\"Inviting Friends\" }\n                li {\n                    +\"Benefits\"\n                    ul {\n                        li { a(href = \"https://example.com\") { +\"List to somewhere\" } }\n                        li { +\"Rebates\" }\n                        li { +\"Discounts\" }\n                    }\n                }\n                li { +\"Warranty\" }\n            }\n            // </CodeBlock>\n        }\n\n        ui.info.message {\n            +\"A bulleted list can be horizontal\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderBulletedList_3,\n        ) {\n            // <CodeBlock renderBulletedList_3>\n            ui.horizontal.bulleted.list {\n                noui.item { +\"Apples\" }\n                noui.item { +\"Pears\" }\n                noui.item { +\"Oranges\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderOrderedList() = example {\n        ui.header H3 { +\"Ordered\" }\n\n        p { +\"A list can be ordered numerically.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderOrderedList_1,\n        ) {\n            // <CodeBlock renderOrderedList_1>\n            ui.ordered.list {\n                noui.item { +\"Gaining Access\" }\n                noui.item { +\"Inviting Friends\" }\n                noui.item {\n                    +\"Benefits\"\n                    noui.list {\n                        noui.item { a(href = \"https://example.com\") { +\"List to somewhere\" } }\n                        noui.item { +\"Rebates\" }\n                        noui.item { +\"Discounts\" }\n                    }\n                }\n                noui.item { +\"Warranty\" }\n            }\n            // </CodeBlock>\n        }\n\n        ui.info.message {\n            +\"For convenience, a simple bulleted list can also use \"\n            ui.label { +\"ol\" }\n            +\" tag.\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderOrderedList_2,\n        ) {\n            // <CodeBlock renderOrderedList_2>\n            ui.list Ol {\n                li { +\"Gaining Access\" }\n                li { +\"Inviting Friends\" }\n                li {\n                    +\"Benefits\"\n                    ol {\n                        li { a(href = \"https://example.com\") { +\"List to somewhere\" } }\n                        li { +\"Rebates\" }\n                        li { +\"Discounts\" }\n                    }\n                }\n                li { +\"Warranty\" }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderOrderedList_3,\n        ) {\n            // <CodeBlock renderOrderedList_3>\n            ui.list Ol {\n                li { value = \"*\"; +\"Gaining Access\" }\n                li { value = \"*\"; +\"Inviting Friends\" }\n                li {\n                    value = \"*\"; +\"Benefits\"\n                    ol {\n                        li { value = \"-\"; a(href = \"https://example.com\") { +\"List to somewhere\" } }\n                        li { value = \"-\"; +\"Rebates\" }\n                        li { value = \"-\"; +\"Discounts\" }\n                    }\n                }\n                li { value = \"x\"; +\"Warranty\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderLinkList() = example {\n        ui.header H3 { +\"Link\" }\n\n        p { +\"A list can be specially formatted for navigation links.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderLinkList_1,\n        ) {\n            // <CodeBlock renderLinkList_1>\n            ui.link.list {\n                noui.active.item { +\"Home\" }\n                noui.item { +\"About\" }\n                noui.item { +\"Jobs\" }\n                noui.item { +\"Team\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderImageContent() = example {\n        ui.header H3 { +\"Image\" }\n\n        p { +\"A list item can contain an image\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderImageContent,\n        ) {\n            // <CodeBlock renderImageContent>\n            ui.list {\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/elliot.jpg\" }\n                    noui.content {\n                        noui.header { +\"Elliot\" }\n                        noui.description { +LoremIpsum(5) }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/eve.png\" }\n                    noui.content {\n                        noui.header {\n                            a(href = \"https://example.com\") { +\"Eve\" }\n                        }\n                        noui.description { +LoremIpsum(5) }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/molly.png\" }\n                    noui.content {\n                        noui.header { +\"Molly\" }\n                        noui.description { +LoremIpsum(5) }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderHeaderContent() = example {\n        ui.header H3 { +\"Header\" }\n\n        p { +\"A list item can contain a header\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderHeaderContent,\n        ) {\n            // <CodeBlock renderHeaderContent>\n            ui.list {\n                noui.item {\n                    noui.header { +\"New York City\" }\n                    +\"A lovely city\"\n                }\n                noui.item {\n                    noui.header { +\"Chicago\" }\n                    +\"Also quite a lovely city \"\n                }\n                noui.item {\n                    noui.header { +\"Los Angeles\" }\n                    +\"Sometimes can be a lovely city \"\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderDescriptionContent() = example {\n        ui.header H3 { +\"Description\" }\n\n        p { +\"A list item can contain a description\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderDescriptionContent,\n        ) {\n            // <CodeBlock renderDescriptionContent>\n            ui.list {\n                noui.item {\n                    icon.big.map_marker_alternate()\n                    noui.content {\n                        noui.header A {\n                            href = \"https://example.com\"; +\"Krolewskie Jadlo\"\n                        }\n                        noui.description {\n                            +\"An excellent polish restaurant, quick delivery and hearty, filling meals.\"\n                        }\n                    }\n                }\n                noui.item {\n                    icon.big.map_marker_alternate()\n                    noui.content {\n                        noui.header A {\n                            href = \"https://example.com\"; +\"Xian Famous Foods\"\n                        }\n                        noui.description {\n                            +\"A taste of Shaanxi's delicious culinary traditions, with delights like spicy cold \"\n                            +\"noodles and lamb burgers.\"\n                        }\n                    }\n                }\n                noui.item {\n                    icon.big.map_marker_alternate()\n                    noui.content {\n                        noui.header A {\n                            href = \"https://example.com\"; +\"Sapporo Haru\"\n                        }\n                        noui.description {\n                            +\"Greenpoint's best choice for quick and delicious sushi.\"\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderHorizontalList() = example {\n        ui.header H3 { +\"Horizontal\" }\n\n        p { +\"A list can be formatted to have items appear horizontally\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderHorizontalList_1,\n        ) {\n            // <CodeBlock renderHorizontalList_1>\n            ui.horizontal.list {\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/elliot.jpg\" }\n                    noui.content {\n                        noui.header { +\"Elliot\" }\n                        noui.description { +LoremIpsum(5) }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/eve.png\" }\n                    noui.content {\n                        noui.header {\n                            a(href = \"https://example.com\") { +\"Eve\" }\n                        }\n                        noui.description { +LoremIpsum(5) }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/molly.png\" }\n                    noui.content {\n                        noui.header { +\"Molly\" }\n                        noui.description { +LoremIpsum(5) }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderHorizontalList_2,\n        ) {\n            // <CodeBlock renderHorizontalList_2>\n            ui.ordered.horizontal.list {\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/elliot.jpg\" }\n                    noui.content {\n                        noui.header { +\"Elliot\" }\n                        noui.description { +LoremIpsum(5) }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/eve.png\" }\n                    noui.content {\n                        noui.header {\n                            a(href = \"https://example.com\") { +\"Eve\" }\n                        }\n                        noui.description { +LoremIpsum(5) }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/molly.png\" }\n                    noui.content {\n                        noui.header { +\"Molly\" }\n                        noui.description { +LoremIpsum(5) }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderHorizontalList_3,\n        ) {\n            // <CodeBlock renderHorizontalList_3>\n            ui.horizontal.bulleted.link.list {\n                noui.item { +\"Terms and Conditions\" }\n                noui.item { +\"Privacy Policy\" }\n                noui.item { +\"Contract Us\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderInvertedList() = example {\n        ui.header H3 { +\"Inverted\" }\n\n        p { +\"A list can be inverted to appear on a dark background\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderInvertedList,\n        ) {\n            // <CodeBlock renderInvertedList>\n            ui.inverted.segment {\n                ui.inverted.divided.list {\n                    noui.item {\n                        noui.header { +\"Snickerdoodle\" }\n                        +\"An excellent companion\"\n                    }\n                    noui.item {\n                        noui.header { +\"Poodle\" }\n                        +\"A poodle, its pretty basic\"\n                    }\n                    noui.item {\n                        noui.header { +\"Paulo\" }\n                        +\"He's also a dog\"\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderSelectionList() = example {\n        ui.header H3 { +\"Selection\" }\n\n        p { +\"A selection list formats list items as possible choices\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderSelectionList,\n        ) {\n            // <CodeBlock renderSelectionList>\n            ui.middle.aligned.selection.list {\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/elliot.jpg\" }\n                    noui.content {\n                        noui.header { +\"Elliot\" }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/eve.png\" }\n                    noui.content {\n                        noui.header {\n                            a(href = \"https://example.com\") { +\"Eve\" }\n                        }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/molly.png\" }\n                    noui.content {\n                        noui.header { +\"Molly\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderAnimatedList() = example {\n        ui.header H3 { +\"Animated\" }\n\n        p { +\"A list can animate to set the current item apart from the list\" }\n\n        ui.info.message {\n            +\"Be sure content can fit on one line when using the animated variation, \"\n            +\"otherwise text content will reflow when hovered. \"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderAnimatedList,\n        ) {\n            // <CodeBlock renderAnimatedList>\n            ui.middle.aligned.animated.list {\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/elliot.jpg\" }\n                    noui.content {\n                        noui.header { +\"Elliot\" }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/eve.png\" }\n                    noui.content {\n                        noui.header {\n                            a(href = \"https://example.com\") { +\"Eve\" }\n                        }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/molly.png\" }\n                    noui.content {\n                        noui.header { +\"Molly\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderRelaxedList() = example {\n        ui.header H3 { +\"Relaxed\" }\n\n        p { +\"A list can relax its padding to provide more negative space\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderRelaxedList_1,\n        ) {\n            // <CodeBlock renderRelaxedList_1>\n            ui.relaxed.list {\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/elliot.jpg\" }\n                    noui.content {\n                        noui.header { +\"Elliot\" }\n                        noui.description { +LoremIpsum(5) }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/eve.png\" }\n                    noui.content {\n                        noui.header {\n                            a(href = \"https://example.com\") { +\"Eve\" }\n                        }\n                        noui.description { +LoremIpsum(5) }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/molly.png\" }\n                    noui.content {\n                        noui.header { +\"Molly\" }\n                        noui.description { +LoremIpsum(5) }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderRelaxedList_2,\n        ) {\n            // <CodeBlock renderRelaxedList_2>\n            ui.relaxed.horizontal.list {\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/elliot.jpg\" }\n                    noui.content {\n                        noui.header { +\"Elliot\" }\n                        noui.description { +LoremIpsum(5) }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/eve.png\" }\n                    noui.content {\n                        noui.header {\n                            a(href = \"https://example.com\") { +\"Eve\" }\n                        }\n                        noui.description { +LoremIpsum(5) }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/molly.png\" }\n                    noui.content {\n                        noui.header { +\"Molly\" }\n                        noui.description { +LoremIpsum(5) }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderRelaxedList_3,\n        ) {\n            // <CodeBlock renderRelaxedList_3>\n            ui.very.relaxed.list {\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/elliot.jpg\" }\n                    noui.content {\n                        noui.header { +\"Elliot\" }\n                        noui.description { +LoremIpsum(5) }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/eve.png\" }\n                    noui.content {\n                        noui.header {\n                            a(href = \"https://example.com\") { +\"Eve\" }\n                        }\n                        noui.description { +LoremIpsum(5) }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/molly.png\" }\n                    noui.content {\n                        noui.header { +\"Molly\" }\n                        noui.description { +LoremIpsum(5) }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderRelaxedList_4,\n        ) {\n            // <CodeBlock renderRelaxedList_4>\n            ui.horizontal.very.relaxed.list {\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/elliot.jpg\" }\n                    noui.content {\n                        noui.header { +\"Elliot\" }\n                        noui.description { +LoremIpsum(5) }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/eve.png\" }\n                    noui.content {\n                        noui.header {\n                            a(href = \"https://example.com\") { +\"Eve\" }\n                        }\n                        noui.description { +LoremIpsum(5) }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/molly.png\" }\n                    noui.content {\n                        noui.header { +\"Molly\" }\n                        noui.description { +LoremIpsum(5) }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderDividedList() = example {\n        ui.header H3 { +\"Divided\" }\n\n        p { +\"A list can show divisions between content\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderDividedList,\n        ) {\n            // <CodeBlock renderDividedList>\n            ui.middle.aligned.divided.list {\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/elliot.jpg\" }\n                    noui.content {\n                        noui.header { +\"Elliot\" }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/eve.png\" }\n                    noui.content {\n                        noui.header {\n                            a(href = \"https://example.com\") { +\"Eve\" }\n                        }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/molly.png\" }\n                    noui.content {\n                        noui.header { +\"Molly\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderDividedList_2,\n        ) {\n            // <CodeBlock renderDividedList_2>\n            ui.middle.aligned.horizontal.divided.list {\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/elliot.jpg\" }\n                    noui.content {\n                        noui.header { +\"Elliot\" }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/eve.png\" }\n                    noui.content {\n                        noui.header {\n                            a(href = \"https://example.com\") { +\"Eve\" }\n                        }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/molly.png\" }\n                    noui.content {\n                        noui.header { +\"Molly\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderCelledList() = example {\n        ui.header H3 { +\"Celled\" }\n\n        p { +\"A list can divide its items into cells\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderCelledList,\n        ) {\n            // <CodeBlock renderCelledList>\n            ui.middle.aligned.divided.list {\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/elliot.jpg\" }\n                    noui.content {\n                        noui.header { +\"Elliot\" }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/eve.png\" }\n                    noui.content {\n                        noui.header {\n                            a(href = \"https://example.com\") { +\"Eve\" }\n                        }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/molly.png\" }\n                    noui.content {\n                        noui.header { +\"Molly\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderCelledList_2,\n        ) {\n            // <CodeBlock renderCelledList_2>\n            ui.middle.aligned.horizontal.celled.list {\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/elliot.jpg\" }\n                    noui.content {\n                        noui.header { +\"Elliot\" }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/eve.png\" }\n                    noui.content {\n                        noui.header {\n                            a(href = \"https://example.com\") { +\"Eve\" }\n                        }\n                    }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/avatar2/large/molly.png\" }\n                    noui.content {\n                        noui.header { +\"Molly\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderSizedList() = example {\n        ui.header H3 { +\"Size\" }\n\n        p { +\"A list can vary in size\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderSizedList_1,\n        ) {\n            // <CodeBlock renderSizedList_1>\n            allSizes.forEach { size ->\n                ui.basic.segment {\n                    ui.size().middle.aligned.horizontal.list {\n                        noui.item {\n                            ui.avatar.image Img { src = \"images/avatar2/large/elliot.jpg\" }\n                            noui.content {\n                                noui.header { +\"Elliot\" }\n                            }\n                        }\n                        noui.item {\n                            ui.avatar.image Img { src = \"images/avatar2/large/eve.png\" }\n                            noui.content {\n                                noui.header {\n                                    a(href = \"https://example.com\") { +\"Eve\" }\n                                }\n                            }\n                        }\n                        noui.item {\n                            ui.avatar.image Img { src = \"images/avatar2/large/molly.png\" }\n                            noui.content {\n                                noui.header { +\"Molly\" }\n                            }\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderVerticalAlignment() = example {\n        ui.header H3 { +\"Vertically Aligned\" }\n\n        p { +\"An element inside a list can be vertically aligned\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderVerticalAlignment,\n        ) {\n            // <CodeBlock renderVerticalAlignment>\n            ui.horizontal.list {\n                noui.item {\n                    ui.avatar.image Img { src = \"images/wireframe/image.png\" }\n                    noui.top.aligned.content { +\"Top aligned\" }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/wireframe/image.png\" }\n                    noui.middle.aligned.content { +\"Middle aligned\" }\n                }\n                noui.item {\n                    ui.avatar.image Img { src = \"images/wireframe/image.png\" }\n                    noui.bottom.aligned.content { +\"Bottom aligned\" }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderFloatedContent() = example {\n        ui.header H3 { +\"Floated\" }\n\n        p { +\"A list, or an element inside a list can be floated left or right\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderFloatedContent,\n        ) {\n            // <CodeBlock renderFloatedContent>\n            ui.divided.list {\n                noui.item {\n                    ui.right.floated.content {\n                        ui.button { +\"Add\" }\n                    }\n                    ui.avatar.image Img { src = \"images/avatar2/large/molly.png\" }\n                    noui.content { +\"Molly\" }\n                }\n                noui.item {\n                    ui.right.floated.content {\n                        ui.button { +\"Add\" }\n                    }\n                    ui.avatar.image Img { src = \"images/avatar2/large/eve.png\" }\n                    noui.content { +\"Eve\" }\n                }\n                noui.item {\n                    ui.right.floated.content {\n                        ui.button { +\"Add\" }\n                    }\n                    ui.avatar.image Img { src = \"images/avatar2/large/elliot.jpg\" }\n                    noui.content { +\"Elliot\" }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_list_ListPage_kt_renderFloatedContent_2,\n        ) {\n            // <CodeBlock renderFloatedContent_2>\n            ui.right.floated.horizontal.list {\n                noui.disabled.item { +\"© GitHub, Inc.\" }\n                noui.item A { href = \"https://example.com\"; +\"Terms\" }\n                noui.item A { href = \"https://example.com\"; +\"Privacy\" }\n                noui.item A { href = \"https://example.com\"; +\"Contact\" }\n            }\n            ui.horizontal.list {\n                noui.item A { href = \"https://example.com\"; +\"About Us\" }\n                noui.item A { href = \"https://example.com\"; +\"Jobs\" }\n            }\n            // </CodeBlock>\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.elements.loader\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.HorizontalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.shortParagraphWireFrame\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport generated.ExtractedCodeBlocks\nimport kotlinx.html.FlowContent\nimport kotlinx.html.Tag\nimport kotlinx.html.br\nimport kotlinx.html.p\n\n@Suppress(\"FunctionName\")\nfun Tag.LoaderPage() = comp {\n    LoaderPage(it)\n}\n\nclass LoaderPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Elements | Loader\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Loader\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/elements/loader.html\")\n\n            ui.dividing.header H2 { +\"Types\" }\n\n            renderLoader()\n            renderTextLoader()\n\n            ui.dividing.header H2 { +\"States\" }\n\n            renderIntermediateLoader()\n            renderActiveLoader()\n            renderDisabledLoader()\n\n            ui.dividing.header H2 { +\"Variations\" }\n\n            renderInlineLoader()\n            renderInlineCenteredLoader()\n            renderSpeedLoader()\n            renderColorsLoader()\n            renderSizedLoader()\n            renderInvertedLoader()\n            renderStylesLoader()\n        }\n    }\n\n    private fun FlowContent.renderLoader() = example {\n        ui.dividing.header H3 { +\"Loader\" }\n\n        p { +\"A loader\" }\n\n        ui.info.message {\n            +\"Loaders are hidden unless \"\n            ui.label { +\"active\" }\n            +\" or inside an \"\n            ui.label { +\"active dimmer\" }\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_loader_LoaderPage_kt_renderLoader_1,\n        ) {\n            // <CodeBlock renderLoader_1>\n            ui.basic.segment {\n                ui.active.loader()\n                shortParagraphWireFrame()\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_loader_LoaderPage_kt_renderLoader_2,\n        ) {\n            // <CodeBlock renderLoader_2>\n            ui.basic.segment {\n                shortParagraphWireFrame()\n                ui.active.dimmer {\n                    ui.loader()\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderTextLoader() = example {\n        ui.dividing.header H3 { +\"Text Loader\" }\n\n        p { +\"A loader can contain text\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_loader_LoaderPage_kt_renderTextLoader_1,\n        ) {\n            // <CodeBlock renderTextLoader_1>\n            ui.basic.segment {\n                shortParagraphWireFrame()\n                ui.active.dimmer {\n                    ui.text.loader {\n                        +\"Loading\"\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_loader_LoaderPage_kt_renderTextLoader_2,\n        ) {\n            // <CodeBlock renderTextLoader_2>\n            ui.basic.segment {\n                shortParagraphWireFrame()\n                ui.active.inverted.dimmer {\n                    ui.text.loader {\n                        +\"Loading\"\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderIntermediateLoader() = example {\n        ui.dividing.header H3 { +\"Intermediate\" }\n\n        p { +\"A loader can show it's unsure of how long a task will take\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_loader_LoaderPage_kt_renderIntermediateLoader,\n        ) {\n            // <CodeBlock renderIntermediateLoader>\n            ui.basic.segment {\n                shortParagraphWireFrame()\n                ui.active.dimmer {\n                    ui.indeterminate.text.loader {\n                        +\"Loading\"\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderActiveLoader() = example {\n        ui.dividing.header H3 { +\"Active\" }\n\n        p { +\"A loader can be active or visible\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_loader_LoaderPage_kt_renderActiveLoader,\n        ) {\n            // <CodeBlock renderActiveLoader>\n            ui.basic.segment {\n                ui.active.loader()\n                shortParagraphWireFrame()\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderDisabledLoader() = example {\n        ui.dividing.header H3 { +\"Disabled\" }\n\n        p { +\"A loader can be disabled or hidden\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_loader_LoaderPage_kt_renderDisabledLoader,\n        ) {\n            // <CodeBlock renderDisabledLoader>\n            ui.basic.segment {\n                ui.disabled.loader()\n                shortParagraphWireFrame()\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderInlineLoader() = example {\n        ui.dividing.header H3 { +\"Inline\" }\n\n        p { +\"Loaders can appear inline with content\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_loader_LoaderPage_kt_renderInlineLoader,\n        ) {\n            // <CodeBlock renderInlineLoader>\n            ui.active.inline.loader()\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderInlineCenteredLoader() = example {\n        ui.dividing.header H3 { +\"Inline centered\" }\n\n        p { +\"Loaders can appear inline centered with content\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_loader_LoaderPage_kt_renderInlineCenteredLoader,\n        ) {\n            // <CodeBlock renderInlineCenteredLoader>\n            ui.active.centered.inline.loader()\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderSpeedLoader() = example {\n        ui.dividing.header H3 { +\"Speed\" }\n\n        p { +\"Loaders can appear slow, normal or fast\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_loader_LoaderPage_kt_renderSpeedLoader,\n        ) {\n            // <CodeBlock renderSpeedLoader>\n            ui.active.slow.inline.loader()\n            ui.active.inline.loader()\n            ui.active.fast.inline.loader()\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderColorsLoader() = example {\n        ui.dividing.header H3 { +\"Colors\" }\n\n        p { +\"Loaders can be different colors\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_loader_LoaderPage_kt_renderColorsLoader,\n        ) {\n            // <CodeBlock renderColorsLoader>\n            ui.primary.active.inline.loader()\n            ui.secondary.active.inline.loader()\n            ui.red.active.inline.loader()\n            ui.orange.active.inline.loader()\n            ui.yellow.active.inline.loader()\n            ui.olive.active.inline.loader()\n            ui.green.active.inline.loader()\n            ui.teal.active.inline.loader()\n            ui.blue.active.inline.loader()\n            ui.violet.active.inline.loader()\n            ui.purple.active.inline.loader()\n            ui.pink.active.inline.loader()\n            ui.brown.active.inline.loader()\n            ui.grey.active.inline.loader()\n            ui.black.active.inline.loader()\n            ui.white.active.inline.loader()\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderSizedLoader() = example {\n        ui.dividing.header H3 { +\"Size\" }\n\n        p { +\"Loaders can have different sizes\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_loader_LoaderPage_kt_renderSizedLoader,\n        ) {\n            // <CodeBlock renderSizedLoader>\n            ui.segment {\n                shortParagraphWireFrame()\n                ui.active.dimmer {\n                    ui.mini.loader()\n                }\n            }\n            ui.segment {\n                shortParagraphWireFrame()\n                ui.active.dimmer {\n                    ui.tiny.loader()\n                }\n            }\n            ui.segment {\n                shortParagraphWireFrame()\n                ui.active.dimmer {\n                    ui.small.loader()\n                }\n            }\n            ui.segment {\n                shortParagraphWireFrame()\n                ui.active.dimmer {\n                    ui.loader()\n                }\n            }\n            ui.segment {\n                shortParagraphWireFrame()\n                ui.active.dimmer {\n                    ui.large.loader()\n                }\n            }\n            ui.segment {\n                shortParagraphWireFrame()\n                ui.active.dimmer {\n                    ui.big.loader()\n                }\n            }\n            ui.segment {\n                shortParagraphWireFrame()\n                ui.active.dimmer {\n                    ui.huge.loader()\n                }\n            }\n            ui.segment {\n                shortParagraphWireFrame()\n                ui.active.dimmer {\n                    ui.massive.loader()\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderInvertedLoader() = example {\n        ui.dividing.header H3 { +\"Inverted\" }\n\n        p { +\"Loaders can have their colors inverted.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_loader_LoaderPage_kt_renderInvertedLoader_1,\n        ) {\n            // <CodeBlock renderInvertedLoader_1>\n            ui.inverted.segment {\n                ui.active.inverted.loader()\n                br()\n                br()\n                br()\n                br()\n            }\n            // </CodeBlock>\n        }\n\n        ui.info.message {\n            +\"Loaders will automatically be inverted inside \"\n            ui.label { +\"inverted dimmer\" }\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_loader_LoaderPage_kt_renderInvertedLoader_2,\n        ) {\n            // <CodeBlock renderInvertedLoader_2>\n            ui.segment {\n                shortParagraphWireFrame()\n                ui.active.inverted.dimmer {\n                    ui.loader()\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderStylesLoader() = example {\n        ui.dividing.header H3 { +\"Styles\" }\n\n        p {\n            +\"Loaders can also appear in \"\n            ui.label { +\"double\" }\n            +\" or \"\n            ui.label { +\"elastic\" }\n            +\" animation style. Can be combined with any color or speed.\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_loader_LoaderPage_kt_renderStylesLoader,\n        ) {\n            // <CodeBlock renderStylesLoader>\n            ui.segment {\n                ui.active.slow.green.double.inverted.loader()\n                br()\n                br()\n                br()\n            }\n\n            ui.segment {\n                ui.active.blue.elastic.inverted.loader()\n                br()\n                br()\n                br()\n            }\n            // </CodeBlock>\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.elements.placeholder\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.HorizontalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.semanticui.noui\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport generated.ExtractedCodeBlocks\nimport kotlinx.html.FlowContent\nimport kotlinx.html.Tag\nimport kotlinx.html.p\n\n@Suppress(\"FunctionName\")\nfun Tag.PlaceholderPage() = comp {\n    PlaceholderPage(it)\n}\n\nclass PlaceholderPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Elements | Placeholder\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Placeholder\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/elements/placeholder.html\")\n\n            ui.dividing.header H2 { +\"Types\" }\n\n            renderPlaceholder()\n\n            ui.dividing.header H2 { +\"Content\" }\n\n            renderLines()\n            renderHeader()\n            renderImage()\n\n            ui.dividing.header H2 { +\"Variations\" }\n\n            renderLineLength()\n            renderFluid()\n            renderInverted()\n        }\n    }\n\n    private fun FlowContent.renderPlaceholder() = example {\n        ui.dividing.header H3 { +\"Placeholder\" }\n\n        p { +\"A placeholder is used to reserve space for content that soon will appear in a layout.\" }\n\n        ui.info.message {\n            +\"Placeholders can includes \"\n            ui.label { +\"paragraph\" }\n            +\", \"\n            ui.label { +\"header\" }\n            +\", \"\n            ui.label { +\"image header\" }\n            +\" and \"\n            ui.label { +\"image\" }\n            +\" to let you format the loaders to emulate the content being loaded.\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_placeholder_PlaceholderPage_kt_renderPlaceholder_1,\n        ) {\n            // <CodeBlock renderPlaceholder_1>\n            ui.placeholder {\n                noui.image.header {\n                    noui.line()\n                    noui.line()\n                }\n                noui.paragraph {\n                    noui.line()\n                    noui.line()\n                    noui.line()\n                    noui.line()\n                    noui.line()\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_placeholder_PlaceholderPage_kt_renderPlaceholder_2,\n        ) {\n            // <CodeBlock renderPlaceholder_2>\n            ui.three.column.stackable.grid {\n                repeat(3) {\n                    noui.column {\n                        ui.raised.segment {\n                            ui.placeholder {\n                                noui.image.header {\n                                    noui.line()\n                                    noui.line()\n                                }\n                                noui.paragraph {\n                                    noui.line()\n                                    noui.line()\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_placeholder_PlaceholderPage_kt_renderPlaceholder_3,\n        ) {\n            // <CodeBlock renderPlaceholder_3>\n            ui.three.doubling.stackable.cards {\n                repeat(3) {\n                    noui.card {\n                        noui.image {\n                            ui.placeholder {\n                                noui.square.image()\n                            }\n                        }\n                        noui.content {\n                            ui.placeholder {\n                                noui.image.header {\n                                    noui.line()\n                                    noui.line()\n                                }\n                                noui.paragraph {\n                                    noui.line()\n                                }\n                            }\n                        }\n                        noui.extra.content {\n                            ui.disabled.primary.button { +\"Add\" }\n                            ui.disabled.button { +\"Ignore\" }\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderLines() = example {\n        ui.dividing.header H3 { +\"Lines\" }\n\n        p { +\"A placeholder can contain have lines of text\" }\n\n        ui.info.message {\n            +\"By default, repeated lines will appear varied in width. However, it may be useful to specify \"\n            +\"an exact length to make it match up with content more effectively\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_placeholder_PlaceholderPage_kt_renderLines,\n        ) {\n            // <CodeBlock renderLines>\n            ui.placeholder {\n                noui.line()\n                noui.line()\n                noui.line()\n                noui.line()\n                noui.line()\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderHeader() = example {\n        ui.dividing.header H3 { +\"Header\" }\n\n        p { +\"A placeholder can contain a header\" }\n\n        ui.info.message {\n            +\"Header content will have a slightly larger block size from paragraph\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_placeholder_PlaceholderPage_kt_renderHeader,\n        ) {\n            // <CodeBlock renderHeader>\n            ui.placeholder {\n                noui.image.header {\n                    noui.line()\n                    noui.line()\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_placeholder_PlaceholderPage_kt_renderHeader_2,\n        ) {\n            // <CodeBlock renderHeader_2>\n            ui.placeholder {\n                noui.header {\n                    noui.line()\n                    noui.line()\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderImage() = example {\n        ui.dividing.header H3 { +\"Image\" }\n\n        p { +\"A placeholder can contain an image\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_placeholder_PlaceholderPage_kt_renderImage_1,\n        ) {\n            // <CodeBlock renderImage_1>\n            ui.placeholder {\n                noui.image()\n            }\n            // </CodeBlock>\n        }\n\n        ui.info.message {\n            +\"Using \"\n            ui.label { +\"square\" }\n            +\" (1:1) or \"\n            ui.label { +\"rectangular\" }\n            +\" (4:3) will embed an aspect ratio into the image loader so that they modify size correctly\"\n            +\" with responsive styles. \"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_placeholder_PlaceholderPage_kt_renderImage_2,\n        ) {\n            // <CodeBlock renderImage_2>\n            ui.three.cards {\n                repeat(3) {\n                    noui.card {\n                        noui.content {\n                            ui.placeholder {\n                                noui.square.image()\n                            }\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_placeholder_PlaceholderPage_kt_renderImage_3,\n        ) {\n            // <CodeBlock renderImage_3>\n            ui.three.cards {\n                repeat(3) {\n                    noui.card {\n                        noui.content {\n                            ui.placeholder {\n                                noui.rectangular.image()\n                            }\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderLineLength() = example {\n        ui.dividing.header H3 { +\"Header\" }\n\n        p { +\"A line can specify how long its contents should appear\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_placeholder_PlaceholderPage_kt_renderLineLength,\n        ) {\n            // <CodeBlock renderLineLength>\n            ui.placeholder {\n                noui.full.line()\n                noui.very.long.line()\n                noui.long.line()\n                noui.medium.line()\n                noui.short.line()\n                noui.very.short.line()\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderFluid() = example {\n        ui.dividing.header H3 { +\"Fluid\" }\n\n        p { +\"A fluid placeholder takes up the width of its container\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_placeholder_PlaceholderPage_kt_renderFluid,\n        ) {\n            // <CodeBlock renderFluid>\n            ui.fluid.placeholder {\n                noui.image.header {\n                    noui.line()\n                    noui.line()\n                }\n                noui.paragraph {\n                    noui.line()\n                    noui.line()\n                    noui.line()\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderInverted() = example {\n        ui.dividing.header H3 { +\"Inverted\" }\n\n        p { +\"A placeholder can have their colors inverted.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_placeholder_PlaceholderPage_kt_renderInverted,\n        ) {\n            // <CodeBlock renderInverted>\n            ui.inverted.segment {\n                ui.inverted.placeholder {\n                    noui.image.header {\n                        noui.line()\n                        noui.line()\n                    }\n                    noui.paragraph {\n                        noui.line()\n                        noui.line()\n                        noui.line()\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.elements.rail\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.RailPage() = comp {\n    RailPage(it)\n}\n\nclass RailPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Elements | Rail\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Rail\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/elements/rail.html\")\n\n            ui.dividing.header H2 { +\"Types\" }\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.elements.reveal\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.HorizontalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.semanticui.noui\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport generated.ExtractedCodeBlocks\nimport kotlinx.html.FlowContent\nimport kotlinx.html.Tag\nimport kotlinx.html.p\n\n@Suppress(\"FunctionName\")\nfun Tag.RevealPage() = comp {\n    RevealPage(it)\n}\n\nclass RevealPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Elements | Reveal\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Reveal\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/elements/reveal.html\")\n\n            ui.dividing.header H2 { +\"Types\" }\n\n            renderFade()\n            renderMove()\n            renderRotate()\n\n            ui.dividing.header H2 { +\"Variations\" }\n\n            renderInstant()\n\n            ui.dividing.header H2 { +\"States\" }\n\n            renderActive()\n            renderDisabled()\n        }\n    }\n\n    private fun FlowContent.renderFade() = example {\n        ui.dividing.header H3 { +\"Fade\" }\n\n        p {\n            +\"An element can disappear to reveal content below\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_reveal_RevealPage_kt_renderFade,\n        ) {\n            // <CodeBlock renderFade>\n            ui.fade.reveal {\n                noui.visible.content {\n                    ui.small.image Img { src = \"images/wireframe/square-image.png\" }\n                }\n                noui.hidden.content {\n                    ui.small.image Img { src = \"images/avatar2/large/elliot.jpg\" }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_reveal_RevealPage_kt_renderFade_2,\n        ) {\n            // <CodeBlock renderFade_2>\n            ui.small.fade.reveal.image {\n                noui.visible.content Img { src = \"images/wireframe/square-image.png\" }\n                noui.hidden.content Img { src = \"images/avatar2/large/eve.png\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderMove() = example {\n        ui.dividing.header H3 { +\"Move\" }\n\n        p {\n            +\"An element can move in a direction to reveal content\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_reveal_RevealPage_kt_renderMove_1,\n        ) {\n            // <CodeBlock renderMove_1>\n            ui.move.reveal {\n                noui.visible.content {\n                    ui.small.image Img { src = \"images/wireframe/square-image.png\" }\n                }\n                noui.hidden.content {\n                    ui.small.image Img { src = \"images/avatar2/large/elliot.jpg\" }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_reveal_RevealPage_kt_renderMove_2,\n        ) {\n            // <CodeBlock renderMove_2>\n            ui.basic.fitted.compact.segment {\n                ui.move.right.reveal {\n                    noui.visible.content {\n                        ui.small.image Img { src = \"images/wireframe/square-image.png\" }\n                    }\n                    noui.hidden.content {\n                        ui.small.image Img { src = \"images/avatar2/large/eve.png\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_reveal_RevealPage_kt_renderMove_3,\n        ) {\n            // <CodeBlock renderMove_3>\n            ui.move.up.reveal {\n                noui.visible.content {\n                    ui.small.image Img { src = \"images/wireframe/square-image.png\" }\n                }\n                noui.hidden.content {\n                    ui.small.image Img { src = \"images/avatar2/large/molly.png\" }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_reveal_RevealPage_kt_renderMove_4,\n        ) {\n            // <CodeBlock renderMove_4>\n            ui.move.down.reveal {\n                noui.visible.content {\n                    ui.small.image Img { src = \"images/wireframe/square-image.png\" }\n                }\n                noui.hidden.content {\n                    ui.small.image Img { src = \"images/avatar2/large/matthew.png\" }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderRotate() = example {\n        ui.dividing.header H3 { +\"Rotate\" }\n\n        p {\n            +\"An element can rotate to reveal content below\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_reveal_RevealPage_kt_renderRotate_1,\n        ) {\n            // <CodeBlock renderRotate_1>\n            ui.small.circular.rotate.reveal.image {\n                noui.visible.content Img { src = \"images/wireframe/square-image.png\" }\n                noui.hidden.content Img { src = \"images/avatar2/large/eve.png\" }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_reveal_RevealPage_kt_renderRotate_2,\n        ) {\n            // <CodeBlock renderRotate_2>\n            ui.small.circular.rotate.left.reveal.image {\n                noui.visible.content Img { src = \"images/wireframe/square-image.png\" }\n                noui.hidden.content Img { src = \"images/avatar2/large/kristy.png\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderInstant() = example {\n        ui.dividing.header H3 { +\"Instant\" }\n\n        p {\n            +\"An element can show its content without delay\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_reveal_RevealPage_kt_renderInstant,\n        ) {\n            // <CodeBlock renderInstant>\n            ui.small.active.instant.reveal.image {\n                noui.visible.content Img { src = \"images/avatar2/large/eve.png\" }\n                noui.hidden.content Img { src = \"images/wireframe/square-image.png\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderActive() = example {\n        ui.dividing.header H3 { +\"Active\" }\n\n        ui.info.message {\n            +\"Adding the class \"\n            ui.label { +\"active\" }\n            +\" can allow you to show the hidden contents programmatically \"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_reveal_RevealPage_kt_renderActive,\n        ) {\n            // <CodeBlock renderActive>\n            ui.small.active.reveal.image {\n                noui.visible.content Img { src = \"images/avatar2/large/eve.png\" }\n                noui.hidden.content Img { src = \"images/wireframe/square-image.png\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderDisabled() = example {\n        ui.dividing.header H3 { +\"Disabled\" }\n\n        p {\n            +\"A disabled reveal will not animate when hovered\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_reveal_RevealPage_kt_renderDisabled,\n        ) {\n            // <CodeBlock renderDisabled>\n            ui.disabled.move.reveal {\n                noui.visible.content {\n                    ui.small.image Img { src = \"images/wireframe/square-image.png\" }\n                }\n                noui.hidden.content {\n                    ui.small.image Img { src = \"images/avatar2/large/elliot.jpg\" }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.elements.segment\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.HorizontalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.shortParagraphWireFrame\nimport de.peekandpoke.kraft.examples.fomanticui.routes\nimport de.peekandpoke.kraft.semanticui.icon\nimport de.peekandpoke.kraft.semanticui.noui\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport de.peekandpoke.ultra.common.fixture.LoremIpsum\nimport generated.ExtractedCodeBlocks\nimport kotlinx.html.*\n\n@Suppress(\"FunctionName\")\nfun Tag.SegmentPage() = comp {\n    SegmentPage(it)\n}\n\nclass SegmentPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Elements | Segment\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Segment\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/elements/segment.html\")\n\n            ui.dividing.header H2 { +\"Types\" }\n\n            renderSegment()\n            renderPlaceholderSegment()\n            renderRaisedSegment()\n            renderStackedSegment()\n            renderVerticalSegment()\n\n            ui.dividing.header H2 { +\"Groups\" }\n\n            renderSegmentsGroup()\n            renderNestedSegments()\n            renderHorizontalSegments()\n            renderHorizontalEqualWidthSegments()\n            renderHorizontalStackableSegments()\n            renderRaisedSegments()\n            renderStackedSegments()\n            renderPiledSegments()\n\n            ui.dividing.header H2 { +\"States\" }\n\n            renderDisabledSegment()\n            renderLoadingSegment()\n\n            ui.dividing.header H2 { +\"Variations\" }\n\n            renderInvertedSegment()\n            renderAttachedSegment()\n            renderPaddedSegment()\n            renderFittedSegment()\n            renderCompactSegment()\n            renderColoredSegment()\n            renderEmphasisSegment()\n            renderCircularSegment()\n            renderClearingSegment()\n            renderFloatedSegment()\n            renderTextAlignmentSegment()\n            renderBasicSegment()\n        }\n    }\n\n    private fun FlowContent.renderSegment() = example {\n        ui.header H3 { +\"Segment\" }\n\n        p { +\"A segment of content\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderSegment,\n        ) {\n            // <CodeBlock renderSegment>\n            ui.segment {\n                shortParagraphWireFrame()\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderPlaceholderSegment() = example {\n        ui.header H3 { +\"Placeholder Segment\" }\n\n        p { +\"A segment can be used to reserve space for conditionally displayed content.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderPlaceholderSegment_1,\n        ) {\n            // <CodeBlock renderPlaceholderSegment_1>\n            ui.placeholder.segment {\n                ui.icon.header {\n                    icon.file_pdf_outline()\n                    +\"No documents are listed for this customer.\"\n                }\n                ui.primary.button {\n                    +\"Add document\"\n                }\n            }\n            // </CodeBlock>\n        }\n\n        ui.info.message {\n            +\"To use inline-block content inside a placeholder, wrap the content in \"\n            ui.label { +\"inline\" }\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderPlaceholderSegment_2,\n        ) {\n            // <CodeBlock renderPlaceholderSegment_2>\n            ui.placeholder.segment {\n                ui.icon.header {\n                    icon.search()\n                    +\"We don't have any documents matching your query .\"\n                }\n                noui.inline {\n                    ui.primary.button { +\"Clear query\" }\n                    ui.button { +\"Add document\" }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderPlaceholderSegment_3,\n        ) {\n            // <CodeBlock renderPlaceholderSegment_3>\n            ui.placeholder.segment {\n                ui.two.column.stackable.center.aligned.grid {\n                    ui.vertical.divider { +\"Or\" }\n                    ui.column {\n                        ui.icon.header {\n                            icon.search()\n                            +\"Find country\"\n                        }\n                        noui.field {\n                            ui.search {\n                                ui.icon.input {\n                                    input { placeholder = \"Search countries...\" }\n                                    icon.search()\n                                }\n                            }\n                        }\n                    }\n                    ui.column {\n                        ui.icon.header {\n                            icon.world()\n                            +\"Add New Country\"\n                        }\n                        ui.primary.button { +\"Create\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderRaisedSegment() = example {\n        ui.header H3 { +\"Raised\" }\n\n        p { +\"A segment may be formatted to raise above the page.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderRaisedSegment,\n        ) {\n            // <CodeBlock renderRaisedSegment>\n            ui.raised.segment {\n                shortParagraphWireFrame()\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderStackedSegment() = example {\n        ui.header H3 { +\"Stacked\" }\n\n        p { +\"A segment can be formatted to show it contains multiple pages.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderStackedSegment_1,\n        ) {\n            // <CodeBlock renderStackedSegment_1>\n            ui.stacked.segment {\n                shortParagraphWireFrame()\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderStackedSegment_2,\n        ) {\n            // <CodeBlock renderStackedSegment_2>\n            ui.tall.stacked.segment {\n                shortParagraphWireFrame()\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderVerticalSegment() = example {\n        ui.header H3 { +\"Vertical Segment\" }\n\n        p { +\"A vertical segment formats content to be aligned as part of a vertical group.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderVerticalSegment,\n        ) {\n            // <CodeBlock renderVerticalSegment>\n            ui.segment {\n                ui.vertical.segment {\n                    shortParagraphWireFrame()\n                }\n                ui.segment {\n                    shortParagraphWireFrame()\n                }\n                ui.vertical.segment {\n                    shortParagraphWireFrame()\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderSegmentsGroup() = example {\n        ui.header H3 { +\"Segments\" }\n\n        p { +\"A group of segments can be formatted to appear together.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderSegmentsGroup_1,\n        ) {\n            // <CodeBlock renderSegmentsGroup_1>\n            ui.segments {\n                ui.segment {\n                    +\"Top\"\n                }\n                ui.segment {\n                    +\"Middle\"\n                }\n                ui.segment {\n                    +\"Middle\"\n                }\n                ui.segment {\n                    +\"Middle\"\n                }\n                ui.segment {\n                    +\"Bottom\"\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderSegmentsGroup_2,\n        ) {\n            // <CodeBlock renderSegmentsGroup_2>\n            ui.basic.segments {\n                ui.segment {\n                    +\"Top\"\n                }\n                ui.segment {\n                    +\"Middle\"\n                }\n                ui.segment {\n                    +\"Middle\"\n                }\n                ui.segment {\n                    +\"Middle\"\n                }\n                ui.segment {\n                    +\"Bottom\"\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderSegmentsGroup_3,\n        ) {\n            // <CodeBlock renderSegmentsGroup_3>\n            ui.segments {\n                ui.segment {\n                    +\"Top\"\n                }\n                ui.red.segment {\n                    +\"Middle\"\n                }\n                ui.blue.segment {\n                    +\"Middle\"\n                }\n                ui.green.segment {\n                    +\"Middle\"\n                }\n                ui.yellow.segment {\n                    +\"Bottom\"\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderSegmentsGroup_4,\n        ) {\n            // <CodeBlock renderSegmentsGroup_4>\n            ui.segments {\n                ui.segment {\n                    +\"Top\"\n                }\n                ui.secondary.segment {\n                    +\"Secondary Segment\"\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderNestedSegments() = example {\n        ui.header H3 { +\"Nested Segments\" }\n\n        p { +\"A group of segments can be nested in another group of segments.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderNestedSegments,\n        ) {\n            // <CodeBlock renderNestedSegments>\n            ui.segments {\n                ui.segment {\n                    +\"Top\"\n                }\n                ui.segments {\n                    ui.segment {\n                        +\"Nested Top\"\n                    }\n                    ui.segment {\n                        +\"Nested Middle\"\n                    }\n                    ui.segment {\n                        +\"Nested Bottom\"\n                    }\n                }\n                ui.segment {\n                    +\"Top\"\n                }\n                ui.horizontal.segments {\n                    ui.segment {\n                        +\"Left\"\n                    }\n                    ui.segment {\n                        +\"Center\"\n                    }\n                    ui.segment {\n                        +\"Right\"\n                    }\n                }\n                ui.segment {\n                    +\"Bottom\"\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderHorizontalSegments() = example {\n        ui.header H3 { +\"Horizontal Segments\" }\n\n        p { +\"A segment group can appear horizontally\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderHorizontalSegments_1,\n        ) {\n            // <CodeBlock renderHorizontalSegments_1>\n            ui.horizontal.segments {\n                ui.segment {\n                    shortParagraphWireFrame()\n                }\n                ui.segment {\n                    shortParagraphWireFrame()\n                }\n                ui.segment {\n                    shortParagraphWireFrame()\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderHorizontalSegments_2,\n        ) {\n            // <CodeBlock renderHorizontalSegments_2>\n            ui.basic.horizontal.segments {\n                ui.segment {\n                    shortParagraphWireFrame()\n                }\n                ui.segment {\n                    shortParagraphWireFrame()\n                }\n                ui.segment {\n                    shortParagraphWireFrame()\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderHorizontalEqualWidthSegments() = example {\n        ui.header H3 { +\"Horizontal equal width Segments\" }\n\n        p { +\"A horizontal segment group can automatically divide segments to be equal width\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderHorizontalEqualWidthSegments,\n        ) {\n            // <CodeBlock renderHorizontalEqualWidthSegments>\n            ui.equal.width.horizontal.segments {\n                ui.segment {\n                    +LoremIpsum(2)\n                }\n                ui.segment {\n                    +LoremIpsum(5)\n                }\n                ui.segment {\n                    +LoremIpsum(8)\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderHorizontalStackableSegments() = example {\n        ui.header H3 { +\"Horizontal stackable Segments\" }\n\n        p { +\"A horizontal segment group can automatically stack on smaller screens\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderHorizontalStackableSegments,\n        ) {\n            // <CodeBlock renderHorizontalStackableSegments>\n            ui.horizontal.stackable.segments {\n                ui.segment {\n                    +LoremIpsum(4)\n                }\n                ui.segment {\n                    +LoremIpsum(4)\n                }\n                ui.segment {\n                    +LoremIpsum(4)\n                }\n                ui.segment {\n                    +LoremIpsum(4)\n                }\n                ui.segment {\n                    +LoremIpsum(4)\n                }\n                ui.segment {\n                    +LoremIpsum(4)\n                }\n                ui.segment {\n                    +LoremIpsum(4)\n                }\n                ui.segment {\n                    +LoremIpsum(4)\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderRaisedSegments() = example {\n        ui.header H3 { +\"Raised Segments\" }\n\n        p { +\"A group of segments can be raised\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderRaisedSegments,\n        ) {\n            // <CodeBlock renderRaisedSegments>\n            ui.raised.segments {\n                ui.segment {\n                    +LoremIpsum(4)\n                }\n                ui.segment {\n                    +LoremIpsum(4)\n                }\n                ui.segment {\n                    +LoremIpsum(4)\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderStackedSegments() = example {\n        ui.header H3 { +\"Stacked Segments\" }\n\n        p { +\"A group of segments can be stacked\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderStackedSegments,\n        ) {\n            // <CodeBlock renderStackedSegments>\n            ui.stacked.segments {\n                ui.segment {\n                    +LoremIpsum(4)\n                }\n                ui.segment {\n                    +LoremIpsum(4)\n                }\n                ui.segment {\n                    +LoremIpsum(4)\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderPiledSegments() = example {\n        ui.header H3 { +\"Stacked Segments\" }\n\n        p { +\"A group of segments can be piled\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderPiledSegments,\n        ) {\n            // <CodeBlock renderPiledSegments>\n            ui.piled.segments {\n                ui.segment {\n                    +LoremIpsum(4)\n                }\n                ui.segment {\n                    +LoremIpsum(4)\n                }\n                ui.segment {\n                    +LoremIpsum(4)\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderDisabledSegment() = example {\n        ui.header H3 { +\"Disabled Segment\" }\n\n        p { +\"A segment may show its content is disabled\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderDisabledSegment,\n        ) {\n            // <CodeBlock renderDisabledSegment>\n            ui.disabled.segment {\n                shortParagraphWireFrame()\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderLoadingSegment() = example {\n        ui.header H3 { +\"Loading Segment\" }\n\n        p { +\"A segment may show its content is being loaded\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderLoadingSegment_1,\n        ) {\n            // <CodeBlock renderLoadingSegment_1>\n            ui.loading.segment {\n                shortParagraphWireFrame()\n                shortParagraphWireFrame()\n                shortParagraphWireFrame()\n            }\n            // </CodeBlock>\n        }\n\n        ui.info.message {\n            +\"The loader inherits the color of the segment, if you want to prevent this, add the \"\n            ui.label { +\"usual\" }\n            +\" class, so the loader color stays default, while the segment still gets its color\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderLoadingSegment_2,\n        ) {\n            // <CodeBlock renderLoadingSegment_2>\n            ui.red.loading.segment {\n                shortParagraphWireFrame()\n            }\n            ui.red.usual.loading.segment {\n                shortParagraphWireFrame()\n            }\n            // </CodeBlock>\n        }\n    }\n\n\n    private fun FlowContent.renderInvertedSegment() = example {\n        ui.header H3 { +\"Inverted\" }\n\n        p { +\"A segment can have its colors inverted for contrast\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderInvertedSegment_1,\n        ) {\n            // <CodeBlock renderInvertedSegment_1>\n            ui.inverted.segment {\n                shortParagraphWireFrame()\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderAttachedSegment() = example {\n        ui.header H3 { +\"Attached\" }\n\n        p { +\"A segment can be attached to other content on a page\" }\n\n        ui.info.message {\n            +\"Attached segments are designed to be used with other attached variations like \"\n            b { a(href = routes.elementsHeader()) { +\"attached headers\" } }\n            +\" or \"\n            b { a(href = routes.collectionsMessage()) { +\"attached messages\" } }\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderAttachedSegment_1,\n        ) {\n            // <CodeBlock renderAttachedSegment_1>\n            ui.top.attached.segment {\n                shortParagraphWireFrame()\n            }\n            ui.attached.segment {\n                shortParagraphWireFrame()\n            }\n            ui.bottom.attached.segment {\n                shortParagraphWireFrame()\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderAttachedSegment_2,\n        ) {\n            // <CodeBlock renderAttachedSegment_2>\n            ui.top.attached.header {\n                +\"Header\"\n            }\n            ui.attached.segment {\n                shortParagraphWireFrame()\n            }\n            ui.bottom.attached.yellow.message {\n                +LoremIpsum(10)\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderPaddedSegment() = example {\n        ui.header H3 { +\"Padded\" }\n\n        p { +\"A segment can increase its padding\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderPaddedSegment_1,\n        ) {\n            // <CodeBlock renderPaddedSegment_1>\n            ui.padded.segment {\n                shortParagraphWireFrame()\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderPaddedSegment_2,\n        ) {\n            // <CodeBlock renderPaddedSegment_2>\n            ui.very.padded.segment {\n                shortParagraphWireFrame()\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderFittedSegment() = example {\n        ui.header H3 { +\"Fitted\" }\n\n        p { +\"A segment can remove its padding, vertically or horizontally\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderFittedSegment,\n        ) {\n            // <CodeBlock renderFittedSegment>\n            ui.fitted.segment {\n                +\"Fitted segment\"\n            }\n            ui.horizontally.fitted.segment {\n                +\"Horizontally segment\"\n            }\n            ui.vertically.fitted.segment {\n                +\"Vertically segment\"\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderCompactSegment() = example {\n        ui.header H3 { +\"Compact\" }\n\n        p { +\"A segment may take up only as much space as is necessary\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderCompactSegment_1,\n        ) {\n            // <CodeBlock renderCompactSegment_1>\n            ui.compact.segment {\n                +\"Compact segment\"\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderCompactSegment_2,\n        ) {\n            // <CodeBlock renderCompactSegment_2>\n            ui.compact.segments {\n                ui.segment {\n                    +\"Child segment\"\n                }\n                ui.segment {\n                    +\"Child segment 2\"\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderColoredSegment() = example {\n        ui.header H3 { +\"Colored\" }\n\n        p { +\"A segment can be colored\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderColoredSegment,\n        ) {\n            // <CodeBlock renderColoredSegment>\n            ui.red.segment { +\"red\" }\n            ui.orange.segment { +\"orange\" }\n            ui.yellow.segment { +\"yellow\" }\n            ui.olive.segment { +\"olive\" }\n            ui.green.segment { +\"green\" }\n            ui.teal.segment { +\"teal\" }\n            ui.blue.segment { +\"blue\" }\n            ui.violet.segment { +\"violet\" }\n            ui.purple.segment { +\"purple\" }\n            ui.pink.segment { +\"pink\" }\n            ui.brown.segment { +\"brown\" }\n            ui.grey.segment { +\"grey\" }\n            ui.black.segment { +\"black\" }\n            ui.white.segment { +\"white\" }\n            // </CodeBlock>\n        }\n\n        ui.divider()\n\n        p { +\"These colors can be inverted\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderColoredSegment_2,\n        ) {\n            // <CodeBlock renderColoredSegment_2>\n            ui.inverted.red.segment { +\"red\" }\n            ui.inverted.orange.segment { +\"orange\" }\n            ui.inverted.yellow.segment { +\"yellow\" }\n            ui.inverted.olive.segment { +\"olive\" }\n            ui.inverted.green.segment { +\"green\" }\n            ui.inverted.teal.segment { +\"teal\" }\n            ui.inverted.blue.segment { +\"blue\" }\n            ui.inverted.violet.segment { +\"violet\" }\n            ui.inverted.purple.segment { +\"purple\" }\n            ui.inverted.pink.segment { +\"pink\" }\n            ui.inverted.brown.segment { +\"brown\" }\n            ui.inverted.grey.segment { +\"grey\" }\n            ui.inverted.black.segment { +\"black\" }\n            ui.inverted.white.segment { +\"white\" }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderEmphasisSegment() = example {\n        ui.header H3 { +\"Emphasis\" }\n\n        p { +\"A segment can be formatted to appear more or less noticeable\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderEmphasisSegment,\n        ) {\n            // <CodeBlock renderEmphasisSegment>\n            ui.segment { +\"Normal segment\" }\n            ui.secondary.segment { +\"Secondary segment\" }\n            ui.tertiary.segment { +\"Tertiary segment\" }\n            // </CodeBlock>\n        }\n\n        ui.divider()\n\n        p {\n            +\"Inverted colors may also be more or less noticeable\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderEmphasisSegment_2,\n        ) {\n            // <CodeBlock renderEmphasisSegment_2>\n            ui.red.inverted.segment { +\"Normal segment\" }\n            ui.red.inverted.secondary.segment { +\"Secondary segment\" }\n            ui.red.inverted.tertiary.segment { +\"Tertiary segment\" }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderCircularSegment() = example {\n        ui.header H3 { +\"Circular\" }\n\n        p { +\"A segment can be circular\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderCircularSegment,\n        ) {\n            // <CodeBlock renderCircularSegment>\n            ui.circular.segment {\n                ui.header H2 {\n                    +\"Buy now\"\n                    noui.sub.header { +\"\\$10.99\" }\n                }\n            }\n            ui.inverted.red.circular.segment {\n                ui.header H2 {\n                    +\"Buy now\"\n                    noui.sub.header { +\"\\$10.99\" }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderClearingSegment() = example {\n        ui.header H3 { +\"Clearing\" }\n\n        p { +\"A segment can clear floated content\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderClearingSegment,\n        ) {\n            // <CodeBlock renderClearingSegment>\n            ui.clearing.segment {\n                ui.right.floated.button {\n                    +\"Floated\"\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderFloatedSegment() = example {\n        ui.header H3 { +\"Floated\" }\n\n        p { +\"A segment can appear to the left or right of other content\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderFloatedSegment,\n        ) {\n            // <CodeBlock renderFloatedSegment>\n            ui.right.floated.segment {\n                +\"This segment is right floated\"\n            }\n            ui.left.floated.segment {\n                +\"This segment is left floated\"\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderTextAlignmentSegment() = example {\n        ui.header H3 { +\"Text alignment\" }\n\n        p { +\"A segment can have its text aligned to a side\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderTextAlignmentSegment,\n        ) {\n            // <CodeBlock renderTextAlignmentSegment>\n            ui.right.aligned.segment {\n                +\"Right\"\n            }\n            ui.center.aligned.segment {\n                +\"Center\"\n            }\n            ui.left.aligned.segment {\n                +\"Left\"\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderBasicSegment() = example {\n        ui.header H3 { +\"Basic\" }\n\n        p { +\"A basic segment has no special formatting\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_segment_SegmentPage_kt_renderBasicSegment,\n        ) {\n            // <CodeBlock renderBasicSegment>\n            ui.basic.segment {\n                +LoremIpsum(30)\n            }\n            // </CodeBlock>\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.elements.step\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.StepPage() = comp {\n    StepPage(it)\n}\n\nclass StepPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Elements | Step\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Step\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/elements/step.html\")\n\n            ui.dividing.header H2 { +\"Types\" }\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.elements.text\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.HorizontalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport generated.ExtractedCodeBlocks\nimport kotlinx.html.FlowContent\nimport kotlinx.html.Tag\nimport kotlinx.html.p\n\n@Suppress(\"FunctionName\")\nfun Tag.TextPage() = comp {\n    TextPage(it)\n}\n\nclass TextPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Elements | Text\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Text\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/elements/text.html\")\n\n            ui.dividing.header H2 { +\"Definition\" }\n\n            renderText()\n\n            ui.dividing.header H2 { +\"Variations\" }\n\n            renderSize()\n        }\n    }\n\n    private fun FlowContent.renderText() = example {\n        ui.dividing.header H3 { +\"Styles\" }\n\n        p {\n            +\"To not interfere with all other colorable elements the \"\n            ui.label { +\"text\" }\n            +\" element is limited to be used in \"\n            ui.label { +\"span\" }\n            +\" tags only .\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_text_TextPage_kt_renderText_1,\n        ) {\n            // <CodeBlock renderText_1>\n            ui.segment {\n                +\"This is \"\n                ui.red.text Span { +\"red\" }\n                +\" inline text and this is \"\n                ui.blue.text Span { +\"blue\" }\n                +\" inline text and this is \"\n                ui.purple.text Span { +\"purple\" }\n                +\" inline text\"\n            }\n\n            ui.inverted.segment {\n                +\"This is \"\n                ui.red.text Span { +\"red\" }\n                +\" inline text and this is \"\n                ui.blue.text Span { +\"blue\" }\n                +\" inline text and this is \"\n                ui.purple.text Span { +\"purple\" }\n                +\" inline text\"\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_text_TextPage_kt_renderText_2,\n        ) {\n            // <CodeBlock renderText_2>\n            ui.segment {\n                +\"This is \"\n                ui.info.text Span { +\"info\" }\n                +\" inline text and this is \"\n                ui.success.text Span { +\"success\" }\n                +\" inline text and this is \"\n                ui.warning.text Span { +\"warning\" }\n                +\" inline text and this is \"\n                ui.error.text Span { +\"error\" }\n                +\" inline text\"\n            }\n\n            ui.inverted.segment {\n                +\"This is \"\n                ui.info.text Span { +\"info\" }\n                +\" inline text and this is \"\n                ui.success.text Span { +\"success\" }\n                +\" inline text and this is \"\n                ui.warning.text Span { +\"warning\" }\n                +\" inline text and this is \"\n                ui.error.text Span { +\"error\" }\n                +\" inline text\"\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderSize() = example {\n        ui.dividing.header H3 { +\"Styles\" }\n\n        ui.info.message {\n            +\"To not interfere with all other colorable elements the \"\n            ui.label { +\"text\" }\n            +\" element is limited to be used in \"\n            ui.label { +\"span\" }\n            +\" tags only .\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_elements_text_TextPage_kt_renderSize,\n        ) {\n            // <CodeBlock renderSize>\n            p { +\"This is \"; ui.mini.red.text Span { +\"mini\" }; +\" text\" }\n            p { +\"This is \"; ui.tiny.red.text Span { +\"tiny\" }; +\" text\" }\n            p { +\"This is \"; ui.small.red.text Span { +\"small\" }; +\" text\" }\n            p { +\"This is \"; ui.medium.red.text Span { +\"medium\" }; +\" text\" }\n            p { +\"This is \"; ui.large.red.text Span { +\"large\" }; +\" text\" }\n            p { +\"This is \"; ui.big.red.text Span { +\"big\" }; +\" text\" }\n            p { +\"This is \"; ui.huge.red.text Span { +\"huge\" }; +\" text\" }\n            p { +\"This is \"; ui.massive.red.text Span { +\"massive\" }; +\" text\" }\n            // </CodeBlock>\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.home\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.kotlinToHtml\nimport de.peekandpoke.kraft.semanticui.icon\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.FlowContent\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.HomePage() = comp {\n    HomePage(it)\n}\n\nclass HomePage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"FomanticUI\")\n\n        ui.basic.segment {\n            ui.header H1 {\n                +\"FomanticUI + kotlinx/html + KRAFT = \"\n                icon.red.music()\n            }\n\n            renderFomanticUiExamplesLink()\n\n            renderDslIntro()\n        }\n    }\n\n    private fun FlowContent.renderFomanticUiExamplesLink() = example {\n\n        ui.two.column.grid {\n            ui.column {\n                ui.header H2 { +\"FomanticUI Docs\" }\n\n                ui.big.green.basic.button A {\n                    href = \"https://fomantic-ui.com/\"\n                    target = \"_blank\"\n                    icon.linkify()\n                    +\"Version 2.9.0\"\n                }\n            }\n\n            ui.column {\n                ui.header H2 { +\"FomanticUI + Kraft code examples\" }\n\n                ui.big.green.basic.button A {\n                    href = \"https://github.com/PeekAndPoke/kraft/tree/master/examples/fomanticui\"\n                    target = \"_blank\"\n                    icon.github()\n                    +\"Show me the code!\"\n                }\n            }\n        }\n    }\n\n    private fun FlowContent.renderDslIntro() = example {\n        ui.header H2 { +\"Intro to the DSL\" }\n\n        ui.info.message {\n            +\"Fomantic-UI often times needs the css classes to be prefixed with \"\n            ui.basic.label { +\"ui\" }\n        }\n\n        kotlinToHtml(\n            kotlin = \"\"\"\n                ui.basic.segment {\n                    +\"Hello World\"\n                }\n            \"\"\".trimIndent(),\n            html = \"\"\"\n                <div class=\"ui basic segment\">\n                    Hello World\n                </div>\n            \"\"\".trimIndent()\n        )\n\n        ui.info.message {\n            +\"But there are also cases where you want to omit this prefix. Then you can use \"\n            ui.basic.label { +\"noui\" }\n        }\n\n        kotlinToHtml(\n            kotlin = \"\"\"\n                noui.basic.item {\n                    +\"Hello World\"\n                }\n            \"\"\".trimIndent(),\n            html = \"\"\"\n                <div class=\"basic item\">\n                    Hello World\n                </div>\n            \"\"\".trimIndent()\n        )\n\n        ui.info.message {\n            +\"Sometimes you want to change the html tag from div to something else\"\n        }\n\n        kotlinToHtml(\n            kotlin = \"\"\"\n                no.basic.item A {\n                    href = \"https://github.com/PeekAndPoke/kraft\"\n                    +\"KRAFT\"\n                }\n            \"\"\".trimIndent(),\n            html = \"\"\"\n                <a class=\"basic item\" href=\"https://github.com/PeekAndPoke/kraft\">\n                    KRAFT\n                </a>\n            \"\"\".trimIndent()\n        )\n\n        ui.info.message {\n            +\"Sometimes you might want to add custom css class. You can use \"\n            ui.basic.label { +\"with(...)\" }\n            +\" to achieve this\"\n        }\n\n        kotlinToHtml(\n            kotlin = \"\"\"\n                no.basic.with(\"my-custom-class\").item A {\n                    href = \"https://github.com/PeekAndPoke/kraft\"\n                    +\"KRAFT\"\n                }\n            \"\"\".trimIndent(),\n            html = \"\"\"\n                <a class=\"basic my-custom-class item\" href=\"https://github.com/PeekAndPoke/kraft\">\n                    KRAFT\n                </a>\n            \"\"\".trimIndent()\n        )\n\n        ui.info.message {\n            +\"Sometimes you only want to set a css class when a condition is met. You can use \"\n            ui.basic.label { +\"given(...) { ... }\" }\n            +\" to achieve this.\"\n        }\n\n        kotlinToHtml(\n            kotlin = \"\"\"\n                val myCondition = false\n                \n                no.basic.given(myCondition) { disabled }.item A {\n                    href = \"https://github.com/PeekAndPoke/kraft\"\n                    +\"KRAFT\"\n                }\n            \"\"\".trimIndent(),\n            html = \"\"\"\n                <a class=\"basic item\" href=\"https://github.com/PeekAndPoke/kraft\">\n                    KRAFT\n                </a>\n            \"\"\".trimIndent()\n        )\n\n        ui.info.message {\n            +\"Sometimes you only want to set a css class when a condition is NOT met. You can use \"\n            ui.basic.label { +\"givenNot(...) { ... }\" }\n            +\" to achieve this.\"\n        }\n\n        kotlinToHtml(\n            kotlin = \"\"\"\n                val myCondition = false\n                \n                no.basic.givenNot(myCondition) { disabled }.item A {\n                    href = \"https://github.com/PeekAndPoke/kraft\"\n                    +\"KRAFT\"\n                }\n            \"\"\".trimIndent(),\n            html = \"\"\"\n                <a class=\"basic disabled item\" href=\"https://github.com/PeekAndPoke/kraft\">\n                    KRAFT\n                </a>\n            \"\"\".trimIndent()\n        )\n    }\n}\n","package de.peekandpoke.kraft.examples.fomanticui.pages.howto.blocks.dnd\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport js.core.JsNumber\nimport kotlinx.html.Tag\nimport kotlinx.html.p\n\n@Suppress(\"FunctionName\")\nfun Tag.DragAndDropPage() = comp {\n    DragAndDropPage(it)\n}\n\nclass DragAndDropPage(ctx: NoProps) : PureComponent(ctx) {\n\n    override fun VDom.render() {\n        PageTitle(\"How To | Drag and drop\")\n\n        ui.basic.padded.segment {\n            ui.header H2 { +\"DnD\" }\n\n            p {\n                +\"Drag items from the left side to the right side.\"\n            }\n\n            ui.three.column.grid {\n                ui.column {\n                    DraggableNumberComponent(1)\n                    DraggableNumberComponent(2)\n                    DraggableNumberComponent(3)\n                    DraggableNumberComponent(4)\n                    DraggableNumberComponent(5)\n\n                    DraggableNumberComponent(5.5)\n                    DraggableNumberComponent(6.6f)\n                }\n                ui.column {\n                    DropZoneComponent(\"Accepts 1\") {\n                        it == 1\n                    }\n                    DropZoneComponent(\"Accepts %2\") {\n                        JsNumber.isInteger(it) && it.toInt() % 2 == 0\n                    }\n                    DropZoneComponent(\"Accepts 3\") {\n                        it == 3\n                    }\n                    DropZoneComponent(\"Accepts greater 4\") {\n                        it.toDouble() > 4\n                    }\n                    DropZoneComponent(\"Accepts all Ints\") {\n                        JsNumber.isInteger(it)\n                    }\n                    DropZoneComponent(\"Accepts all Floating points\") {\n                        !JsNumber.isInteger(it)\n                    }\n                }\n            }\n        }\n    }\n}\n","package de.peekandpoke.kraft.examples.fomanticui.pages.howto.blocks.dnd\n\nimport de.peekandpoke.kraft.addons.dnd.DndDragHandle\nimport de.peekandpoke.kraft.components.Component\nimport de.peekandpoke.kraft.components.Ctx\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.semanticui.icon\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.DraggableNumberComponent(\n    value: Number,\n) = comp(\n    DraggableNumberComponent.Props(\n        value = value,\n    )\n) { DraggableNumberComponent(it) }\n\nclass DraggableNumberComponent(ctx: Ctx<Props>) : Component<DraggableNumberComponent.Props>(ctx) {\n\n    data class Props(\n        val value: Number\n    )\n\n    override fun VDom.render() {\n        ui.segment {\n\n            icon.grip_vertical.link {\n                DndDragHandle(payload = props.value)\n            }\n\n            +\"Value: ${props.value} (${props.value::class.simpleName})\"\n        }\n    }\n}\n","package de.peekandpoke.kraft.examples.fomanticui.pages.howto.blocks.dnd\n\nimport de.peekandpoke.kraft.addons.dnd.DndDropTarget\nimport de.peekandpoke.kraft.addons.dnd.greenHighlights\nimport de.peekandpoke.kraft.components.Component\nimport de.peekandpoke.kraft.components.Ctx\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\nimport kotlinx.html.div\n\n@Suppress(\"FunctionName\")\nfun Tag.DropZoneComponent(\n    label: String,\n    accepts: (Number) -> Boolean,\n) = comp(\n    DropZoneComponent.Props(\n        label = label,\n        accepts = accepts,\n    )\n) { DropZoneComponent(it) }\n\nclass DropZoneComponent(ctx: Ctx<Props>) : Component<DropZoneComponent.Props>(ctx) {\n\n    data class Props(\n        val label: String,\n        val accepts: (Number) -> Boolean\n    )\n\n    var counter by value(0.0)\n\n    override fun VDom.render() {\n\n        ui.segment {\n            DndDropTarget<Number> {\n                accepts = props.accepts\n                onDrop = { counter += it.toDouble() }\n                greenHighlights()\n            }\n\n            ui.label {\n                +props.label\n            }\n\n            div {\n                +\"Counter: $counter\"\n            }\n        }\n    }\n}\n","package de.peekandpoke.kraft.examples.fomanticui.pages.howto.blocks.listfield\n\nimport de.peekandpoke.kraft.addons.forms.collections.ListField\nimport de.peekandpoke.kraft.addons.forms.collections.ListFieldComponent\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.addons.semanticui.forms.UiTextArea\nimport de.peekandpoke.kraft.components.*\nimport de.peekandpoke.kraft.semanticui.icon\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.FlowContent\nimport kotlinx.html.Tag\nimport kotlinx.html.title\n\n@Suppress(\"FunctionName\")\nfun Tag.ListFieldPage() = comp {\n    ListFieldPage(it)\n}\n\nclass ListFieldPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    data class Data(\n        val texts: List<String> = emptyList()\n    )\n\n    private var data by value(Data()) {\n        console.log(it.texts.toTypedArray())\n    }\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"How To | List Field\")\n\n        ui.basic.padded.segment {\n            ui.dividing.header H1 { +\"List Field\" }\n\n            renderSimpleExample()\n        }\n    }\n\n    private fun FlowContent.renderSimpleExample() {\n        ui.dividing.header H2 { +\"Simple example\" }\n\n        ui.form {\n            ui.segments {\n                ListField(items = data.texts, onChange = { data = data.copy(texts = it) }) {\n                    renderItem { ctx ->\n                        ui.segment {\n                            key = ctx.domKey()\n\n                            UiTextArea(ctx.item, ctx.modifier { it }) {\n                                +\"Text ${ctx.idx + 1}\"\n                            }\n\n                            ui.buttons {\n                                upRemoveDownButtons(ctx)\n                            }\n                        }\n                    }\n\n                    renderAdd { ctx ->\n                        ui.segment {\n                            key = ctx.domKey()\n\n                            ui.button {\n                                onClick {\n                                    ctx.add(\"\")\n                                }\n                                icon.plus()\n                                +\"Add\"\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    private fun <T> FlowContent.upRemoveDownButtons(ctx: ListFieldComponent.ItemCtx<T>) {\n\n        if (ctx.idx > 0) {\n            ui.basic.blue.icon.button {\n                title = \"Move Up\"\n                icon.arrow_up()\n                onClick { ctx.swapWith(ctx.idx - 1) }\n            }\n        }\n\n        ui.basic.red.icon.button {\n            title = \"Remove\"\n            icon.close()\n            onClick { ctx.remove() }\n        }\n\n        if (ctx.idx < ctx.all.size - 1) {\n            ui.basic.blue.icon.button {\n                title = \"Move Down\"\n                icon.arrow_down()\n                onClick { ctx.swapWith(ctx.idx + 1) }\n            }\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.howto.forms.demo\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.FormDemosPage() = comp {\n    FormDemosPage(it)\n}\n\nclass FormDemosPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"How To | Forms | Demo\")\n\n        ui.basic.padded.segment {\n            ui.dividing.header H1 { +\"Form demos\" }\n\n            ui.segment {\n                ui.header H2 { +\"A form with primitive values\" }\n                FormWithPrimitives()\n            }\n\n            ui.segment {\n                ui.header H2 { +\"A form with nullable primitive values\" }\n                FormWithNullablePrimitives()\n            }\n\n            ui.segment {\n                ui.header H2 { +\"A form with checkboxes\" }\n                FormWithCheckboxes()\n            }\n\n            ui.segment {\n                ui.header H2 { +\"A form with a text area\" }\n                FormWithTestArea()\n            }\n\n            ui.segment {\n                ui.header H2 { +\"A form with passwords\" }\n                FormWithPasswords()\n            }\n\n            ui.segment {\n                ui.header H2 { +\"A form with Dates \" }\n                FormWithDates()\n            }\n\n            ui.segment {\n                ui.header H2 { +\"A form with nullable Dates\" }\n                FormWithNullableDates()\n            }\n\n            ui.segment {\n                ui.header H2 { +\"A form with DateTimes\" }\n                FormWithDateTimes()\n            }\n\n            ui.segment {\n                ui.header H2 { +\"A form with nullable DateTimes\" }\n                FormWithNullableDateTimes()\n            }\n\n            ui.segment {\n                ui.header H2 { +\"A form with Times\" }\n                FormWithTimes()\n            }\n\n            ui.segment {\n                ui.header H2 { +\"A form with Colors\" }\n                FormWithColors()\n            }\n\n            ui.segment {\n                ui.header H2 { +\"A form with disabled fields\" }\n                FormWithDisabledFields()\n            }\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.howto.forms.demo\n\nimport de.peekandpoke.kraft.addons.forms.formController\nimport de.peekandpoke.kraft.addons.forms.validation.comparable.greaterThan\nimport de.peekandpoke.kraft.addons.forms.validation.numbers.greaterThan\nimport de.peekandpoke.kraft.addons.forms.validation.numbers.lessThan\nimport de.peekandpoke.kraft.addons.forms.validation.strings.notBlank\nimport de.peekandpoke.kraft.addons.semanticui.forms.UiCheckboxField\nimport de.peekandpoke.kraft.addons.semanticui.forms.UiInputField\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.components.onClick\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.invoke\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.renderStateAndDraftTable\nimport de.peekandpoke.kraft.examples.fomanticui.responsiveCtrl\nimport de.peekandpoke.kraft.semanticui.icon\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.FlowContent\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.FormWithPrimitives() = comp {\n    FormWithPrimitives(it)\n}\n\nclass FormWithPrimitives(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    data class State(\n        val textInput: String = \"\",\n        val intInput: Int = 0,\n        val floatInput: Float = 0.0f,\n        val doubleInput: Double = 3.0,\n    )\n\n    private var state by value(State())\n    private var draft by value(state)\n    private var disableFields by value(false)\n\n    private val formCtrl = formController()\n\n    private val responsive by subscribingTo(responsiveCtrl)\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n\n        ui.two.column.grid {\n            ui.column {\n                ui.form {\n                    ui.two.fields {\n                        UiCheckboxField(::disableFields) {\n                            toggle()\n                            label(\"Disable fields\")\n                        }\n                    }\n                    ui.two.fields {\n                        UiInputField(draft.textInput, { draft = draft.copy(textInput = it) }) {\n                            label { +\"Text Input\" }\n                            placeholder(\"Enter some text\")\n                            disabled(disableFields)\n\n                            autofocusOnDesktop(responsive)\n                            rightClearingIcon()\n\n                            accepts(\n                                notBlank(),\n                                greaterThan(\"abc\") { \"Must be greater than 'abc'\" },\n                            )\n                        }\n\n                        UiInputField(draft.intInput, { draft = draft.copy(intInput = it) }) {\n                            label { +\"Int Input\" }\n                            placeholder(\"Enter a number\")\n                            disabled(disableFields)\n                            step(3)\n                            leftIcon { green.percent }\n\n                            accepts(\n                                greaterThan(6.0),\n                                lessThan(20.0)\n                            )\n                        }\n                    }\n\n                    ui.two.fields {\n                        UiInputField(draft.floatInput, { draft = draft.copy(floatInput = it) }) {\n                            label { +\"Float Input\" }\n                            placeholder(\"Enter a number\")\n                            disabled(disableFields)\n                            step(1.5)\n                            rightLabel {\n                                ui.blue.label {\n                                    icon.dollar_sign()\n                                    +\"USD\"\n                                }\n                            }\n\n                            accepts(\n                                greaterThan(5.0),\n                                lessThan(20.0)\n                            )\n                        }\n\n                        UiInputField(draft.doubleInput, { draft = draft.copy(doubleInput = it) }) {\n                            label { +\"Double Input\" }\n                            placeholder(\"Enter a number\")\n                            disabled(disableFields)\n                            step(0.5)\n                            leftLabel {\n                                ui.label {\n                                    icon.euro_sign()\n                                    +\"EUR\"\n                                }\n                            }\n\n                            accepts(\n                                greaterThan(3.0),\n                                lessThan(20.0)\n                            )\n                        }\n                    }\n                }\n\n                ui.divider {}\n\n                val canSubmit = formCtrl.isValid && draft != state\n\n                ui.blue.button.given(!canSubmit) { disabled }.then {\n                    onClick {\n                        if (formCtrl.validate() && canSubmit) {\n                            state = draft\n                        }\n                    }\n                    +\"Submit\"\n                }\n\n                ui.basic.button {\n                    onClick {\n                        draft = state\n                        formCtrl.resetAllFields()\n                    }\n                    +\"Reset form\"\n                }\n            }\n\n            ui.column {\n                renderDataTable()\n            }\n        }\n    }\n\n    private fun FlowContent.renderDataTable() {\n\n        renderStateAndDraftTable(\n            state,\n            draft,\n            listOf(\n                State::textInput { it },\n                State::intInput { it.toString() },\n                State::floatInput { it.toString() },\n                State::doubleInput { it.toString() },\n            )\n        )\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.howto.forms.demo\n\nimport de.peekandpoke.kraft.addons.forms.formController\nimport de.peekandpoke.kraft.addons.forms.validation.numbers.greaterThan\nimport de.peekandpoke.kraft.addons.forms.validation.numbers.lessThan\nimport de.peekandpoke.kraft.addons.semanticui.forms.UiInputField\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.components.onClick\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.invoke\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.renderStateAndDraftTable\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.FlowContent\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.FormWithNullablePrimitives() = comp {\n    FormWithNullablePrimitives(it)\n}\n\nclass FormWithNullablePrimitives(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    data class State(\n        val textInput: String? = null,\n        val intInput: Int? = null,\n        val floatInput: Float? = null,\n        val doubleInput: Double? = null,\n    )\n\n    private var state by value(State())\n    private var draft by value(state)\n\n    private val formCtrl = formController()\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n\n        ui.two.column.grid {\n            ui.column {\n                ui.form {\n                    ui.two.fields {\n                        UiInputField.nullable(draft.textInput, { draft = draft.copy(textInput = it) }) {\n                            label { +\"Text Input\" }\n                            placeholder(\"Enter some text\")\n                        }\n\n                        UiInputField.nullable(draft.intInput, { draft = draft.copy(intInput = it) }) {\n                            label { +\"Int Input\" }\n                            placeholder(\"Enter a number\")\n                            step(3)\n\n                            accepts(\n                                greaterThan(6.0),\n                                lessThan(15.0)\n                            )\n                        }\n                    }\n\n                    ui.two.fields {\n                        UiInputField.nullable(draft.floatInput, { draft = draft.copy(floatInput = it) }) {\n                            label { +\"Float Input\" }\n                            placeholder(\"Enter a number\")\n\n                            accepts(\n                                greaterThan(5.0),\n                                lessThan(20.0)\n                            )\n                        }\n\n                        UiInputField.nullable(draft.doubleInput, { draft = draft.copy(doubleInput = it) }) {\n                            label { +\"Double Input\" }\n                            placeholder(\"Enter a number\")\n                            step(0.5)\n\n                            accepts(\n                                greaterThan(3.0),\n                                lessThan(10.0)\n                            )\n                        }\n                    }\n                }\n\n                ui.divider {}\n\n                val canSubmit = formCtrl.isValid && draft != state\n\n                ui.blue.button.given(!canSubmit) { disabled }.then {\n                    onClick {\n                        if (formCtrl.validate() && canSubmit) {\n                            state = draft\n                        }\n                    }\n                    +\"Submit\"\n                }\n\n                ui.basic.button {\n                    onClick {\n                        draft = state\n                        formCtrl.resetAllFields()\n                    }\n                    +\"Reset form\"\n                }\n            }\n\n            ui.column {\n                renderDataTable()\n            }\n        }\n    }\n\n    private fun FlowContent.renderDataTable() {\n\n        renderStateAndDraftTable(\n            state,\n            draft,\n            listOf(\n                State::textInput { it.toString() },\n                State::intInput { it.toString() },\n                State::floatInput { it.toString() },\n                State::doubleInput { it.toString() },\n            )\n        )\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.howto.forms.demo\n\nimport de.peekandpoke.kraft.addons.forms.formController\nimport de.peekandpoke.kraft.addons.semanticui.forms.UiCheckboxField\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.components.onClick\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.invoke\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.renderStateAndDraftTable\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.FormWithCheckboxes() = comp {\n    FormWithCheckboxes(it)\n}\n\nclass FormWithCheckboxes(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    data class Obj(val x: String)\n\n    data class State(\n        val boolean: Boolean = false,\n        val string: String = \"yes\",\n        val obj: Obj = Obj(\"yes\"),\n    )\n\n    private var state by value(State())\n    private var draft by value(state)\n\n    private val formCtrl = formController()\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n\n        ui.two.column.grid {\n            ui.column {\n                ui.form {\n                    ui.three.fields {\n                        UiCheckboxField(draft.boolean, { draft = draft.copy(boolean = it) }) {\n                            label { +State::boolean.name }\n                        }\n\n                        UiCheckboxField(\n                            value = draft.string,\n                            off = \"no\",\n                            on = \"yes\",\n                            onChange = { draft = draft.copy(string = it) },\n                        ) {\n                            label { +State::string.name }\n                            toggle()\n                        }\n\n                        UiCheckboxField(\n                            value = draft.obj,\n                            off = Obj(\"no\"),\n                            on = Obj(\"yes\"),\n                            onChange = { draft = draft.copy(obj = it) },\n                        ) {\n                            label { +State::obj.name }\n                            slider()\n                        }\n                    }\n                }\n\n                ui.divider {}\n\n                val canSubmit = formCtrl.isValid && draft != state\n\n                ui.blue.button.given(!canSubmit) { disabled }.then {\n                    onClick {\n                        if (formCtrl.validate() && canSubmit) {\n                            state = draft\n                        }\n                    }\n                    +\"Submit\"\n                }\n\n                ui.basic.button {\n                    onClick {\n                        draft = state\n                        formCtrl.resetAllFields()\n                    }\n                    +\"Reset form\"\n                }\n            }\n\n            ui.column {\n                renderStateAndDraftTable(\n                    state,\n                    draft,\n                    listOf(\n                        State::boolean { it.toString() },\n                        State::string { it },\n                        State::obj { it.toString() },\n                    )\n                )\n            }\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.howto.forms.demo\n\nimport de.peekandpoke.kraft.addons.forms.formController\nimport de.peekandpoke.kraft.addons.semanticui.forms.UiTextArea\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.components.onClick\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.invoke\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.renderStateAndDraftTable\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.FlowContent\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.FormWithTestArea() = comp {\n    FormWithTestArea(it)\n}\n\nclass FormWithTestArea(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    data class State(\n        val input: String = \"\",\n    )\n\n    private var state by value(State())\n    private var draft by value(state)\n\n    private val formCtrl = formController()\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n\n        ui.two.column.grid {\n            ui.column {\n                ui.form {\n                    UiTextArea(draft.input, { draft = draft.copy(input = it) }) {\n                        label { +\"Text Input\" }\n                        placeholder(\"Enter some text\")\n                    }\n                }\n\n                ui.divider {}\n\n                val canSubmit = formCtrl.isValid && draft != state\n\n                ui.blue.button.given(!canSubmit) { disabled }.then {\n                    onClick {\n                        if (formCtrl.validate() && canSubmit) {\n                            state = draft\n                        }\n                    }\n                    +\"Submit\"\n                }\n\n                ui.basic.button {\n                    onClick {\n                        draft = state\n                        formCtrl.resetAllFields()\n                    }\n                    +\"Reset form\"\n                }\n            }\n\n            ui.column {\n                renderDataTable()\n            }\n        }\n    }\n\n    private fun FlowContent.renderDataTable() {\n\n        renderStateAndDraftTable(\n            state,\n            draft,\n            listOf(\n                State::input { it },\n            )\n        )\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.howto.forms.demo\n\nimport de.peekandpoke.kraft.addons.forms.formController\nimport de.peekandpoke.kraft.addons.forms.validation.equalTo\nimport de.peekandpoke.kraft.addons.semanticui.forms.UiPasswordField\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.components.onClick\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.invoke\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.renderStateAndDraftTable\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.FormWithPasswords() = comp {\n    FormWithPasswords(it)\n}\n\nclass FormWithPasswords(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    data class State(\n        val password: String = \"\",\n        val repeat: String = \"\",\n        val reveal: String = \"bad-password\"\n    )\n\n    private var state by value(State())\n    private var draft by value(state)\n\n    private val formCtrl = formController()\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n\n        ui.two.column.grid {\n            ui.column {\n                ui.form {\n                    ui.three.fields {\n                        UiPasswordField(draft.password, { draft = draft.copy(password = it) }) {\n                            label { +\"Password\" }\n                        }\n\n                        UiPasswordField(draft.repeat, { draft = draft.copy(repeat = it) }) {\n                            label { +\"Repeat\" }\n\n                            accepts(equalTo({ draft.password }, \"Passwords must match\"))\n                        }\n\n                        UiPasswordField(draft.reveal, { draft = draft.copy(reveal = it) }) {\n                            label { +\"Reveal\" }\n\n                            revealPasswordIcon()\n\n                            accepts(equalTo({ draft.password }, \"Passwords must match\"))\n                        }\n                    }\n                }\n\n                ui.divider {}\n\n                val canSubmit = formCtrl.isValid && draft != state\n\n                ui.blue.button.given(!canSubmit) { disabled }.then {\n                    onClick {\n                        if (formCtrl.validate() && canSubmit) {\n                            state = draft\n                        }\n                    }\n                    +\"Submit\"\n                }\n\n                ui.basic.button {\n                    onClick {\n                        draft = state\n                        formCtrl.resetAllFields()\n                    }\n                    +\"Reset form\"\n                }\n            }\n\n            ui.column {\n                renderStateAndDraftTable(\n                    state,\n                    draft,\n                    listOf(\n                        State::password { it },\n                        State::repeat { it },\n                    )\n                )\n            }\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.howto.forms.demo\n\nimport de.peekandpoke.kraft.addons.forms.formController\nimport de.peekandpoke.kraft.addons.semanticui.forms.UiDateField\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.components.onClick\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.invoke\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.renderStateAndDraftTable\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport de.peekandpoke.ultra.common.datetime.*\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.FormWithDates() = comp {\n    FormWithDates(it)\n}\n\nclass FormWithDates(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    data class State(\n        val localDate: MpLocalDate = Kronos.systemUtc.localDateTimeNow().toDate(),\n        val localDateTime: MpLocalDateTime = Kronos.systemUtc.localDateTimeNow(),\n        val zonedDateTime: MpZonedDateTime = Kronos.systemUtc.zonedDateTimeNow(MpTimezone.of(\"Europe/Berlin\")),\n    )\n\n    private var state by value(State())\n    private var draft by value(state)\n\n    private val formCtrl = formController()\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n\n        ui.two.column.grid {\n            ui.column {\n                ui.form {\n                    ui.three.fields {\n                        UiDateField(draft.localDate, { draft = draft.copy(localDate = it) }) {\n                            label { +State::localDate.name }\n                        }\n\n                        UiDateField(draft.localDateTime, { draft = draft.copy(localDateTime = it) }) {\n                            label { +State::localDateTime.name }\n                        }\n\n                        UiDateField(draft.zonedDateTime, { draft = draft.copy(zonedDateTime = it) }) {\n                            label { +State::zonedDateTime.name }\n                        }\n                    }\n                }\n\n                ui.divider {}\n\n                val canSubmit = formCtrl.isValid && draft != state\n\n                ui.blue.button.given(!canSubmit) { disabled }.then {\n                    onClick {\n                        if (formCtrl.validate() && canSubmit) {\n                            state = draft\n                        }\n                    }\n                    +\"Submit\"\n                }\n\n                ui.basic.button {\n                    onClick {\n                        draft = state\n                        formCtrl.resetAllFields()\n                    }\n                    +\"Reset form\"\n                }\n            }\n\n            ui.column {\n                renderStateAndDraftTable(\n                    state,\n                    draft,\n                    listOf(\n                        State::localDate { it.toIsoString() },\n                        State::localDateTime { it.toIsoString() },\n                        State::zonedDateTime { it.toIsoString() },\n                    )\n                )\n            }\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.howto.forms.demo\n\nimport de.peekandpoke.kraft.addons.forms.formController\nimport de.peekandpoke.kraft.addons.semanticui.forms.UiDateField\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.components.onClick\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.invoke\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.renderStateAndDraftTable\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport de.peekandpoke.ultra.common.datetime.MpLocalDate\nimport de.peekandpoke.ultra.common.datetime.MpLocalDateTime\nimport de.peekandpoke.ultra.common.datetime.MpTimezone\nimport de.peekandpoke.ultra.common.datetime.MpZonedDateTime\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.FormWithNullableDates() = comp {\n    FormWithNullableDates(it)\n}\n\nclass FormWithNullableDates(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    data class State(\n        val localDate: MpLocalDate? = null,\n        val localDateTime: MpLocalDateTime? = null,\n        val zonedDateTime: MpZonedDateTime? = null,\n    )\n\n    private var state by value(State())\n    private var draft by value(state)\n\n    private val formCtrl = formController()\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n\n        ui.two.column.grid {\n            ui.column {\n                ui.form {\n                    ui.three.fields {\n                        UiDateField.nullable(draft.localDate, { draft = draft.copy(localDate = it) }) {\n                            label { +State::localDate.name }\n                        }\n\n                        UiDateField.nullable(draft.localDateTime, { draft = draft.copy(localDateTime = it) }) {\n                            label { +State::localDateTime.name }\n                        }\n\n                        val tz = MpTimezone.of(\"Europe/Berlin\")\n\n                        UiDateField.nullable(draft.zonedDateTime, tz, { draft = draft.copy(zonedDateTime = it) }) {\n                            label { +State::zonedDateTime.name }\n                        }\n                    }\n                }\n\n                ui.divider {}\n\n                val canSubmit = formCtrl.isValid && draft != state\n\n                ui.blue.button.given(!canSubmit) { disabled }.then {\n                    onClick {\n                        if (formCtrl.validate() && canSubmit) {\n                            state = draft\n                        }\n                    }\n                    +\"Submit\"\n                }\n\n                ui.basic.button {\n                    onClick {\n                        draft = state\n                        formCtrl.resetAllFields()\n                    }\n                    +\"Reset form\"\n                }\n            }\n\n            ui.column {\n                renderStateAndDraftTable(\n                    state, draft, listOf(\n                        State::localDate { it?.toIsoString() },\n                        State::localDateTime { it?.toIsoString() },\n                        State::zonedDateTime { it?.toIsoString() },\n                    )\n                )\n            }\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.howto.forms.demo\n\nimport de.peekandpoke.kraft.addons.forms.formController\nimport de.peekandpoke.kraft.addons.semanticui.forms.UiDateTimeField\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.components.onClick\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.invoke\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.renderStateAndDraftTable\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport de.peekandpoke.ultra.common.datetime.Kronos\nimport de.peekandpoke.ultra.common.datetime.MpLocalDateTime\nimport de.peekandpoke.ultra.common.datetime.MpTimezone\nimport de.peekandpoke.ultra.common.datetime.MpZonedDateTime\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.FormWithDateTimes() = comp {\n    FormWithDateTimes(it)\n}\n\nclass FormWithDateTimes(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    data class State(\n        val localDateTime: MpLocalDateTime =\n            Kronos.systemUtc.localDateTimeNow(),\n        val zonedDateTime: MpZonedDateTime =\n            Kronos.systemUtc.zonedDateTimeNow(MpTimezone.of(\"Europe/Berlin\")).atStartOfHour(),\n    )\n\n    private var state by value(State())\n    private var draft by value(state)\n\n    private val formCtrl = formController()\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n\n        ui.two.column.grid {\n            ui.column {\n                ui.form {\n                    ui.two.fields {\n                        UiDateTimeField(draft.localDateTime, { draft = draft.copy(localDateTime = it) }) {\n                            label { +State::localDateTime.name }\n                        }\n\n                        UiDateTimeField(draft.zonedDateTime, { draft = draft.copy(zonedDateTime = it) }) {\n                            label { +State::zonedDateTime.name }\n                        }\n                    }\n                }\n\n                ui.divider {}\n\n                val canSubmit = formCtrl.isValid && draft != state\n\n                ui.blue.button.given(!canSubmit) { disabled }.then {\n                    onClick {\n                        if (formCtrl.validate() && canSubmit) {\n                            state = draft\n                        }\n                    }\n                    +\"Submit\"\n                }\n\n                ui.basic.button {\n                    onClick {\n                        draft = state\n                        formCtrl.resetAllFields()\n                    }\n                    +\"Reset form\"\n                }\n            }\n\n            ui.column {\n                renderStateAndDraftTable(\n                    state,\n                    draft,\n                    listOf(\n                        State::localDateTime { it.toIsoString() },\n                        State::zonedDateTime { it.toIsoString() },\n                    )\n                )\n            }\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.howto.forms.demo\n\nimport de.peekandpoke.kraft.addons.forms.formController\nimport de.peekandpoke.kraft.addons.forms.validation.nonNull\nimport de.peekandpoke.kraft.addons.semanticui.forms.UiDateTimeField\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.components.onClick\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.invoke\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.renderStateAndDraftTable\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport de.peekandpoke.ultra.common.datetime.MpLocalDateTime\nimport de.peekandpoke.ultra.common.datetime.MpTimezone\nimport de.peekandpoke.ultra.common.datetime.MpZonedDateTime\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.FormWithNullableDateTimes() = comp {\n    FormWithNullableDateTimes(it)\n}\n\nclass FormWithNullableDateTimes(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    data class State(\n        val localDateTime: MpLocalDateTime? = null,\n        val zonedDateTime: MpZonedDateTime? = null,\n    )\n\n    private var state by value(State())\n    private var draft by value(state)\n\n    private val formCtrl = formController()\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n\n        ui.two.column.grid {\n            ui.column {\n                ui.form {\n                    ui.two.fields {\n                        UiDateTimeField.nullable(draft.localDateTime, { draft = draft.copy(localDateTime = it) }) {\n                            label { +State::localDateTime.name }\n                            accepts(nonNull())\n                        }\n\n                        val tz = MpTimezone.of(\"Europe/Berlin\")\n\n                        UiDateTimeField.nullable(draft.zonedDateTime, tz, { draft = draft.copy(zonedDateTime = it) }) {\n                            label { +State::zonedDateTime.name }\n                            accepts(nonNull())\n                        }\n                    }\n                }\n\n                ui.divider {}\n\n                val canSubmit = formCtrl.isValid && draft != state\n\n                ui.blue.button.given(!canSubmit) { disabled }.then {\n                    onClick {\n                        if (formCtrl.validate() && canSubmit) {\n                            state = draft\n                        }\n                    }\n                    +\"Submit\"\n                }\n\n                ui.basic.button {\n                    onClick {\n                        draft = state\n                        formCtrl.resetAllFields()\n                    }\n                    +\"Reset form\"\n                }\n            }\n\n            ui.column {\n                renderStateAndDraftTable(\n                    state,\n                    draft,\n                    listOf(\n                        State::localDateTime { it?.toIsoString() },\n                        State::zonedDateTime { it?.toIsoString() },\n                    )\n                )\n            }\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.howto.forms.demo\n\nimport de.peekandpoke.kraft.addons.forms.formController\nimport de.peekandpoke.kraft.addons.semanticui.forms.UiDateField\nimport de.peekandpoke.kraft.addons.semanticui.forms.UiTimeField\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.components.onClick\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.invoke\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.renderStateAndDraftTable\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport de.peekandpoke.ultra.common.datetime.Kronos\nimport de.peekandpoke.ultra.common.datetime.MpLocalDateTime\nimport de.peekandpoke.ultra.common.datetime.MpLocalTime\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.FormWithTimes() = comp {\n    FormWithTimes(it)\n}\n\nclass FormWithTimes(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    data class State(\n        val time: MpLocalTime = Kronos.systemUtc.localDateTimeNow().toTime(),\n        val datetime: MpLocalDateTime = Kronos.systemUtc.localDateTimeNow(),\n    )\n\n    private var state by value(State())\n    private var draft by value(state)\n\n    private fun <P> modify(block: State.(P) -> State): (P) -> Unit = { draft = draft.block(it) }\n\n    private val modifyTime = modify<MpLocalTime> { copy(time = it) }\n    private val modifyDateTime = modify<MpLocalDateTime> { copy(datetime = it) }\n\n    private val formCtrl = formController()\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n\n        ui.two.column.grid {\n            ui.column {\n                ui.form {\n                    ui.three.fields {\n                        UiTimeField(draft.time, modifyTime) {\n                            label { +State::time.name }\n                        }\n\n                        UiDateField(\n                            value = draft.datetime.toDate(),\n                            onChange = { modifyDateTime(it.atTime(draft.datetime.toTime())) }\n                        ) {\n                            label { +\"${State::datetime.name} - date\" }\n                        }\n\n                        UiTimeField(\n                            value = draft.datetime.toTime(),\n                            onChange = { modifyDateTime(draft.datetime.toDate().atTime(it)) }\n                        ) {\n                            label { +\"${State::datetime.name} - time\" }\n                        }\n\n//                        UiDateField(draft.zonedDateTime, modifyZonedDateTime) {\n//                            label { +State::zonedDateTime.name }\n//                        }\n                    }\n                }\n\n                ui.divider {}\n\n                val canSubmit = formCtrl.isValid && draft != state\n\n                ui.blue.button.given(!canSubmit) { disabled }.then {\n                    onClick {\n                        if (formCtrl.validate() && canSubmit) {\n                            state = draft\n                        }\n                    }\n                    +\"Submit\"\n                }\n\n                ui.basic.button {\n                    onClick {\n                        draft = state\n                        formCtrl.resetAllFields()\n                    }\n                    +\"Reset form\"\n                }\n            }\n\n            ui.column {\n                renderStateAndDraftTable(\n                    state,\n                    draft,\n                    listOf(\n                        State::time { it.toIsoString() },\n                        State::datetime { it.toIsoString() },\n                    )\n                )\n            }\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.howto.forms.demo\n\nimport de.peekandpoke.kraft.addons.forms.formController\nimport de.peekandpoke.kraft.addons.semanticui.forms.UiInputField\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.components.onClick\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.invoke\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.renderStateAndDraftTable\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.InputType\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.FormWithColors() = comp {\n    FormWithColors(it)\n}\n\nclass FormWithColors(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    data class State(\n        val color: String = \"#000000\",\n        val nullableColor: String? = null,\n    )\n\n    private var state by value(State())\n    private var draft by value(state)\n\n    private fun <P> modify(block: State.(P) -> State): (P) -> Unit = { draft = draft.block(it) }\n\n    private val modifyColor = modify<String> { copy(color = it) }\n    private val modifyNullableColor = modify<String?> { copy(nullableColor = it) }\n\n    private val formCtrl = formController()\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n\n        ui.two.column.grid {\n            ui.column {\n                ui.form {\n                    ui.three.fields {\n                        UiInputField(draft.color, modifyColor) {\n                            label { +State::color.name }\n                            type(InputType.color)\n                        }\n\n                        UiInputField.nullable(draft.nullableColor, modifyNullableColor) {\n                            label { +State::nullableColor.name }\n                            type(InputType.color)\n                        }\n                    }\n                }\n\n                ui.divider {}\n\n                val canSubmit = formCtrl.isValid && draft != state\n\n                ui.blue.button.given(!canSubmit) { disabled }.then {\n                    onClick {\n                        if (formCtrl.validate() && canSubmit) {\n                            state = draft\n                        }\n                    }\n                    +\"Submit\"\n                }\n\n                ui.basic.button {\n                    onClick {\n                        draft = state\n                        formCtrl.resetAllFields()\n                    }\n                    +\"Reset form\"\n                }\n            }\n\n            ui.column {\n                renderStateAndDraftTable(\n                    state,\n                    draft,\n                    listOf(\n                        State::color { it },\n                        State::nullableColor { it },\n                    )\n                )\n            }\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.howto.forms.demo\n\nimport de.peekandpoke.kraft.addons.forms.formController\nimport de.peekandpoke.kraft.addons.semanticui.forms.UiCheckboxField\nimport de.peekandpoke.kraft.addons.semanticui.forms.UiInputField\nimport de.peekandpoke.kraft.addons.semanticui.forms.UiTextArea\nimport de.peekandpoke.kraft.addons.semanticui.forms.old.select.SelectField\nimport de.peekandpoke.kraft.addons.semanticui.forms.old.select.SelectFieldComponent\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.components.onClick\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.invoke\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.renderStateAndDraftTable\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.coroutines.flow.flowOf\nimport kotlinx.html.InputType\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.FormWithDisabledFields() = comp {\n    FormWithDisabledFields(it)\n}\n\nclass FormWithDisabledFields(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    data class State(\n        val input: String = \"This a disabled input field\",\n        val textarea: String = \"This is a disabled textarea\",\n        val checkbox: Boolean = true,\n        val select: String = \"Select\",\n        val suggest: String = \"Suggest\",\n        val color: String = \"#FFFFFF\",\n    )\n\n    private var state by value(State())\n    private var draft by value(state)\n\n    private val formCtrl = formController()\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n\n        ui.two.column.grid {\n            ui.column {\n                ui.form {\n                    ui.three.fields {\n                        UiCheckboxField(draft.checkbox, { draft = draft.copy(checkbox = it) }) {\n                            label { +State::checkbox.name }\n                            toggle()\n                            disabled()\n                        }\n\n                        UiInputField(draft.input, { draft = draft.copy(input = it) }) {\n                            label { +State::input.name }\n                            disabled()\n                        }\n\n                        UiTextArea(draft.textarea, { draft = draft.copy(textarea = it) }) {\n                            label { +State::textarea.name }\n                            disabled()\n                        }\n                    }\n\n                    ui.three.fields {\n                        SelectField(draft.select, { draft = draft.copy(select = it) }) {\n                            label { +State::select.name }\n                            disabled()\n\n                            option(\"Select\", \"Select\")\n                        }\n\n                        SelectField(draft.suggest, { draft = draft.copy(suggest = it) }) {\n                            label { +State::suggest.name }\n                            disabled()\n\n                            autoSuggest { _ ->\n                                flowOf(\n                                    listOf(\n                                        SelectFieldComponent.Option(\"Suggest\", \"Suggest\"),\n                                        SelectFieldComponent.Option(\"A\", \"A\"),\n                                        SelectFieldComponent.Option(\"B\", \"B\"),\n                                        SelectFieldComponent.Option(\"C\", \"C\"),\n                                    )\n                                )\n                            }\n                        }\n\n                        UiInputField(draft.color, { draft = draft.copy(color = it) }) {\n                            label { +State::color.name }\n                            type(InputType.color)\n                            disabled()\n                        }\n                    }\n                }\n\n                ui.divider {}\n\n                val canSubmit = formCtrl.isValid && draft != state\n\n                ui.blue.button.given(!canSubmit) { disabled }.then {\n                    onClick {\n                        if (formCtrl.validate() && canSubmit) {\n                            state = draft\n                        }\n                    }\n                    +\"Submit\"\n                }\n\n                ui.basic.button {\n                    onClick {\n                        draft = state\n                        formCtrl.resetAllFields()\n                    }\n                    +\"Reset form\"\n                }\n            }\n\n            ui.column {\n                renderStateAndDraftTable(\n                    state,\n                    draft,\n                    listOf(\n                        State::checkbox { it.toString() },\n                        State::input { it },\n                        State::textarea { it },\n                        State::select { it },\n                        State::suggest { it },\n                    ),\n                )\n            }\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.howto.kraft\n\nimport de.peekandpoke.kraft.addons.prismjs.PrismKotlin\nimport de.peekandpoke.kraft.addons.prismjs.PrismPlugin.CopyToClipboard.Companion.copyToClipboard\nimport de.peekandpoke.kraft.addons.prismjs.PrismPlugin.LineNumbers.Companion.lineNumbers\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.HorizontalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.examples.fomanticui.pages.howto.kraft.code.FunctionalPropsComponent\nimport de.peekandpoke.kraft.examples.fomanticui.pages.howto.kraft.code.FunctionalPureComponent\nimport de.peekandpoke.kraft.examples.fomanticui.pages.howto.kraft.code.PropsExampleComponent\nimport de.peekandpoke.kraft.examples.fomanticui.pages.howto.kraft.code.PureExampleComponent\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport generated.ExtractedCodeBlocks\nimport kotlinx.html.FlowContent\nimport kotlinx.html.Tag\nimport kotlinx.html.p\n\n@Suppress(\"FunctionName\")\nfun Tag.KraftComponentBasicsPage() = comp {\n    KraftComponentsPage(it)\n}\n\nclass KraftComponentsPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Kraft | Component Basics\")\n\n        ui.basic.padded.segment {\n            ui.dividing.header H1 { +\"Component Basics\" }\n\n            pureComponentsExample()\n            propsComponentsExample()\n            functionalPureComponentsExample()\n            functionalPropsComponentsExample()\n        }\n    }\n\n    private fun FlowContent.pureComponentsExample() = example {\n\n        ui.dividing.header H2 { +\"Pure component\" }\n\n        p { +\"A pure component does not get props passed to it.\" }\n        p { +\"A pure component is defined like follows:\" }\n\n        PrismKotlin(\n            ExtractedCodeBlocks.pages_howto_kraft_code_PureExampleComponent_kt_code,\n        ) {\n            lineNumbers()\n            copyToClipboard()\n        }\n\n        ui.divider()\n\n        p { +\"Once the component is defined it can be used like this:\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_howto_kraft_KraftComponentBasicsPage_kt_pureComponentsExample,\n        ) {\n            // <CodeBlock pureComponentsExample>\n            ui.segment {\n                PureExampleComponent()\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.propsComponentsExample() = example {\n\n        ui.dividing.header H2 { +\"Parameterized component with Props\" }\n\n        p { +\"A component can accept parameters, so called Props.\" }\n        p { +\"A component with Props is defined like follows:\" }\n\n        PrismKotlin(\n            ExtractedCodeBlocks.pages_howto_kraft_code_PropsExampleComponent_kt_code,\n        ) {\n            lineNumbers()\n            copyToClipboard()\n        }\n\n        ui.divider()\n\n        p { +\"Once the component is defined it can be used like this:\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_howto_kraft_KraftComponentBasicsPage_kt_propsComponentsExample,\n        ) {\n            // <CodeBlock propsComponentsExample>\n            ui.segment {\n                PropsExampleComponent(\"KRAFT\")\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.functionalPureComponentsExample() = example {\n\n        ui.dividing.header H2 { +\"Functional pure component\" }\n\n        p { +\"A pure component can be defined in a functional way:\" }\n\n        PrismKotlin(\n            ExtractedCodeBlocks.pages_howto_kraft_code_FunctionalPureComponent_kt_code,\n        ) {\n            lineNumbers()\n            copyToClipboard()\n        }\n\n        ui.divider()\n\n        p { +\"Once the component is defined it can be used like this:\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_howto_kraft_KraftComponentBasicsPage_kt_functionalPureComponentsExample,\n        ) {\n            // <CodeBlock functionalPureComponentsExample>\n            ui.segment {\n                FunctionalPureComponent()\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.functionalPropsComponentsExample() = example {\n\n        ui.dividing.header H2 { +\"Functional component with Props\" }\n\n        p { +\"A functional component can take up to 10 parameters.\" }\n        p { +\"A functional component with parameters is defined as follows:\" }\n\n        PrismKotlin(\n            ExtractedCodeBlocks.pages_howto_kraft_code_FunctionalPropsComponent_kt_code,\n        ) {\n            lineNumbers()\n            copyToClipboard()\n        }\n\n        ui.divider()\n\n        p { +\"Once the component is defined it can be used like this:\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_howto_kraft_KraftComponentBasicsPage_kt_functionalPropsComponentsExample,\n        ) {\n            // <CodeBlock functionalPropsComponentsExample>\n            ui.segment {\n                FunctionalPropsComponent(11, 22)\n            }\n            // </CodeBlock>\n        }\n    }\n}\n","@file:Suppress(\"FunctionName\")\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.howto.kraft.code\n\n// <CodeBlock code>\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\nimport kotlinx.html.h4\n\n/** This function is needed to instantiate a component */\nfun Tag.PureExampleComponent() = comp {\n    PureExampleComponent(it)\n}\n\n/** This is the implementation of the component */\nclass PureExampleComponent(ctx: NoProps) : PureComponent(ctx) {\n    /** Each component needs to implement the render function */\n    override fun VDom.render() {\n        h4 { +\"This is a pure component\" }\n    }\n}\n// </CodeBlock>\n","@file:Suppress(\"FunctionName\")\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.howto.kraft.code\n\n// <CodeBlock code>\nimport de.peekandpoke.kraft.components.Component\nimport de.peekandpoke.kraft.components.Ctx\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\nimport kotlinx.html.h4\n\n/** This function is needed to instantiate a component, and maps parameters to the Props */\nfun Tag.PropsExampleComponent(name: String) = comp(\n    PropsExampleComponent.Props(name = name)\n) {\n    PropsExampleComponent(it)\n}\n\n/** This is the implementation of the Component */\nclass PropsExampleComponent(ctx: Ctx<Props>) : Component<PropsExampleComponent.Props>(ctx) {\n    /** This is the implementation of the Props */\n    data class Props(\n        val name: String,\n    )\n\n    /** This renders the Component */\n    override fun VDom.render() {\n        h4 { +\"Hello ${props.name} !\" }\n    }\n}\n// </CodeBlock>\n","package de.peekandpoke.kraft.examples.fomanticui.pages.howto.kraft.code\n\n// <CodeBlock code>\nimport de.peekandpoke.kraft.components.component\nimport kotlinx.html.h4\n\nval FunctionalPureComponent = component {\n    h4 { +\"Functional Pure Component\" }\n}\n// </CodeBlock>\n","package de.peekandpoke.kraft.examples.fomanticui.pages.howto.kraft.code\n\n// <CodeBlock code>\nimport de.peekandpoke.kraft.components.component\nimport kotlinx.html.h4\n\nval FunctionalPropsComponent = component { first: Int, second: Int ->\n    h4 { +\"$first + $second = ${first + second}\" }\n}\n// </CodeBlock>\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.howto.kraft\n\nimport de.peekandpoke.kraft.addons.prismjs.PrismKotlin\nimport de.peekandpoke.kraft.addons.prismjs.PrismPlugin.CopyToClipboard.Companion.copyToClipboard\nimport de.peekandpoke.kraft.addons.prismjs.PrismPlugin.LineNumbers.Companion.lineNumbers\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.HorizontalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.examples.fomanticui.pages.howto.kraft.code.CounterComponent\nimport de.peekandpoke.kraft.examples.fomanticui.pages.howto.kraft.code.FunctionalCounterComponent\nimport de.peekandpoke.kraft.examples.fomanticui.pages.howto.kraft.code.FunctionalTickerComponent\nimport de.peekandpoke.kraft.examples.fomanticui.pages.howto.kraft.code.TickerComponent\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport generated.ExtractedCodeBlocks\nimport kotlinx.html.FlowContent\nimport kotlinx.html.Tag\nimport kotlinx.html.p\n\n@Suppress(\"FunctionName\")\nfun Tag.KraftComponentStatePage() = comp {\n    KraftComponentStatePage(it)\n}\n\nclass KraftComponentStatePage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Kraft | Component State\")\n\n        ui.basic.padded.segment {\n            ui.dividing.header H1 { +\"Component State\" }\n\n            ui.dividing.header H2 { +\"Introduction\" }\n            introduction()\n\n            ui.dividing.header H2 { +\"Examples for class components\" }\n\n            byValueExample()\n            bySubscribingToExample()\n\n            ui.dividing.header H2 { +\"Examples for functional components\" }\n\n            functionalByValueExample()\n            functionalBySubscribingToExample()\n        }\n    }\n\n    private fun FlowContent.introduction() = example {\n\n        p {\n            +\"From Preact or React you might know that there is a function called \"\n            ui.label { +\"setState\" }\n            +\" that has to be called when the state of a component is changed.\"\n        }\n        p {\n            +\"setState() has to be called so underlying framework knows that the component needs to be redrawn.\"\n        }\n\n        p {\n            +\"KRAFT uses the same concept but hides it from the user by leveraging \"\n            +\"Kotlin's delegated properties. See the examples below\"\n        }\n    }\n\n    private fun FlowContent.byValueExample() = example {\n        ui.dividing.header H3 { +\"by value\" }\n\n        p { +\"State can be stored by using:\" }\n\n        PrismKotlin(\n            \"var x by value(100)\"\n        )\n\n        p {\n            +\"So whenever 'x' is changed the component will be redrawn. \"\n            +\"A component can be have multiple properties defined like this.\"\n        }\n\n        p { +\"Below you will find an example using this method:\" }\n\n        PrismKotlin(\n            ExtractedCodeBlocks.pages_howto_kraft_code_CounterComponent_kt_code,\n        ) {\n            lineNumbers()\n            copyToClipboard()\n        }\n\n        p { +\"And here is the CounterComponent in action\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_howto_kraft_KraftComponentStatePage_kt_byValueExample,\n        ) {\n            // <CodeBlock byValueExample>\n            ui.segment {\n                CounterComponent(100)\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.bySubscribingToExample() = example {\n        ui.dividing.header H3 { +\"by subscribingTo\" }\n\n        p {\n            +\"Components can subscribe to streams. \"\n            +\"Every time the stream publishes a new value the component will be redrawn.\"\n        }\n\n        p {\n            +\"When the component is removed from the DOM it will automatically unsubscrive from all streams.\"\n        }\n\n        p {\n            +\"Subscribing to stream can be done like this:\"\n        }\n\n        PrismKotlin(\n            \"val x by subscribingTo(someStream)\"\n        )\n\n        p { +\"Below you will find an example using this method:\" }\n\n        PrismKotlin(\n            ExtractedCodeBlocks.pages_howto_kraft_code_TickerComponent_kt_code,\n        ) {\n            lineNumbers()\n            copyToClipboard()\n        }\n\n        p { +\"And here is the TickerComponent in action\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_howto_kraft_KraftComponentStatePage_kt_bySubscribingToExample,\n        ) {\n            // <CodeBlock bySubscribingToExample>\n            ui.segment {\n                TickerComponent(100)\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.functionalByValueExample() = example {\n        ui.dividing.header H3 { +\"by value\" }\n\n        p { +\"Functional Components can store state as well:\" }\n\n        PrismKotlin(\n            \"var x by value(100)\"\n        )\n\n        p { +\"Below you will find an example using this method:\" }\n\n        PrismKotlin(\n            ExtractedCodeBlocks.pages_howto_kraft_code_FunctionalCounterComponent_kt_code,\n        ) {\n            lineNumbers()\n            copyToClipboard()\n        }\n\n        p { +\"And here is the FunctionalCounterComponent in action\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_howto_kraft_KraftComponentStatePage_kt_functionalByValueExample,\n        ) {\n            // <CodeBlock functionalByValueExample>\n            ui.segment {\n                FunctionalCounterComponent(100)\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.functionalBySubscribingToExample() = example {\n        ui.dividing.header H3 { +\"by subscribingTo\" }\n\n        p { +\"Functional Components can subscribe to streams as well:\" }\n\n        PrismKotlin(\n            \"val x by subscribingTo(someStream)\"\n        )\n\n        p { +\"Below you will find an example using this method:\" }\n\n        PrismKotlin(\n            ExtractedCodeBlocks.pages_howto_kraft_code_FunctionalTickerComponent_kt_code,\n        ) {\n            lineNumbers()\n            copyToClipboard()\n        }\n\n        p { +\"And here is the FunctionalTickerComponent in action\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_howto_kraft_KraftComponentStatePage_kt_functionalBySubscribingToExample,\n        ) {\n            // <CodeBlock functionalBySubscribingToExample>\n            ui.segment {\n                FunctionalTickerComponent(100)\n            }\n            // </CodeBlock>\n        }\n    }\n}\n","@file:Suppress(\"FunctionName\")\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.howto.kraft.code\n\n// <CodeBlock code>\nimport de.peekandpoke.kraft.components.Component\nimport de.peekandpoke.kraft.components.Ctx\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.components.onClick\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\nimport kotlinx.html.button\nimport kotlinx.html.div\n\nfun Tag.CounterComponent(start: Int) = comp(\n    CounterComponent.Props(start = start)\n) {\n    CounterComponent(it)\n}\n\nclass CounterComponent(ctx: Ctx<Props>) : Component<CounterComponent.Props>(ctx) {\n\n    data class Props(\n        val start: Int,\n    )\n\n    /** Here we define a property that will trigger a redraw when it's value is changed */\n    private var counter: Int by value(props.start)\n\n    override fun VDom.render() {\n        div {\n            div { +\"Value: $counter\" }\n            div {\n                /** Below we change our property, triggering a redraw */\n                button { onClick { counter-- }; +\" - \" }\n                button { onClick { counter++ }; +\" + \" }\n            }\n        }\n    }\n}\n// </CodeBlock>\n","@file:Suppress(\"FunctionName\")\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.howto.kraft.code\n\n// <CodeBlock code>\nimport de.peekandpoke.kraft.components.Component\nimport de.peekandpoke.kraft.components.Ctx\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.streams.addons.ticker\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\nimport kotlinx.html.div\n\nfun Tag.TickerComponent(delay: Int) = comp(\n    TickerComponent.Props(delay = delay)\n) {\n    TickerComponent(it)\n}\n\nclass TickerComponent(ctx: Ctx<Props>) : Component<TickerComponent.Props>(ctx) {\n\n    data class Props(\n        val delay: Int,\n    )\n\n    /**\n     * Here we define a stream.\n     * The stream could also be passed in by the props or could be a global variable somewhere or similar.\n     */\n    private val stream = ticker(props.delay)\n\n    /**\n     * Here we define a property that subscribes to the stream, triggering a redraw whenever a new value\n     * is published by the stream.\n     */\n    private val counter by subscribingTo(stream)\n\n    override fun VDom.render() {\n        div {\n            +\"Ticker: $counter\"\n        }\n    }\n}\n// </CodeBlock>\n","package de.peekandpoke.kraft.examples.fomanticui.pages.howto.kraft.code\n\n// <CodeBlock code>\nimport de.peekandpoke.kraft.components.component\nimport de.peekandpoke.kraft.components.onClick\nimport de.peekandpoke.kraft.components.value\nimport kotlinx.html.button\nimport kotlinx.html.div\n\nval FunctionalCounterComponent = component { start: Int ->\n\n    /** Here we define a property that will trigger a redraw when it's value is changed */\n    var counter: Int by value { start }\n\n    div {\n        div { +\"Value: $counter\" }\n        div {\n            /** Below we change our property, triggering a redraw */\n            button { onClick { counter-- }; +\" - \" }\n            button { onClick { counter++ }; +\" + \" }\n        }\n    }\n}\n// </CodeBlock>\n","package de.peekandpoke.kraft.examples.fomanticui.pages.howto.kraft.code\n\n// <CodeBlock code>\nimport de.peekandpoke.kraft.components.component\nimport de.peekandpoke.kraft.components.subscribingTo\nimport de.peekandpoke.kraft.components.value\nimport de.peekandpoke.kraft.streams.addons.ticker\nimport kotlinx.html.div\n\nval FunctionalTickerComponent = component { delay: Int ->\n    /**\n     * Here we define a stream.\n     * It has to be defined with 'by value' in order to remember it when the component is re-rendered.\n     */\n    val stream by value { ticker(delay) }\n\n    /**\n     * Here we define a property that subscribes to the stream, triggering a redraw whenever a new value\n     * is published by the stream.\n     */\n    val counter by subscribingTo(stream)\n\n    div {\n        +\"Ticker: $counter\"\n    }\n}\n// </CodeBlock>\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.howto.kraft\n\nimport de.peekandpoke.kraft.addons.prismjs.PrismHtml\nimport de.peekandpoke.kraft.addons.prismjs.PrismKotlin\nimport de.peekandpoke.kraft.addons.prismjs.PrismPlugin.CopyToClipboard.Companion.copyToClipboard\nimport de.peekandpoke.kraft.addons.prismjs.PrismPlugin.LineNumbers.Companion.lineNumbers\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.FlowContent\nimport kotlinx.html.Tag\nimport kotlinx.html.a\nimport kotlinx.html.p\n\n@Suppress(\"FunctionName\")\nfun Tag.KraftGettingStartedPage() = comp {\n    KraftGettingStartedPage(it)\n}\n\nclass KraftGettingStartedPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Kraft | Getting Started\")\n\n        ui.basic.padded.segment {\n            ui.dividing.header H1 { +\"KRAFT - getting started\" }\n\n            ui.info.message {\n                p {\n                    +\"A good starting point is to look at the hello-world example\"\n                }\n                p {\n                    +\"You can find the code here \"\n                    a(href = \"https://github.com/PeekAndPoke/kraft/tree/master/examples/hello-world\") { +\"here\" }\n                }\n            }\n\n            renderExample()\n        }\n    }\n\n    private fun FlowContent.renderExample() = example {\n        ui.header H2 { +\"Foundation\" }\n\n        ui.top.info.message {\n            +\"Generally speaking you first need an HTML page which might look like this:\"\n        }\n\n        PrismHtml(\n            \"\"\"\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>My App</title>\n    <link rel=\"stylesheet\"\n          href=\"https://cdnjs.cloudflare.com/ajax/libs/fomantic-ui/2.9.0/semantic.min.css\"\n          integrity=\"sha512-PwhgdrueUt7iVICnZMjYcbiLalCztrVfzUIYXekIK8hZu4DQP141GrKh6fUHmNERWi4bGdBXIZqtBZnsSzHEMg==\"\n          crossorigin=\"anonymous\"\n          referrerpolicy=\"no-referrer\"/>\n</head>\n<div id=\"spa\"></div>\n\n<script src=\"my-app.js\"></script>\n\n</body>\n</html>                \n            \"\"\".trimIndent()\n        ) {\n            lineNumbers()\n            copyToClipboard()\n        }\n\n        ui.warning.message {\n            +\"Make sure that the include javascript package (in this case 'my-app.js') matches your projects output.\"\n        }\n\n        ui.divider()\n\n        ui.top.info.message {\n            +\"Then you will need to run the SPA from kotlin. The basic code for this could look like this:\"\n        }\n\n        PrismKotlin(\n            \"\"\"\nimport de.peekandpoke.kraft.Kraft\nimport de.peekandpoke.kraft.vdom.preact.PreactVDomEngine\nimport kotlinx.browser.document\nimport kotlinx.html.h1\nimport org.w3c.dom.HTMLElement\n\n/** Initializes KRAFT */\nval kraft = Kraft.initialize()\n\nfun main() {\n    // Get the DOM-Element into which the app should be mounted\n    val mountPoint = document.getElementById(\"spa\") as HTMLElement\n\n    // Initialize the VDOM-engine (in this case Preact) and render some content \n    PreactVDomEngine(mountPoint) {\n        h1 { +\"Hello World\"}\n    }\n}\n            \"\"\".trimIndent()\n        ) {\n            lineNumbers()\n            copyToClipboard()\n        }\n    }\n\n}\n","package de.peekandpoke.kraft.components\n\nimport de.peekandpoke.kraft.components.state.FunctionalComponentStateProperty\nimport de.peekandpoke.kraft.components.state.FunctionalComponentStreamProperty\nimport de.peekandpoke.kraft.streams.Stream\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlin.properties.ReadOnlyProperty\nimport kotlin.reflect.typeOf\n\ninline fun <reified P> VDom.value(noinline initial: () -> P): FunctionalComponentStateProperty<P> {\n    return FunctionalComponentStateProperty(component!!, initial, typeOf<P>())\n}\n\ninline fun <reified P> VDom.value(\n    noinline initial: () -> P,\n    noinline onChange: (P) -> Unit,\n): FunctionalComponentStateProperty<P> {\n    return FunctionalComponentStateProperty(component!!, initial, typeOf<P>()).onChange(onChange)\n}\n\ninline fun <reified P> VDom.subscribingTo(stream: Stream<P>): ReadOnlyProperty<Any?, P> {\n    return FunctionalComponentStreamProperty(component!!, stream, typeOf<P>())\n}\n","package de.peekandpoke.kraft.examples.fomanticui.pages.views.advertisement\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.AdvertisementPage() = comp {\n    AdvertisementPage(it)\n}\n\nclass AdvertisementPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Views | Advertisement\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Advertisement\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/views/advertisement.html\")\n        }\n    }\n}\n","@file:Suppress(\n    \"DuplicatedCode\",\n    \"Detekt:TooManyFunctions\",\n    \"Detekt:LargeClass\",\n    \"Detekt:LongMethod\",\n)\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.views.card\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.VerticalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.shortParagraphWireFrame\nimport de.peekandpoke.kraft.semanticui.icon\nimport de.peekandpoke.kraft.semanticui.noui\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport generated.ExtractedCodeBlocks\nimport kotlinx.html.*\n\n@Suppress(\"FunctionName\")\nfun Tag.CardPage() = comp {\n    CardPage(it)\n}\n\nclass CardPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Views | Card\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Card\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/views/card.html\")\n\n            ui.dividing.header H2 { +\"Types\" }\n\n            renderSingleCard()\n            renderCardGroup()\n\n            ui.dividing.header H2 { +\"Loading\" }\n\n            renderLoadingCards()\n\n            ui.dividing.header H2 { +\"Variations\" }\n\n            renderFluidCards()\n            renderCenteredCard()\n            renderHorizontalCards()\n            renderRaisedCards()\n            renderTextAlignment()\n            renderInvertedCards()\n            renderColoredCards()\n            renderColumnCountCards()\n            renderStackableCards()\n            renderDoublingCards()\n        }\n    }\n\n    private fun FlowContent.renderSingleCard() = example {\n        ui.header { +\"Single card\" }\n\n        ui.stackable.two.column.grid {\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_views_card_CardPage_kt_renderSingleCard,\n                ) {\n                    // <CodeBlock renderSingleCard>\n                    ui.card {\n                        noui.image {\n                            img(src = \"images/avatar2/large/kristy.png\")\n                        }\n                        noui.content {\n                            noui.header A { +\"Kristy\" }\n                            noui.meta {\n                                +\"Joined in 2022\"\n                            }\n                            noui.description {\n                                +\"Kristy is an art director living in Leipzig.\"\n                            }\n                        }\n                        noui.extra.content {\n                            a {\n                                icon.user()\n                                +\"22 Friends\"\n                            }\n                        }\n                    }\n                    // </CodeBlock>\n                }\n            }\n\n            ui.column {\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_views_card_CardPage_kt_renderSingleCard2,\n                ) {\n                    // <CodeBlock renderSingleCard2>\n                    ui.card {\n                        noui.content {\n                            noui.right.floated.meta { +\"14h\" }\n                            ui.avatar.image Img {\n                                src = \"images/avatar2/large/elliot.jpg\"\n                                +\"Elliot\"\n                            }\n                        }\n                        noui.image {\n                            img(src = \"images/wireframe/image.png\")\n                        }\n                        noui.content {\n                            noui.right.floated Span {\n                                icon.heart_outline()\n                                +\"17 Likes\"\n                            }\n                            icon.comment()\n                            +\"3 comments\"\n                        }\n                        noui.extra.content {\n                            ui.large.with(\"transparent\").left.icon.input {\n                                icon.heart_outline()\n                                input {\n                                    type = InputType.text\n                                    placeholder = \"Add comment...\"\n                                }\n                            }\n                        }\n                    }\n                    // </CodeBlock>\n                }\n            }\n        }\n    }\n\n    private fun FlowContent.renderCardGroup() = example {\n        ui.header { +\"Card groups\" }\n\n        p { +\"Cards in the same group have the same height\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_views_card_CardPage_kt_renderCardGroup_1,\n        ) {\n            // <CodeBlock renderCardGroup_1>\n            ui.cards {\n                noui.card {\n                    noui.content {\n                        ui.right.floated.mini.image Img {\n                            src = \"images/avatar2/large/elliot.jpg\"\n                        }\n                        noui.header { +\"Elliot Fu\" }\n                        noui.meta { +\"Friends of Veronika\" }\n                        noui.description { +\"Elliot requested permission to view your contact details\" }\n                    }\n                    noui.extra.content {\n                        ui.two.buttons {\n                            ui.basic.green.button { +\"Approve\" }\n                            ui.basic.red.button { +\"Decline\" }\n                        }\n                    }\n                }\n                noui.card {\n                    noui.content {\n                        ui.right.floated.mini.image Img {\n                            src = \"images/avatar2/large/jenny.jpg\"\n                        }\n                        noui.header { +\"Jenny Hess\" }\n                        noui.meta { +\"New member\" }\n                        noui.description {\n                            +\"Jenny wants to add you to the group \"\n                            b { +\"best friends\" }\n                        }\n                    }\n                    noui.extra.content {\n                        ui.two.buttons {\n                            ui.basic.green.button { +\"Approve\" }\n                            ui.basic.red.button { +\"Decline\" }\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        p { +\"Cards can be linked\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_views_card_CardPage_kt_renderCardGroup_2,\n        ) {\n            // <CodeBlock renderCardGroup_2>\n            ui.link.cards {\n                noui.card {\n                    noui.image {\n                        img(src = \"images/avatar2/large/matthew.png\")\n                    }\n                    noui.content {\n                        noui.header { +\"Matt Giampietro\" }\n                        noui.meta { a { +\"Friends\" } }\n                        noui.description { +\"Matthew is an interior designer living in New York.\" }\n                    }\n                    noui.extra.content {\n                        noui.right.floated Span { +\"Joined in 2013\" }\n                        span { icon.user(); +\"75 friends\" }\n                    }\n                }\n                noui.card {\n                    noui.image {\n                        img(src = \"images/avatar2/large/molly.png\")\n                    }\n                    noui.content {\n                        noui.header { +\"Molly\" }\n                        noui.meta { a { +\"Coworker\" } }\n                        noui.description { +\"Molly is a personal assistant living in Paris.\" }\n                    }\n                    noui.extra.content {\n                        noui.right.floated Span { +\"Joined in 2014\" }\n                        span { icon.user(); +\"35 friends\" }\n                    }\n                }\n                noui.card {\n                    noui.image {\n                        img(src = \"images/avatar2/large/elyse.png\")\n                    }\n                    noui.content {\n                        noui.header { +\"Elyse\" }\n                        noui.meta { a { +\"Coworker\" } }\n                        noui.description { +\"Elyse is a copywriter working in New York.\" }\n                    }\n                    noui.extra.content {\n                        noui.right.floated Span { +\"Joined in 2014\" }\n                        span { icon.user(); +\"151 friends\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderLoadingCards() = example {\n        ui.header { +\"Loading card\" }\n\n        ui.stackable.two.column.grid {\n            ui.column {\n                p { +\"A card may show its content is being loaded\" }\n\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_views_card_CardPage_kt_renderLoadingCards_1,\n                ) {\n                    // <CodeBlock renderLoadingCards_1>\n                    ui.loading.card {\n                        noui.content {\n                            noui.header A { +\"Kristy\" }\n                            noui.meta {\n                                +\"Joined in 2022\"\n                            }\n                            noui.description {\n                                +\"Kristy is an art director living in Leipzig.\"\n                            }\n                        }\n                        noui.extra.content {\n                            a {\n                                icon.user()\n                                +\"22 Friends\"\n                            }\n                        }\n                    }\n                    // </CodeBlock>\n                }\n            }\n\n            ui.column {\n                p {\n                    +\"The loader inherits the color of the card, if you want to prevent this, add the \"\n                    ui.basic.label Span { +\"usual\" }\n                    +\" class, so the loader color stays default, while the card still gets its color\"\n                }\n\n                VerticalContentAndCode(\n                    ExtractedCodeBlocks.pages_views_card_CardPage_kt_renderLoadingCards_2,\n                ) {\n                    ui.cards {\n                        // <CodeBlock renderLoadingCards_2>\n                        ui.red.loading.card {\n                            noui.content {\n                                noui.header A { +\"Kristy\" }\n                                noui.meta { +\"Joined in 2022\" }\n                            }\n                        }\n                        ui.green.usual.loading.card {\n                            noui.content {\n                                noui.header A { +\"Kristy\" }\n                                noui.meta { +\"Joined in 2022\" }\n                            }\n                        }\n                        // </CodeBlock>\n                    }\n                }\n            }\n        }\n    }\n\n    private fun FlowContent.renderFluidCards() = example {\n        ui.header { +\"Fluid cards\" }\n\n        p { +\"A fluid card takes up the width of its container\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_views_card_CardPage_kt_renderFluidCards_1,\n        ) {\n            // <CodeBlock renderFluidCards_1>\n            ui.three.column.grid {\n                ui.column {\n                    ui.fluid.card {\n                        noui.image {\n                            img(src = \"images/avatar2/large/matthew.png\")\n                        }\n                        noui.content {\n                            noui.header { +\"Matt Giampietro\" }\n                        }\n                    }\n                }\n                ui.column {\n                    ui.fluid.card {\n                        noui.image {\n                            img(src = \"images/avatar2/large/molly.png\")\n                        }\n                        noui.content {\n                            noui.header { +\"Molly\" }\n                        }\n                    }\n                }\n                ui.column {\n                    ui.fluid.card {\n                        noui.image {\n                            img(src = \"images/avatar2/large/elyse.png\")\n                        }\n                        noui.content {\n                            noui.header { +\"Elyse\" }\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderCenteredCard() = example {\n        ui.header { +\"Fluid cards\" }\n\n        p { +\"A card can center itself inside its container\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_views_card_CardPage_kt_renderCenteredCard,\n        ) {\n            // <CodeBlock renderCenteredCard>\n            ui.centered.card {\n                noui.image {\n                    img(src = \"images/avatar2/large/matthew.png\")\n                }\n                noui.content {\n                    noui.header { +\"Matt Giampietro\" }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderHorizontalCards() = example {\n        ui.header { +\"Fluid cards\" }\n\n        p { +\"A card can display horizontally\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_views_card_CardPage_kt_renderHorizontalCards_1,\n        ) {\n            // <CodeBlock renderHorizontalCards_1>\n            ui.horizontal.card {\n                noui.image {\n                    img(src = \"images/avatar2/large/matthew.png\")\n                }\n                noui.content {\n                    noui.header { +\"Matt Giampietro\" }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_views_card_CardPage_kt_renderHorizontalCards_2,\n        ) {\n            // <CodeBlock renderHorizontalCards_2>\n            ui.cards {\n                ui.horizontal.card {\n                    noui.image {\n                        img(src = \"images/avatar2/large/matthew.png\")\n                    }\n                    noui.content {\n                        noui.header { +\"Matt Giampietro\" }\n                        noui.meta { a { +\"Friends\" } }\n                        noui.description { +\"Matthew is an interior designer living in New York.\" }\n                    }\n                    noui.extra.content {\n                        noui.right.floated Span { +\"Joined in 2013\" }\n                        span { icon.user(); +\"75 friends\" }\n                    }\n                }\n                ui.horizontal.card {\n                    noui.image {\n                        img(src = \"images/avatar2/large/molly.png\")\n                    }\n                    noui.content {\n                        noui.header { +\"Molly\" }\n                        noui.meta { a { +\"Coworker\" } }\n                        noui.description { +\"Molly is a personal assistant living in Paris.\" }\n                    }\n                    noui.extra.content {\n                        noui.right.floated Span { +\"Joined in 2014\" }\n                        span { icon.user(); +\"35 friends\" }\n                    }\n                }\n                ui.horizontal.card {\n                    noui.image {\n                        img(src = \"images/avatar2/large/elyse.png\")\n                    }\n                    noui.content {\n                        noui.header { +\"Elyse\" }\n                        noui.meta { a { +\"Coworker\" } }\n                        noui.description { +\"Elyse is a copywriter working in New York.\" }\n                    }\n                    noui.extra.content {\n                        noui.right.floated Span { +\"Joined in 2014\" }\n                        span { icon.user(); +\"151 friends\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderRaisedCards() = example {\n        ui.header { +\"Raised cards\" }\n\n        p { +\"A card may be formatted to raise above the page.\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_views_card_CardPage_kt_renderRaisedCards_1,\n        ) {\n            // <CodeBlock renderRaisedCards_1>\n            ui.raised.card {\n                noui.content {\n                    noui.header { +\"Cute dog\" }\n                    noui.meta { +\"Animals\" }\n                    noui.description {\n                        shortParagraphWireFrame()\n                    }\n                }\n                noui.extra.content {\n                    noui.right.floated {\n                        ui.avatar.image Img { src = \"images/avatar2/large/matthew.png\" }\n                        +\"Matt\"\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        p { +\"A raised card can be linked.\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_views_card_CardPage_kt_renderRaisedCards_2,\n        ) {\n            // <CodeBlock renderRaisedCards_2>\n            ui.raised.link.card {\n                noui.content {\n                    noui.header { +\"Cute dog\" }\n                    noui.meta { +\"Animals\" }\n                    noui.description {\n                        shortParagraphWireFrame()\n                    }\n                }\n                noui.extra.content {\n                    noui.right.floated {\n                        ui.avatar.image Img { src = \"images/avatar2/large/matthew.png\" }\n                        +\"Matt\"\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderTextAlignment() = example {\n        ui.header { +\"Text alignment\" }\n\n        p { +\"Any element inside a card can have its text alignment specified.\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_views_card_CardPage_kt_renderTextAlignment,\n        ) {\n            // <CodeBlock renderTextAlignment>\n            ui.card {\n                noui.center.aligned.content {\n                    noui.header { +\"Cute dog\" }\n                    noui.meta { +\"Animals\" }\n                    noui.description {\n                        shortParagraphWireFrame()\n                    }\n                }\n                noui.center.aligned.extra.content {\n                    ui.avatar.image Img { src = \"images/avatar2/large/matthew.png\" }\n                    +\"Matt\"\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderInvertedCards() = example {\n        ui.header { +\"Inverted\" }\n\n        p { +\"Card's colors can be inverted\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_views_card_CardPage_kt_renderInvertedCards_1,\n        ) {\n            // <CodeBlock renderInvertedCards_1>\n            ui.inverted.segment {\n                ui.inverted.card {\n                    noui.content {\n                        ui.right.floated.mini.image Img {\n                            src = \"images/avatar2/large/elliot.jpg\"\n                        }\n                        noui.header { +\"Elliot Fu\" }\n                        noui.meta { +\"Friends of Veronika\" }\n                        noui.description { +\"Elliot requested permission to view your contact details\" }\n                    }\n                    noui.extra.content {\n                        ui.two.buttons {\n                            ui.basic.green.button { +\"Approve\" }\n                            ui.basic.red.button { +\"Decline\" }\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_views_card_CardPage_kt_renderInvertedCards_2,\n        ) {\n            // <CodeBlock renderInvertedCards_2>\n            ui.inverted.segment {\n                ui.inverted.link.cards {\n                    noui.card {\n                        noui.image {\n                            img(src = \"images/avatar2/large/matthew.png\")\n                        }\n                        noui.content {\n                            noui.header { +\"Matt Giampietro\" }\n                            noui.meta { a { +\"Friends\" } }\n                            noui.description { +\"Matthew is an interior designer living in New York.\" }\n                        }\n                        noui.extra.content {\n                            noui.right.floated Span { +\"Joined in 2013\" }\n                            span { icon.user(); +\"75 friends\" }\n                        }\n                    }\n                    noui.card {\n                        noui.image {\n                            img(src = \"images/avatar2/large/molly.png\")\n                        }\n                        noui.content {\n                            noui.header { +\"Molly\" }\n                            noui.meta { a { +\"Coworker\" } }\n                            noui.description { +\"Molly is a personal assistant living in Paris.\" }\n                        }\n                        noui.extra.content {\n                            noui.right.floated Span { +\"Joined in 2014\" }\n                            span { icon.user(); +\"35 friends\" }\n                        }\n                    }\n                    noui.card {\n                        noui.image {\n                            img(src = \"images/avatar2/large/elyse.png\")\n                        }\n                        noui.content {\n                            noui.header { +\"Elyse\" }\n                            noui.meta { a { +\"Coworker\" } }\n                            noui.description { +\"Elyse is a copywriter working in New York.\" }\n                        }\n                        noui.extra.content {\n                            noui.right.floated Span { +\"Joined in 2014\" }\n                            span { icon.user(); +\"151 friends\" }\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderColoredCards() = example {\n        ui.header { +\"Colored\" }\n\n        p { +\"A card can specify a color\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_views_card_CardPage_kt_renderColoredCards_1,\n        ) {\n            // <CodeBlock renderColoredCards_1>\n            ui.eight.cards {\n                noui.primary.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"primary\" } }\n                }\n                noui.secondary.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"secondary\" } }\n                }\n                noui.red.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"red\" } }\n                }\n                noui.orange.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"primary\" } }\n                }\n                noui.yellow.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"yellow\" } }\n                }\n                noui.olive.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"olive\" } }\n                }\n                noui.green.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"green\" } }\n                }\n                noui.teal.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"teal\" } }\n                }\n                noui.blue.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"blue\" } }\n                }\n                noui.violet.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"violet\" } }\n                }\n                noui.purple.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"purple\" } }\n                }\n                noui.pink.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"pink\" } }\n                }\n                noui.brown.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"brown\" } }\n                }\n                noui.grey.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"grey\" } }\n                }\n                noui.black.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"black\" } }\n                }\n                noui.white.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"white\" } }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderColumnCountCards() = example {\n        ui.header { +\"Column count\" }\n\n        p { +\"A group of cards can set how many cards should exist in a row.\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_views_card_CardPage_kt_renderColumnCountCards_1,\n        ) {\n            // <CodeBlock renderColumnCountCards_1>\n            ui.five.cards {\n                noui.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"...\" } }\n                }\n                noui.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"...\" } }\n                }\n                noui.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"...\" } }\n                }\n                noui.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"...\" } }\n                }\n                noui.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"...\" } }\n                }\n                noui.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"...\" } }\n                }\n                noui.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"...\" } }\n                }\n                noui.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"...\" } }\n                }\n                noui.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"...\" } }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderStackableCards() = example {\n        ui.header { +\"Stackable\" }\n\n        p { +\"A group of cards can automatically stack rows to a single columns on mobile devices\" }\n\n        ui.yellow.message {\n            +\"Resize your browser to a smaller size to see the cards stack after reaching mobile breakpoints\"\n        }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_views_card_CardPage_kt_renderStackableCards,\n        ) {\n            // <CodeBlock renderStackableCards>\n            ui.six.stackable.cards {\n                noui.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"...\" } }\n                }\n                noui.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"...\" } }\n                }\n                noui.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"...\" } }\n                }\n                noui.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"...\" } }\n                }\n                noui.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"...\" } }\n                }\n                noui.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"...\" } }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderDoublingCards() = example {\n        ui.header { +\"Doubling\" }\n\n        p { +\"A group of cards can double its column width for mobile\" }\n\n        ui.yellow.message {\n            +\"Resize your browser to a smaller size to see the cards stack after reaching mobile breakpoints\"\n        }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_views_card_CardPage_kt_renderDoublingCards,\n        ) {\n            // <CodeBlock renderDoublingCards>\n            ui.six.doubling.cards {\n                noui.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"...\" } }\n                }\n                noui.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"...\" } }\n                }\n                noui.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"...\" } }\n                }\n                noui.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"...\" } }\n                }\n                noui.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"...\" } }\n                }\n                noui.card {\n                    noui.image { img { src = \"images/wireframe/white-image.png\" } }\n                    noui.content { noui.header { +\"...\" } }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n}\n","@file:Suppress(\"DuplicatedCode\")\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.views.comment\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.HorizontalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.semanticui.icon\nimport de.peekandpoke.kraft.semanticui.noui\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport generated.ExtractedCodeBlocks\nimport kotlinx.html.*\n\n@Suppress(\"FunctionName\")\nfun Tag.CommentPage() = comp {\n    CommentPage(it)\n}\n\nclass CommentPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Views | Comment\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Comment\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/views/comment.html\")\n\n            ui.dividing.header H2 { +\"Types\" }\n\n            renderComments()\n\n            ui.dividing.header H2 { +\"Content\" }\n\n            renderAvatar()\n            renderMetadata()\n            renderActions()\n            renderReplyForm()\n\n            ui.dividing.header H2 { +\"States\" }\n\n            renderCollapsed()\n\n            ui.dividing.header H2 { +\"Variations\" }\n\n            renderThreaded()\n            renderMinimal()\n            renderSize()\n            renderInverted()\n        }\n    }\n\n    private fun FlowContent.renderComments() = example {\n        ui.header { +\"Comments\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_comment_CommentPage_kt_renderComments,\n        ) {\n            ui.basic.padded.segment {\n                // <CodeBlock renderComments>\n                ui.comments {\n                    ui.comment {\n                        noui.avatar A {\n                            href = \"https://example.com\"\n                            img(src = \"images/avatar2/large/matthew.png\")\n                        }\n                        noui.content {\n                            noui.author A {\n                                href = \"https://example.com\"\n                                +\"Matthew\"\n                            }\n                            noui.metadata {\n                                +\"Today at 5:42PM\"\n                            }\n                            noui.text {\n                                +\"How artistic!\"\n                            }\n                            noui.actions {\n                                a(href = \"https://example.com\") { +\"Reply\" }\n                            }\n                        }\n                        noui.comments {\n                            ui.comment {\n                                noui.avatar A {\n                                    href = \"https://example.com\"\n                                    img(src = \"images/avatar2/large/jenny.jpg\")\n                                }\n                                noui.content {\n                                    noui.author A {\n                                        href = \"https://example.com\"\n                                        +\"Jenny\"\n                                    }\n                                    noui.metadata {\n                                        +\"Today at 5:43PM\"\n                                    }\n                                    noui.text {\n                                        +\"Very much!\"\n                                    }\n                                    noui.actions {\n                                        a(href = \"https://example.com\") { +\"Reply\" }\n                                    }\n                                }\n                            }\n                        }\n                    }\n\n                    ui.comment {\n                        noui.avatar A {\n                            href = \"https://example.com\"\n                            img(src = \"images/avatar2/large/elliot.jpg\")\n                        }\n                        noui.content {\n                            noui.author A {\n                                href = \"https://example.com\"\n                                +\"Elliot\"\n                            }\n                            noui.metadata {\n                                +\"Today at 5:42PM\"\n                            }\n                            noui.text {\n                                +\"This has been very useful for my research. Thanks as well!\"\n                            }\n                            noui.actions {\n                                a(href = \"https://example.com\") { +\"Reply\" }\n                            }\n                        }\n                    }\n                }\n                // </CodeBlock>\n            }\n        }\n    }\n\n    private fun FlowContent.renderAvatar() = example {\n        ui.header { +\"Avatar\" }\n\n        p { +\"A comment can contain an image or avatar\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_comment_CommentPage_kt_renderAvatar,\n        ) {\n            ui.basic.padded.segment {\n                // <CodeBlock renderAvatar>\n                ui.comments {\n                    ui.comment {\n                        noui.avatar A {\n                            href = \"https://example.com\"\n                            img(src = \"images/avatar2/large/matthew.png\")\n                        }\n                        noui.content {\n                            noui.author A {\n                                href = \"https://example.com\"\n                                +\"Matthew\"\n                            }\n                        }\n                    }\n                }\n                // </CodeBlock>\n            }\n        }\n    }\n\n    private fun FlowContent.renderMetadata() = example {\n        ui.header { +\"Metadata\" }\n\n        p { +\"A comment can contain metadata about the comment, an arbitrary amount of metadata may be defined.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_comment_CommentPage_kt_renderMetadata,\n        ) {\n            ui.basic.padded.segment {\n                // <CodeBlock renderMetadata>\n                ui.comments {\n                    ui.comment {\n                        noui.avatar A {\n                            href = \"https://example.com\"\n                            img(src = \"images/avatar2/large/matthew.png\")\n                        }\n                        noui.content {\n                            noui.author A {\n                                href = \"https://example.com\"\n                                +\"Matthew\"\n                            }\n                            noui.metadata {\n                                div { +\"2 days ago\" }\n                                div { icon.star(); +\"5 Faves\" }\n                            }\n                        }\n                    }\n                }\n                // </CodeBlock>\n            }\n        }\n    }\n\n    private fun FlowContent.renderActions() = example {\n        ui.header { +\"Actions\" }\n\n        p { +\"A comment can contain an list of actions a user may perform related to this comment.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_comment_CommentPage_kt_renderActions,\n        ) {\n            ui.basic.padded.segment {\n                // <CodeBlock renderActions>\n                ui.comments {\n                    ui.comment {\n                        noui.avatar A {\n                            href = \"https://example.com\"\n                            img(src = \"images/avatar2/large/matthew.png\")\n                        }\n                        noui.content {\n                            noui.author A {\n                                href = \"https://example.com\"\n                                +\"Matthew\"\n                            }\n                            noui.text {\n                                +\"This will be great for business reports. I will definitely download this.\"\n                            }\n                            noui.actions {\n                                a(href = \"https://example.com\") { +\"Reply\" }\n                                a(href = \"https://example.com\") { +\"Save\" }\n                                a(href = \"https://example.com\") { +\"Hide\" }\n                                a(href = \"https://example.com\") { icon.expand(); +\"Full-screen\" }\n                            }\n                        }\n                    }\n                }\n                // </CodeBlock>\n            }\n        }\n    }\n\n    private fun FlowContent.renderReplyForm() = example {\n        ui.header { +\"Reply Form\" }\n\n        p { +\"A comment can contain a form to reply to a comment. This may have arbitrary content.\" }\n\n        ui.info.message {\n            +\"If a comment form is located inside a \"\n            ui.label { +\"comment\" }\n            +\" it will be formatted as an nested reply form. If the comment form is included after all comments, \"\n            +\"it will be formatted as a normal reply form.\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_comment_CommentPage_kt_renderReplyForm,\n        ) {\n            ui.basic.padded.segment {\n                // <CodeBlock renderReplyForm>\n                ui.comments {\n                    ui.comment {\n                        noui.avatar A {\n                            href = \"https://example.com\"\n                            img(src = \"images/avatar2/large/matthew.png\")\n                        }\n                        noui.content {\n                            noui.author A {\n                                href = \"https://example.com\"\n                                +\"Matthew\"\n                            }\n                            noui.text {\n                                +\"This will be great for business reports. I will definitely download this.\"\n                            }\n                            noui.actions {\n                                a(href = \"https://example.com\") { +\"Reply\" }\n                            }\n                            ui.reply.form {\n                                ui.field {\n                                    textArea {}\n                                }\n                                ui.primary.labeled.icon.button {\n                                    icon.edit()\n                                    +\"Reply\"\n                                }\n                            }\n                        }\n                    }\n                }\n                // </CodeBlock>\n            }\n        }\n    }\n\n    private fun FlowContent.renderCollapsed() = example {\n        ui.header { +\"Collapsed\" }\n\n        readTheFomanticUiDocs(\"https://fomantic-ui.com/views/comment.html#collapsed\")\n    }\n\n    private fun FlowContent.renderThreaded() = example {\n        ui.header { +\"Threaded\" }\n\n        p { +\"A comment list can be threaded to showing the relationship between conversations\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_comment_CommentPage_kt_renderThreaded,\n        ) {\n            ui.basic.padded.segment {\n                // <CodeBlock renderThreaded>\n                ui.threaded.comments {\n                    ui.comment {\n                        noui.avatar A {\n                            href = \"https://example.com\"\n                            img(src = \"images/avatar2/large/matthew.png\")\n                        }\n                        noui.content {\n                            noui.author A {\n                                href = \"https://example.com\"\n                                +\"Matthew\"\n                            }\n                            noui.metadata {\n                                +\"Today at 5:42PM\"\n                            }\n                            noui.text {\n                                +\"How artistic!\"\n                            }\n                            noui.actions {\n                                a(href = \"https://example.com\") { +\"Reply\" }\n                            }\n                        }\n                        noui.comments {\n                            ui.comment {\n                                noui.avatar A {\n                                    href = \"https://example.com\"\n                                    img(src = \"images/avatar2/large/jenny.jpg\")\n                                }\n                                noui.content {\n                                    noui.author A {\n                                        href = \"https://example.com\"\n                                        +\"Jenny\"\n                                    }\n                                    noui.metadata {\n                                        +\"Today at 5:43PM\"\n                                    }\n                                    noui.text {\n                                        +\"Very much!\"\n                                    }\n                                    noui.actions {\n                                        a(href = \"https://example.com\") { +\"Reply\" }\n                                    }\n                                }\n                            }\n                        }\n                    }\n\n                    ui.comment {\n                        noui.avatar A {\n                            href = \"https://example.com\"\n                            img(src = \"images/avatar2/large/elliot.jpg\")\n                        }\n                        noui.content {\n                            noui.author A {\n                                href = \"https://example.com\"\n                                +\"Elliot\"\n                            }\n                            noui.metadata {\n                                +\"Today at 5:42PM\"\n                            }\n                            noui.text {\n                                +\"This has been very useful for my research. Thanks as well!\"\n                            }\n                            noui.actions {\n                                a(href = \"https://example.com\") { +\"Reply\" }\n                            }\n                        }\n                    }\n                }\n                // </CodeBlock>\n            }\n        }\n    }\n\n    private fun FlowContent.renderMinimal() = example {\n        ui.header { +\"Minimal\" }\n\n        p { +\"Comments can hide extra information unless a user shows intent to interact with a comment.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_comment_CommentPage_kt_renderMinimal,\n        ) {\n            ui.basic.padded.segment {\n                // <CodeBlock renderMinimal>\n                ui.minimal.comments {\n                    ui.comment {\n                        noui.avatar A {\n                            href = \"https://example.com\"\n                            img(src = \"images/avatar2/large/matthew.png\")\n                        }\n                        noui.content {\n                            noui.author A {\n                                href = \"https://example.com\"\n                                +\"Matthew\"\n                            }\n                            noui.metadata {\n                                +\"Today at 5:42PM\"\n                            }\n                            noui.text {\n                                +\"How artistic!\"\n                            }\n                            noui.actions {\n                                a(href = \"https://example.com\") { +\"Reply\" }\n                            }\n                        }\n                        noui.comments {\n                            ui.comment {\n                                noui.avatar A {\n                                    href = \"https://example.com\"\n                                    img(src = \"images/avatar2/large/jenny.jpg\")\n                                }\n                                noui.content {\n                                    noui.author A {\n                                        href = \"https://example.com\"\n                                        +\"Jenny\"\n                                    }\n                                    noui.metadata {\n                                        +\"Today at 5:43PM\"\n                                    }\n                                    noui.text {\n                                        +\"Very much!\"\n                                    }\n                                    noui.actions {\n                                        a(href = \"https://example.com\") { +\"Reply\" }\n                                    }\n                                }\n                            }\n                        }\n                    }\n\n                    ui.comment {\n                        noui.avatar A {\n                            href = \"https://example.com\"\n                            img(src = \"images/avatar2/large/elliot.jpg\")\n                        }\n                        noui.content {\n                            noui.author A {\n                                href = \"https://example.com\"\n                                +\"Elliot\"\n                            }\n                            noui.metadata {\n                                +\"Today at 5:42PM\"\n                            }\n                            noui.text {\n                                +\"This has been very useful for my research. Thanks as well!\"\n                            }\n                            noui.actions {\n                                a(href = \"https://example.com\") { +\"Reply\" }\n                            }\n                        }\n                    }\n                }\n                // </CodeBlock>\n            }\n        }\n    }\n\n    private fun FlowContent.renderSize() = example {\n        ui.header { +\"Size\" }\n\n        p { +\"Comments can have different sizes.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_comment_CommentPage_kt_renderSize,\n        ) {\n            ui.basic.padded.segment {\n                // <CodeBlock renderSize>\n                ui.huge.comments {\n                    ui.comment {\n                        noui.avatar A {\n                            href = \"https://example.com\"\n                            img(src = \"images/avatar2/large/matthew.png\")\n                        }\n                        noui.content {\n                            noui.author A {\n                                href = \"https://example.com\"\n                                +\"Matthew\"\n                            }\n                            noui.metadata {\n                                +\"Today at 5:42PM\"\n                            }\n                            noui.text {\n                                +\"How artistic!\"\n                            }\n                            noui.actions {\n                                a(href = \"https://example.com\") { +\"Reply\" }\n                            }\n                        }\n                        noui.comments {\n                            ui.comment {\n                                noui.avatar A {\n                                    href = \"https://example.com\"\n                                    img(src = \"images/avatar2/large/jenny.jpg\")\n                                }\n                                noui.content {\n                                    noui.author A {\n                                        href = \"https://example.com\"\n                                        +\"Jenny\"\n                                    }\n                                    noui.metadata {\n                                        +\"Today at 5:43PM\"\n                                    }\n                                    noui.text {\n                                        +\"Very much!\"\n                                    }\n                                    noui.actions {\n                                        a(href = \"https://example.com\") { +\"Reply\" }\n                                    }\n                                }\n                            }\n                        }\n                    }\n\n                    ui.comment {\n                        noui.avatar A {\n                            href = \"https://example.com\"\n                            img(src = \"images/avatar2/large/elliot.jpg\")\n                        }\n                        noui.content {\n                            noui.author A {\n                                href = \"https://example.com\"\n                                +\"Elliot\"\n                            }\n                            noui.metadata {\n                                +\"Today at 5:42PM\"\n                            }\n                            noui.text {\n                                +\"This has been very useful for my research. Thanks as well!\"\n                            }\n                            noui.actions {\n                                a(href = \"https://example.com\") { +\"Reply\" }\n                            }\n                        }\n                    }\n                }\n                // </CodeBlock>\n            }\n        }\n    }\n\n    private fun FlowContent.renderInverted() = example {\n        ui.header { +\"Inverted\" }\n\n        p { +\"Comments' colors can be inverted\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_comment_CommentPage_kt_renderInverted,\n        ) {\n            // <CodeBlock renderInverted>\n            ui.inverted.padded.segment {\n                ui.inverted.comments {\n                    ui.comment {\n                        noui.avatar A {\n                            href = \"https://example.com\"\n                            img(src = \"images/avatar2/large/matthew.png\")\n                        }\n                        noui.content {\n                            noui.author A {\n                                href = \"https://example.com\"\n                                +\"Matthew\"\n                            }\n                            noui.metadata {\n                                +\"Today at 5:42PM\"\n                            }\n                            noui.text {\n                                +\"How artistic!\"\n                            }\n                            noui.actions {\n                                a(href = \"https://example.com\") { +\"Reply\" }\n                            }\n                        }\n                        noui.comments {\n                            ui.comment {\n                                noui.avatar A {\n                                    href = \"https://example.com\"\n                                    img(src = \"images/avatar2/large/jenny.jpg\")\n                                }\n                                noui.content {\n                                    noui.author A {\n                                        href = \"https://example.com\"\n                                        +\"Jenny\"\n                                    }\n                                    noui.metadata {\n                                        +\"Today at 5:43PM\"\n                                    }\n                                    noui.text {\n                                        +\"Very much!\"\n                                    }\n                                    noui.actions {\n                                        a(href = \"https://example.com\") { +\"Reply\" }\n                                    }\n                                }\n                            }\n                        }\n                    }\n\n                    ui.comment {\n                        noui.avatar A {\n                            href = \"https://example.com\"\n                            img(src = \"images/avatar2/large/elliot.jpg\")\n                        }\n                        noui.content {\n                            noui.author A {\n                                href = \"https://example.com\"\n                                +\"Elliot\"\n                            }\n                            noui.metadata {\n                                +\"Today at 5:42PM\"\n                            }\n                            noui.text {\n                                +\"This has been very useful for my research. Thanks as well!\"\n                            }\n                            noui.actions {\n                                a(href = \"https://example.com\") { +\"Reply\" }\n                            }\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n}\n","package de.peekandpoke.kraft.examples.fomanticui.pages.views.feed\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport kotlinx.html.Tag\n\n@Suppress(\"FunctionName\")\nfun Tag.FeedPage() = comp {\n    FeedPage(it)\n}\n\nclass FeedPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Views | Feed\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Feed\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/views/feed.html\")\n        }\n    }\n}\n","@file:Suppress(\"DuplicatedCode\")\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.views.item\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.HorizontalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.shortParagraphWireFrame\nimport de.peekandpoke.kraft.semanticui.icon\nimport de.peekandpoke.kraft.semanticui.noui\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport de.peekandpoke.ultra.common.fixture.LoremIpsum\nimport generated.ExtractedCodeBlocks\nimport kotlinx.html.*\n\n@Suppress(\"FunctionName\")\nfun Tag.ItemPage() = comp {\n    ItemPage(it)\n}\n\nclass ItemPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Views | Item\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Item\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/views/item.html\")\n\n            ui.dividing.header H2 { +\"Types\" }\n\n            renderItems()\n\n            ui.dividing.header H2 { +\"Content\" }\n\n            renderContentImage()\n            renderContentContent()\n            renderContentHeader()\n            renderContentMetadata()\n            renderContentLink()\n            renderContentDescription()\n            renderContentExtra()\n\n            ui.dividing.header H2 { +\"Variations\" }\n\n            renderVariationsStacking()\n            renderVariationsDivided()\n            renderVariationsRelaxed()\n            renderVariationsLinkItem()\n            renderVariationsVerticalAlignment()\n            renderVariationsFloated()\n            renderVariationsInverted()\n        }\n    }\n\n    private fun FlowContent.renderItems() = example {\n        ui.header { +\"Items\" }\n\n        p { +\"A group of items\" }\n\n        ui.info.icon.message {\n            icon.mobile()\n            noui.content {\n                noui.header { +\"Responsive Element\" }\n                p { +\"Item views are designed to be responsive with images stacking at mobile resolutions.\" }\n            }\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_item_ItemPage_kt_renderItems,\n        ) {\n            // <CodeBlock renderItems>\n            ui.items {\n                noui.item {\n                    noui.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.content {\n                        noui.header A { href = \"https://www.example.com\"; +\"Header\" }\n                        noui.meta { +\"Meta content\" }\n                        noui.description { shortParagraphWireFrame() }\n                        noui.extra { +\"Extra details\" }\n                    }\n                }\n                noui.item {\n                    noui.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.content {\n                        noui.header A { href = \"https://www.example.com\"; +\"Header\" }\n                        noui.meta { +\"Meta content\" }\n                        noui.description { shortParagraphWireFrame() }\n                        noui.extra { +\"Extra details\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderContentImage() = example {\n        ui.header { +\"Image\" }\n\n        p { +\"An item can contain an image\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_item_ItemPage_kt_renderContentImage,\n        ) {\n            // <CodeBlock renderContentImage>\n            ui.divided.items {\n                noui.item {\n                    noui.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                }\n                noui.item {\n                    noui.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                }\n                noui.item {\n                    noui.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderContentContent() = example {\n        ui.header { +\"Content\" }\n\n        p { +\"An item can contain content\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_item_ItemPage_kt_renderContentContent,\n        ) {\n            // <CodeBlock renderContentContent>\n            ui.divided.items {\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.middle.aligned.content {\n                        +\"Content\"\n                    }\n                }\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.middle.aligned.content {\n                        +\"Content\"\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderContentHeader() = example {\n        ui.header { +\"Header\" }\n\n        p { +\"An item can contain a header\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_item_ItemPage_kt_renderContentHeader,\n        ) {\n            // <CodeBlock renderContentHeader>\n            ui.divided.items {\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.middle.aligned.content {\n                        noui.header { +\"Header Content\" }\n                    }\n                }\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.middle.aligned.content {\n                        noui.header { +\"Header Content\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderContentMetadata() = example {\n        ui.header { +\"Metadata\" }\n\n        p { +\"An item can contain content header\" }\n\n        ui.info.message {\n            +\"You can include an arbitrary amount of metadata using your own class conventions, all child \"\n            +\"elements will automatically be spaced\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_item_ItemPage_kt_renderContentMetadata,\n        ) {\n            // <CodeBlock renderContentMetadata>\n            ui.divided.items {\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.content {\n                        noui.header { +\"Header Content\" }\n                        noui.meta {\n                            span { +\"$1200\" }\n                            span { +\"1 Month\" }\n                        }\n                        noui.description {\n                            shortParagraphWireFrame()\n                        }\n                    }\n                }\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.content {\n                        noui.meta {\n                            span { +\"$1200\" }\n                            span { +\"1 Month\" }\n                        }\n                        noui.description {\n                            shortParagraphWireFrame()\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderContentLink() = example {\n        ui.header { +\"Link\" }\n\n        p { +\"An item can contain links as images, headers, or inside content\" }\n\n        ui.info.message {\n            +\"To make the entire content of an item link, check out the link variation below\"\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_item_ItemPage_kt_renderContentLink,\n        ) {\n            // <CodeBlock renderContentLink>\n            ui.divided.items {\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.content {\n                        noui.header A { href = \"https://example.com\"; +\"Header Content\" }\n                        noui.description {\n                            +(LoremIpsum(5) + \" \")\n                            a(\"https://example.com\") { +\"some link\" }\n                            +(\" \" + LoremIpsum(10))\n                        }\n                    }\n                }\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.content {\n                        noui.header A { href = \"https://example.com\"; +\"Header Content\" }\n                        noui.description {\n                            +(LoremIpsum(5) + \" \")\n                            a(\"https://example.com\") { +\"some link\" }\n                            +(\" \" + LoremIpsum(10))\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderContentDescription() = example {\n        ui.header { +\"Description\" }\n\n        p { +\"An item can contain a description with a single or multiple paragraphs\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_item_ItemPage_kt_renderContentDescription,\n        ) {\n            // <CodeBlock renderContentDescription>\n            ui.divided.items {\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.middle.aligned.content {\n                        noui.header A { href = \"https://example.com\"; +\"Header Content\" }\n                        noui.description {\n                            p { +LoremIpsum(50) }\n                            p { +LoremIpsum(20) }\n                        }\n                    }\n                }\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.middle.aligned.content {\n                        noui.header A { href = \"https://example.com\"; +\"Header Content\" }\n                        noui.description {\n                            p { +LoremIpsum(100) }\n                            p { +LoremIpsum(30) }\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderContentExtra() = example {\n        ui.header { +\"Extra Content\" }\n\n        p { +\"An item can contain extra content meant to be formatted separately from the main content\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_item_ItemPage_kt_renderContentExtra,\n        ) {\n            // <CodeBlock renderContentExtra>\n            ui.divided.items {\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.content {\n                        noui.header A { href = \"https://example.com\"; +\"Header Content\" }\n                        noui.description {\n                            p { +LoremIpsum(20) }\n                        }\n                        noui.extra.content {\n                            icon.green.check()\n                            +\"121 Votes\"\n                        }\n                    }\n                }\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.content {\n                        noui.header A { href = \"https://example.com\"; +\"Header Content\" }\n                        noui.description {\n                            p { +LoremIpsum(20) }\n                        }\n                        noui.extra.content {\n                            icon.green.check()\n                            +\"121 Votes\"\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderVariationsStacking() = example {\n        ui.header { +\"Stacking\" }\n\n        p {\n            +\"An item can be made \"\n            ui.label { +\"unstackable\" }\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_item_ItemPage_kt_renderVariationsStacking,\n        ) {\n            // <CodeBlock renderVariationsStacking>\n            ui.unstackable.items {\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.content {\n                        noui.header A { href = \"https://example.com\"; +\"Header Content\" }\n                        noui.description {\n                            p { +LoremIpsum(20) }\n                        }\n                        noui.extra.content {\n                            icon.green.check()\n                            +\"121 Votes\"\n                        }\n                    }\n                }\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.content {\n                        noui.header A { href = \"https://example.com\"; +\"Header Content\" }\n                        noui.description {\n                            p { +LoremIpsum(20) }\n                        }\n                        noui.extra.content {\n                            icon.green.check()\n                            +\"121 Votes\"\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderVariationsDivided() = example {\n        ui.header { +\"Divided\" }\n\n        p { +\"Items can be divided to better distinguish between grouped content\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_item_ItemPage_kt_renderVariationsDivided,\n        ) {\n            // <CodeBlock renderVariationsDivided>\n            ui.divided.items {\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.content {\n                        noui.header A { href = \"https://example.com\"; +\"Header Content\" }\n                        noui.description {\n                            p { +LoremIpsum(20) }\n                        }\n                        noui.extra.content {\n                            span { +\"Extra\" }\n                            span { ui.tiny.button { +\"Add\" } }\n                        }\n                    }\n                }\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.content {\n                        noui.header A { href = \"https://example.com\"; +\"Header Content\" }\n                        noui.description {\n                            p { +LoremIpsum(20) }\n                        }\n                        noui.extra.content {\n                            span { +\"Extra\" }\n                            span { ui.tiny.button { +\"Add\" } }\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderVariationsRelaxed() = example {\n        ui.header { +\"Relaxed\" }\n\n        p { +\"A group of items can relax its padding to provide more negative space\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_item_ItemPage_kt_renderVariationsRelaxed,\n        ) {\n            // <CodeBlock renderVariationsRelaxed>\n            ui.relaxed.items {\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.content {\n                        noui.header A { href = \"https://example.com\"; +\"Header Content\" }\n                    }\n                }\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.content {\n                        noui.header A { href = \"https://example.com\"; +\"Header Content\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_item_ItemPage_kt_renderVariationsRelaxed_2,\n        ) {\n            // <CodeBlock renderVariationsRelaxed_2>\n            ui.very.relaxed.items {\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.content {\n                        noui.header A { href = \"https://example.com\"; +\"Header Content\" }\n                    }\n                }\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.content {\n                        noui.header A { href = \"https://example.com\"; +\"Header Content\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderVariationsLinkItem() = example {\n        ui.header { +\"Link Item\" }\n\n        p { +\"An item can be formatted so that the entire contents link to another page\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_item_ItemPage_kt_renderVariationsLinkItem_1,\n        ) {\n            // <CodeBlock renderVariationsLinkItem_1>\n            ui.link.items {\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.content {\n                        noui.header { +\"Header Content\" }\n                        noui.description { shortParagraphWireFrame() }\n                    }\n                }\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.content {\n                        noui.header { +\"Header Content\" }\n                        noui.description { shortParagraphWireFrame() }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_item_ItemPage_kt_renderVariationsLinkItem_2,\n        ) {\n            // <CodeBlock renderVariationsLinkItem_2>\n            ui.very.relaxed.items {\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.content {\n                        noui.header A { href = \"https://example.com\"; +\"Header Content\" }\n                    }\n                }\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.content {\n                        noui.header A { href = \"https://example.com\"; +\"Header Content\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderVariationsVerticalAlignment() = example {\n        ui.header { +\"Vertical alignment\" }\n\n        p { +\"Content can specify its vertical alignment\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_item_ItemPage_kt_renderVariationsVerticalAlignment,\n        ) {\n            // <CodeBlock renderVariationsVerticalAlignment>\n            ui.items {\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.content {\n                        noui.header { +\"Top Aligned\" }\n                    }\n                }\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.middle.aligned.content {\n                        noui.header { +\"Middle Aligned\" }\n                    }\n                }\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.bottom.aligned.content {\n                        noui.header { +\"Bottom Aligned\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderVariationsFloated() = example {\n        ui.header { +\"Floated\" }\n\n        p { +\"Any content element can be floated left or right\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_item_ItemPage_kt_renderVariationsFloated,\n        ) {\n            // <CodeBlock renderVariationsFloated>\n            ui.items {\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.content {\n                        noui.header { +\"Top Aligned\" }\n                        noui.description { shortParagraphWireFrame() }\n                        noui.extra.content {\n                            ui.right.floated.button { +\"Right floated\" }\n                        }\n                    }\n                }\n                noui.item {\n                    ui.tiny.image {\n                        img { src = \"images/wireframe/image.png\" }\n                    }\n                    noui.content {\n                        noui.header { +\"Top Aligned\" }\n                        noui.description { shortParagraphWireFrame() }\n                        noui.extra.content {\n                            ui.right.floated.button { +\"Right floated\" }\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderVariationsInverted() = example {\n        ui.header { +\"Inverted\" }\n\n        p { +\"An item can be inverted to appear on a dark background\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_item_ItemPage_kt_renderVariationsInverted,\n        ) {\n            // <CodeBlock renderVariationsInverted>\n            ui.inverted.segment {\n                ui.inverted.items {\n                    noui.item {\n                        ui.tiny.image {\n                            img { src = \"images/wireframe/image.png\" }\n                        }\n                        noui.content {\n                            noui.header { +\"Top Aligned\" }\n                            noui.meta { +\"Meta\" }\n                            noui.description { shortParagraphWireFrame() }\n                            noui.extra.content { +\"Extra\" }\n                        }\n                    }\n                    noui.item {\n                        ui.tiny.image {\n                            img { src = \"images/wireframe/image.png\" }\n                        }\n                        noui.content {\n                            noui.header { +\"Top Aligned\" }\n                            noui.meta { +\"Meta\" }\n                            noui.description { shortParagraphWireFrame() }\n                            noui.extra.content { +\"Extra\" }\n                        }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n}\n","@file:Suppress(\"DuplicatedCode\")\n\npackage de.peekandpoke.kraft.examples.fomanticui.pages.views.statistic\n\nimport de.peekandpoke.kraft.addons.routing.PageTitle\nimport de.peekandpoke.kraft.components.NoProps\nimport de.peekandpoke.kraft.components.PureComponent\nimport de.peekandpoke.kraft.components.comp\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.HorizontalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.VerticalContentAndCode\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.example\nimport de.peekandpoke.kraft.examples.fomanticui.helpers.readTheFomanticUiDocs\nimport de.peekandpoke.kraft.semanticui.icon\nimport de.peekandpoke.kraft.semanticui.noui\nimport de.peekandpoke.kraft.semanticui.ui\nimport de.peekandpoke.kraft.vdom.VDom\nimport de.peekandpoke.ultra.common.fixture.LoremIpsum\nimport generated.ExtractedCodeBlocks\nimport kotlinx.html.FlowContent\nimport kotlinx.html.Tag\nimport kotlinx.html.br\nimport kotlinx.html.p\n\n@Suppress(\"FunctionName\")\nfun Tag.StatisticPage() = comp {\n    StatisticPage(it)\n}\n\nclass StatisticPage(ctx: NoProps) : PureComponent(ctx) {\n\n    //  STATE  //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    //  IMPL  ///////////////////////////////////////////////////////////////////////////////////////////////////\n\n    override fun VDom.render() {\n        PageTitle(\"Views | Statistic\")\n\n        ui.basic.segment {\n            ui.dividing.header H1 { +\"Statistic\" }\n\n            readTheFomanticUiDocs(\"https://fomantic-ui.com/views/statistic.html\")\n\n            ui.dividing.header H2 { +\"Types\" }\n\n            renderStatistic()\n            renderStatisticGroup()\n\n            ui.dividing.header H2 { +\"Content\" }\n\n            renderContentValue()\n\n            ui.dividing.header H2 { +\"Variations\" }\n\n            renderVariationsHorizontal()\n            renderVariationsColored()\n            renderVariationsInverted()\n            renderVariationsStackable()\n            renderVariationsEvenlyDivided()\n            renderVariationsFloated()\n            renderVariationsSize()\n        }\n    }\n\n    private fun FlowContent.renderStatistic() = example {\n        ui.header { +\"Statistic\" }\n\n        p { +\"A statistic can display a value with a label above or below it.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_statistic_StatisticPage_kt_renderStatistic_1,\n        ) {\n            // <CodeBlock renderStatistic_1>\n            ui.statistic {\n                noui.value { +\"5,550\" }\n                noui.label { +\"Downloads\" }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_statistic_StatisticPage_kt_renderStatistic_2,\n        ) {\n            // <CodeBlock renderStatistic_2>\n            ui.statistic {\n                noui.label { +\"Views\" }\n                noui.value { +\"40,550\" }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderStatisticGroup() = example {\n        ui.header { +\"Statistic Group\" }\n\n        p { +\"A group of statistics.\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_statistic_StatisticPage_kt_renderStatisticGroup,\n        ) {\n            // <CodeBlock renderStatisticGroup>\n            ui.statistics {\n                ui.statistic {\n                    noui.value { +\"5,550\" }\n                    noui.label { +\"Downloads\" }\n                }\n                ui.statistic {\n                    noui.value { +\"45,550\" }\n                    noui.label { +\"Views\" }\n                }\n                ui.statistic {\n                    noui.value { +\"22\" }\n                    noui.label { +\"Members\" }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderContentValue() = example {\n        ui.header { +\"Value\" }\n\n        p { +\"A statistic can contain a numeric, icon, image, or text value.'\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_statistic_StatisticPage_kt_renderContentValue,\n        ) {\n            // <CodeBlock renderContentValue>\n            ui.statistics {\n                ui.statistic {\n                    noui.value { +\"22\" }\n                    noui.label { +\"Users\" }\n                }\n                ui.statistic {\n                    noui.text.value { +\"Three\"; br(); +\"Thousand\" }\n                    noui.label { +\"Signups\" }\n                }\n                ui.statistic {\n                    noui.value { icon.plane(); +\"5\" }\n                    noui.label { +\"Flights\" }\n                }\n                ui.statistic {\n                    noui.value {\n                        ui.circular.inline.image Img { src = \"images/avatar2/large/kristy.png\" }\n                        +\"42\"\n                    }\n                    noui.label { +\"Members\" }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderVariationsHorizontal() = example {\n        ui.header { +\"Horizontal Statistic\" }\n\n        p { +\"A statistic can present its measurement horizontally\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_statistic_StatisticPage_kt_renderVariationsHorizontal_1,\n        ) {\n            // <CodeBlock renderVariationsHorizontal_1>\n            ui.horizontal.statistic {\n                noui.value { +\"5,550\" }\n                noui.label { +\"Downloads\" }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_statistic_StatisticPage_kt_renderVariationsHorizontal_2,\n        ) {\n            // <CodeBlock renderVariationsHorizontal_2>\n            ui.horizontal.statistics {\n                ui.statistic {\n                    noui.value { +\"5,550\" }\n                    noui.label { +\"Downloads\" }\n                }\n                ui.statistic {\n                    noui.value { +\"45,550\" }\n                    noui.label { +\"Views\" }\n                }\n                ui.statistic {\n                    noui.value { +\"22\" }\n                    noui.label { +\"Members\" }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderVariationsColored() = example {\n        ui.header { +\"Colored\" }\n\n        p { +\"A statistic can be formatted to be different colors\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_statistic_StatisticPage_kt_renderVariationsColored,\n        ) {\n            // <CodeBlock renderVariationsColored>\n            ui.statistics {\n                noui.red.statistic {\n                    noui.value { +\"21\" }\n                    noui.label { +\"red\" }\n                }\n                noui.orange.statistic {\n                    noui.value { +\"22\" }\n                    noui.label { +\"orange\" }\n                }\n                noui.yellow.statistic {\n                    noui.value { +\"23\" }\n                    noui.label { +\"yellow\" }\n                }\n                noui.olive.statistic {\n                    noui.value { +\"24\" }\n                    noui.label { +\"olive\" }\n                }\n                noui.green.statistic {\n                    noui.value { +\"25\" }\n                    noui.label { +\"green\" }\n                }\n                noui.teal.statistic {\n                    noui.value { +\"26\" }\n                    noui.label { +\"teal\" }\n                }\n                noui.blue.statistic {\n                    noui.value { +\"27\" }\n                    noui.label { +\"blue\" }\n                }\n                noui.violet.statistic {\n                    noui.value { +\"28\" }\n                    noui.label { +\"violet\" }\n                }\n                noui.purple.statistic {\n                    noui.value { +\"29\" }\n                    noui.label { +\"purple\" }\n                }\n                noui.pink.statistic {\n                    noui.value { +\"30\" }\n                    noui.label { +\"pink\" }\n                }\n                noui.brown.statistic {\n                    noui.value { +\"31\" }\n                    noui.label { +\"brown\" }\n                }\n                noui.grey.statistic {\n                    noui.value { +\"32\" }\n                    noui.label { +\"grey\" }\n                }\n                noui.black.statistic {\n                    noui.value { +\"33\" }\n                    noui.label { +\"black\" }\n                }\n                noui.white.statistic {\n                    noui.value { +\"34\" }\n                    noui.label { +\"white\" }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderVariationsInverted() = example {\n        ui.header { +\"Inverted\" }\n\n        p { +\"A statistic can be formatted to fit on a dark background\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_statistic_StatisticPage_kt_renderVariationsInverted,\n        ) {\n            // <CodeBlock renderVariationsInverted>\n            ui.inverted.segment {\n                ui.inverted.statistics {\n                    noui.red.statistic {\n                        noui.value { +\"21\" }\n                        noui.label { +\"red\" }\n                    }\n                    noui.orange.statistic {\n                        noui.value { +\"22\" }\n                        noui.label { +\"orange\" }\n                    }\n                    noui.yellow.statistic {\n                        noui.value { +\"23\" }\n                        noui.label { +\"yellow\" }\n                    }\n                    noui.olive.statistic {\n                        noui.value { +\"24\" }\n                        noui.label { +\"olive\" }\n                    }\n                    noui.green.statistic {\n                        noui.value { +\"25\" }\n                        noui.label { +\"green\" }\n                    }\n                    noui.teal.statistic {\n                        noui.value { +\"26\" }\n                        noui.label { +\"teal\" }\n                    }\n                    noui.blue.statistic {\n                        noui.value { +\"27\" }\n                        noui.label { +\"blue\" }\n                    }\n                    noui.violet.statistic {\n                        noui.value { +\"28\" }\n                        noui.label { +\"violet\" }\n                    }\n                    noui.purple.statistic {\n                        noui.value { +\"29\" }\n                        noui.label { +\"purple\" }\n                    }\n                    noui.pink.statistic {\n                        noui.value { +\"30\" }\n                        noui.label { +\"pink\" }\n                    }\n                    noui.brown.statistic {\n                        noui.value { +\"31\" }\n                        noui.label { +\"brown\" }\n                    }\n                    noui.grey.statistic {\n                        noui.value { +\"32\" }\n                        noui.label { +\"grey\" }\n                    }\n                    noui.black.statistic {\n                        noui.value { +\"33\" }\n                        noui.label { +\"black\" }\n                    }\n                    noui.white.statistic {\n                        noui.value { +\"34\" }\n                        noui.label { +\"white\" }\n                    }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderVariationsStackable() = example {\n        ui.header { +\"Stackable\" }\n\n        p { +\"A statistic can automatically stack rows to a single columns on mobile devices\" }\n\n        VerticalContentAndCode(\n            ExtractedCodeBlocks.pages_views_statistic_StatisticPage_kt_renderVariationsStackable,\n        ) {\n            // <CodeBlock renderVariationsStackable>\n            ui.stackable.statistics {\n                noui.red.statistic {\n                    noui.value { +\"21\" }\n                    noui.label { +\"red\" }\n                }\n                noui.orange.statistic {\n                    noui.value { +\"22\" }\n                    noui.label { +\"orange\" }\n                }\n                noui.yellow.statistic {\n                    noui.value { +\"23\" }\n                    noui.label { +\"yellow\" }\n                }\n                noui.olive.statistic {\n                    noui.value { +\"24\" }\n                    noui.label { +\"olive\" }\n                }\n                noui.green.statistic {\n                    noui.value { +\"25\" }\n                    noui.label { +\"green\" }\n                }\n                noui.teal.statistic {\n                    noui.value { +\"26\" }\n                    noui.label { +\"teal\" }\n                }\n                noui.blue.statistic {\n                    noui.value { +\"27\" }\n                    noui.label { +\"blue\" }\n                }\n                noui.violet.statistic {\n                    noui.value { +\"28\" }\n                    noui.label { +\"violet\" }\n                }\n                noui.purple.statistic {\n                    noui.value { +\"29\" }\n                    noui.label { +\"purple\" }\n                }\n                noui.pink.statistic {\n                    noui.value { +\"30\" }\n                    noui.label { +\"pink\" }\n                }\n                noui.brown.statistic {\n                    noui.value { +\"31\" }\n                    noui.label { +\"brown\" }\n                }\n                noui.grey.statistic {\n                    noui.value { +\"32\" }\n                    noui.label { +\"grey\" }\n                }\n                noui.black.statistic {\n                    noui.value { +\"33\" }\n                    noui.label { +\"black\" }\n                }\n                noui.white.statistic {\n                    noui.value { +\"34\" }\n                    noui.label { +\"white\" }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderVariationsEvenlyDivided() = example {\n        ui.header { +\"Evenly Divided\" }\n\n        p { +\"A statistic group can have its items divided evenly\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_statistic_StatisticPage_kt_renderVariationsEvenlyDivided,\n        ) {\n            // <CodeBlock renderVariationsEvenlyDivided>\n            ui.four.statistics {\n                ui.statistic {\n                    noui.value { +\"22\" }\n                    noui.label { +\"Users\" }\n                }\n                ui.statistic {\n                    noui.text.value { +\"Three\"; br(); +\"Thousand\" }\n                    noui.label { +\"Signups\" }\n                }\n                ui.statistic {\n                    noui.value { icon.plane(); +\"5\" }\n                    noui.label { +\"Flights\" }\n                }\n                ui.statistic {\n                    noui.value {\n                        ui.circular.inline.image Img { src = \"images/avatar2/large/kristy.png\" }\n                        +\"42\"\n                    }\n                    noui.label { +\"Members\" }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderVariationsFloated() = example {\n        ui.header { +\"Evenly Divided\" }\n\n        p { +\"A statistic group can have its items divided evenly\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_statistic_StatisticPage_kt_renderVariationsFloated,\n        ) {\n            // <CodeBlock renderVariationsFloated>\n            ui.segment {\n                ui.right.floated.statistic {\n                    noui.value { +\"10,220\" }\n                    noui.label { +\"Users\" }\n                }\n                p { +LoremIpsum(50) }\n                p { +LoremIpsum(50) }\n                ui.left.floated.statistic {\n                    noui.value { +\"50,220\" }\n                    noui.label { +\"Views\" }\n                }\n                p { +LoremIpsum(50) }\n            }\n            // </CodeBlock>\n        }\n    }\n\n    private fun FlowContent.renderVariationsSize() = example {\n        ui.header { +\"Size\" }\n\n        p { +\"A statistic can vary in size\" }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_statistic_StatisticPage_kt_renderVariationsSize_1,\n        ) {\n            // <CodeBlock renderVariationsSize_1>\n            ui.statistics {\n                ui.mini.statistic {\n                    noui.value { +\"10,220\" }\n                    noui.label { +\"Users\" }\n                }\n                ui.tiny.statistic {\n                    noui.value { +\"10,220\" }\n                    noui.label { +\"Users\" }\n                }\n                ui.small.statistic {\n                    noui.value { +\"10,220\" }\n                    noui.label { +\"Users\" }\n                }\n                ui.medium.statistic {\n                    noui.value { +\"10,220\" }\n                    noui.label { +\"Users\" }\n                }\n                ui.large.statistic {\n                    noui.value { +\"10,220\" }\n                    noui.label { +\"Users\" }\n                }\n                ui.big.statistic {\n                    noui.value { +\"10,220\" }\n                    noui.label { +\"Users\" }\n                }\n                ui.huge.statistic {\n                    noui.value { +\"10,220\" }\n                    noui.label { +\"Users\" }\n                }\n                ui.massive.statistic {\n                    noui.value { +\"10,220\" }\n                    noui.label { +\"Users\" }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_statistic_StatisticPage_kt_renderVariationsSize_2,\n        ) {\n            // <CodeBlock renderVariationsSize_2>\n            ui.statistics {\n                ui.mini.horizontal.statistic {\n                    noui.value { +\"10,220\" }\n                    noui.label { +\"Users\" }\n                }\n                ui.tiny.horizontal.statistic {\n                    noui.value { +\"10,220\" }\n                    noui.label { +\"Users\" }\n                }\n                ui.small.horizontal.statistic {\n                    noui.value { +\"10,220\" }\n                    noui.label { +\"Users\" }\n                }\n                ui.medium.horizontal.statistic {\n                    noui.value { +\"10,220\" }\n                    noui.label { +\"Users\" }\n                }\n                ui.large.horizontal.statistic {\n                    noui.value { +\"10,220\" }\n                    noui.label { +\"Users\" }\n                }\n                ui.big.horizontal.statistic {\n                    noui.value { +\"10,220\" }\n                    noui.label { +\"Users\" }\n                }\n                ui.huge.horizontal.statistic {\n                    noui.value { +\"10,220\" }\n                    noui.label { +\"Users\" }\n                }\n                ui.massive.horizontal.statistic {\n                    noui.value { +\"10,220\" }\n                    noui.label { +\"Users\" }\n                }\n            }\n            // </CodeBlock>\n        }\n\n        HorizontalContentAndCode(\n            ExtractedCodeBlocks.pages_views_statistic_StatisticPage_kt_renderVariationsSize_3,\n        ) {\n            // <CodeBlock renderVariationsSize_3>\n            ui.massive.statistics {\n                ui.statistic {\n                    noui.value { +\"10,220\" }\n                    noui.label { +\"Users\" }\n                }\n                ui.statistic {\n                    noui.value { +\"10,220\" }\n                    noui.label { +\"Users\" }\n                }\n                ui.statistic {\n                    noui.value { +\"10,220\" }\n                    noui.label { +\"Users\" }\n                }\n            }\n            // </CodeBlock>\n        }\n    }\n}\n","@file:Suppress(\n        \"Detekt:TooManyFunctions\",\n        \"Detekt:LargeClass\",\n        \"Detekt:LongMethod\",\n        \"Detekt:VariableNaming\",\n)\n\npackage de.peekandpoke.kraft.semanticui\n\nimport kotlinx.html.*\n\n@Suppress(\"FunctionName\", \"PropertyName\", \"unused\", \"Detekt:TooManyFunctions\", \"Detekt:VariableNaming\")\nclass SemanticTag(\n        @PublishedApi internal val parent: Tag,\n        @PublishedApi internal val cssClasses: MutableList<String>,\n) {\n    fun _cssClasses(): String = cssClasses.filter { it.isNotBlank() }.joinToString(\" \")\n\n    fun _renderAsTag(block: Tag.() -> Unit) {\n        block(parent)\n    }\n\n    private fun attrs() = attributesMapOf(\"class\", _cssClasses())\n\n    @SemanticUiCssMarker\n    operator fun invoke(block: DIV.() -> Unit = {}): Unit = Div(block)\n\n    @SemanticUiTagMarker\n    infix fun H1(block: H1.() -> Unit): Unit = H1(attrs(), parent.consumer).visitNoInline(block)\n\n    @SemanticUiTagMarker\n    infix fun H2(block: H2.() -> Unit): Unit = H2(attrs(), parent.consumer).visitNoInline(block)\n\n    @SemanticUiTagMarker\n    infix fun H3(block: H3.() -> Unit): Unit = H3(attrs(), parent.consumer).visitNoInline(block)\n\n    @SemanticUiTagMarker\n    infix fun H4(block: H4.() -> Unit): Unit = H4(attrs(), parent.consumer).visitNoInline(block)\n\n    @SemanticUiTagMarker\n    infix fun H5(block: H5.() -> Unit): Unit = H5(attrs(), parent.consumer).visitNoInline(block)\n\n    @SemanticUiTagMarker\n    infix fun H6(block: H6.() -> Unit): Unit = H6(attrs(), parent.consumer).visitNoInline(block)\n\n    @SemanticUiTagMarker\n    infix fun A(block: A.() -> Unit): Unit = A(attrs(), parent.consumer).visitNoInline(block)\n\n    @SemanticUiTagMarker\n    infix fun B(block: B.() -> Unit): Unit = B(attrs(), parent.consumer).visitNoInline(block)\n\n    @SemanticUiTagMarker\n    infix fun Button(block: BUTTON.() -> Unit): Unit = BUTTON(attrs(), parent.consumer).visitNoInline(block)\n\n    @SemanticUiTagMarker\n    infix fun Div(block: DIV.() -> Unit): Unit = DIV(attrs(), parent.consumer).visitNoInline(block)\n\n    @SemanticUiTagMarker\n    infix fun Form(block: FORM.() -> Unit): Unit = FORM(attrs(), parent.consumer).visitNoInline(block)\n\n    @SemanticUiTagMarker\n    infix fun I(block: I.() -> Unit): Unit = I(attrs(), parent.consumer).visitNoInline(block)\n\n    @SemanticUiTagMarker\n    infix fun Input(block: INPUT.() -> Unit): Unit = INPUT(attrs(), parent.consumer).visitNoInline(block)\n\n    @SemanticUiTagMarker\n    infix fun Img(block: IMG.() -> Unit): Unit = IMG(attrs(), parent.consumer).visitNoInline(block)\n\n    @SemanticUiTagMarker\n    infix fun Label(block: LABEL.() -> Unit): Unit = LABEL(attrs(), parent.consumer).visitNoInline(block)\n\n    @SemanticUiTagMarker\n    infix fun Ol(block: OL.() -> Unit): Unit = OL(attrs(), parent.consumer).visitNoInline(block)\n\n    @SemanticUiTagMarker\n    infix fun P(block: P.() -> Unit): Unit = P(attrs(), parent.consumer).visitNoInline(block)\n\n    @SemanticUiTagMarker\n    infix fun Span(block: SPAN.() -> Unit): Unit = SPAN(attrs(), parent.consumer).visitNoInline(block)\n\n    @SemanticUiTagMarker\n    infix fun Submit(block: BUTTON.() -> Unit): Unit = BUTTON(attrs(), parent.consumer).visitNoInline(block)\n\n    @SemanticUiTagMarker\n    infix fun Table(block: TABLE.() -> Unit): Unit = TABLE(attrs(), parent.consumer).visitNoInline(block)\n\n    @SemanticUiTagMarker\n    infix fun Ul(block: UL.() -> Unit): Unit = UL(attrs(), parent.consumer).visitNoInline(block)\n\n    // Adding Css Classes //////////////////////////////////////////////////////////////////////////////////////////////\n\n    @SemanticUiCssMarker\n    operator fun plus(cls: String): SemanticTag = apply { cssClasses.add(cls) }\n\n    @SemanticUiCssMarker\n    operator fun plus(classes: Array<out String>): SemanticTag = apply { cssClasses.addAll(classes) }\n\n    @SemanticUiCssMarker\n    inline fun with(block: SemanticTag.() -> SemanticTag): SemanticTag = this.run(block)\n\n    @SemanticUiCssMarker\n    fun with(vararg cls: String): SemanticTag = this + cls\n\n    @SemanticUiCssMarker\n    fun with(vararg cls: String, flow: DIV.() -> Unit): Unit = (this + cls).invoke(flow)\n\n    // Conditional classes\n\n    @SemanticUiConditionalMarker\n    fun given(\n            condition: Boolean,\n            action: SemanticTag.() -> SemanticTag,\n    ): SemanticTag = when (condition) {\n        false -> this\n        else -> this.action()\n    }\n\n    @SemanticUiConditionalMarker\n    fun givenNot(\n            condition: Boolean,\n            action: SemanticTag.() -> SemanticTag,\n    ): SemanticTag = given(!condition, action)\n\n    @SemanticUiConditionalMarker inline val then: SemanticTag get() = this\n\n    // SemanticUI Numbers //////////////////////////////////////////////////////////////////////////////////////////////\n\n    @SemanticUiCssMarker\n    fun number(int: Int): SemanticTag = number(SemanticNumber.of(int))\n\n    @SemanticUiCssMarker\n    fun number(int: Int, flow: DIV.() -> Unit): Unit = number(SemanticNumber.of(int), flow)\n\n    @SemanticUiCssMarker\n    fun number(number: SemanticNumber): SemanticTag = this + number.toString()\n\n    @SemanticUiCssMarker\n    fun number(number: SemanticNumber, flow: DIV.() -> Unit): Unit = with(number.toString(), flow = flow)\n\n    @SemanticUiCssMarker val one: SemanticTag get() = this + \"one\"\n    @SemanticUiCssMarker val two: SemanticTag get() = this + \"two\"\n    @SemanticUiCssMarker val three: SemanticTag get() = this + \"three\"\n    @SemanticUiCssMarker val four: SemanticTag get() = this + \"four\"\n    @SemanticUiCssMarker val five: SemanticTag get() = this + \"five\"\n    @SemanticUiCssMarker val six: SemanticTag get() = this + \"six\"\n    @SemanticUiCssMarker val seven: SemanticTag get() = this + \"seven\"\n    @SemanticUiCssMarker val eight: SemanticTag get() = this + \"eight\"\n    @SemanticUiCssMarker val nine: SemanticTag get() = this + \"nine\"\n    @SemanticUiCssMarker val ten: SemanticTag get() = this + \"ten\"\n    @SemanticUiCssMarker val eleven: SemanticTag get() = this + \"eleven\"\n    @SemanticUiCssMarker val twelve: SemanticTag get() = this + \"twelve\"\n    @SemanticUiCssMarker val thirteen: SemanticTag get() = this + \"thirteen\"\n    @SemanticUiCssMarker val fourteen: SemanticTag get() = this + \"fourteen\"\n    @SemanticUiCssMarker val fifteen: SemanticTag get() = this + \"fifteen\"\n    @SemanticUiCssMarker val sixteen: SemanticTag get() = this + \"sixteen\"\n\n    // SemanticUI Colors ///////////////////////////////////////////////////////////////////////////////////////////////\n\n    @SemanticUiCssMarker\n\n    fun color(color: SemanticColor): SemanticTag = when {\n        color.isSet -> with(color.toString())\n        else -> this\n    }\n\n    @SemanticUiCssMarker\n    fun color(color: SemanticColor, flow: DIV.() -> Unit): Unit = with(color.toString(), flow = flow)\n\n    @SemanticUiCssMarker val color: SemanticTag get() = this + \"color\"\n    @SemanticUiCssMarker val inverted: SemanticTag get() = this + \"inverted\"\n    @SemanticUiCssMarker val red: SemanticTag get() = this + \"red\"\n    @SemanticUiCssMarker val orange: SemanticTag get() = this + \"orange\"\n    @SemanticUiCssMarker val yellow: SemanticTag get() = this + \"yellow\"\n    @SemanticUiCssMarker val olive: SemanticTag get() = this + \"olive\"\n    @SemanticUiCssMarker val green: SemanticTag get() = this + \"green\"\n    @SemanticUiCssMarker val teal: SemanticTag get() = this + \"teal\"\n    @SemanticUiCssMarker val blue: SemanticTag get() = this + \"blue\"\n    @SemanticUiCssMarker val violet: SemanticTag get() = this + \"violet\"\n    @SemanticUiCssMarker val purple: SemanticTag get() = this + \"purple\"\n    @SemanticUiCssMarker val pink: SemanticTag get() = this + \"pink\"\n    @SemanticUiCssMarker val brown: SemanticTag get() = this + \"brown\"\n    @SemanticUiCssMarker val grey: SemanticTag get() = this + \"grey\"\n    @SemanticUiCssMarker val black: SemanticTag get() = this + \"black\"\n    @SemanticUiCssMarker val white: SemanticTag get() = this + \"white\"\n\n    // Sizes ///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    @SemanticUiCssMarker val short: SemanticTag get() = this + \"short\"\n    @SemanticUiCssMarker val long: SemanticTag get() = this + \"long\"\n\n    @SemanticUiCssMarker val full: SemanticTag get() = this + \"full\"\n\n    @SemanticUiCssMarker val tall: SemanticTag get() = this + \"tall\"\n\n    @SemanticUiCssMarker val mini: SemanticTag get() = this + \"mini\"\n    @SemanticUiCssMarker val tiny: SemanticTag get() = this + \"tiny\"\n    @SemanticUiCssMarker val small: SemanticTag get() = this + \"small\"\n    @SemanticUiCssMarker val medium: SemanticTag get() = this + \"medium\"\n    @SemanticUiCssMarker val large: SemanticTag get() = this + \"large\"\n    @SemanticUiCssMarker val big: SemanticTag get() = this + \"big\"\n    @SemanticUiCssMarker val huge: SemanticTag get() = this + \"huge\"\n    @SemanticUiCssMarker val massive: SemanticTag get() = this + \"massive\"\n\n    // SemanticUI Emphasis /////////////////////////////////////////////////////////////////////////////////////////////\n\n    @SemanticUiCssMarker val primary: SemanticTag get() = this + \"primary\"\n    @SemanticUiCssMarker val secondary: SemanticTag get() = this + \"secondary\"\n    @SemanticUiCssMarker val tertiary: SemanticTag get() = this + \"tertiary\"\n\n    @SemanticUiCssMarker val positive: SemanticTag get() = this + \"positive\"\n    @SemanticUiCssMarker val negative: SemanticTag get() = this + \"negative\"\n\n    @SemanticUiCssMarker val info: SemanticTag get() = this + \"info\"\n    @SemanticUiCssMarker val warning: SemanticTag get() = this + \"warning\"\n    @SemanticUiCssMarker val error: SemanticTag get() = this + \"error\"\n\n    // SemanticUI Brands\n\n    @SemanticUiCssMarker val facebook: SemanticTag get() = this + \"facebook\"\n    @SemanticUiCssMarker val google_plus: SemanticTag get() = this + \"google plus\"\n    @SemanticUiCssMarker val instagram: SemanticTag get() = this + \"instagram\"\n    @SemanticUiCssMarker val linkedin: SemanticTag get() = this + \"linkedin\"\n    @SemanticUiCssMarker val telegram: SemanticTag get() = this + \"telegram\"\n    @SemanticUiCssMarker val twitter: SemanticTag get() = this + \"twitter\"\n    @SemanticUiCssMarker val vk: SemanticTag get() = this + \"vk\"\n    @SemanticUiCssMarker val whatsapp: SemanticTag get() = this + \"whatsapp\"\n    @SemanticUiCssMarker val youtube: SemanticTag get() = this + \"youtube\"\n\n    // /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    // Semantic UI Words ///////////////////////////////////////////////////////////////////////////////////////////////\n    // /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n    @SemanticUiCssMarker val _in: SemanticTag get() = this + \"in\"\n    @SemanticUiCssMarker val accordion: SemanticTag get() = this + \"accordion\"\n    @SemanticUiCssMarker val actions: SemanticTag get() = this + \"actions\"\n    @SemanticUiCssMarker val active: SemanticTag get() = this + \"active\"\n    @SemanticUiCssMarker val aligned: SemanticTag get() = this + \"aligned\"\n    @SemanticUiCssMarker val animated: SemanticTag get() = this + \"animated\"\n    @SemanticUiCssMarker val animating: SemanticTag get() = this + \"animating\"\n    @SemanticUiCssMarker val attached: SemanticTag get() = this + \"attached\"\n    @SemanticUiCssMarker val author: SemanticTag get() = this + \"author\"\n    @SemanticUiCssMarker val avatar: SemanticTag get() = this + \"avatar\"\n    @SemanticUiCssMarker val bar: SemanticTag get() = this + \"bar\"\n    @SemanticUiCssMarker val basic: SemanticTag get() = this + \"basic\"\n    @SemanticUiCssMarker val below: SemanticTag get() = this + \"below\"\n    @SemanticUiCssMarker val block: SemanticTag get() = this + \"block\"\n    @SemanticUiCssMarker val bordered: SemanticTag get() = this + \"bordered\"\n    @SemanticUiCssMarker val bottom: SemanticTag get() = this + \"bottom\"\n    @SemanticUiCssMarker val bulleted: SemanticTag get() = this + \"bulleted\"\n    @SemanticUiCssMarker val button: SemanticTag get() = this + \"button\"\n    @SemanticUiCssMarker val buttons: SemanticTag get() = this + \"buttons\"\n    @SemanticUiCssMarker val card: SemanticTag get() = this + \"card\"\n    @SemanticUiCssMarker val cards: SemanticTag get() = this + \"cards\"\n    @SemanticUiCssMarker val celled: SemanticTag get() = this + \"celled\"\n    @SemanticUiCssMarker val center: SemanticTag get() = this + \"center\"\n    @SemanticUiCssMarker val centered: SemanticTag get() = this + \"centered\"\n    @SemanticUiCssMarker val checkbox: SemanticTag get() = this + \"checkbox\"\n    @SemanticUiCssMarker val circular: SemanticTag get() = this + \"circular\"\n    @SemanticUiCssMarker val clearing: SemanticTag get() = this + \"clearing\"\n    @SemanticUiCssMarker val collapsing: SemanticTag get() = this + \"collapsing\"\n    @SemanticUiCssMarker val column: SemanticTag get() = this + \"column\"\n    @SemanticUiCssMarker val comment: SemanticTag get() = this + \"comment\"\n    @SemanticUiCssMarker val comments: SemanticTag get() = this + \"comments\"\n    @SemanticUiCssMarker val compact: SemanticTag get() = this + \"compact\"\n    @SemanticUiCssMarker val completed: SemanticTag get() = this + \"completed\"\n    @SemanticUiCssMarker val computer: SemanticTag get() = this + \"computer\"\n    @SemanticUiCssMarker val container: SemanticTag get() = this + \"container\"\n    @SemanticUiCssMarker val content: SemanticTag get() = this + \"content\"\n    @SemanticUiCssMarker val corner: SemanticTag get() = this + \"corner\"\n    @SemanticUiCssMarker val default: SemanticTag get() = this + \"default\"\n    @SemanticUiCssMarker val definition: SemanticTag get() = this + \"definition\"\n    @SemanticUiCssMarker val description: SemanticTag get() = this + \"description\"\n    @SemanticUiCssMarker val detail: SemanticTag get() = this + \"detail\"\n    @SemanticUiCssMarker val dimmer: SemanticTag get() = this + \"dimmer\"\n    @SemanticUiCssMarker val disabled: SemanticTag get() = this + \"disabled\"\n    @SemanticUiCssMarker val divided: SemanticTag get() = this + \"divided\"\n    @SemanticUiCssMarker val divider: SemanticTag get() = this + \"divider\"\n    @SemanticUiCssMarker val dividing: SemanticTag get() = this + \"dividing\"\n    @SemanticUiCssMarker val double: SemanticTag get() = this + \"double\"\n    @SemanticUiCssMarker val doubling: SemanticTag get() = this + \"doubling\"\n    @SemanticUiCssMarker val down: SemanticTag get() = this + \"down\"\n    @SemanticUiCssMarker val dropdown: SemanticTag get() = this + \"dropdown\"\n    @SemanticUiCssMarker val elastic: SemanticTag get() = this + \"elastic\"\n    @SemanticUiCssMarker val empty: SemanticTag get() = this + \"empty\"\n    @SemanticUiCssMarker val equal: SemanticTag get() = this + \"equal\"\n    @SemanticUiCssMarker val extra: SemanticTag get() = this + \"extra\"\n    @SemanticUiCssMarker val fade: SemanticTag get() = this + \"fade\"\n    @SemanticUiCssMarker val fast: SemanticTag get() = this + \"fast\"\n    @SemanticUiCssMarker val field: SemanticTag get() = this + \"field\"\n    @SemanticUiCssMarker val fields: SemanticTag get() = this + \"fields\"\n    @SemanticUiCssMarker val fitted: SemanticTag get() = this + \"fitted\"\n    @SemanticUiCssMarker val fixed: SemanticTag get() = this + \"fixed\"\n    @SemanticUiCssMarker val floated: SemanticTag get() = this + \"floated\"\n    @SemanticUiCssMarker val floating: SemanticTag get() = this + \"floating\"\n    @SemanticUiCssMarker val flowing: SemanticTag get() = this + \"flowing\"\n    @SemanticUiCssMarker val fluid: SemanticTag get() = this + \"fluid\"\n    @SemanticUiCssMarker val form: SemanticTag get() = this + \"form\"\n    @SemanticUiCssMarker val front: SemanticTag get() = this + \"front\"\n    @SemanticUiCssMarker val fullscreen: SemanticTag get() = this + \"fullscreen\"\n    @SemanticUiCssMarker val grid: SemanticTag get() = this + \"grid\"\n    @SemanticUiCssMarker val header: SemanticTag get() = this + \"header\"\n    @SemanticUiCssMarker val hidden: SemanticTag get() = this + \"hidden\"\n    @SemanticUiCssMarker val horizontal: SemanticTag get() = this + \"horizontal\"\n    @SemanticUiCssMarker val horizontally: SemanticTag get() = this + \"horizontally\"\n    @SemanticUiCssMarker val icon: SemanticTag get() = this + \"icon\"\n    @SemanticUiCssMarker val icons: SemanticTag get() = this + \"icons\"\n    @SemanticUiCssMarker val image: SemanticTag get() = this + \"image\"\n    @SemanticUiCssMarker val images: SemanticTag get() = this + \"images\"\n    @SemanticUiCssMarker val indeterminate: SemanticTag get() = this + \"indeterminate\"\n    @SemanticUiCssMarker val inline: SemanticTag get() = this + \"inline\"\n    @SemanticUiCssMarker val input: SemanticTag get() = this + \"input\"\n    @SemanticUiCssMarker val instant: SemanticTag get() = this + \"instant\"\n    @SemanticUiCssMarker val internally: SemanticTag get() = this + \"internally\"\n    @SemanticUiCssMarker val item: SemanticTag get() = this + \"item\"\n    @SemanticUiCssMarker val items: SemanticTag get() = this + \"items\"\n    @SemanticUiCssMarker val justified: SemanticTag get() = this + \"justified\"\n    @SemanticUiCssMarker val label: SemanticTag get() = this + \"label\"\n    @SemanticUiCssMarker val labeled: SemanticTag get() = this + \"labeled\"\n    @SemanticUiCssMarker val labels: SemanticTag get() = this + \"labels\"\n    @SemanticUiCssMarker val left: SemanticTag get() = this + \"left\"\n    @SemanticUiCssMarker val line: SemanticTag get() = this + \"line\"\n    @SemanticUiCssMarker val link: SemanticTag get() = this + \"link\"\n    @SemanticUiCssMarker val list: SemanticTag get() = this + \"list\"\n    @SemanticUiCssMarker val loader: SemanticTag get() = this + \"loader\"\n    @SemanticUiCssMarker val loading: SemanticTag get() = this + \"loading\"\n    @SemanticUiCssMarker val logo: SemanticTag get() = this + \"logo\"\n    @SemanticUiCssMarker val menu: SemanticTag get() = this + \"menu\"\n    @SemanticUiCssMarker val message: SemanticTag get() = this + \"message\"\n    @SemanticUiCssMarker val meta: SemanticTag get() = this + \"meta\"\n    @SemanticUiCssMarker val metadata: SemanticTag get() = this + \"metadata\"\n    @SemanticUiCssMarker val middle: SemanticTag get() = this + \"middle\"\n    @SemanticUiCssMarker val minimal: SemanticTag get() = this + \"minimal\"\n    @SemanticUiCssMarker val mobile: SemanticTag get() = this + \"mobile\"\n    @SemanticUiCssMarker val modal: SemanticTag get() = this + \"modal\"\n    @SemanticUiCssMarker val modals: SemanticTag get() = this + \"modals\"\n    @SemanticUiCssMarker val move: SemanticTag get() = this + \"move\"\n    @SemanticUiCssMarker val only: SemanticTag get() = this + \"only\"\n    @SemanticUiCssMarker val ordered: SemanticTag get() = this + \"ordered\"\n    @SemanticUiCssMarker val out: SemanticTag get() = this + \"out\"\n    @SemanticUiCssMarker val overlay: SemanticTag get() = this + \"overlay\"\n    @SemanticUiCssMarker val padded: SemanticTag get() = this + \"padded\"\n    @SemanticUiCssMarker val page: SemanticTag get() = this + \"page\"\n    @SemanticUiCssMarker val pagination: SemanticTag get() = this + \"pagination\"\n    @SemanticUiCssMarker val paragraph: SemanticTag get() = this + \"paragraph\"\n    @SemanticUiCssMarker val piled: SemanticTag get() = this + \"piled\"\n    @SemanticUiCssMarker val placeholder: SemanticTag get() = this + \"placeholder\"\n    @SemanticUiCssMarker val pointing: SemanticTag get() = this + \"pointing\"\n    @SemanticUiCssMarker val popup: SemanticTag get() = this + \"popup\"\n    @SemanticUiCssMarker val progress: SemanticTag get() = this + \"progress\"\n    @SemanticUiCssMarker val pusher: SemanticTag get() = this + \"pusher\"\n    @SemanticUiCssMarker val raised: SemanticTag get() = this + \"raised\"\n    @SemanticUiCssMarker val rectangular: SemanticTag get() = this + \"rectangular\"\n    @SemanticUiCssMarker val relaxed: SemanticTag get() = this + \"relaxed\"\n    @SemanticUiCssMarker val reply: SemanticTag get() = this + \"reply\"\n    @SemanticUiCssMarker val reveal: SemanticTag get() = this + \"reveal\"\n    @SemanticUiCssMarker val reversed: SemanticTag get() = this + \"reversed\"\n    @SemanticUiCssMarker val ribbon: SemanticTag get() = this + \"ribbon\"\n    @SemanticUiCssMarker val right: SemanticTag get() = this + \"right\"\n    @SemanticUiCssMarker val rotate: SemanticTag get() = this + \"rotate\"\n    @SemanticUiCssMarker val rounded: SemanticTag get() = this + \"rounded\"\n    @SemanticUiCssMarker val row: SemanticTag get() = this + \"row\"\n    @SemanticUiCssMarker val scale: SemanticTag get() = this + \"scale\"\n    @SemanticUiCssMarker val scrolling: SemanticTag get() = this + \"scrolling\"\n    @SemanticUiCssMarker val search: SemanticTag get() = this + \"search\"\n    @SemanticUiCssMarker val section: SemanticTag get() = this + \"section\"\n    @SemanticUiCssMarker val segment: SemanticTag get() = this + \"segment\"\n    @SemanticUiCssMarker val segments: SemanticTag get() = this + \"segments\"\n    @SemanticUiCssMarker val selectable: SemanticTag get() = this + \"selectable\"\n    @SemanticUiCssMarker val selected: SemanticTag get() = this + \"selected\"\n    @SemanticUiCssMarker val selection: SemanticTag get() = this + \"selection\"\n    @SemanticUiCssMarker val shrink: SemanticTag get() = this + \"shrink\"\n    @SemanticUiCssMarker val sidebar: SemanticTag get() = this + \"sidebar\"\n    @SemanticUiCssMarker val slider: SemanticTag get() = this + \"slider\"\n    @SemanticUiCssMarker val slow: SemanticTag get() = this + \"slow\"\n    @SemanticUiCssMarker val sortable: SemanticTag get() = this + \"sortable\"\n    @SemanticUiCssMarker val spaced: SemanticTag get() = this + \"spaced\"\n    @SemanticUiCssMarker val square: SemanticTag get() = this + \"square\"\n    @SemanticUiCssMarker val stackable: SemanticTag get() = this + \"stackable\"\n    @SemanticUiCssMarker val stacked: SemanticTag get() = this + \"stacked\"\n    @SemanticUiCssMarker val statistic: SemanticTag get() = this + \"statistic\"\n    @SemanticUiCssMarker val statistics: SemanticTag get() = this + \"statistics\"\n    @SemanticUiCssMarker val step: SemanticTag get() = this + \"step\"\n    @SemanticUiCssMarker val steps: SemanticTag get() = this + \"steps\"\n    @SemanticUiCssMarker val sticky: SemanticTag get() = this + \"sticky\"\n    @SemanticUiCssMarker val stretched: SemanticTag get() = this + \"stretched\"\n    @SemanticUiCssMarker val striped: SemanticTag get() = this + \"striped\"\n    @SemanticUiCssMarker val styled: SemanticTag get() = this + \"styled\"\n    @SemanticUiCssMarker val sub: SemanticTag get() = this + \"sub\"\n    @SemanticUiCssMarker val success: SemanticTag get() = this + \"success\"\n    @SemanticUiCssMarker val tab: SemanticTag get() = this + \"tab\"\n    @SemanticUiCssMarker val table: SemanticTag get() = this + \"table\"\n    @SemanticUiCssMarker val tablet: SemanticTag get() = this + \"tablet\"\n    @SemanticUiCssMarker val tabular: SemanticTag get() = this + \"tabular\"\n    @SemanticUiCssMarker val tag: SemanticTag get() = this + \"tag\"\n    @SemanticUiCssMarker val text: SemanticTag get() = this + \"text\"\n    @SemanticUiCssMarker val threaded: SemanticTag get() = this + \"threaded\"\n    @SemanticUiCssMarker val title: SemanticTag get() = this + \"title\"\n    @SemanticUiCssMarker val toast: SemanticTag get() = this + \"toast\"\n    @SemanticUiCssMarker val toastBox: SemanticTag get() = this + \"toast-box\"\n    @SemanticUiCssMarker val toastContainer: SemanticTag get() = this + \"toast-container\"\n    @SemanticUiCssMarker val toggle: SemanticTag get() = this + \"toggle\"\n    @SemanticUiCssMarker val top: SemanticTag get() = this + \"top\"\n    @SemanticUiCssMarker val transition: SemanticTag get() = this + \"transition\"\n    @SemanticUiCssMarker val transparent: SemanticTag get() = this + \"transparent\"\n    @SemanticUiCssMarker val unstackable: SemanticTag get() = this + \"unstackable\"\n    @SemanticUiCssMarker val up: SemanticTag get() = this + \"up\"\n    @SemanticUiCssMarker val usual: SemanticTag get() = this + \"usual\"\n    @SemanticUiCssMarker val value: SemanticTag get() = this + \"value\"\n    @SemanticUiCssMarker val vertical: SemanticTag get() = this + \"vertical\"\n    @SemanticUiCssMarker val vertically: SemanticTag get() = this + \"vertically\"\n    @SemanticUiCssMarker val very: SemanticTag get() = this + \"very\"\n    @SemanticUiCssMarker val visible: SemanticTag get() = this + \"visible\"\n    @SemanticUiCssMarker val wide: SemanticTag get() = this + \"wide\"\n    @SemanticUiCssMarker val width: SemanticTag get() = this + \"width\"\n    @SemanticUiCssMarker val wireframe: SemanticTag get() = this + \"wireframe\"\n}\n","package de.peekandpoke.kraft.semanticui\n\nimport kotlinx.html.Tag\nimport kotlinx.html.visitTag\n\n@PublishedApi\ninternal fun <T : Tag> T.visitNoInline(block: T.() -> Unit) {\n    visitTag(block)\n}\n\n@Suppress(\"unused\")\ninternal object Fn {\n    // #\n    const val f0001: String = \"a\"\n    const val f0002: String = \"b\"\n    const val f0003: String = \"c\"\n    const val f0004: String = \"d\"\n    const val f0005: String = \"e\"\n    const val f0006: String = \"f\"\n    const val f0007: String = \"g\"\n    const val f0008: String = \"h\"\n    const val f0009: String = \"i\"\n    const val f0010: String = \"j\"\n    const val f0011: String = \"k\"\n    const val f0012: String = \"l\"\n    const val f0013: String = \"m\"\n    const val f0014: String = \"n\"\n    const val f0015: String = \"o\"\n    const val f0016: String = \"p\"\n    const val f0017: String = \"q\"\n    const val f0018: String = \"r\"\n    const val f0019: String = \"s\"\n    const val f0020: String = \"t\"\n\n    // a#\n    const val f0021: String = \"aa\"\n    const val f0022: String = \"ab\"\n    const val f0023: String = \"ac\"\n    const val f0024: String = \"ad\"\n    const val f0025: String = \"ae\"\n    const val f0026: String = \"af\"\n    const val f0027: String = \"ag\"\n    const val f0028: String = \"ah\"\n    const val f0029: String = \"ai\"\n    const val f0030: String = \"aj\"\n    const val f0031: String = \"ak\"\n    const val f0032: String = \"al\"\n    const val f0033: String = \"am\"\n    const val f0034: String = \"an\"\n    const val f0035: String = \"ao\"\n    const val f0036: String = \"ap\"\n    const val f0037: String = \"aq\"\n    const val f0038: String = \"ar\"\n    const val f0039: String = \"as\"\n    const val f0040: String = \"at\"\n\n    // b#\n    const val f0041: String = \"ba\"\n    const val f0042: String = \"bb\"\n    const val f0043: String = \"bc\"\n    const val f0044: String = \"bd\"\n    const val f0045: String = \"be\"\n    const val f0046: String = \"bf\"\n    const val f0047: String = \"bg\"\n    const val f0048: String = \"bh\"\n    const val f0049: String = \"bi\"\n    const val f0050: String = \"bj\"\n    const val f0051: String = \"bk\"\n    const val f0052: String = \"bl\"\n    const val f0053: String = \"bm\"\n    const val f0054: String = \"bn\"\n    const val f0055: String = \"bo\"\n    const val f0056: String = \"bp\"\n    const val f0057: String = \"bq\"\n    const val f0058: String = \"br\"\n    const val f0059: String = \"bs\"\n    const val f0060: String = \"bt\"\n\n    // c#\n    const val f0061: String = \"ca\"\n    const val f0062: String = \"cb\"\n    const val f0063: String = \"cc\"\n    const val f0064: String = \"cd\"\n    const val f0065: String = \"ce\"\n    const val f0066: String = \"cf\"\n    const val f0067: String = \"cg\"\n    const val f0068: String = \"ch\"\n    const val f0069: String = \"ci\"\n    const val f0070: String = \"cj\"\n    const val f0071: String = \"ck\"\n    const val f0072: String = \"cl\"\n    const val f0073: String = \"cm\"\n    const val f0074: String = \"cn\"\n    const val f0075: String = \"co\"\n    const val f0076: String = \"cp\"\n    const val f0077: String = \"cq\"\n    const val f0078: String = \"cr\"\n    const val f0079: String = \"cs\"\n    const val f0080: String = \"ct\"\n\n    // d#\n    const val f0081: String = \"da\"\n    const val f0082: String = \"db\"\n    const val f0083: String = \"dc\"\n    const val f0084: String = \"dd\"\n    const val f0085: String = \"de\"\n    const val f0086: String = \"df\"\n    const val f0087: String = \"dg\"\n    const val f0088: String = \"dh\"\n    const val f0089: String = \"di\"\n    const val f0090: String = \"dj\"\n    const val f0091: String = \"dk\"\n    const val f0092: String = \"dl\"\n    const val f0093: String = \"dm\"\n    const val f0094: String = \"dn\"\n    const val f0095: String = \"do\"\n    const val f0096: String = \"dp\"\n    const val f0097: String = \"dq\"\n    const val f0098: String = \"dr\"\n    const val f0099: String = \"ds\"\n    const val f0100: String = \"dt\"\n\n    // e#\n    const val f0101: String = \"ea\"\n    const val f0102: String = \"eb\"\n    const val f0103: String = \"ec\"\n    const val f0104: String = \"ed\"\n    const val f0105: String = \"ee\"\n    const val f0106: String = \"ef\"\n    const val f0107: String = \"eg\"\n    const val f0108: String = \"eh\"\n    const val f0109: String = \"ei\"\n    const val f0110: String = \"ej\"\n    const val f0111: String = \"ek\"\n    const val f0112: String = \"el\"\n    const val f0113: String = \"em\"\n    const val f0114: String = \"en\"\n    const val f0115: String = \"eo\"\n    const val f0116: String = \"ep\"\n    const val f0117: String = \"eq\"\n    const val f0118: String = \"er\"\n    const val f0119: String = \"es\"\n    const val f0120: String = \"et\"\n\n    // f#\n    const val f0121: String = \"fa\"\n    const val f0122: String = \"fb\"\n    const val f0123: String = \"fc\"\n    const val f0124: String = \"fd\"\n    const val f0125: String = \"fe\"\n    const val f0126: String = \"ff\"\n    const val f0127: String = \"fg\"\n    const val f0128: String = \"fh\"\n    const val f0129: String = \"fi\"\n    const val f0130: String = \"fj\"\n    const val f0131: String = \"fk\"\n    const val f0132: String = \"fl\"\n    const val f0133: String = \"fm\"\n    const val f0134: String = \"fn\"\n    const val f0135: String = \"fo\"\n    const val f0136: String = \"fp\"\n    const val f0137: String = \"fq\"\n    const val f0138: String = \"fr\"\n    const val f0139: String = \"fs\"\n    const val f0140: String = \"ft\"\n\n    // g#\n    const val f0141: String = \"ga\"\n    const val f0142: String = \"gb\"\n    const val f0143: String = \"gc\"\n    const val f0144: String = \"gd\"\n    const val f0145: String = \"ge\"\n    const val f0146: String = \"gf\"\n    const val f0147: String = \"gg\"\n    const val f0148: String = \"gh\"\n    const val f0149: String = \"gi\"\n    const val f0150: String = \"gj\"\n    const val f0151: String = \"gk\"\n    const val f0152: String = \"gl\"\n    const val f0153: String = \"gm\"\n    const val f0154: String = \"gn\"\n    const val f0155: String = \"go\"\n    const val f0156: String = \"gp\"\n    const val f0157: String = \"gq\"\n    const val f0158: String = \"gr\"\n    const val f0159: String = \"gs\"\n    const val f0160: String = \"gt\"\n\n    // h#\n    const val f0161: String = \"ha\"\n    const val f0162: String = \"hb\"\n    const val f0163: String = \"hc\"\n    const val f0164: String = \"hd\"\n    const val f0165: String = \"he\"\n    const val f0166: String = \"hf\"\n    const val f0167: String = \"hg\"\n    const val f0168: String = \"hh\"\n    const val f0169: String = \"hi\"\n    const val f0170: String = \"hj\"\n    const val f0171: String = \"hk\"\n    const val f0172: String = \"hl\"\n    const val f0173: String = \"hm\"\n    const val f0174: String = \"hn\"\n    const val f0175: String = \"ho\"\n    const val f0176: String = \"hp\"\n    const val f0177: String = \"hq\"\n    const val f0178: String = \"hr\"\n    const val f0179: String = \"hs\"\n    const val f0180: String = \"ht\"\n\n    // i#\n    const val f0181: String = \"ia\"\n    const val f0182: String = \"ib\"\n    const val f0183: String = \"ic\"\n    const val f0184: String = \"id\"\n    const val f0185: String = \"ie\"\n    const val f0186: String = \"if\"\n    const val f0187: String = \"ig\"\n    const val f0188: String = \"ih\"\n    const val f0189: String = \"ii\"\n    const val f0190: String = \"ij\"\n    const val f0191: String = \"ik\"\n    const val f0192: String = \"il\"\n    const val f0193: String = \"im\"\n    const val f0194: String = \"in\"\n    const val f0195: String = \"io\"\n    const val f0196: String = \"ip\"\n    const val f0197: String = \"iq\"\n    const val f0198: String = \"ir\"\n    const val f0199: String = \"is\"\n    const val f0200: String = \"it\"\n\n    // j#\n    const val f0201: String = \"ja\"\n    const val f0202: String = \"jb\"\n    const val f0203: String = \"jc\"\n    const val f0204: String = \"jd\"\n    const val f0205: String = \"je\"\n    const val f0206: String = \"jf\"\n    const val f0207: String = \"jg\"\n    const val f0208: String = \"jh\"\n    const val f0209: String = \"ji\"\n    const val f0210: String = \"jj\"\n    const val f0211: String = \"jk\"\n    const val f0212: String = \"jl\"\n    const val f0213: String = \"jm\"\n    const val f0214: String = \"jn\"\n    const val f0215: String = \"jo\"\n    const val f0216: String = \"jp\"\n    const val f0217: String = \"jq\"\n    const val f0218: String = \"jr\"\n    const val f0219: String = \"js\"\n    const val f0220: String = \"jt\"\n\n    // k#\n    const val f0221: String = \"ka\"\n    const val f0222: String = \"kb\"\n    const val f0223: String = \"kc\"\n    const val f0224: String = \"kd\"\n    const val f0225: String = \"ke\"\n    const val f0226: String = \"kf\"\n    const val f0227: String = \"kg\"\n    const val f0228: String = \"kh\"\n    const val f0229: String = \"ki\"\n    const val f0230: String = \"kj\"\n    const val f0231: String = \"kk\"\n    const val f0232: String = \"kl\"\n    const val f0233: String = \"km\"\n    const val f0234: String = \"kn\"\n    const val f0235: String = \"ko\"\n    const val f0236: String = \"kp\"\n    const val f0237: String = \"kq\"\n    const val f0238: String = \"kr\"\n    const val f0239: String = \"ks\"\n    const val f0240: String = \"kt\"\n\n    // l#\n    const val f0241: String = \"la\"\n    const val f0242: String = \"lb\"\n    const val f0243: String = \"lc\"\n    const val f0244: String = \"ld\"\n    const val f0245: String = \"le\"\n    const val f0246: String = \"lf\"\n    const val f0247: String = \"lg\"\n    const val f0248: String = \"lh\"\n    const val f0249: String = \"li\"\n    const val f0250: String = \"lj\"\n    const val f0251: String = \"lk\"\n    const val f0252: String = \"ll\"\n    const val f0253: String = \"lm\"\n    const val f0254: String = \"ln\"\n    const val f0255: String = \"lo\"\n    const val f0256: String = \"lp\"\n    const val f0257: String = \"lq\"\n    const val f0258: String = \"lr\"\n    const val f0259: String = \"ls\"\n    const val f0260: String = \"lt\"\n\n    // m#\n    const val f0261: String = \"ma\"\n    const val f0262: String = \"mb\"\n    const val f0263: String = \"mc\"\n    const val f0264: String = \"md\"\n    const val f0265: String = \"me\"\n    const val f0266: String = \"mf\"\n    const val f0267: String = \"mg\"\n    const val f0268: String = \"mh\"\n    const val f0269: String = \"mi\"\n    const val f0270: String = \"mj\"\n    const val f0271: String = \"mk\"\n    const val f0272: String = \"ml\"\n    const val f0273: String = \"mm\"\n    const val f0274: String = \"mn\"\n    const val f0275: String = \"mo\"\n    const val f0276: String = \"mp\"\n    const val f0277: String = \"mq\"\n    const val f0278: String = \"mr\"\n    const val f0279: String = \"ms\"\n    const val f0280: String = \"mt\"\n\n    // n#\n    const val f0281: String = \"na\"\n    const val f0282: String = \"nb\"\n    const val f0283: String = \"nc\"\n    const val f0284: String = \"nd\"\n    const val f0285: String = \"ne\"\n    const val f0286: String = \"nf\"\n    const val f0287: String = \"ng\"\n    const val f0288: String = \"nh\"\n    const val f0289: String = \"ni\"\n    const val f0290: String = \"nj\"\n    const val f0291: String = \"nk\"\n    const val f0292: String = \"nl\"\n    const val f0293: String = \"nm\"\n    const val f0294: String = \"nn\"\n    const val f0295: String = \"no\"\n    const val f0296: String = \"np\"\n    const val f0297: String = \"nq\"\n    const val f0298: String = \"nr\"\n    const val f0299: String = \"ns\"\n    const val f0300: String = \"nt\"\n\n    // A#\n    const val f9001: String = \"Aa\"\n    const val f9002: String = \"Ab\"\n    const val f9003: String = \"Ac\"\n    const val f9004: String = \"Ad\"\n    const val f9005: String = \"Ae\"\n    const val f9006: String = \"Af\"\n    const val f9007: String = \"Ag\"\n    const val f9008: String = \"Ah\"\n    const val f9009: String = \"Ai\"\n    const val f9010: String = \"Aj\"\n    const val f9011: String = \"Ak\"\n    const val f9012: String = \"Al\"\n    const val f9013: String = \"Am\"\n    const val f9014: String = \"An\"\n    const val f9015: String = \"Ao\"\n    const val f9016: String = \"Ap\"\n    const val f9017: String = \"Aq\"\n    const val f9018: String = \"Ar\"\n    const val f9019: String = \"As\"\n    const val f9020: String = \"At\"\n\n    // B#\n    const val f9021: String = \"Ba\"\n    const val f9022: String = \"Bb\"\n    const val f9023: String = \"Bc\"\n    const val f9024: String = \"Bd\"\n    const val f9025: String = \"Be\"\n    const val f9026: String = \"Bf\"\n    const val f9027: String = \"Bg\"\n    const val f9028: String = \"Bh\"\n    const val f9029: String = \"Bi\"\n    const val f9030: String = \"Bj\"\n    const val f9031: String = \"Bk\"\n    const val f9032: String = \"Bl\"\n    const val f9033: String = \"Bm\"\n    const val f9034: String = \"Bn\"\n    const val f9035: String = \"Bo\"\n    const val f9036: String = \"Bp\"\n    const val f9037: String = \"Bq\"\n    const val f9038: String = \"Br\"\n    const val f9039: String = \"Bs\"\n    const val f9040: String = \"Bt\"\n\n    // C#\n    const val f9041: String = \"Ca\"\n    const val f9042: String = \"Cb\"\n    const val f9043: String = \"Cc\"\n    const val f9044: String = \"Cd\"\n    const val f9045: String = \"Ce\"\n    const val f9046: String = \"Cf\"\n    const val f9047: String = \"Cg\"\n    const val f9048: String = \"Ch\"\n    const val f9049: String = \"Ci\"\n    const val f9050: String = \"Cj\"\n    const val f9051: String = \"Ck\"\n    const val f9052: String = \"Cl\"\n    const val f9053: String = \"Cm\"\n    const val f9054: String = \"Cn\"\n    const val f9055: String = \"Co\"\n    const val f9056: String = \"Cp\"\n    const val f9057: String = \"Cq\"\n    const val f9058: String = \"Cr\"\n    const val f9059: String = \"Cs\"\n    const val f9060: String = \"Ct\"\n\n    // D#\n    const val f9061: String = \"Da\"\n    const val f9062: String = \"Db\"\n    const val f9063: String = \"Dc\"\n    const val f9064: String = \"Dd\"\n    const val f9065: String = \"De\"\n    const val f9066: String = \"Df\"\n    const val f9067: String = \"Dg\"\n    const val f9068: String = \"Dh\"\n    const val f9069: String = \"Di\"\n    const val f9070: String = \"Dj\"\n    const val f9071: String = \"Dk\"\n    const val f9072: String = \"Dl\"\n    const val f9073: String = \"Dm\"\n    const val f9074: String = \"Dn\"\n    const val f9075: String = \"Do\"\n    const val f9076: String = \"Dp\"\n    const val f9077: String = \"Dq\"\n    const val f9078: String = \"Dr\"\n    const val f9079: String = \"Ds\"\n    const val f9080: String = \"Dt\"\n}\n",null,"package de.peekandpoke.kraft.semanticui\n\nimport kotlinx.css.CssBuilder\nimport kotlinx.html.CommonAttributeGroupFacade\nimport kotlinx.html.style\n\ndata class InlineStyle(val css: String)\n\nfun inlineStyle(block: CssBuilder.() -> Unit): InlineStyle = InlineStyle(CssBuilder().apply(block).toString())\n\nfun CommonAttributeGroupFacade.css(block: CssBuilder.() -> Unit) = css(CssBuilder().apply(block))\n\nfun CommonAttributeGroupFacade.css(builder: CssBuilder) {\n    style = builder.toString()\n}\n\nfun CommonAttributeGroupFacade.css(css: InlineStyle) {\n    style = css.css\n}\n\n","package de.peekandpoke.kraft.semanticui\n\nimport kotlinx.html.FlowContent\nimport kotlinx.html.Tag\nimport kotlin.jvm.JvmName\n\n@SemanticUiDslMarker\nval Tag.ui: SemanticTag\n    get() = SemanticTag(this, mutableListOf(\"ui\"))\n\n@SemanticUiDslMarker\nval Tag.noui: SemanticTag\n    get() = SemanticTag(this, mutableListOf(\"\"))\n\n@SemanticIconMarker\nval FlowContent.icon: SemanticIcon\n    get() = SemanticIcon(this)\n\n@SemanticIconMarker\nval FlowContent.emoji: SemanticEmoji\n    get() = SemanticEmoji(this)\n\n@SemanticIconMarker\nval FlowContent.flag: SemanticFlag\n    get() = SemanticFlag(this)\n\n/**\n * Helps the compiler to identify functions that operate on [FlowContent].\n */\ntypealias RenderFn = FlowContent.() -> Unit\n\n/**\n * Helps the compiler to identify functions that operate on T.\n */\ntypealias RenderFunc<T> = T.() -> Unit\n\n/**\n * Helps the compiler to identify a code block that is supposed to run on a semantic tag\n */\n@JvmName(\"renderFn\")\nfun renderFn(block: RenderFn): RenderFn = block\n\n/**\n * Helps the compiler to identify a code block that is supposed to run on a semantic tag\n */\n@JvmName(\"renderFnT\")\nfun <T : Tag> renderFn(block: RenderFunc<T>): RenderFunc<T> = block\n\n/**\n * Helps the compiler to identify a code block that is supposed to run on a [FlowContent]\n */\nfun flowContent(block: FlowContent.() -> Unit) = block\n\n/**\n * Shorthand type\n */\ntypealias SemanticFn = SemanticTag.() -> SemanticTag\n\n/**\n * Helps the compiler to identify a code block that is supposed to run on a semantic tag\n */\nfun semantic(block: SemanticFn): SemanticFn = block\n\n/**\n * Shorthand type\n */\ntypealias SemanticIconFn = SemanticIcon.() -> SemanticIcon\n\n/**\n * Helps the compiler to identify a code block that is supposed to run on a semantic tag\n */\nfun semanticIcon(block: SemanticIconFn): SemanticIconFn = block\n\n/**\n * Shorthand type\n */\ntypealias SemanticEmojiFn = SemanticEmoji.() -> SemanticEmoji\n\n/**\n * Helps the compiler to identify a code block that is supposed to run on a semantic tag\n */\nfun semanticEmoji(block: SemanticEmojiFn): SemanticEmojiFn = block\n","package de.peekandpoke.ultra.common\n\n/**\n * Defines a typed key to be used with [TypedAttributes] and [MutableTypedAttributes]\n */\nclass TypedKey<T>(val name: String = \"\") {\n    override fun toString() = name\n}\n\n/**\n * Map of [TypedKey] to values\n */\ndata class TypedAttributes(val entries: Map<TypedKey<*>, Any?>) {\n\n    companion object {\n        /** Empty instance */\n        val empty = TypedAttributes(emptyMap())\n\n        /** Builder method */\n        operator fun invoke(builder: Builder.() -> Unit) = of(builder)\n\n        /** Builder method */\n        fun of(builder: Builder.() -> Unit) = Builder().apply(builder).build()\n    }\n\n    /** Builder for [TypedAttributes] */\n    class Builder {\n\n        private val entries = mutableMapOf<TypedKey<*>, Any?>()\n\n        /**\n         * Adds an entry by [key] and [value]\n         */\n        fun <T> add(key: TypedKey<T>, value: T) {\n            entries[key] = value\n        }\n\n        /**\n         * Builds the [TypedAttributes] instance\n         */\n        internal fun build() = TypedAttributes(entries.toMap())\n    }\n\n    /**\n     * Gets the number of entries\n     */\n    val size: Int = entries.size\n\n    /**\n     * Converts this to a mutable [MutableTypedAttributes] collection.\n     */\n    fun asMutable(): MutableTypedAttributes = MutableTypedAttributes(entries)\n\n    /**\n     * Gets an entry by [key] or null if nothing is there\n     */\n    operator fun <T> get(key: TypedKey<T>): T? {\n        @Suppress(\"UNCHECKED_CAST\")\n        return entries[key] as T?\n    }\n\n    /**\n     * Adds an entry by [key] and [value].\n     *\n     * Returns a new instance of [TypedAttributes].\n     */\n    fun <T> plus(key: TypedKey<T>, value: T) = TypedAttributes(\n        entries.plus(key to value)\n    )\n\n    /**\n     * Adds all entries from [other].\n     *\n     * Returns a new instance of [TypedAttributes].\n     */\n    fun plus(other: TypedAttributes) = copy(\n        entries = entries.plus(other.entries)\n    )\n\n    /**\n     * Adds entries from the [builder].\n     *\n     * Returns a new instance of [TypedAttributes].\n     */\n    fun plus(builder: Builder.() -> Unit): TypedAttributes {\n        val built = of(builder)\n\n        return copy(\n            entries = entries.plus(built.entries)\n        )\n    }\n}\n\n/**\n * Map of [TypedKey] to values\n */\nclass MutableTypedAttributes internal constructor(entries: Map<TypedKey<*>, Any?> = emptyMap()) {\n\n    companion object {\n        /**\n         * Empty instance\n         */\n        fun empty() = MutableTypedAttributes(emptyMap())\n\n        /**\n         * Builder method\n         */\n        operator fun invoke(builder: Builder.() -> Unit) = of(builder)\n\n        /**\n         * Builder method\n         */\n        fun of(builder: Builder.() -> Unit) = Builder().apply(builder).build()\n    }\n\n    /**\n     * Builder for [MutableTypedAttributes]\n     */\n    class Builder {\n\n        private val entries = mutableMapOf<TypedKey<*>, Any?>()\n\n        /**\n         * Adds an entry by [key] and [value]\n         */\n        fun <T> add(key: TypedKey<T>, value: T) {\n            entries[key] = value\n        }\n\n        /**\n         * Builds the [MutableTypedAttributes] instance\n         */\n        fun build() = MutableTypedAttributes(entries.toMap())\n    }\n\n    /**\n     * The entries\n     */\n    private val _entries: MutableMap<TypedKey<*>, Any?> = entries.toMutableMap()\n\n    /**\n     * Gets the stored entries\n     */\n    val entries get(): Map<TypedKey<*>, Any?> = _entries.toMap()\n\n    /**\n     * Gets the number of entries\n     */\n    val size: Int get() = _entries.size\n\n    /**\n     * Converts this to an immutable [TypedAttributes] collection.\n     */\n    fun asImmutable(): TypedAttributes = TypedAttributes(_entries.toMap())\n\n    /**\n     * Gets an entry by [key] or null if nothing is there\n     */\n    operator fun <T> get(key: TypedKey<T>): T? {\n        @Suppress(\"UNCHECKED_CAST\")\n        return _entries[key] as T?\n    }\n\n    /**\n     * Sets an entry by [key] with the given [value]\n     */\n    operator fun <T> set(key: TypedKey<T>, value: T) {\n        RunSync(_entries) {\n            _entries[key] = value\n        }\n    }\n\n    /**\n     * Returns 'true' when the given key is set even if the value is falsy, like null, false etc.\n     */\n    fun <T> has(key: TypedKey<T>) = _entries.containsKey(key)\n\n    /**\n     * Remove an entry by [key]\n     */\n    fun <T> remove(key: TypedKey<T>) {\n        RunSync(_entries) {\n            _entries.remove(key)\n        }\n    }\n\n    /**\n     * Gets the value for the given [key] it the value is present.\n     *\n     * If the value is not present or null, it will be produced and stored.\n     */\n    fun <T> getOrPut(key: TypedKey<T>, produce: () -> T): T {\n\n        return RunSync(_entries) {\n\n            when (val value = get(key)) {\n                null -> produce().also {\n                    set(key, it)\n                }\n\n                else -> value\n            }\n        }\n    }\n\n    /**\n     * Sets an entry by [key] with the given [value] when the [condition] is true.\n     *\n     * The [condition] is executed with the current value for the [key].\n     *\n     * Returns 'true' if the value was actually updated.\n     */\n    fun <T> setWhen(key: TypedKey<T>, value: T, condition: (T?) -> Boolean): Boolean {\n        return RunSync(_entries) {\n            val current = get(key)\n\n            condition(current).also { result ->\n                if (result) {\n                    _entries[key] = value\n                }\n            }\n        }\n    }\n\n    /**\n     * Creates a clone of this instance by shallow cloning the contained [_entries]\n     */\n    fun clone() = MutableTypedAttributes(entries = _entries.toMap())\n}\n","package common.datetime\n\nimport de.peekandpoke.ultra.common.datetime.MpLocalDate\nimport de.peekandpoke.ultra.common.datetime.MpLocalTime\nimport de.peekandpoke.ultra.common.datetime.MpTimezone\nimport de.peekandpoke.ultra.common.datetime.MpZonedDateTime\nimport de.peekandpoke.ultra.common.datetime.MpZonedDateTimeRange\nimport kotlinx.datetime.DateTimeUnit\n\nclass DateTimeRangeConverter(\n    private val timezone: MpTimezone,\n    private val from: MpLocalDate,\n    private val to: MpLocalDate,\n) {\n    val fromNoonToNoon: MpZonedDateTimeRange by lazy(LazyThreadSafetyMode.NONE) {\n        fromHourToHour(\n            fromHour = 12,\n            toHour = 12,\n        )\n    }\n\n    val fromMorningToEvening: MpZonedDateTimeRange by lazy(LazyThreadSafetyMode.NONE) {\n        create(\n            from = from.atStartOfDay(timezone),\n            to = to.atStartOfDay(timezone).plus(1, DateTimeUnit.DAY),\n        )\n    }\n\n    fun fromHourToHour(fromHour: Int, toHour: Int): MpZonedDateTimeRange {\n        return fromTimeToTime(\n            fromTime = MpLocalTime.of(hour = fromHour, minute = 0),\n            toTime = MpLocalTime.of(hour = toHour, minute = 0),\n        )\n    }\n\n    fun fromTimeToTime(fromTime: MpLocalTime, toTime: MpLocalTime): MpZonedDateTimeRange {\n        return create(\n            from = from.atTime(fromTime, timezone),\n            to = to.atTime(toTime, timezone),\n        )\n    }\n\n    private fun create(from: MpZonedDateTime, to: MpZonedDateTime): MpZonedDateTimeRange {\n        return MpZonedDateTimeRange(\n            from = maxOf(MpZonedDateTime.Genesis, from),\n            to = minOf(MpZonedDateTime.Doomsday, to),\n        )\n    }\n}\n","package de.peekandpoke.ultra.common.datetime\n\nimport de.peekandpoke.ultra.common.recursion.recurse\nimport kotlinx.datetime.Clock\nimport kotlinx.datetime.Instant\nimport kotlinx.datetime.TimeZone\nimport kotlin.time.Duration\nimport kotlin.time.Duration.Companion.milliseconds\n\n@Suppress(\"Detekt.TooManyFunctions\")\n/**\n * The source of truth for creating dates and times.\n */\ninterface Kronos {\n\n    interface Mutable : Kronos {\n        fun set(inner: Kronos)\n    }\n\n    companion object {\n        /**\n         * The [Kronos] that operates on the system clock.\n         */\n        val systemUtc: Kronos = fromClock(Clock.System)\n\n        /**\n         * Creates a [Kronos] that operates on the given [clock].\n         */\n        fun fromClock(clock: Clock): Kronos {\n            return UsingClock(clock)\n        }\n\n        /**\n         * Creates a [Kronos] that is stuck on the given [instant].\n         */\n        fun fixed(instant: MpInstant): Kronos {\n            return fromClock(FixedClock(instant.value))\n        }\n\n        /**\n         * Creates a [Kronos] from the given [descriptor].\n         */\n        fun from(descriptor: KronosDescriptor): Kronos {\n\n            return when (descriptor) {\n                is KronosDescriptor.SystemClock -> {\n                    systemUtc\n                }\n\n                is KronosDescriptor.AdvancedBy -> {\n                    descriptor.inner.instantiate()\n                        .advanceBy(descriptor.durationMs.milliseconds)\n                }\n            }\n        }\n    }\n\n    /**\n     * Fixed implementation of [Clock].\n     *\n     * Will always return the given [fixedInstant].\n     */\n    private class FixedClock(private val fixedInstant: Instant) : Clock {\n        /**\n         * 'Now' will always be [fixedInstant].\n         */\n        override fun now(): Instant {\n            return fixedInstant\n        }\n    }\n\n    /**\n     * Implementation that gets [instantNow] from the  given [clock].\n     */\n    private class UsingClock(private val clock: Clock) : Kronos {\n\n        /**\n         * Describes the Kronos.\n         */\n        override fun describe(): KronosDescriptor = KronosDescriptor.SystemClock\n\n        /**\n         * Return the 'now' moment in time.\n         */\n        override fun instantNow(): MpInstant {\n            return MpInstant(clock.now())\n        }\n    }\n\n    /**\n     * Implementation that gets [instantNow] from the [inner] advanced by [provider].\n     */\n    private class AdvancedBy(private val inner: Kronos, private val provider: () -> Duration) : Kronos {\n\n        private val duration by lazy { provider() }\n\n        /**\n         * Describes the Kronos.\n         */\n        override fun describe(): KronosDescriptor = KronosDescriptor.AdvancedBy(\n            durationMs = duration.inWholeMilliseconds,\n            inner = inner.describe(),\n        )\n\n        /**\n         * Return the 'now' moment in time.\n         */\n        override fun instantNow(): MpInstant {\n            return inner.instantNow().plus(duration)\n        }\n    }\n\n    /**\n     * Implementation of [Mutable]\n     */\n    private class MutableImpl(inner: Kronos) : Mutable {\n\n        private var _inner: Kronos = inner\n\n        override fun set(inner: Kronos) {\n            val chain = _inner.recurse {\n                when (val rec = this) {\n                    is MutableImpl -> rec._inner\n                    else -> null\n                }\n            }\n\n            if (this in chain) {\n                return\n            }\n\n            _inner = inner\n        }\n\n        override fun describe(): KronosDescriptor = _inner.describe()\n\n        override fun instantNow(): MpInstant = _inner.instantNow()\n    }\n\n    /**\n     * Returns a description of the kronos\n     */\n    fun describe(): KronosDescriptor\n\n    /**\n     * Creates a Kronos the manipulates created dates and times.\n     *\n     * The created dates and times will be advances by the given [duration].\n     *\n     * The provider [duration] is guaranteed to be only called exactly once.\n     * It will be called the first time it is needed.\n     */\n    fun advanceBy(duration: () -> Duration): Kronos = AdvancedBy(inner = this, provider = duration)\n\n    /**\n     * Creates a Kronos the manipulates created dates and times.\n     *\n     * The created dates and times will be advances by the given [duration].\n     */\n    fun advanceBy(duration: Duration): Kronos = advanceBy { duration }\n\n    /** Makes this Kronos a [Mutable] */\n    fun mutable(): Mutable = when (this) {\n        is Mutable -> this\n        else -> MutableImpl(this)\n    }\n\n    /** Get 'now' in epoch seconds */\n    fun secondsNow(): Long = instantNow().toEpochSeconds()\n\n    /** Get 'now' in epoch millis */\n    fun millisNow(): Long = instantNow().toEpochMillis()\n\n    /** Get 'now' in epoch micros */\n    fun microsNow(): Long = millisNow() * 1000L\n\n    /** Creates an [MpInstant] for 'now' */\n    fun instantNow(): MpInstant\n\n    /** Creates a [MpLocalDateTime] for 'now' */\n    fun localDateTimeNow(): MpLocalDateTime {\n        return instantNow().atZone(TimeZone.UTC).toLocalDateTime()\n    }\n\n    /** Creates a [MpLocalDate] in the given [timezone] */\n    fun localDateNow(timezone: TimeZone): MpLocalDate {\n        return instantNow().atZone(timezone).toLocalDate()\n    }\n\n    /** Creates a [MpLocalDate] in the given [timezone] */\n    fun localDateNow(timezone: MpTimezone): MpLocalDate {\n        return localDateNow(timezone.kotlinx)\n    }\n\n    /** Creates a [MpLocalTime] in the given [timezone] */\n    fun localTimeNow(timezone: TimeZone): MpLocalTime {\n        return zonedDateTimeNow(timezone).toLocalTime()\n    }\n\n    /** Creates a [MpLocalTime] in the given [timezone] */\n    fun localTimeNow(timezone: MpTimezone): MpLocalTime {\n        return localTimeNow(timezone.kotlinx)\n    }\n\n    /** Creates a [MpZonedDateTime] for 'now' */\n    fun zonedDateTimeNow(timezone: TimeZone): MpZonedDateTime {\n        return instantNow().atZone(timezone)\n    }\n\n    /** Creates a [MpZonedDateTime] for 'now' */\n    fun zonedDateTimeNow(timezone: MpTimezone): MpZonedDateTime {\n        return zonedDateTimeNow(timezone.kotlinx)\n    }\n}\n","package de.peekandpoke.ultra.common.datetime\n\nimport common.datetime.DateTimeRangeConverter\nimport de.peekandpoke.ultra.common.ComparableTo\nimport kotlinx.serialization.Serializable\n\n@Serializable\n// TODO: test all of me\ndata class MpClosedLocalDateRange(\n    val from: MpLocalDate,\n    val to: MpLocalDate,\n) : ComparableTo<MpDatePeriod> {\n    companion object {\n        /**\n         * A range from [MpLocalDate.Genesis] until [MpLocalDate.Doomsday]\n         */\n        val forever: MpClosedLocalDateRange =\n            MpClosedLocalDateRange(MpLocalDate.Genesis, MpLocalDate.Doomsday)\n\n        /**\n         * Creates a range for the given [from] and [to].\n         */\n        fun of(from: MpLocalDate, to: MpLocalDate): MpClosedLocalDateRange =\n            MpClosedLocalDateRange(from = from, to = to)\n\n        /**\n         * Creates a range from [MpLocalDate.Genesis] until including [to]\n         */\n        fun endingAt(to: MpLocalDate): MpClosedLocalDateRange =\n            MpClosedLocalDateRange(from = forever.from, to = to)\n\n        /**\n         * Creates a DateRange from including [from] until [MpLocalDate.Doomsday]\n         */\n        fun beginningAt(from: MpLocalDate): MpClosedLocalDateRange =\n            MpClosedLocalDateRange(from = from, to = forever.to)\n    }\n\n    // TODO: test me\n    @Serializable\n    data class Partial(\n        val from: MpLocalDate?,\n        val to: MpLocalDate?,\n    ) {\n        companion object {\n            val empty = Partial(from = null, to = null)\n        }\n\n        fun asValidRange(): MpClosedLocalDateRange? = when (from != null && to != null) {\n            true -> MpClosedLocalDateRange(from = from, to = to).takeIf { it.isValid }\n            false -> null\n        }\n    }\n\n    val asOpenRange: MpLocalDateRange by lazy {\n        MpLocalDateRange(from = from, to = to.plusDays(1))\n    }\n\n    val asDatePeriod: MpDatePeriod by lazy { asOpenRange.asDatePeriod }\n\n    val numberOfDays: Int by lazy { asOpenRange.numberOfDays }\n\n    val numberOfNights: Int by lazy { asOpenRange.numberOfNights }\n\n    val hasStart: Boolean get() = asOpenRange.hasStart\n\n    val hasEnd: Boolean get() = asOpenRange.hasEnd\n\n    val isOpen: Boolean get() = asOpenRange.isOpen\n\n    val isNotOpen: Boolean get() = !isOpen\n\n    val isValid: Boolean get() = asOpenRange.isValid\n\n    val isNotValid: Boolean get() = !isValid\n\n    fun asPartialRange(): Partial {\n        return Partial(from = from, to = to)\n    }\n\n    fun asListOfDates(): List<MpLocalDate> = asOpenRange.asListOfDates()\n\n    override fun compareTo(other: MpDatePeriod): Int {\n        return asOpenRange.compareTo(other)\n    }\n\n    fun toZonedTimeRange(timezone: MpTimezone) = DateTimeRangeConverter(\n        timezone = timezone,\n        from = from,\n        to = to,\n    )\n\n    // TODO: Test me\n    fun contains(date: MpLocalDate): Boolean {\n        return date in from..to\n    }\n\n    // TODO: Test me\n    fun contains(other: MpClosedLocalDateRange): Boolean {\n        return (isValid && other.isValid) &&\n                (from <= other.from && to >= other.to)\n    }\n\n    // TODO: Test me\n    fun intersects(other: MpClosedLocalDateRange): Boolean {\n        return (isValid && other.isValid) && (\n                (other.from >= from && other.from < to) ||\n                        (other.to > from && other.to <= to) ||\n                        contains(other) ||\n                        other.contains(this)\n                )\n    }\n}\n","package de.peekandpoke.ultra.common.datetime\n\nimport kotlinx.datetime.DatePeriod\nimport kotlinx.serialization.Serializable\n\n@Serializable\n// TODO: Test me\ndata class MpDatePeriod(\n    override val years: Int = 0,\n    override val months: Int = 0,\n    override val days: Int = 0,\n) : MpTemporalPeriod {\n    companion object {\n        val Zero: MpDatePeriod = MpDatePeriod(\n            years = 0,\n            months = 0,\n            days = 0,\n        )\n\n        fun parse(text: String): MpDatePeriod {\n            return DatePeriod.parse(text).let {\n                MpDatePeriod(years = it.years, months = it.months, days = it.days)\n            }\n        }\n    }\n\n    override val hours: Int = 0\n    override val minutes: Int = 0\n    override val seconds: Int = 0\n    override val milliseconds: Int = 0\n\n    override operator fun unaryMinus(): MpDatePeriod {\n        return MpDatePeriod(\n            years = -years,\n            months = -months,\n            days = -days,\n        )\n    }\n}\n","package de.peekandpoke.ultra.common.datetime\n\nimport kotlinx.datetime.LocalDateTime\nimport kotlinx.datetime.TimeZone\n\nobject MpDateTimeParser {\n\n    @Suppress(\"RegExpRedundantEscape\")\n    private val isoWithTimezone = \"^([+-]?[0-9-]+)T([0-9:\\\\.]+)(Z|\\\\[.+\\\\])?$\".toRegex()\n\n    fun parseInstant(isoString: String): MpInstant {\n\n        val (datetime, timezone) = parse(isoString)\n\n        return datetime.toInstant(timezone)\n    }\n\n    fun parseZonedDateTime(isoString: String): MpZonedDateTime {\n\n        val (datetime, timezone) = parse(isoString)\n\n        return datetime.atZone(timezone)\n    }\n\n    private fun parse(isoString: String): Pair<MpLocalDateTime, TimeZone> {\n        val match = isoWithTimezone.find(isoString)\n            ?: throw IllegalArgumentException(\"Cannot parse iso date string '$isoString'\")\n\n        val date = match.groupValues[1]\n        val time = match.groupValues[2]\n\n        val timezone = when (val tz = match.groupValues[3]) {\n            \"\", \"Z\" -> TimeZone.UTC\n            else -> TimeZone.of(tz.drop(1).dropLast(1))\n        }\n\n        val localDateTime = MpLocalDateTime(\n            LocalDateTime.parse(\"${date}T$time\")\n        )\n\n        return Pair(localDateTime, timezone)\n    }\n}\n","package de.peekandpoke.ultra.common.datetime\n\nimport de.peekandpoke.ultra.common.ComparableTo\nimport kotlinx.datetime.Clock\nimport kotlinx.datetime.DateTimeUnit\nimport kotlinx.datetime.Instant\nimport kotlinx.datetime.TimeZone\nimport kotlinx.datetime.plus\nimport kotlinx.datetime.toLocalDateTime\nimport kotlinx.serialization.Serializable\nimport kotlin.time.Duration\n\n@Suppress(\"Detekt:TooManyFunctions\")\n@Serializable(with = MpInstantSerializer::class)\ndata class MpInstant(\n    internal val value: Instant,\n) : MpAbsoluteDateTime, ComparableTo<MpInstant> {\n\n    companion object {\n        /**\n         * Creates from the current system time.\n         */\n        fun now(): MpInstant = MpInstant(\n            value = Clock.System.now(),\n        )\n\n        /**\n         * Creates from the given epoch [millis].\n         */\n        fun fromEpochMillis(millis: Long): MpInstant = MpInstant(\n            value = Instant.fromEpochMilliseconds(millis)\n        )\n\n        /**\n         * Creates from the given epoch [seconds].\n         */\n        fun fromEpochSeconds(seconds: Long, nanosecondAdjustment: Number = 0): MpInstant = MpInstant(\n            value = Instant.fromEpochSeconds(seconds, nanosecondAdjustment.toLong())\n        )\n\n        /**\n         * Parses from the given [isoString].\n         */\n        fun parse(isoString: String): MpInstant = MpDateTimeParser.parseInstant(isoString)\n\n        /**\n         * Tries to parse from the given [isoString].\n         *\n         * If parsing fails null is returned.\n         */\n        fun tryParse(isoString: String): MpInstant? = try {\n            parse(isoString)\n        } catch (_: Throwable) {\n            null\n        }\n\n        /**\n         * Instant at the start of the unix epoch 1970-01-01T00:00:00.000Z\n         */\n        val Epoch: MpInstant = fromEpochMillis(0)\n\n        /**\n         * The Genesis, a date in the distant past: -10000-01-01T00:00:00Z\n         */\n        val Genesis: MpInstant = MpInstant(\n            Instant.fromEpochMilliseconds(GENESIS_TIMESTAMP)\n        )\n\n        /**\n         * The Doomsday, a date in the distant future: +10000-01-01T00:00:00Z\n         */\n        val Doomsday: MpInstant = MpInstant(\n            Instant.fromEpochMilliseconds(DOOMSDAY_TIMESTAMP)\n        )\n    }\n\n    /**\n     * Compares to the [other] instant.\n     */\n    override fun compareTo(other: MpInstant): Int {\n        return value.compareTo(other.value)\n    }\n\n    /**\n     * Creates a string representation.\n     */\n    override fun toString(): String {\n        return \"MpInstant(${toIsoString()})\"\n    }\n\n    /**\n     * Returns itself\n     */\n    override fun toInstant(): MpInstant {\n        return this\n    }\n\n    /**\n     * Create a [MpZonedDateTime] at the given [timezone]\n     */\n    override fun atZone(timezone: TimeZone): MpZonedDateTime {\n        return atZone(timezone = timezone.mp)\n    }\n\n    /**\n     * Create a [MpZonedDateTime] at the given [timezone]\n     */\n    override fun atZone(timezone: MpTimezone): MpZonedDateTime {\n        return MpZonedDateTime.of(\n            MpLocalDateTime(value.toLocalDateTime(timezone.kotlinx)),\n            timezone,\n        )\n    }\n\n    /**\n     * Creates a [MpLocalDate] at the given timezone\n     */\n    // TODO: Test me\n    fun toLocalDate(timezone: MpTimezone): MpLocalDate {\n        return atZone(timezone).toLocalDate()\n    }\n\n    /**\n     * Creates an iso date time string.\n     */\n    fun toIsoString(): String {\n        return atZone(TimeZone.UTC).toIsoString()\n    }\n\n    /**\n     * Gets the epoch milliseconds.\n     */\n    fun toEpochMillis(): Long {\n        return value.toEpochMilliseconds()\n    }\n\n    /**\n     * Gets the epoch seconds.\n     */\n    fun toEpochSeconds(): Long {\n        return value.epochSeconds\n    }\n\n    /**\n     * Creates a [MpInstantRange] with this as the start and the given [duration].\n     */\n    fun toRange(duration: Duration): MpInstantRange {\n        return MpInstantRange.of(from = this, duration = duration)\n    }\n\n    /**\n     * Creates a [MpZonedDateTimeRange] with this as the start and the given [period].\n     */\n    // TODO: test me\n    fun toRange(period: MpTemporalPeriod, timezone: MpTimezone): MpInstantRange {\n        return MpInstantRange(from = this, to = plus(period, timezone).toInstant())\n    }\n\n    /**\n     * Adds the [duration] in absolute terms.\n     */\n    operator fun plus(duration: Duration): MpInstant {\n        return MpInstant(value = value.plus(duration))\n    }\n\n    /**\n     * Adds once the [unit] by taking the [timezone] into account.\n     *\n     * This method is useful for timezones where there is a DST (Daylight Saving Transition).\n     *\n     * For example adding 1 Day to 2022-03-27T00:00:00[Europe/Berlin]\n     * Will result in              2022-03-28T00:00:00[Europe/Berlin]\n     * while the difference between both instants is only 23 hours.\n     */\n    fun plus(unit: DateTimeUnit, timezone: TimeZone): MpInstant {\n        return plus(1, unit, timezone)\n    }\n\n    /**\n     * Adds once the [unit] by taking the [timezone] into account.\n     *\n     * This method is useful for timezones where there is a DST (Daylight Saving Transition).\n     *\n     * For example adding 1 Day to 2022-03-27T00:00:00[Europe/Berlin]\n     * Will result in              2022-03-28T00:00:00[Europe/Berlin]\n     * while the difference between both instants is only 23 hours.\n     */\n    fun plus(unit: DateTimeUnit, timezone: MpTimezone): MpInstant {\n        return plus(unit = unit, timezone = timezone.kotlinx)\n    }\n\n    /**\n     * Adds the [value] times [unit] by taking the [timezone] into account.\n     *\n     * This method is useful for timezones where there is a DST (Daylight Saving Transition).\n     *\n     * For example adding 1 Day to 2022-03-27T00:00:00[Europe/Berlin]\n     * Will result in              2022-03-28T00:00:00[Europe/Berlin]\n     * while the difference between both instants is only 23 hours.\n     */\n    fun plus(value: Int, unit: DateTimeUnit, timezone: TimeZone): MpInstant {\n        if (value == 0) {\n            return this\n        }\n\n        return MpInstant(\n            value = this.value.plus(\n                value = value,\n                unit = unit,\n                timeZone = timezone,\n            )\n        )\n    }\n\n    /**\n     * Adds the [value] times [unit] by taking the [timezone] into account.\n     *\n     * This method is useful for timezones where there is a DST (Daylight Saving Transition).\n     *\n     * For example adding 1 Day to 2022-03-27T00:00:00[Europe/Berlin]\n     * Will result in              2022-03-28T00:00:00[Europe/Berlin]\n     * while the difference between both instants is only 23 hours.\n     */\n    fun plus(value: Int, unit: DateTimeUnit, timezone: MpTimezone): MpInstant {\n        return plus(value = value, unit = unit, timezone = timezone.kotlinx)\n    }\n\n    /**\n     * Adds the given [period] in the given [timezone].\n     *\n     * Each component is added individually starting with years, months, ..., milliseconds\n     */\n    // TODO: test me\n    fun plus(period: MpTemporalPeriod, timezone: MpTimezone): MpInstant {\n\n        val tz = timezone.kotlinx\n\n        return plus(period.years, DateTimeUnit.YEAR, tz)\n            .plus(period.months, DateTimeUnit.MONTH, tz)\n            .plus(period.days, DateTimeUnit.DAY, tz)\n            .plus(period.hours, DateTimeUnit.HOUR, tz)\n            .plus(period.minutes, DateTimeUnit.MINUTE, tz)\n            .plus(period.seconds, DateTimeUnit.SECOND, tz)\n            .plus(period.milliseconds, DateTimeUnit.MILLISECOND, tz)\n    }\n\n    /**\n     * Subtracts the [duration] in absolute terms.\n     */\n    operator fun minus(duration: Duration): MpInstant {\n        return plus(duration.unaryMinus())\n    }\n\n    /**\n     * Subtracts once the [unit] by taking the [timezone] into account.\n     *\n     * This method is useful for timezones where there is a DST (Daylight Saving Transition).\n     *\n     * For example subtracting 1 Day to 2022-03-28T00:00:00[Europe/Berlin]\n     * Will result in                   2022-03-27T00:00:00[Europe/Berlin]\n     * while the difference between both instants is only 23 hours.\n     */\n    fun minus(unit: DateTimeUnit, timezone: TimeZone): MpInstant {\n        return minus(1, unit, timezone)\n    }\n\n    /**\n     * Subtracts once the [unit] by taking the [timezone] into account.\n     *\n     * This method is useful for timezones where there is a DST (Daylight Saving Transition).\n     *\n     * For example subtracting 1 Day to 2022-03-28T00:00:00[Europe/Berlin]\n     * Will result in                   2022-03-27T00:00:00[Europe/Berlin]\n     * while the difference between both instants is only 23 hours.\n     */\n    fun minus(unit: DateTimeUnit, timezone: MpTimezone): MpInstant {\n        return minus(unit = unit, timezone = timezone.kotlinx)\n    }\n\n    /**\n     * Subtracts the [value] times [unit] by taking the [timezone] into account.\n     *\n     * This method is useful for timezones where there is a DST (Daylight Saving Transition).\n     *\n     * For example subtracting 1 Day to 2022-03-28T00:00:00[Europe/Berlin]\n     * Will result in                   2022-03-27T00:00:00[Europe/Berlin]\n     * while the difference between both instants is only 23 hours.\n     */\n    fun minus(value: Int, unit: DateTimeUnit, timezone: TimeZone): MpInstant {\n        return plus(-value, unit, timezone)\n    }\n\n    /**\n     * Subtracts the [value] times [unit] by taking the [timezone] into account.\n     *\n     * This method is useful for timezones where there is a DST (Daylight Saving Transition).\n     *\n     * For example subtracting 1 Day to 2022-03-28T00:00:00[Europe/Berlin]\n     * Will result in                   2022-03-27T00:00:00[Europe/Berlin]\n     * while the difference between both instants is only 23 hours.\n     */\n    fun minus(value: Int, unit: DateTimeUnit, timezone: MpTimezone): MpInstant {\n        return minus(value = value, unit = unit, timezone = timezone.kotlinx)\n    }\n\n    /**\n     * Calculates the [Duration] between this and another instant\n     */\n    operator fun minus(other: MpInstant): Duration {\n        return this.value - other.value\n    }\n\n    /**\n     * Subtracts the given [period] in the given [timezone].\n     *\n     * Each component is added individually starting with years, months, ..., milliseconds\n     */\n    // TODO: test me\n    fun minus(period: MpTemporalPeriod, timezone: MpTimezone): MpInstant {\n        return plus(-period, timezone)\n    }\n}\n","package de.peekandpoke.ultra.common.datetime\n\nimport de.peekandpoke.ultra.common.ComparableTo\nimport korlibs.time.Date\nimport kotlinx.datetime.DatePeriod\nimport kotlinx.datetime.DateTimeUnit\nimport kotlinx.datetime.DayOfWeek\nimport kotlinx.datetime.Instant\nimport kotlinx.datetime.LocalDate\nimport kotlinx.datetime.Month\nimport kotlinx.datetime.TimeZone\nimport kotlinx.datetime.atStartOfDayIn\nimport kotlinx.datetime.minus\nimport kotlinx.datetime.number\nimport kotlinx.datetime.plus\nimport kotlinx.datetime.toLocalDateTime\nimport kotlinx.serialization.Serializable\nimport kotlin.jvm.JvmName\n\n@Suppress(\"Detekt:TooManyFunctions\")\n@Serializable(with = MpLocalDateSerializer::class)\ndata class MpLocalDate(\n    private val value: LocalDate,\n) : ComparableTo<MpLocalDate> {\n\n    companion object {\n        /**\n         * The Genesis, a date in the distant past: -10000-01-01T00:00:00Z\n         */\n        val Genesis: MpLocalDate = MpLocalDate(\n            Instant.fromEpochMilliseconds(GENESIS_TIMESTAMP).toLocalDateTime(TimeZone.UTC).date\n        )\n\n        /**\n         * The Doomsday, a date in the distant future: +10000-01-01T00:00:00Z\n         */\n        val Doomsday: MpLocalDate = MpLocalDate(\n            Instant.fromEpochMilliseconds(DOOMSDAY_TIMESTAMP).toLocalDateTime(TimeZone.UTC).date\n        )\n\n        /**\n         * Creates an [MpLocalDate] from [year], [month] and [day].\n         */\n        fun of(year: Int, month: Int, day: Int): MpLocalDate = MpLocalDate(\n            value = LocalDate(\n                year = year,\n                monthNumber = month,\n                dayOfMonth = day,\n            )\n        )\n\n        /**\n         * Creates an [MpLocalDate] from [year], [month] and [day].\n         */\n        fun of(year: Int, month: Month, day: Int): MpLocalDate = of(\n            year = year,\n            month = month.number,\n            day = day,\n        )\n\n        /**\n         * Parses an [MpLocalDate] from the given [isoString].\n         *\n         * Throws an [IllegalArgumentException] if parsing fails.\n         */\n        @Throws(IllegalArgumentException::class)\n        fun parse(isoString: String): MpLocalDate {\n            return try {\n                parseInternal(isoString)\n            } catch (e: Throwable) {\n                throw IllegalArgumentException(\"Could not parse MpLocalDate from '$isoString'\", e)\n            }\n        }\n\n        /**\n         * Parses an [MpLocalDate] from the given [isoString].\n         *\n         * Returns null if parsing fails.\n         */\n        fun tryParse(isoString: String): MpLocalDate? {\n            return try {\n                parseInternal(isoString)\n            } catch (_: Throwable) {\n                null\n            }\n        }\n\n        private fun parseInternal(isoString: String): MpLocalDate {\n            return try {\n                MpLocalDate(LocalDate.parse(isoString))\n            } catch (_: Throwable) {\n                MpInstant.parse(isoString).atZone(TimeZone.UTC).toLocalDate()\n            }\n        }\n    }\n\n    /** The year */\n    val year: Int get() = value.year\n\n    /** The month as number, where January is \"1\" */\n    val monthNumber: Int get() = value.monthNumber\n\n    /** The month */\n    val month: Month get() = value.month\n\n    /** The day of the month */\n    val day: Int get() = value.dayOfMonth\n\n    /** The day of the week */\n    val dayOfWeek: DayOfWeek get() = value.dayOfWeek\n\n    /** The day of the year */\n    val dayOfYear: Int get() = value.dayOfYear\n\n    /** The number of days of the current month */\n    val numDaysInMonth: Int by lazy {\n        atFirstOfMonth().toClosedRange(atLastOfMonth()).numberOfDays\n    }\n\n    /**\n     * Compares to the [other].\n     */\n    override fun compareTo(other: MpLocalDate): Int {\n        return value.compareTo(other.value)\n    }\n\n    /**\n     * Converts into a string.\n     */\n    override fun toString(): String {\n        return \"MpLocalDate(${toIsoString()})\"\n    }\n\n    /**\n     * Converts into a human-readable string by the given [formatString].\n     *\n     * See https://help.gooddata.com/cloudconnect/manual/date-and-time-format.html\n     */\n    fun format(formatString: String): String {\n        val klock = Date(year = year, month = monthNumber, day = day)\n\n        return klock.format(formatString)\n    }\n\n    /**\n     * Converts into an iso string.\n     */\n    fun toIsoString(): String {\n        return atStartOfDay(TimeZone.UTC).toIsoString()\n    }\n\n    /**\n     * Gets the start of the century that this date is in.\n     */\n    fun atStartOfCentury(): MpLocalDate {\n        return of(year = (year / 100) * 100, month = Month.JANUARY, day = 1)\n    }\n\n    /**\n     * Gets the start of the century that this date is in.\n     */\n    fun atStartOfDecade(): MpLocalDate {\n        return of(year = (year / 10) * 10, month = Month.JANUARY, day = 1)\n    }\n\n    /**\n     * Gets the start of the year that this date is in.\n     */\n    fun atStartOfYear(): MpLocalDate {\n        return of(year = year, month = Month.JANUARY, day = 1)\n    }\n\n    /**\n     * Gets the start of the half of the year that this date is in.\n     */\n    fun atStartOfHalfOfYear(): MpLocalDate {\n        return of(year = year, month = 1 + ((monthNumber - 1) / 6) * 6, day = 1)\n    }\n\n    /**\n     * Gets the start of the quarter of the year that this date is in.\n     */\n    fun atStartOfQuarterOfYear(): MpLocalDate {\n        return of(year = year, month = 1 + ((monthNumber - 1) / 3) * 3, day = 1)\n    }\n\n    /**\n     * Gets the start of the month that this date is in.\n     */\n    fun atFirstOfMonth(): MpLocalDate {\n        return of(year = year, month = month, day = 1)\n    }\n\n    /**\n     * Gets the nth day in the same year and month\n     */\n    fun atNthOfMonth(n: Int): MpLocalDate {\n        return of(year = year, month = month, day = n)\n    }\n\n    /**\n     * Gets the start of the month that this date is in.\n     */\n    fun atLastOfMonth(): MpLocalDate {\n        return atFirstOfMonth().plusMonths(1).minusDays(1)\n    }\n\n    /**\n     * Gets the upcoming day that is of the given [dayOfWeek].\n     */\n    fun atStartOfNext(dayOfWeek: DayOfWeek): MpLocalDate {\n\n        var result = plus(1, DateTimeUnit.DAY)\n\n        while (result.dayOfWeek != dayOfWeek) {\n            result = result.plus(1, DateTimeUnit.DAY)\n        }\n\n        return result\n    }\n\n    /**\n     * Gets the previous day that is of the given [dayOfWeek].\n     */\n    fun atStartOfPrevious(dayOfWeek: DayOfWeek): MpLocalDate {\n\n        var result = this\n\n        while (result.dayOfWeek != dayOfWeek) {\n            result = result.minus(1, DateTimeUnit.DAY)\n        }\n\n        return result\n    }\n\n    /**\n     * Converts into an [MpZonedDateTime] at the given [timezone].\n     */\n    fun atStartOfDay(timezone: MpTimezone): MpZonedDateTime {\n        return atStartOfDay(timezone.kotlinx)\n    }\n\n    /**\n     * Converts into an [MpZonedDateTime] at the given [timezone].\n     */\n    fun atStartOfDay(timezone: TimeZone): MpZonedDateTime {\n        return MpInstant(value.atStartOfDayIn(timezone)).atZone(timezone)\n    }\n\n    /**\n     * Converts into an [MpLocalDateTime] by setting the given [time].\n     */\n    fun atTime(time: MpLocalTime): MpLocalDateTime {\n        return MpLocalDateTime.of(date = this, time = time)\n    }\n\n    /**\n     * Converts into an [MpZonedDateTime] in the given [timezone] by setting the given [time].\n     */\n    fun atTime(time: MpLocalTime, timezone: TimeZone): MpZonedDateTime {\n        return atStartOfDay(timezone).atTime(time)\n    }\n\n    /**\n     * Converts into an [MpZonedDateTime] in the given [timezone] by setting the given [time].\n     */\n    fun atTime(time: MpLocalTime, timezone: MpTimezone): MpZonedDateTime {\n        return atTime(time, timezone.kotlinx)\n    }\n\n    /**\n     * Converts into an [MpLocalDateTime] at the start of the day.\n     */\n    fun toLocalDateTime(): MpLocalDateTime {\n        return atTime(MpLocalTime.Min)\n    }\n\n    /**\n     * Creates a [MpLocalDateRange] with this as the start and the given [period]\n     */\n    fun toRange(period: MpDatePeriod): MpLocalDateRange {\n        return MpLocalDateRange(from = this, to = this.plus(period))\n    }\n\n    /**\n     * Creates a [MpClosedLocalDateRange] with this as the start and the given [period]\n     */\n    // TODO: test me\n    fun toClosedRange(period: MpDatePeriod): MpClosedLocalDateRange {\n        return MpClosedLocalDateRange(from = this, to = this.plus(period).minusDays(1))\n    }\n\n    /**\n     * Creates a [MpZonedDateTimeRange] with this as the start and the given [period] in the [timezone].\n     */\n    // TODO: test me\n    fun toRange(period: MpTemporalPeriod, timezone: MpTimezone): MpZonedDateTimeRange {\n        return MpZonedDateTimeRange.of(from = atStartOfDay(timezone), period = period)\n    }\n\n    /**\n     * Creates an [MpLocalDateRange] from this to [end].\n     */\n    fun toRange(end: MpLocalDate): MpLocalDateRange {\n        return MpLocalDateRange(this, end)\n    }\n\n    /**\n     * Creates an [MpClosedLocalDateRange] from this to [end].\n     */\n    fun toClosedRange(end: MpLocalDate): MpClosedLocalDateRange {\n        return MpClosedLocalDateRange(from = this, to = end)\n    }\n\n    /**\n     * Constructs a closed date range representing the entire month containing this date.\n     */\n    fun toEnclosingMonthRange() = MpClosedLocalDateRange(from = atFirstOfMonth(), to = atLastOfMonth())\n\n    /**\n     * Converts into an [MpZonedDateTimeRange] for the given [timeslot] and [timezone].\n     */\n    fun toRange(timeslot: MpLocalTimeSlot, timezone: TimeZone): MpZonedDateTimeRange {\n        return MpZonedDateTimeRange(\n            from = atTime(timeslot.from, timezone),\n            to = atTime(timeslot.to, timezone)\n        )\n    }\n\n    /**\n     * Converts into an [MpZonedDateTimeRange] for the given [timeslot] and [timezone].\n     */\n    fun toRange(timeslot: MpLocalTimeSlot, timezone: MpTimezone): MpZonedDateTimeRange {\n        return toRange(timeslot, timezone.kotlinx)\n    }\n\n    /**\n     * Adds the given [unit] once.\n     */\n    fun plus(unit: DateTimeUnit.DateBased): MpLocalDate {\n        return MpLocalDate(\n            value = value.plus(1, unit)\n        )\n    }\n\n    /**\n     * Subtracts the given [unit] once.\n     */\n    fun minus(unit: DateTimeUnit.DateBased): MpLocalDate {\n        return MpLocalDate(\n            value = value.minus(1, unit)\n        )\n    }\n\n    /**\n     * Adds [amount] times the given [unit].\n     */\n    fun plus(amount: Int, unit: DateTimeUnit.DateBased): MpLocalDate {\n        return MpLocalDate(\n            value = value.plus(amount, unit)\n        )\n    }\n\n    /**\n     * Subtracts [amount] times the given [unit].\n     */\n    fun minus(amount: Int, unit: DateTimeUnit.DateBased): MpLocalDate {\n        return MpLocalDate(\n            value = value.minus(amount, unit)\n        )\n    }\n\n    /**\n     * Adds [amount] times the given [unit].\n     */\n    fun plus(amount: Long, unit: DateTimeUnit.DateBased): MpLocalDate {\n        return MpLocalDate(\n            value = value.plus(amount, unit)\n        )\n    }\n\n    /**\n     * Subtracts [amount] times the given [unit].\n     */\n    fun minus(amount: Long, unit: DateTimeUnit.DateBased): MpLocalDate {\n        return MpLocalDate(\n            value = value.minus(amount, unit)\n        )\n    }\n\n    /**\n     * Adds the given [DatePeriod].\n     */\n    // TODO: test me\n    fun plus(period: MpTemporalPeriod): MpLocalDate {\n        return plusYears(period.years)\n            .plusMonths(period.months)\n            .plusDays(period.days)\n    }\n\n    /**\n     * Adds the given [DatePeriod].\n     */\n    // TODO: test me\n    fun minus(period: MpTemporalPeriod): MpLocalDate {\n        return plus(-period)\n    }\n\n    /**\n     * Adds the given number of [days].\n     */\n    fun plusDays(days: Int): MpLocalDate {\n        return plus(days, DateTimeUnit.DAY)\n    }\n\n    /**\n     * Adds the given number of [days].\n     */\n    fun minusDays(days: Int): MpLocalDate {\n        return plusDays(-days)\n    }\n\n    /**\n     * Adds the given number of [weeks].\n     */\n    fun plusWeeks(weeks: Int): MpLocalDate {\n        return plus(weeks, DateTimeUnit.WEEK)\n    }\n\n    /**\n     * Adds the given number of [weeks].\n     */\n    fun minusWeeks(weeks: Int): MpLocalDate {\n        return plusWeeks(-weeks)\n    }\n\n    /**\n     * Adds the given number of [months].\n     */\n    fun plusMonths(months: Int): MpLocalDate {\n        return plus(months, DateTimeUnit.MONTH)\n    }\n\n    /**\n     * Adds the given number of [months].\n     */\n    fun minusMonths(months: Int): MpLocalDate {\n        return plusMonths(-months)\n    }\n\n    /**\n     * Adds the given number of [years].\n     */\n    fun plusYears(years: Int): MpLocalDate {\n        return plus(years, DateTimeUnit.YEAR)\n    }\n\n    /**\n     * Adds the given number of [years].\n     */\n    fun minusYears(years: Int): MpLocalDate {\n        return plusYears(-years)\n    }\n\n    /**\n     * Adds the given number of [centuries].\n     */\n    fun plusCenturies(centuries: Int): MpLocalDate {\n        return plus(centuries, DateTimeUnit.CENTURY)\n    }\n\n    /**\n     * Adds the given number of [centuries].\n     */\n    fun minusCenturies(centuries: Int): MpLocalDate {\n        return plusCenturies(-centuries)\n    }\n\n    /**\n     * Converts this local date to an MpZonedDateTime at noon in the specified timezone.\n     *\n     * @param timezone The timezone in which the date should be converted to noon.\n     */\n    fun atNoon(timezone: MpTimezone): MpZonedDateTime = atTime(time = MpLocalTime.Noon, timezone = timezone)\n\n    /**\n     * Returns a list of dates corresponding to the specified days in the current month.\n     * Filters out any days that are not valid for the current month.\n     *\n     * @param days A collection of integers representing the days of the month to retrieve.\n     * @return A sorted list of dates for the valid specified days in the current month.\n     */\n    @JvmName(\"getDatesInMonth_by_days\")\n    fun getDatesInMonth(days: Iterable<Int>): List<MpLocalDate> {\n        val range = 1..numDaysInMonth\n\n        val result = days\n            .filter { day -> day in range }\n            .map { day -> atNthOfMonth(day) }\n            .sorted()\n\n        return result\n    }\n\n    /**\n     * Retrieves a list of dates in the current month that match the specified weekdays.\n     * Filters out duplicates and only includes valid dates that fall within the month.\n     *\n     * @param weekdays A collection of DayOfWeek values representing the weekdays to include.\n     * @return A list of MpLocalDate objects for the specified weekdays in the current month.\n     */\n    @JvmName(\"getDatesInMonth_by_weekdays\")\n    fun getDatesInMonth(weekdays: Iterable<DayOfWeek>): List<MpLocalDate> {\n        val days = weekdays.toSet()\n\n        return (1..numDaysInMonth)\n            .map { day -> atNthOfMonth(day) }\n            .filter { date -> date.dayOfWeek in days }\n            .distinct()\n    }\n}\n\n/**\n * Formats the date as 'dd MMM yyyy'\n */\nfun MpLocalDate.formatDdMmmYyyy(): String {\n    return format(\"dd MMM yyyy\")\n}\n","package de.peekandpoke.ultra.common.datetime\n\nimport common.datetime.DateTimeRangeConverter\nimport de.peekandpoke.ultra.common.ComparableTo\nimport kotlinx.datetime.DateTimeUnit\nimport kotlinx.serialization.Serializable\nimport kotlin.math.max\nimport kotlin.math.round\n\n@Serializable\n// TODO: test all of me\ndata class MpLocalDateRange(\n    val from: MpLocalDate,\n    val to: MpLocalDate,\n) : ComparableTo<MpDatePeriod> {\n    companion object {\n        /**\n         * A range from [MpLocalDate.Genesis] until [MpLocalDate.Doomsday]\n         */\n        val forever: MpLocalDateRange = MpLocalDateRange(MpLocalDate.Genesis, MpLocalDate.Doomsday)\n\n        /**\n         * Creates a range for the given [from] and [to].\n         */\n        fun of(from: MpLocalDate, to: MpLocalDate): MpLocalDateRange = MpLocalDateRange(from = from, to = to)\n\n        /**\n         * Creates a range from [MpLocalDate.Genesis] until including [to]\n         */\n        fun endingAt(to: MpLocalDate): MpLocalDateRange = MpLocalDateRange(from = forever.from, to = to)\n\n        /**\n         * Creates a DateRange from including [from] until [MpLocalDate.Doomsday]\n         */\n        fun beginningAt(from: MpLocalDate): MpLocalDateRange = MpLocalDateRange(from = from, to = forever.to)\n    }\n\n    @Serializable\n    data class Partial(\n        val from: MpLocalDate?,\n        val to: MpLocalDate?,\n    ) {\n        companion object {\n            val empty = Partial(from = null, to = null)\n        }\n\n        fun asValidRange(): MpLocalDateRange? = when (from != null && to != null) {\n            true -> MpLocalDateRange(from = from, to = to).takeIf { it.isValid }\n            false -> null\n        }\n    }\n\n    val asClosedRange: MpClosedLocalDateRange by lazy {\n        MpClosedLocalDateRange(from = from, to = to.minusDays(1))\n    }\n\n    val asDatePeriod: MpDatePeriod by lazy {\n        if (isNotValid) {\n            return@lazy MpDatePeriod.Zero\n        }\n\n        var years = 0\n        var months = 0\n        var days = 0\n\n        var current = from\n\n        val items = listOf(\n            DateTimeUnit.YEAR to { ++years },\n            DateTimeUnit.MONTH to { ++months },\n            DateTimeUnit.DAY to { ++days },\n        )\n\n        items.forEach { (unit, action) ->\n            while (true) {\n                val next = current.plus(unit)\n\n                if (next <= to) {\n                    action()\n                    current = next\n                } else {\n                    break\n                }\n            }\n        }\n\n        MpDatePeriod(years = years, months = months, days = days)\n    }\n\n    val numberOfDays: Int by lazy {\n        if (isNotValid) {\n            return@lazy 0\n        }\n\n        val seconds = toZonedTimeRange(MpTimezone.UTC).fromNoonToNoon.duration.inWholeSeconds\n\n        round(seconds / (60 * 60 * 24.0)).toInt() + 1\n    }\n\n    val numberOfNights: Int by lazy {\n        max(0, numberOfDays - 1)\n    }\n\n    val hasStart: Boolean get() = from > MpLocalDate.Genesis\n\n    val hasEnd: Boolean get() = to < MpLocalDate.Doomsday\n\n    val isOpen: Boolean get() = !hasStart || !hasEnd\n\n    val isNotOpen: Boolean get() = !isOpen\n\n    val isValid: Boolean get() = from < to\n\n    val isNotValid: Boolean get() = !isValid\n\n    fun asPartialRange(): Partial {\n        return Partial(from = from, to = to)\n    }\n\n    fun asListOfDates(): List<MpLocalDate> {\n        if (isNotValid) {\n            return emptyList()\n        }\n\n        return (0 until numberOfDays).map { from.plusDays(it) }\n    }\n\n    override fun compareTo(other: MpDatePeriod): Int {\n        return to.compareTo(from.plus(other))\n    }\n\n    fun toZonedTimeRange(timezone: MpTimezone) = DateTimeRangeConverter(\n        timezone = timezone,\n        from = from,\n        to = to.minusDays(1),\n    )\n\n    // TODO: Test me\n    fun contains(date: MpLocalDate): Boolean {\n        return date in from..<to\n    }\n\n    // TODO: Test me\n    fun intersects(other: MpClosedLocalDateRange): Boolean {\n        // TODO: improve this code\n        return toZonedTimeRange(MpTimezone.UTC).fromNoonToNoon\n            .intersects(other.toZonedTimeRange(MpTimezone.UTC).fromNoonToNoon)\n    }\n}\n","package de.peekandpoke.ultra.common.datetime\n\nimport de.peekandpoke.ultra.common.ComparableTo\nimport kotlinx.datetime.DayOfWeek\nimport kotlinx.datetime.Instant\nimport kotlinx.datetime.LocalDateTime\nimport kotlinx.datetime.Month\nimport kotlinx.datetime.TimeZone\nimport kotlinx.datetime.number\nimport kotlinx.datetime.toInstant\nimport kotlinx.datetime.toLocalDateTime\nimport kotlinx.serialization.Serializable\n\n// TODO: test all of me\n@Suppress(\"Detekt.LongParameterList\")\n@Serializable(with = MpLocalDateTimeSerializer::class)\ndata class MpLocalDateTime(\n    internal val value: LocalDateTime,\n) : ComparableTo<MpLocalDateTime> {\n\n    companion object {\n        fun of(\n            year: Int,\n            month: Int,\n            day: Int,\n            hour: Int = 0,\n            minute: Int = 0,\n            second: Int = 0,\n            milliSecond: Int = 0,\n        ): MpLocalDateTime = MpLocalDateTime(\n            LocalDateTime(\n                year = year,\n                monthNumber = month,\n                dayOfMonth = day,\n                hour = hour,\n                minute = minute,\n                second = second,\n                nanosecond = milliSecond * 1_000_000,\n            )\n        )\n\n        fun of(\n            year: Int,\n            month: Month,\n            day: Int,\n            hour: Int = 0,\n            minute: Int = 0,\n            second: Int = 0,\n            milliSecond: Int = 0,\n        ): MpLocalDateTime = of(\n            year = year,\n            month = month.number,\n            day = day,\n            hour = hour,\n            minute = minute,\n            second = second,\n            milliSecond = milliSecond,\n        )\n\n        // TODO: Test me\n        fun of(date: MpLocalDate, time: MpLocalTime): MpLocalDateTime = of(\n            year = date.year,\n            month = date.month,\n            day = date.day,\n            hour = time.hour,\n            minute = time.minute,\n            second = time.second,\n            milliSecond = time.milliSecond,\n        )\n\n        /**\n         * Parses an [MpLocalDateTime] from the given [isoString].\n         *\n         * Throws an [IllegalArgumentException] if parsing fails.\n         */\n        @Throws(IllegalArgumentException::class)\n        fun parse(isoString: String): MpLocalDateTime {\n            return try {\n                parseInternal(isoString)\n            } catch (e: Throwable) {\n                throw IllegalArgumentException(\"Could not parse MpLocalDateTime from '$isoString'\", e)\n            }\n        }\n\n        /**\n         * Parses an [MpLocalDateTime] from the given [isoString].\n         *\n         * Returns null if parsing fails.\n         */\n        fun tryParse(isoString: String): MpLocalDateTime? {\n            return try {\n                parseInternal(isoString)\n            } catch (_: Throwable) {\n                null\n            }\n        }\n\n        private fun parseInternal(isoString: String): MpLocalDateTime {\n            return MpDateTimeParser.parseInstant(isoString).atZone(TimeZone.UTC).datetime\n        }\n\n        val Genesis: MpLocalDateTime = MpLocalDateTime(\n            Instant.fromEpochMilliseconds(GENESIS_TIMESTAMP).toLocalDateTime(TimeZone.UTC)\n        )\n\n        val Doomsday: MpLocalDateTime = MpLocalDateTime(\n            Instant.fromEpochMilliseconds(DOOMSDAY_TIMESTAMP).toLocalDateTime(TimeZone.UTC)\n        )\n    }\n\n    /** The year */\n    val year: Int get() = value.year\n\n    /** The month as number, where January is \"1\" */\n    val monthNumber: Int get() = value.monthNumber\n\n    /** The month */\n    val month: Month get() = value.month\n\n    /** The day of the month */\n    val dayOfMonth: Int get() = value.dayOfMonth\n\n    /** The hour */\n    val hour: Int get() = value.hour\n\n    /** The minute */\n    val minute: Int get() = value.minute\n\n    /** The second */\n    val second: Int get() = value.second\n\n    /** The millisecond */\n    val milliSecond: Int get() = value.nanosecond / 1_000_000\n\n    // TODO: test me\n    /** The day of the week */\n    val dayOfWeek: DayOfWeek get() = value.dayOfWeek\n    // TODO: test me\n    /** The day of the year */\n    val dayOfYear: Int get() = value.dayOfYear\n\n    override fun compareTo(other: MpLocalDateTime): Int {\n        return value.compareTo(other.value)\n    }\n\n    override fun toString(): String {\n        return \"MpLocalDateTime(${toIsoString()})\"\n    }\n\n    fun toIsoString(): String = atUTC().toIsoString()\n\n    fun toDate(): MpLocalDate = MpLocalDate(value.date)\n\n    fun toTime(): MpLocalTime = MpLocalTime.of(\n        hour = hour,\n        minute = minute,\n        second = second,\n        milliSecond = milliSecond,\n    )\n\n    fun toInstant(timezone: TimeZone): MpInstant = MpInstant(\n        value = value.toInstant(timezone)\n    )\n\n    fun toInstant(timezone: MpTimezone): MpInstant = toInstant(timezone.kotlinx)\n\n    fun atZone(timezone: TimeZone): MpZonedDateTime {\n        return toInstant(timezone).atZone(timezone)\n    }\n\n    fun atZone(timezone: MpTimezone): MpZonedDateTime {\n        return atZone(timezone.kotlinx)\n    }\n\n    fun atUTC(): MpZonedDateTime = atZone(TimeZone.UTC)\n}\n","package de.peekandpoke.ultra.common.datetime\n\nimport de.peekandpoke.ultra.common.ComparableTo\nimport de.peekandpoke.ultra.common.model.tuple\nimport korlibs.time.Time\nimport kotlinx.serialization.Serializable\nimport kotlin.time.Duration\nimport kotlin.time.Duration.Companion.milliseconds\n\n// TODO: test all of me\n@Serializable(with = MpLocalTimeSerializer::class)\ndata class MpLocalTime(\n    private val milliSeconds: Long,\n) : ComparableTo<MpLocalTime> {\n\n    companion object {\n        const val MILLIS_PER_SECOND = 1_000L\n        const val MILLIS_PER_MINUTE = 60 * MILLIS_PER_SECOND\n        const val MILLIS_PER_HOUR = 60 * MILLIS_PER_MINUTE\n        const val MILLIS_PER_DAY = 24 * MILLIS_PER_HOUR\n\n        fun tryParse(input: String): MpLocalTime? {\n            return try {\n                parse(input)\n            } catch (_: IllegalArgumentException) {\n                null\n            }\n        }\n\n        /**\n         * Parses the given input into an [MpLocalTime].\n         *\n         * @throws IllegalArgumentException\n         */\n        fun parse(input: String): MpLocalTime {\n            val parts = input.split(\":\")\n\n            fun ex(): Nothing {\n                throw IllegalArgumentException(\"Could not parse MpLocalDate from '$input'\")\n            }\n\n            if (parts.size < 2 || parts.size > 3) {\n                ex()\n            }\n\n            val hour = parts[0].toIntOrNull()?.takeIf { it in 0..24 } ?: ex()\n\n            val minute = parts[1].toIntOrNull()?.takeIf { it in 0..59 } ?: ex()\n\n            val (seconds: Int, millis: Int) = when (val lastPart = parts.getOrNull(2)) {\n                null -> tuple(0, 0)\n                else -> {\n                    val split = lastPart.split(\".\")\n\n                    val seconds = split[0].toIntOrNull()?.takeIf { it in 0..59 } ?: ex()\n\n                    val millis = when (val millisPart = split.getOrNull(1)) {\n                        null -> 0\n                        else -> {\n                            millisPart.padEnd(3, '0').toIntOrNull()?.takeIf { it in 0..999 }\n                                ?: ex()\n                        }\n                    }\n\n                    tuple(seconds, millis)\n                }\n            }\n\n            return of(\n                hour = hour,\n                minute = minute,\n                second = seconds,\n                milliSecond = millis,\n            )\n        }\n\n        /**\n         * Creates an [MpLocalTime].\n         */\n        fun of(hour: Int, minute: Int, second: Int = 0, milliSecond: Int = 0): MpLocalTime {\n            return ofMilliSeconds(\n                milliSecondsOfDay = (hour * 60 * 60 + minute * 60 + second) * 1_000L + milliSecond\n            )\n        }\n\n        /**\n         * Creates an [MpLocalTime] from the given [milliSecondsOfDay].\n         */\n        fun ofMilliSeconds(milliSecondsOfDay: Long): MpLocalTime {\n            return MpLocalTime(\n                milliSeconds = milliSecondsOfDay % MILLIS_PER_DAY\n            )\n        }\n\n        /**\n         * Creates an [MpLocalTime] from the given [secondsOfDay].\n         */\n        fun ofSecondOfDay(secondsOfDay: Long): MpLocalTime {\n            return ofMilliSeconds(milliSecondsOfDay = secondsOfDay * 1_000L)\n        }\n\n        /**\n         * The minimal possible time at 00:00:00.000\n         */\n        val Min: MpLocalTime = of(hour = 0, minute = 0, second = 0, milliSecond = 0)\n\n        /**\n         * The minimal possible time at 23:59:59.999\n         */\n        val Max: MpLocalTime = of(hour = 23, minute = 59, second = 59, milliSecond = 999)\n\n        /**\n         * The time at noon at 12:00:00.000\n         */\n        val Noon: MpLocalTime = of(hour = 12, minute = 0, second = 0, milliSecond = 0)\n    }\n\n    /** The hour component. */\n    val hour: Int\n        get() {\n            return ((milliSeconds % MILLIS_PER_DAY) / MILLIS_PER_HOUR).toInt()\n        }\n\n    /** The minute component. */\n    val minute: Int\n        get() {\n            return ((milliSeconds % MILLIS_PER_HOUR) / MILLIS_PER_MINUTE).toInt()\n        }\n\n    /** The second component. */\n    val second: Int\n        get() {\n            return ((milliSeconds % MILLIS_PER_MINUTE) / MILLIS_PER_SECOND).toInt()\n        }\n\n    /** The millisecond component. */\n    val milliSecond: Int\n        get() {\n            return (milliSeconds % MILLIS_PER_SECOND).toInt()\n        }\n\n    /**\n     * Compares to the [other].\n     */\n    override fun compareTo(other: MpLocalTime): Int {\n        return milliSeconds.compareTo(other.milliSeconds)\n    }\n\n    /**\n     * Converts to a string.\n     */\n    override fun toString(): String {\n        return \"MpLocalTime(${toIsoString()})\"\n    }\n\n    /**\n     * Converts to an iso string of the form HH:mm:ss.SSS\n     */\n    fun toIsoString(): String {\n        return format(\"HH:mm:ss.SSS\")\n    }\n\n    /**\n     * Formats the date according to the given [format].\n     *\n     * See https://help.gooddata.com/cloudconnect/manual/date-and-time-format.html\n     */\n    fun format(format: String): String {\n        val klock = Time(hour = hour, minute = minute, second = second, millisecond = milliSecond)\n\n        return klock.format(format)\n    }\n\n    /**\n     * Get the milliseconds of day represented by this time.\n     */\n    fun inWholeMilliSeconds(): Long {\n        return milliSeconds\n    }\n\n    /**\n     * Adds the given [duration].\n     */\n    fun plus(duration: Duration): MpLocalTime {\n        return ofMilliSeconds(milliSeconds + duration.inWholeMilliseconds)\n    }\n\n    /**\n     * Subtracts the given [duration].\n     */\n    fun minus(duration: Duration): MpLocalTime {\n        return plus(duration.unaryMinus())\n    }\n\n    /**\n     * Calculates the [Duration] between this and the [other].\n     */\n    operator fun minus(other: MpLocalTime): Duration {\n        return (milliSeconds - other.milliSeconds).milliseconds\n    }\n}\n\n/**\n * Formats as HH:mm\n */\nfun MpLocalTime.formatHhMm(): String {\n    return format(\"HH:mm\")\n}\n\n/**\n * Formats as HH:mm:ss\n */\nfun MpLocalTime.formatHhMmSs(): String {\n    return format(\"HH:mm:ss\")\n}\n","package de.peekandpoke.ultra.common.datetime\n\nimport kotlinx.datetime.TimeZone\nimport kotlinx.serialization.Serializable\n\n@ConsistentCopyVisibility\n@Serializable(with = MpTimezoneSerializer::class)\ndata class MpTimezone private constructor(val id: String) {\n    companion object {\n        /**\n         * Creates a timezone from the given id\n         */\n        fun of(id: String): MpTimezone = when (id) {\n            \"Z\" -> UTC\n            else -> MpTimezone(id = id)\n        }\n\n        // TODO: test me\n        val UTC: MpTimezone get() = MpTimezone(id = \"UTC\")\n\n        // TODO: test me\n        val systemDefault: MpTimezone get() = MpTimezone(id = TimeZone.currentSystemDefault().id)\n\n        val supportedIds = setOf(\n            \"Africa/Abidjan\",\n            \"Africa/Accra\",\n            \"Africa/Addis_Ababa\",\n            \"Africa/Algiers\",\n            \"Africa/Asmara\",\n            \"Africa/Asmera\",\n            \"Africa/Bamako\",\n            \"Africa/Bangui\",\n            \"Africa/Banjul\",\n            \"Africa/Bissau\",\n            \"Africa/Blantyre\",\n            \"Africa/Brazzaville\",\n            \"Africa/Bujumbura\",\n            \"Africa/Cairo\",\n            \"Africa/Casablanca\",\n            \"Africa/Ceuta\",\n            \"Africa/Conakry\",\n            \"Africa/Dakar\",\n            \"Africa/Dar_es_Salaam\",\n            \"Africa/Djibouti\",\n            \"Africa/Douala\",\n            \"Africa/El_Aaiun\",\n            \"Africa/Freetown\",\n            \"Africa/Gaborone\",\n            \"Africa/Harare\",\n            \"Africa/Johannesburg\",\n            \"Africa/Juba\",\n            \"Africa/Kampala\",\n            \"Africa/Khartoum\",\n            \"Africa/Kigali\",\n            \"Africa/Kinshasa\",\n            \"Africa/Lagos\",\n            \"Africa/Libreville\",\n            \"Africa/Lome\",\n            \"Africa/Luanda\",\n            \"Africa/Lubumbashi\",\n            \"Africa/Lusaka\",\n            \"Africa/Malabo\",\n            \"Africa/Maputo\",\n            \"Africa/Maseru\",\n            \"Africa/Mbabane\",\n            \"Africa/Mogadishu\",\n            \"Africa/Monrovia\",\n            \"Africa/Nairobi\",\n            \"Africa/Ndjamena\",\n            \"Africa/Niamey\",\n            \"Africa/Nouakchott\",\n            \"Africa/Ouagadougou\",\n            \"Africa/Porto-Novo\",\n            \"Africa/Sao_Tome\",\n            \"Africa/Timbuktu\",\n            \"Africa/Tripoli\",\n            \"Africa/Tunis\",\n            \"Africa/Windhoek\",\n            \"America/Adak\",\n            \"America/Anchorage\",\n            \"America/Anguilla\",\n            \"America/Antigua\",\n            \"America/Araguaina\",\n            \"America/Argentina/Buenos_Aires\",\n            \"America/Argentina/Catamarca\",\n            \"America/Argentina/ComodRivadavia\",\n            \"America/Argentina/Cordoba\",\n            \"America/Argentina/Jujuy\",\n            \"America/Argentina/La_Rioja\",\n            \"America/Argentina/Mendoza\",\n            \"America/Argentina/Rio_Gallegos\",\n            \"America/Argentina/Salta\",\n            \"America/Argentina/San_Juan\",\n            \"America/Argentina/San_Luis\",\n            \"America/Argentina/Tucuman\",\n            \"America/Argentina/Ushuaia\",\n            \"America/Aruba\",\n            \"America/Asuncion\",\n            \"America/Atikokan\",\n            \"America/Atka\",\n            \"America/Bahia\",\n            \"America/Bahia_Banderas\",\n            \"America/Barbados\",\n            \"America/Belem\",\n            \"America/Belize\",\n            \"America/Blanc-Sablon\",\n            \"America/Boa_Vista\",\n            \"America/Bogota\",\n            \"America/Boise\",\n            \"America/Buenos_Aires\",\n            \"America/Cambridge_Bay\",\n            \"America/Campo_Grande\",\n            \"America/Cancun\",\n            \"America/Caracas\",\n            \"America/Catamarca\",\n            \"America/Cayenne\",\n            \"America/Cayman\",\n            \"America/Chicago\",\n            \"America/Chihuahua\",\n            \"America/Coral_Harbour\",\n            \"America/Cordoba\",\n            \"America/Costa_Rica\",\n            \"America/Creston\",\n            \"America/Cuiaba\",\n            \"America/Curacao\",\n            \"America/Danmarkshavn\",\n            \"America/Dawson\",\n            \"America/Dawson_Creek\",\n            \"America/Denver\",\n            \"America/Detroit\",\n            \"America/Dominica\",\n            \"America/Edmonton\",\n            \"America/Eirunepe\",\n            \"America/El_Salvador\",\n            \"America/Ensenada\",\n            \"America/Fort_Nelson\",\n            \"America/Fort_Wayne\",\n            \"America/Fortaleza\",\n            \"America/Glace_Bay\",\n            \"America/Godthab\",\n            \"America/Goose_Bay\",\n            \"America/Grand_Turk\",\n            \"America/Grenada\",\n            \"America/Guadeloupe\",\n            \"America/Guatemala\",\n            \"America/Guayaquil\",\n            \"America/Guyana\",\n            \"America/Halifax\",\n            \"America/Havana\",\n            \"America/Hermosillo\",\n            \"America/Indiana/Indianapolis\",\n            \"America/Indiana/Knox\",\n            \"America/Indiana/Marengo\",\n            \"America/Indiana/Petersburg\",\n            \"America/Indiana/Tell_City\",\n            \"America/Indiana/Vevay\",\n            \"America/Indiana/Vincennes\",\n            \"America/Indiana/Winamac\",\n            \"America/Indianapolis\",\n            \"America/Inuvik\",\n            \"America/Iqaluit\",\n            \"America/Jamaica\",\n            \"America/Jujuy\",\n            \"America/Juneau\",\n            \"America/Kentucky/Louisville\",\n            \"America/Kentucky/Monticello\",\n            \"America/Knox_IN\",\n            \"America/Kralendijk\",\n            \"America/La_Paz\",\n            \"America/Lima\",\n            \"America/Los_Angeles\",\n            \"America/Louisville\",\n            \"America/Lower_Princes\",\n            \"America/Maceio\",\n            \"America/Managua\",\n            \"America/Manaus\",\n            \"America/Marigot\",\n            \"America/Martinique\",\n            \"America/Matamoros\",\n            \"America/Mazatlan\",\n            \"America/Mendoza\",\n            \"America/Menominee\",\n            \"America/Merida\",\n            \"America/Metlakatla\",\n            \"America/Mexico_City\",\n            \"America/Miquelon\",\n            \"America/Moncton\",\n            \"America/Monterrey\",\n            \"America/Montevideo\",\n            \"America/Montreal\",\n            \"America/Montserrat\",\n            \"America/Nassau\",\n            \"America/New_York\",\n            \"America/Nipigon\",\n            \"America/Nome\",\n            \"America/Noronha\",\n            \"America/North_Dakota/Beulah\",\n            \"America/North_Dakota/Center\",\n            \"America/North_Dakota/New_Salem\",\n            \"America/Nuuk\",\n            \"America/Ojinaga\",\n            \"America/Panama\",\n            \"America/Pangnirtung\",\n            \"America/Paramaribo\",\n            \"America/Phoenix\",\n            \"America/Port-au-Prince\",\n            \"America/Port_of_Spain\",\n            \"America/Porto_Acre\",\n            \"America/Porto_Velho\",\n            \"America/Puerto_Rico\",\n            \"America/Punta_Arenas\",\n            \"America/Rainy_River\",\n            \"America/Rankin_Inlet\",\n            \"America/Recife\",\n            \"America/Regina\",\n            \"America/Resolute\",\n            \"America/Rio_Branco\",\n            \"America/Rosario\",\n            \"America/Santa_Isabel\",\n            \"America/Santarem\",\n            \"America/Santiago\",\n            \"America/Santo_Domingo\",\n            \"America/Sao_Paulo\",\n            \"America/Scoresbysund\",\n            \"America/Shiprock\",\n            \"America/Sitka\",\n            \"America/St_Barthelemy\",\n            \"America/St_Johns\",\n            \"America/St_Kitts\",\n            \"America/St_Lucia\",\n            \"America/St_Thomas\",\n            \"America/St_Vincent\",\n            \"America/Swift_Current\",\n            \"America/Tegucigalpa\",\n            \"America/Thule\",\n            \"America/Thunder_Bay\",\n            \"America/Tijuana\",\n            \"America/Toronto\",\n            \"America/Tortola\",\n            \"America/Vancouver\",\n            \"America/Virgin\",\n            \"America/Whitehorse\",\n            \"America/Winnipeg\",\n            \"America/Yakutat\",\n            \"America/Yellowknife\",\n            \"Antarctica/Casey\",\n            \"Antarctica/Davis\",\n            \"Antarctica/DumontDUrville\",\n            \"Antarctica/Macquarie\",\n            \"Antarctica/Mawson\",\n            \"Antarctica/McMurdo\",\n            \"Antarctica/Palmer\",\n            \"Antarctica/Rothera\",\n            \"Antarctica/South_Pole\",\n            \"Antarctica/Syowa\",\n            \"Antarctica/Troll\",\n            \"Antarctica/Vostok\",\n            \"Arctic/Longyearbyen\",\n            \"Asia/Aden\",\n            \"Asia/Almaty\",\n            \"Asia/Amman\",\n            \"Asia/Anadyr\",\n            \"Asia/Aqtau\",\n            \"Asia/Aqtobe\",\n            \"Asia/Ashgabat\",\n            \"Asia/Ashkhabad\",\n            \"Asia/Atyrau\",\n            \"Asia/Baghdad\",\n            \"Asia/Bahrain\",\n            \"Asia/Baku\",\n            \"Asia/Bangkok\",\n            \"Asia/Barnaul\",\n            \"Asia/Beirut\",\n            \"Asia/Bishkek\",\n            \"Asia/Brunei\",\n            \"Asia/Calcutta\",\n            \"Asia/Chita\",\n            \"Asia/Choibalsan\",\n            \"Asia/Chongqing\",\n            \"Asia/Chungking\",\n            \"Asia/Colombo\",\n            \"Asia/Dacca\",\n            \"Asia/Damascus\",\n            \"Asia/Dhaka\",\n            \"Asia/Dili\",\n            \"Asia/Dubai\",\n            \"Asia/Dushanbe\",\n            \"Asia/Famagusta\",\n            \"Asia/Gaza\",\n            \"Asia/Harbin\",\n            \"Asia/Hebron\",\n            \"Asia/Ho_Chi_Minh\",\n            \"Asia/Hong_Kong\",\n            \"Asia/Hovd\",\n            \"Asia/Irkutsk\",\n            \"Asia/Istanbul\",\n            \"Asia/Jakarta\",\n            \"Asia/Jayapura\",\n            \"Asia/Jerusalem\",\n            \"Asia/Kabul\",\n            \"Asia/Kamchatka\",\n            \"Asia/Karachi\",\n            \"Asia/Kashgar\",\n            \"Asia/Kathmandu\",\n            \"Asia/Katmandu\",\n            \"Asia/Khandyga\",\n            \"Asia/Kolkata\",\n            \"Asia/Krasnoyarsk\",\n            \"Asia/Kuala_Lumpur\",\n            \"Asia/Kuching\",\n            \"Asia/Kuwait\",\n            \"Asia/Macao\",\n            \"Asia/Macau\",\n            \"Asia/Magadan\",\n            \"Asia/Makassar\",\n            \"Asia/Manila\",\n            \"Asia/Muscat\",\n            \"Asia/Nicosia\",\n            \"Asia/Novokuznetsk\",\n            \"Asia/Novosibirsk\",\n            \"Asia/Omsk\",\n            \"Asia/Oral\",\n            \"Asia/Phnom_Penh\",\n            \"Asia/Pontianak\",\n            \"Asia/Pyongyang\",\n            \"Asia/Qatar\",\n            \"Asia/Qostanay\",\n            \"Asia/Qyzylorda\",\n            \"Asia/Rangoon\",\n            \"Asia/Riyadh\",\n            \"Asia/Saigon\",\n            \"Asia/Sakhalin\",\n            \"Asia/Samarkand\",\n            \"Asia/Seoul\",\n            \"Asia/Shanghai\",\n            \"Asia/Singapore\",\n            \"Asia/Srednekolymsk\",\n            \"Asia/Taipei\",\n            \"Asia/Tashkent\",\n            \"Asia/Tbilisi\",\n            \"Asia/Tehran\",\n            \"Asia/Tel_Aviv\",\n            \"Asia/Thimbu\",\n            \"Asia/Thimphu\",\n            \"Asia/Tokyo\",\n            \"Asia/Tomsk\",\n            \"Asia/Ujung_Pandang\",\n            \"Asia/Ulaanbaatar\",\n            \"Asia/Ulan_Bator\",\n            \"Asia/Urumqi\",\n            \"Asia/Ust-Nera\",\n            \"Asia/Vientiane\",\n            \"Asia/Vladivostok\",\n            \"Asia/Yakutsk\",\n            \"Asia/Yangon\",\n            \"Asia/Yekaterinburg\",\n            \"Asia/Yerevan\",\n            \"Atlantic/Azores\",\n            \"Atlantic/Bermuda\",\n            \"Atlantic/Canary\",\n            \"Atlantic/Cape_Verde\",\n            \"Atlantic/Faeroe\",\n            \"Atlantic/Faroe\",\n            \"Atlantic/Jan_Mayen\",\n            \"Atlantic/Madeira\",\n            \"Atlantic/Reykjavik\",\n            \"Atlantic/South_Georgia\",\n            \"Atlantic/St_Helena\",\n            \"Atlantic/Stanley\",\n            \"Australia/ACT\",\n            \"Australia/Adelaide\",\n            \"Australia/Brisbane\",\n            \"Australia/Broken_Hill\",\n            \"Australia/Canberra\",\n            \"Australia/Currie\",\n            \"Australia/Darwin\",\n            \"Australia/Eucla\",\n            \"Australia/Hobart\",\n            \"Australia/LHI\",\n            \"Australia/Lindeman\",\n            \"Australia/Lord_Howe\",\n            \"Australia/Melbourne\",\n            \"Australia/NSW\",\n            \"Australia/North\",\n            \"Australia/Perth\",\n            \"Australia/Queensland\",\n            \"Australia/South\",\n            \"Australia/Sydney\",\n            \"Australia/Tasmania\",\n            \"Australia/Victoria\",\n            \"Australia/West\",\n            \"Australia/Yancowinna\",\n            \"Brazil/Acre\",\n            \"Brazil/DeNoronha\",\n            \"Brazil/East\",\n            \"Brazil/West\",\n            \"CET\",\n            \"CST6CDT\",\n            \"Canada/Atlantic\",\n            \"Canada/Central\",\n            \"Canada/Eastern\",\n            \"Canada/Mountain\",\n            \"Canada/Newfoundland\",\n            \"Canada/Pacific\",\n            \"Canada/Saskatchewan\",\n            \"Canada/Yukon\",\n            \"Chile/Continental\",\n            \"Chile/EasterIsland\",\n            \"Cuba\",\n            \"EET\",\n            \"EST5EDT\",\n            \"Egypt\",\n            \"Eire\",\n            \"Etc/GMT\",\n            \"Etc/GMT+0\",\n            \"Etc/GMT+1\",\n            \"Etc/GMT+10\",\n            \"Etc/GMT+11\",\n            \"Etc/GMT+12\",\n            \"Etc/GMT+2\",\n            \"Etc/GMT+3\",\n            \"Etc/GMT+4\",\n            \"Etc/GMT+5\",\n            \"Etc/GMT+6\",\n            \"Etc/GMT+7\",\n            \"Etc/GMT+8\",\n            \"Etc/GMT+9\",\n            \"Etc/GMT-0\",\n            \"Etc/GMT-1\",\n            \"Etc/GMT-10\",\n            \"Etc/GMT-11\",\n            \"Etc/GMT-12\",\n            \"Etc/GMT-13\",\n            \"Etc/GMT-14\",\n            \"Etc/GMT-2\",\n            \"Etc/GMT-3\",\n            \"Etc/GMT-4\",\n            \"Etc/GMT-5\",\n            \"Etc/GMT-6\",\n            \"Etc/GMT-7\",\n            \"Etc/GMT-8\",\n            \"Etc/GMT-9\",\n            \"Etc/GMT0\",\n            \"Etc/Greenwich\",\n            \"Etc/UTC\",\n            \"Etc/Universal\",\n            \"Etc/Zulu\",\n            \"Europe/Amsterdam\",\n            \"Europe/Andorra\",\n            \"Europe/Astrakhan\",\n            \"Europe/Athens\",\n            \"Europe/Belfast\",\n            \"Europe/Belgrade\",\n            \"Europe/Berlin\",\n            \"Europe/Bratislava\",\n            \"Europe/Brussels\",\n            \"Europe/Bucharest\",\n            \"Europe/Budapest\",\n            \"Europe/Busingen\",\n            \"Europe/Chisinau\",\n            \"Europe/Copenhagen\",\n            \"Europe/Dublin\",\n            \"Europe/Gibraltar\",\n            \"Europe/Guernsey\",\n            \"Europe/Helsinki\",\n            \"Europe/Isle_of_Man\",\n            \"Europe/Istanbul\",\n            \"Europe/Jersey\",\n            \"Europe/Kaliningrad\",\n            \"Europe/Kiev\",\n            \"Europe/Kirov\",\n            \"Europe/Lisbon\",\n            \"Europe/Ljubljana\",\n            \"Europe/London\",\n            \"Europe/Luxembourg\",\n            \"Europe/Madrid\",\n            \"Europe/Malta\",\n            \"Europe/Mariehamn\",\n            \"Europe/Minsk\",\n            \"Europe/Monaco\",\n            \"Europe/Moscow\",\n            \"Europe/Nicosia\",\n            \"Europe/Oslo\",\n            \"Europe/Paris\",\n            \"Europe/Podgorica\",\n            \"Europe/Prague\",\n            \"Europe/Riga\",\n            \"Europe/Rome\",\n            \"Europe/Samara\",\n            \"Europe/San_Marino\",\n            \"Europe/Sarajevo\",\n            \"Europe/Saratov\",\n            \"Europe/Simferopol\",\n            \"Europe/Skopje\",\n            \"Europe/Sofia\",\n            \"Europe/Stockholm\",\n            \"Europe/Tallinn\",\n            \"Europe/Tirane\",\n            \"Europe/Tiraspol\",\n            \"Europe/Ulyanovsk\",\n            \"Europe/Uzhgorod\",\n            \"Europe/Vaduz\",\n            \"Europe/Vatican\",\n            \"Europe/Vienna\",\n            \"Europe/Vilnius\",\n            \"Europe/Volgograd\",\n            \"Europe/Warsaw\",\n            \"Europe/Zagreb\",\n            \"Europe/Zaporozhye\",\n            \"Europe/Zurich\",\n            \"GB\",\n            \"GB-Eire\",\n            \"GMT\",\n            \"GMT0\",\n            \"Greenwich\",\n            \"Hongkong\",\n            \"Iceland\",\n            \"Indian/Antananarivo\",\n            \"Indian/Chagos\",\n            \"Indian/Christmas\",\n            \"Indian/Cocos\",\n            \"Indian/Comoro\",\n            \"Indian/Kerguelen\",\n            \"Indian/Mahe\",\n            \"Indian/Maldives\",\n            \"Indian/Mauritius\",\n            \"Indian/Mayotte\",\n            \"Indian/Reunion\",\n            \"Iran\",\n            \"Israel\",\n            \"Jamaica\",\n            \"Japan\",\n            \"Kwajalein\",\n            \"Libya\",\n            \"MET\",\n            \"MST7MDT\",\n            \"Mexico/BajaNorte\",\n            \"Mexico/BajaSur\",\n            \"Mexico/General\",\n            \"NZ\",\n            \"NZ-CHAT\",\n            \"Navajo\",\n            \"PRC\",\n            \"PST8PDT\",\n            \"Pacific/Apia\",\n            \"Pacific/Auckland\",\n            \"Pacific/Bougainville\",\n            \"Pacific/Chatham\",\n            \"Pacific/Chuuk\",\n            \"Pacific/Easter\",\n            \"Pacific/Efate\",\n            \"Pacific/Enderbury\",\n            \"Pacific/Fakaofo\",\n            \"Pacific/Fiji\",\n            \"Pacific/Funafuti\",\n            \"Pacific/Galapagos\",\n            \"Pacific/Gambier\",\n            \"Pacific/Guadalcanal\",\n            \"Pacific/Guam\",\n            \"Pacific/Honolulu\",\n            \"Pacific/Johnston\",\n            \"Pacific/Kiritimati\",\n            \"Pacific/Kosrae\",\n            \"Pacific/Kwajalein\",\n            \"Pacific/Majuro\",\n            \"Pacific/Marquesas\",\n            \"Pacific/Midway\",\n            \"Pacific/Nauru\",\n            \"Pacific/Niue\",\n            \"Pacific/Norfolk\",\n            \"Pacific/Noumea\",\n            \"Pacific/Pago_Pago\",\n            \"Pacific/Palau\",\n            \"Pacific/Pitcairn\",\n            \"Pacific/Pohnpei\",\n            \"Pacific/Ponape\",\n            \"Pacific/Port_Moresby\",\n            \"Pacific/Rarotonga\",\n            \"Pacific/Saipan\",\n            \"Pacific/Samoa\",\n            \"Pacific/Tahiti\",\n            \"Pacific/Tarawa\",\n            \"Pacific/Tongatapu\",\n            \"Pacific/Truk\",\n            \"Pacific/Wake\",\n            \"Pacific/Wallis\",\n            \"Pacific/Yap\",\n            \"Poland\",\n            \"Portugal\",\n            \"ROK\",\n            \"Singapore\",\n            \"Turkey\",\n            \"UCT\",\n            \"US/Alaska\",\n            \"US/Aleutian\",\n            \"US/Arizona\",\n            \"US/Central\",\n            \"US/East-Indiana\",\n            \"US/Eastern\",\n            \"US/Hawaii\",\n            \"US/Indiana-Starke\",\n            \"US/Michigan\",\n            \"US/Mountain\",\n            \"US/Pacific\",\n            \"US/Samoa\",\n            \"UTC\",\n            \"Universal\",\n            \"W-SU\",\n            \"WET\",\n            \"Zulu\",\n            \"Z\",\n        )\n    }\n\n    /**\n     * Converts to a kotlinx-datetime [TimeZone]\n     */\n    // TODO: test me\n    val kotlinx: TimeZone get() = TimeZone.of(id)\n}\n","package de.peekandpoke.ultra.common.datetime\n\nimport de.peekandpoke.ultra.common.ComparableTo\nimport korlibs.time.DateTime\nimport korlibs.time.format\nimport kotlinx.datetime.DateTimeUnit\nimport kotlinx.datetime.DayOfWeek\nimport kotlinx.datetime.Month\nimport kotlinx.datetime.TimeZone\nimport kotlinx.serialization.Serializable\nimport kotlin.time.Duration\n\n@Suppress(\"Detekt:TooManyFunctions\")\n@Serializable(with = MpZonedDateTimeSerializer::class)\ndata class MpZonedDateTime(\n    val datetime: MpLocalDateTime,\n    val timezone: MpTimezone,\n) : MpAbsoluteDateTime, ComparableTo<MpZonedDateTime> {\n\n    companion object {\n        /**\n         * Creates from a local [datetime] and a [timezone]\n         */\n        fun of(datetime: MpLocalDateTime, timezone: TimeZone): MpZonedDateTime {\n            return of(\n                datetime = datetime,\n                timezone = when (timezone.id) {\n                    // WHY? There seems to be a difference between TimeZone.UTC and TimeZone.of(\"UTC\")\n                    \"UTC\" -> TimeZone.UTC\n                    else -> timezone\n                }.mp\n            )\n        }\n\n        /**\n         * Creates from a local [datetime] and a [timezone]\n         */\n        fun of(datetime: MpLocalDateTime, timezone: MpTimezone): MpZonedDateTime {\n            return MpZonedDateTime(datetime = datetime, timezone = timezone)\n        }\n\n        /**\n         * Creates from the given epoch [millis] and [timezone].\n         */\n        fun fromEpochMillis(millis: Long, timezone: TimeZone): MpZonedDateTime {\n            return fromEpochMillis(millis = millis, timezone = timezone.mp)\n        }\n\n        /**\n         * Creates from the given epoch [millis] and [timezone].\n         */\n        // TODO: test me\n        fun fromEpochMillis(millis: Long, timezone: MpTimezone): MpZonedDateTime {\n            return MpInstant.fromEpochMillis(millis).atZone(timezone)\n        }\n\n        /**\n         * Creates from the given epoch [seconds] and [timezone].\n         */\n        fun fromEpochSeconds(seconds: Long, timezone: TimeZone): MpZonedDateTime {\n            return fromEpochSeconds(seconds = seconds, timezone = timezone.mp)\n        }\n\n        /**\n         * Creates from the given epoch [seconds] and [timezone].\n         */\n        // TODO: test me\n        fun fromEpochSeconds(seconds: Long, timezone: MpTimezone): MpZonedDateTime {\n            return MpInstant.fromEpochSeconds(seconds).atZone(timezone)\n        }\n\n        /**\n         * Parses from an [isoString] and a [timezone].\n         *\n         * Throws an [IllegalArgumentException] if parsing fails.\n         */\n        @Throws(IllegalArgumentException::class)\n        fun parse(isoString: String, timezone: TimeZone): MpZonedDateTime {\n            return parse(isoString).atZone(timezone)\n        }\n\n        /**\n         * Parses from an [isoString] and a [timezone].\n         *\n         * Returns null if parsing fails.\n         */\n        fun tryParse(isoString: String, timezone: TimeZone): MpZonedDateTime? {\n            return try {\n                parseInternal(isoString).atZone(timezone)\n            } catch (_: Throwable) {\n                null\n            }\n        }\n\n        /**\n         * Parses from an [isoString] and tries to obtain the timezone from it.\n         *\n         * If there is no timezone in the [isoString] it will fall back to UTC.\n         *\n         * Throws an [IllegalArgumentException] if parsing fails.\n         */\n        @Throws(IllegalArgumentException::class)\n        fun parse(isoString: String): MpZonedDateTime {\n            return try {\n                parseInternal(isoString)\n            } catch (e: Throwable) {\n                throw IllegalArgumentException(\"Could not parse MpZonedDateTime from '$isoString'\", e)\n            }\n        }\n\n        /**\n         * Parses from an [isoString] and tries to obtain the timezone from it.\n         *\n         * If there is no timezone in the [isoString] it will fall back to UTC.\n         *\n         * Returns null if parsing fails.\n         */\n        fun tryParse(isoString: String): MpZonedDateTime? {\n            return try {\n                parseInternal(isoString)\n            } catch (_: Throwable) {\n                null\n            }\n        }\n\n        private fun parseInternal(isoString: String): MpZonedDateTime {\n            return MpDateTimeParser.parseZonedDateTime(isoString)\n        }\n\n        /**\n         * The Genesis, a date in the distant past: -10000-01-01T00:00:00Z\n         */\n        val Genesis: MpZonedDateTime = MpInstant.Genesis.atZone(TimeZone.UTC)\n\n        /**\n         * The Doomsday, a date in the distant future: +10000-01-01T00:00:00Z\n         */\n        val Doomsday: MpZonedDateTime = MpInstant.Doomsday.atZone(TimeZone.UTC)\n    }\n\n    private val instant: MpInstant = datetime.toInstant(timezone)\n\n    /** The year */\n    val year: Int get() = datetime.year\n\n    /** The month as number, where January is \"1\" */\n    val monthNumber: Int get() = datetime.monthNumber\n\n    /** The month */\n    val month: Month get() = datetime.month\n\n    /** The day of the month */\n    val dayOfMonth: Int get() = datetime.dayOfMonth\n\n    /** The hour */\n    val hour: Int get() = datetime.hour\n\n    /** The minute */\n    val minute: Int get() = datetime.minute\n\n    /** The second */\n    val second: Int get() = datetime.second\n\n    /** The millisecond */\n    val milliSecond: Int get() = datetime.milliSecond\n\n    /** The day of the week */\n    val dayOfWeek: DayOfWeek get() = datetime.dayOfWeek\n\n    /** The day of the year */\n    val dayOfYear: Int get() = datetime.dayOfYear\n\n    /**\n     * Compares to the [other].\n     */\n    override fun compareTo(other: MpZonedDateTime): Int {\n        return instant.compareTo(other.instant)\n    }\n\n    /**\n     * Converts to string.\n     */\n    override fun toString(): String {\n        return \"MpZonedDateTime(${toIsoString()})\"\n    }\n\n    /**\n     * Converts into a human-readable string by the given [formatString].\n     *\n     * See https://help.gooddata.com/cloudconnect/manual/date-and-time-format.html\n     */\n    fun format(formatString: String): String {\n        val ts = toEpochMillis() + timezone.offsetMillisAt(instant)\n\n        val klock = DateTime.fromUnixMillis(ts)\n\n        return klock.format(formatString)\n    }\n\n    /**\n     * Converts to an iso date string.\n     */\n    fun toIsoString(): String {\n\n        fun Number.pad(n: Int = 2) = toString().padStart(n, '0')\n\n        val tz = when (val tzId = timezone.id) {\n            \"UTC\", \"Z\" -> \"Z\"\n            else -> \"[$tzId]\"\n        }\n\n        val yearStr = when {\n            year > 9999 -> \"+$year\"\n            else -> year.pad(4)\n        }\n\n        return \"$yearStr-${monthNumber.pad()}-${dayOfMonth.pad()}T\" +\n                \"${hour.pad()}:${minute.pad()}:${second.pad()}.\" +\n                milliSecond.pad(3) +\n                tz\n    }\n\n    /**\n     * Converts to an [MpInstant].\n     */\n    override fun toInstant(): MpInstant = instant\n\n    /**\n     * Converts to an [MpLocalDate].\n     */\n    fun toLocalDate(): MpLocalDate = datetime.toDate()\n\n    /**\n     * Converts to an [MpLocalTime].\n     */\n    fun toLocalTime(): MpLocalTime = datetime.toTime()\n\n    /**\n     * Converts to an [MpLocalDateTime].\n     */\n    fun toLocalDateTime(): MpLocalDateTime = datetime\n\n    /**\n     * Gets the epoch millis.\n     */\n    fun toEpochMillis(): Long = toInstant().toEpochMillis()\n\n    /**\n     * Gets the epoch seconds.\n     */\n    fun toEpochSeconds(): Long = toInstant().toEpochSeconds()\n\n    /**\n     * Creates a [MpZonedDateTimeRange] with this as the start and the given [duration].\n     */\n    // TODO: test me\n    fun toRange(duration: Duration): MpZonedDateTimeRange {\n        return MpZonedDateTimeRange.of(from = this, duration = duration)\n    }\n\n    /**\n     * Creates a [MpZonedDateTimeRange] with this as the start and the given [period].\n     */\n    // TODO: test me\n    fun toRange(period: MpTemporalPeriod): MpZonedDateTimeRange {\n        return MpZonedDateTimeRange.of(from = this, period = period)\n    }\n\n    /**\n     * Get the start of the year.\n     */\n    fun atStartOfYear(): MpZonedDateTime = copy(\n        datetime = MpLocalDateTime.of(year, Month.JANUARY, 1)\n    )\n\n    /**\n     * Get the start of the month.\n     */\n    fun atStartOfMonth(): MpZonedDateTime = copy(\n        datetime = MpLocalDateTime.of(year, month, 1)\n    )\n\n    /**\n     * Get the start of the day.\n     */\n    fun atStartOfDay(): MpZonedDateTime = copy(\n        datetime = MpLocalDateTime.of(year, month, dayOfMonth)\n    )\n\n    /**\n     * Get the start of the hour.\n     */\n    fun atStartOfHour(): MpZonedDateTime = copy(\n        datetime = MpLocalDateTime.of(year, month, dayOfMonth, hour)\n    )\n\n    /**\n     * Get the start of the minute.\n     */\n    fun atStartOfMinute(): MpZonedDateTime = copy(\n        datetime = MpLocalDateTime.of(year, month, dayOfMonth, hour, minute)\n    )\n\n    /**\n     * Get the start of the second.\n     */\n    fun atStartOfSecond(): MpZonedDateTime = copy(\n        datetime = MpLocalDateTime.of(year, month, dayOfMonth, hour, minute, second)\n    )\n\n    /**\n     * Gets the start of the upcoming [dayOfWeek].\n     */\n    fun atStartOfNext(dayOfWeek: DayOfWeek): MpZonedDateTime {\n\n        var result = plus(1, DateTimeUnit.DAY).atStartOfDay()\n\n        while (result.dayOfWeek != dayOfWeek) {\n            result = result.plus(1, DateTimeUnit.DAY).atStartOfDay()\n        }\n\n        return result\n    }\n\n    /**\n     * Gets the start of the preceding [dayOfWeek].\n     */\n    fun atStartOfPrevious(dayOfWeek: DayOfWeek): MpZonedDateTime {\n\n        var result = atStartOfDay()\n\n        while (result.dayOfWeek != dayOfWeek) {\n            result = result.minus(1, DateTimeUnit.DAY).atStartOfDay()\n        }\n\n        return result\n    }\n\n    /**\n     * Sets the time of the day to the given [time].\n     */\n    // TODO: test me\n    fun atTime(time: MpLocalTime): MpZonedDateTime {\n        return MpLocalDateTime.of(\n            date = toLocalDate(),\n            time = time\n        ).atZone(timezone = timezone)\n    }\n\n    /**\n     * Add the given [duration] in absolute terms.\n     */\n    fun plus(duration: Duration): MpZonedDateTime {\n        return toInstant().plus(duration).atZone(timezone)\n    }\n\n    /**\n     * Adds once the [unit] by taking the [timezone] into account.\n     *\n     * This method is useful for timezones where there is a DST (Daylight Saving Transition).\n     *\n     * For example adding 1 Day to 2022-03-27T00:00:00[Europe/Berlin]\n     * Will result in              2022-03-28T00:00:00[Europe/Berlin]\n     * while the difference between both instants is only 23 hours.\n     */\n    // TODO: Test me\n    fun plus(unit: DateTimeUnit): MpZonedDateTime {\n        return plus(1, unit)\n    }\n\n    /**\n     * Adds the [value] times [unit] by taking the [timezone] into account.\n     *\n     * This method is useful for timezones where there is a DST (Daylight Saving Transition).\n     *\n     * For example adding 1 Day to 2022-03-27T00:00:00[Europe/Berlin]\n     * Will result in              2022-03-28T00:00:00[Europe/Berlin]\n     * while the difference between both instants is only 23 hours.\n     */\n    // TODO: Test me\n    fun plus(value: Int, unit: DateTimeUnit): MpZonedDateTime {\n        return toInstant().plus(value, unit, timezone).atZone(timezone)\n    }\n\n    /**\n     * Adds the given [period] in the [timezone].\n     *\n     * Each component is added individually starting with years, months, ..., milliseconds\n     */\n    // TODO: test me\n    fun plus(period: MpTemporalPeriod): MpZonedDateTime {\n        return toInstant().plus(period, timezone).atZone(timezone)\n    }\n\n    /**\n     * Subtracts the given duration in absolute terms.\n     */\n    fun minus(duration: Duration): MpZonedDateTime {\n        return toInstant().minus(duration).atZone(timezone)\n    }\n\n    /**\n     * Subtracts once the [unit] by taking the [timezone] into account.\n     *\n     * This method is useful for timezones where there is a DST (Daylight Saving Transition).\n     *\n     * For example subtracting 1 Day to 2022-03-28T00:00:00[Europe/Berlin]\n     * Will result in                   2022-03-27T00:00:00[Europe/Berlin]\n     * while the difference between both instants is only 23 hours.\n     */\n    // TODO: test me\n    fun minus(unit: DateTimeUnit): MpZonedDateTime {\n        return minus(1, unit)\n    }\n\n    /**\n     * Subtracts the [value] times [unit] by taking the [timezone] into account.\n     *\n     * This method is useful for timezones where there is a DST (Daylight Saving Transition).\n     *\n     * For example subtracting 1 Day to 2022-03-28T00:00:00[Europe/Berlin]\n     * Will result in                   2022-03-27T00:00:00[Europe/Berlin]\n     * while the difference between both instants is only 23 hours.\n     */\n    // TODO: test me\n    fun minus(value: Int, unit: DateTimeUnit): MpZonedDateTime {\n        return plus(-value, unit)\n    }\n\n    /**\n     * Calculates the [Duration] between this and the [other] date time.\n     */\n    operator fun minus(other: MpZonedDateTime): Duration {\n        return toInstant() - other.toInstant()\n    }\n\n    /**\n     * Subtracts the given [period] in the [timezone].\n     *\n     * Each component is added individually starting with years, months, ..., milliseconds\n     */\n    // TODO: test me\n    fun minus(period: MpTemporalPeriod): MpZonedDateTime {\n        return plus(-period)\n    }\n}\n\n// TODO: test me\nfun MpZonedDateTime.formatDdMmmYyyy(): String {\n    return format(\"dd MMM yyyy\")\n}\n\n// TODO: test me\nfun MpZonedDateTime.formatHhMm(): String {\n    return format(\"HH:mm\")\n}\n\n// TODO: test me\nfun MpZonedDateTime.formatDdMmmYyyyHhMm(): String {\n    return format(\"dd MMM yyyy HH:mm\")\n}\n\n// TODO: test me\nfun MpZonedDateTime.formatDdMmmYyyyHhMmSs(): String {\n    return format(\"dd MMM yyyy HH:mm:ss\")\n}\n","package de.peekandpoke.ultra.common.datetime\n\nimport de.peekandpoke.ultra.common.ComparableTo\nimport kotlinx.datetime.DateTimeUnit\nimport kotlinx.datetime.TimeZone\nimport kotlinx.serialization.Serializable\nimport kotlin.time.Duration\n\n@Suppress(\"Detekt:TooManyFunctions\")\n@Serializable\ndata class MpZonedDateTimeRange(\n    val from: MpZonedDateTime,\n    val to: MpZonedDateTime,\n) : ComparableTo<MpTemporalPeriod> {\n    companion object {\n        /**\n         * Range from [MpZonedDateTime.Genesis] until [MpZonedDateTime.Doomsday]\n         */\n        // TODO: test me\n        val forever = MpZonedDateTimeRange(MpZonedDateTime.Genesis, MpZonedDateTime.Doomsday)\n\n        /**\n         * Creates an [MpZonedDateTimeRange] starting at [from] with the given [duration].\n         */\n        // TODO: test me\n        fun of(from: MpZonedDateTime, duration: Duration): MpZonedDateTimeRange = MpZonedDateTimeRange(\n            from = from,\n            to = from.plus(duration),\n        )\n\n        /**\n         * Creates an [MpZonedDateTimeRange] starting at [from] with the given [duration].\n         */\n        // TODO: test me\n        fun of(from: MpZonedDateTime, period: MpTemporalPeriod): MpZonedDateTimeRange = MpZonedDateTimeRange(\n            from = from,\n            to = from.plus(period),\n        )\n\n        /**\n         * Creates an [MpZonedDateTimeRange] from [from] until [MpZonedDateTime.Doomsday].\n         */\n        // TODO: test me\n        fun beginningAt(from: MpZonedDateTime): MpZonedDateTimeRange = MpZonedDateTimeRange(from, forever.to)\n\n        /**\n         * Creates an [MpZonedDateTimeRange] from [MpZonedDateTime.Genesis] until [to].\n         */\n        // TODO: test me\n        fun endingAt(to: MpZonedDateTime): MpZonedDateTimeRange = MpZonedDateTimeRange(forever.from, to)\n    }\n\n    // TODO: test me\n    @Serializable\n    data class Partial(\n        val from: MpZonedDateTime?,\n        val to: MpZonedDateTime?,\n    ) {\n        companion object {\n            val empty = Partial(from = null, to = null)\n        }\n\n        fun asValidRange(): MpZonedDateTimeRange? = when (from != null && to != null) {\n            true -> MpZonedDateTimeRange(from = from, to = to).takeIf { it.isValid }\n            false -> null\n        }\n\n        fun asDateRange() = MpClosedLocalDateRange.Partial(\n            from = from?.toLocalDate(),\n            to = to?.toLocalDate(),\n        )\n    }\n\n    // TODO: Test\n    val duration: Duration by lazy { to - from }\n\n    // TODO: Test\n    val hasStart: Boolean get() = from > MpZonedDateTime.Genesis\n\n    // TODO: Test\n    val hasEnd: Boolean get() = to < MpZonedDateTime.Doomsday\n\n    // TODO: Test\n    val isOpen: Boolean get() = !hasStart || !hasEnd\n\n    // TODO: Test\n    val isNotOpen: Boolean get() = !isOpen\n\n    // TODO: Test\n    val isValid: Boolean get() = from < to\n\n    /**\n     * Compares the duration to the given period.\n     */\n    override operator fun compareTo(other: MpTemporalPeriod): Int {\n        return to.compareTo(from.plus(other))\n    }\n\n    /**\n     * Converts to a [MpClosedLocalDateRange]\n     */\n    fun asDateRange(): MpClosedLocalDateRange = MpClosedLocalDateRange(\n        from = from.toLocalDate(),\n        to = to.toLocalDate(),\n    )\n\n    /**\n     * Converts to the given [timezone].\n     */\n    // TODO: Test\n    fun atZone(timezone: TimeZone): MpZonedDateTimeRange {\n        return MpZonedDateTimeRange(\n            from = from.atZone(timezone),\n            to = to.atZone(timezone),\n        )\n    }\n\n    // TODO: Test\n    fun contains(datetime: MpZonedDateTime): Boolean {\n        return contains(datetime.toInstant())\n    }\n\n    // TODO: Test\n    fun contains(date: MpLocalDateTime, timezone: TimeZone): Boolean {\n        return contains(date.toInstant(timezone))\n    }\n\n    // TODO: Test\n    fun contains(instant: MpInstant): Boolean {\n        return instant >= from.toInstant() && instant < to.toInstant()\n    }\n\n    // TODO: Test\n    fun contains(other: MpZonedDateTimeRange): Boolean {\n        return (isValid && other.isValid) &&\n                (from <= other.from && to >= other.to)\n    }\n\n    // TODO: Test\n    fun intersects(other: MpZonedDateTimeRange): Boolean {\n        return (isValid && other.isValid) && (\n                (other.from >= from && other.from < to) ||\n                        (other.to > from && other.to <= to) ||\n                        contains(other) ||\n                        other.contains(this)\n                )\n    }\n\n    /**\n     * Converts to a [MpInstantRange].\n     */\n    // TODO: Test\n    fun toInstantRange(): MpInstantRange {\n        return MpInstantRange(\n            from = from.toInstant(),\n            to = to.toInstant()\n        )\n    }\n\n    /**\n     * Cuts [other] from this range.\n     *\n     * Results in:\n     * 1. An empty list, when other fully cover this range.\n     * 2. A list with one entry, when other cuts at the left or the right side only.\n     * 3. A list with two entries, when other lies in between this range.\n     */\n    fun cutAway(other: MpZonedDateTimeRange): List<MpZonedDateTimeRange> {\n        return toInstantRange().cutAway(other.toInstantRange())\n            .map { it.atZone(from.timezone) }\n    }\n\n    /**\n     * Adds the [duration] in absolute terms.\n     */\n    // TODO: Test\n    fun plus(duration: Duration): MpZonedDateTimeRange {\n        return MpZonedDateTimeRange(\n            from = from.plus(duration),\n            to = to.plus(duration),\n        )\n    }\n\n    /**\n     * Adds once the [unit] by taking the timezones into account.\n     *\n     * This method is useful for timezones where there is a DST (Daylight Saving Transition).\n     *\n     * For example adding 1 Day to 2022-03-27T00:00:00[Europe/Berlin]\n     * Will result in              2022-03-28T00:00:00[Europe/Berlin]\n     * while the difference between both instants is only 23 hours.\n     */\n    // TODO: Test\n    fun plus(unit: DateTimeUnit): MpZonedDateTimeRange {\n        return plus(value = 1, unit = unit)\n    }\n\n    /**\n     * Adds the [value] times [unit] by taking the timezones into account.\n     *\n     * This method is useful for timezones where there is a DST (Daylight Saving Transition).\n     *\n     * For example adding 1 Day to 2022-03-27T00:00:00[Europe/Berlin]\n     * Will result in              2022-03-28T00:00:00[Europe/Berlin]\n     * while the difference between both instants is only 23 hours.\n     */\n    // TODO: Test\n    fun plus(value: Int, unit: DateTimeUnit): MpZonedDateTimeRange {\n        return MpZonedDateTimeRange(\n            from = from.plus(value = value, unit = unit),\n            to = to.plus(value = value, unit = unit),\n        )\n    }\n\n    /**\n     * Subtracts the [duration] in absolute terms.\n     */\n    // TODO: Test\n    fun minus(duration: Duration): MpZonedDateTimeRange {\n        return plus(duration.unaryMinus())\n    }\n\n    /**\n     * Subtracts once the [unit] by taking the timezones into account.\n     *\n     * This method is useful for timezones where there is a DST (Daylight Saving Transition).\n     *\n     * For example subtracting 1 Day to 2022-03-28T00:00:00[Europe/Berlin]\n     * Will result in                   2022-03-27T00:00:00[Europe/Berlin]\n     * while the difference between both instants is only 23 hours.\n     */\n    // TODO: Test\n    fun minus(unit: DateTimeUnit): MpZonedDateTimeRange {\n        return minus(1, unit)\n    }\n\n    /**\n     * Subtracts the [value] times [unit] by taking the [timezone] into account.\n     *\n     * This method is useful for timezones where there is a DST (Daylight Saving Transition).\n     *\n     * For example subtracting 1 Day to 2022-03-28T00:00:00[Europe/Berlin]\n     * Will result in                   2022-03-27T00:00:00[Europe/Berlin]\n     * while the difference between both instants is only 23 hours.\n     */\n    // TODO: Test\n    fun minus(value: Int, unit: DateTimeUnit): MpZonedDateTimeRange {\n        return plus(-value, unit)\n    }\n}\n\n// TODO: test me\nfun MpZonedDateTimeRange.formatDdMmmYyyyHhMm(): String {\n    if (from.atStartOfDay() == to.atStartOfDay()) {\n        return \"${from.formatDdMmmYyyy()} ${from.formatHhMm()} - ${to.formatHhMm()}\"\n    }\n\n    return \"${from.formatDdMmmYyyyHhMm()} - ${to.formatDdMmmYyyyHhMm()}\"\n}\n","package de.peekandpoke.ultra.common.datetime\n\nimport kotlinx.datetime.TimeZone\nimport kotlinx.datetime.UtcOffset\nimport kotlinx.datetime.offsetAt as instantOffsetAt\n\n/**\n * Get the offset in total milliseconds\n */\nval UtcOffset.totalMillis: Long\n    get() {\n        return totalSeconds * 1000L\n    }\n\n/**\n * Converts the [TimeZone] into an [MpTimezone]\n */\n// TODO: test me\nval TimeZone.mp: MpTimezone get() = MpTimezone.of(id)\n\n/**\n * Get the offset at the given [instant].\n */\nfun TimeZone.offsetAt(instant: MpInstant): UtcOffset {\n    return instantOffsetAt(instant.value)\n}\n\n/**\n * Get the offset in total seconds at the given [instant].\n */\nfun TimeZone.offsetSecondsAt(instant: MpInstant): Int {\n    return offsetAt(instant).totalSeconds\n}\n\n/**\n * Get the offset in total milliseconds at the given [instant].\n */\nfun TimeZone.offsetMillisAt(instant: MpInstant): Long {\n    return offsetAt(instant).totalMillis\n}\n\n/**\n * Get the offset at the given [instant].\n */\nfun MpTimezone.offsetAt(instant: MpInstant): UtcOffset {\n    return kotlinx.offsetAt(instant)\n}\n\n/**\n * Get the offset in total seconds at the given [instant].\n */\nfun MpTimezone.offsetSecondsAt(instant: MpInstant): Int {\n    return offsetAt(instant).totalSeconds\n}\n\n/**\n * Get the offset in total milliseconds at the given [instant].\n */\nfun MpTimezone.offsetMillisAt(instant: MpInstant): Long {\n    return offsetAt(instant).totalMillis\n}\n","package de.peekandpoke.ultra.common.fixture\n\nimport kotlin.random.Random\n\n/**\n * TODO: test\n */\nobject LoremIpsum {\n\n    private val rand = Random(1234)\n\n    private const val WORDS = \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, \" +\n            \"sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, \" +\n            \"sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. \" +\n            \"Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. \" +\n            \"Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod \" +\n            \"tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. \" +\n            \"At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, \" +\n            \"no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, \" +\n            \"consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore \" +\n            \"magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. \" +\n            \"Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\"\n\n    private val WORDS_SPLIT = WORDS.split(\" \")\n\n    private fun getWordAt(idx: Int) = WORDS_SPLIT[idx % WORDS_SPLIT.size]\n\n    operator fun invoke(words: Int) = words(words)\n\n    fun words(words: Int) = (0..<words).joinToString(separator = \" \", transform = ::getWordAt)\n\n    fun words(words: Int, randomRange: Int = 5) = words(words + rand.nextInt(-randomRange, randomRange))\n}\n","package de.peekandpoke.ultra.common.model\n\n/**\n * Creates a tuple containing one element.\n *\n * @param e1 The first element of the tuple.\n *\n * @return A tuple containing the specified element.\n */\nfun <E1> tuple(\n    e1: E1,\n) = Tuple1(e1)\n\n/**\n * Creates a tuple containing two elements.\n *\n * @param e1 The first element of the tuple.\n * @param e2 The second element of the tuple.\n *\n * @return A tuple containing the specified elements.\n */\nfun <E1, E2> tuple(\n    e1: E1,\n    e2: E2,\n) = Tuple2(e1, e2)\n\n/**\n * Creates a tuple with three elements of different types.\n *\n * @param e1 the first element of the tuple\n * @param e2 the second element of the tuple\n * @param e3 the third element of the tuple\n *\n * @return a new instance of Tuple3 with the specified elements\n */\nfun <E1, E2, E3> tuple(\n    e1: E1,\n    e2: E2,\n    e3: E3,\n) = Tuple3(e1, e2, e3)\n\n/**\n * Creates a new tuple with the given elements.\n *\n * @param e1 The first element of the tuple.\n * @param e2 The second element of the tuple.\n * @param e3 The third element of the tuple.\n * @param e4 The fourth element of the tuple.\n *\n * @return A new tuple containing the given elements.\n */\nfun <E1, E2, E3, E4> tuple(\n    e1: E1,\n    e2: E2,\n    e3: E3,\n    e4: E4,\n) = Tuple4(e1, e2, e3, e4)\n\n/**\n * Creates a tuple with five elements.\n *\n * @param e1 The value of the first element.\n * @param e2 The value of the second element.\n * @param e3 The value of the third element.\n * @param e4 The value of the fourth element.\n * @param e5 The value of the fifth element.\n *\n * @return A new tuple with the specified elements.\n */\nfun <E1, E2, E3, E4, E5> tuple(\n    e1: E1,\n    e2: E2,\n    e3: E3,\n    e4: E4,\n    e5: E5,\n) = Tuple5(e1, e2, e3, e4, e5)\n\n/**\n * Creates a tuple of six elements.\n *\n * @param e1 the first element of the tuple\n * @param e2 the second element of the tuple\n * @param e3 the third element of the tuple\n * @param e4 the fourth element of the tuple\n * @param e5 the fifth element of the tuple\n * @param e6 the sixth element of the tuple\n *\n * @return a tuple containing the specified elements\n */\nfun <E1, E2, E3, E4, E5, E6> tuple(\n    e1: E1,\n    e2: E2,\n    e3: E3,\n    e4: E4,\n    e5: E5,\n    e6: E6,\n) = Tuple6(e1, e2, e3, e4, e5, e6)\n\n/**\n * Creates a 7-element tuple with the specified values.\n *\n * @param e1 The value of the first element.\n * @param e2 The value of the second element.\n * @param e3 The value of the third element.\n * @param e4 The value of the fourth element.\n * @param e5 The value of the fifth element.\n * @param e6 The value of the sixth element.\n * @param e7 The value of the seventh element.\n *\n * @return A new 7-element tuple with the given values.\n */\nfun <E1, E2, E3, E4, E5, E6, E7> tuple(\n    e1: E1,\n    e2: E2,\n    e3: E3,\n    e4: E4,\n    e5: E5,\n    e6: E6,\n    e7: E7,\n) = Tuple7(e1, e2, e3, e4, e5, e6, e7)\n\n/**\n * Creates a tuple with eight elements of the given types.\n *\n * @param e1 the first element of the tuple\n * @param e2 the second element of the tuple\n * @param e3 the third element of the tuple\n * @param e4 the fourth element of the tuple\n * @param e5 the fifth element of the tuple\n * @param e6 the sixth element of the tuple\n * @param e7 the seventh element of the tuple\n * @param e8 the eighth element of the tuple\n *\n * @return the tuple containing the specified elements\n */\nfun <E1, E2, E3, E4, E5, E6, E7, E8> tuple(\n    e1: E1,\n    e2: E2,\n    e3: E3,\n    e4: E4,\n    e5: E5,\n    e6: E6,\n    e7: E7,\n    e8: E8,\n) = Tuple8(e1, e2, e3, e4, e5, e6, e7, e8)\n\n/**\n * Creates a new tuple with nine elements.\n *\n * @param e1 The first element of the tuple.\n * @param e2 The second element of the tuple.\n * @param e3 The third element of the tuple.\n * @param e4 The fourth element of the tuple.\n * @param e5 The fifth element of the tuple.\n * @param e6 The sixth element of the tuple.\n * @param e7 The seventh element of the tuple.\n * @param e8 The eighth element of the tuple.\n * @param e9 The ninth element of the tuple.\n *\n * @return A new tuple with the specified elements.\n */\nfun <E1, E2, E3, E4, E5, E6, E7, E8, E9> tuple(\n    e1: E1,\n    e2: E2,\n    e3: E3,\n    e4: E4,\n    e5: E5,\n    e6: E6,\n    e7: E7,\n    e8: E8,\n    e9: E9,\n) = Tuple9(e1, e2, e3, e4, e5, e6, e7, e8, e9)\n\n/**\n * Creates a tuple with 10 elements.\n *\n * @param e1 The first element.\n * @param e2 The second element.\n * @param e3 The third element.\n * @param e4 The fourth element.\n * @param e5 The fifth element.\n * @param e6 The sixth element.\n * @param e7 The seventh element.\n * @param e8 The eighth element.\n * @param e9 The ninth element.\n * @param e10 The tenth element.\n *\n * @return A tuple containing the specified elements.\n */\nfun <E1, E2, E3, E4, E5, E6, E7, E8, E9, E10> tuple(\n    e1: E1,\n    e2: E2,\n    e3: E3,\n    e4: E4,\n    e5: E5,\n    e6: E6,\n    e7: E7,\n    e8: E8,\n    e9: E9,\n    e10: E10,\n) = Tuple10(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10)\n\n/**\n * Represents a tuple containing one element.\n *\n * @param E1 The type of the element.\n */\ndata class Tuple1<E1>(\n    val e1: E1,\n) {\n    /**\n     * Returns a list containing the element stored in the calling `Tuple1` instance.\n     *\n     * @return A lazy evaluated list containing the element.\n     */\n    val asList by lazy { listOf(e1) }\n\n    /**\n     * Adds an element to the current tuple, creating a new tuple with an additional element.\n     *\n     * @param x The element to be added to the tuple.\n     *\n     * @return A new tuple containing the original element and the additional element.\n     */\n    operator fun <X> plus(x: X): Tuple2<E1, X> = tuple(e1, x)\n\n    /**\n     * Appends an element to the current tuple, creating a new tuple with an additional element.\n     *\n     * @param x The element to be appended to the tuple.\n     *\n     * @return A new tuple containing the original elements and the additional element.\n     */\n    fun <X> append(x: X): Tuple2<E1, X> = this + x\n}\n\n/**\n * Represents a tuple containing two elements.\n */\ndata class Tuple2<E1, E2>(\n    val e1: E1,\n    val e2: E2,\n) {\n    /**\n     * Lazily converts the elements of this tuple to a list.\n     *\n     * The resulting list will contain the elements in the same order as they appear in the tuple.\n     */\n    val asList by lazy { listOf(e1, e2) }\n\n    /**\n     * Adds an element to the current tuple, creating a new tuple with an additional element.\n     *\n     * @param x The element to be added to the tuple.\n     *\n     * @return A new tuple containing the original element and the additional element.\n     */\n    operator fun <X> plus(x: X): Tuple3<E1, E2, X> = tuple(e1, e2, x)\n\n    /**\n     * Appends an element to the current tuple, creating a new tuple with an additional element.\n     *\n     * @param x The element to be appended to the tuple.\n     *\n     * @return A new tuple containing the original elements and the additional element.\n     */\n    fun <X> append(x: X): Tuple3<E1, E2, X> = this + x\n}\n\n/**\n * Represents a tuple containing three elements.\n */\ndata class Tuple3<E1, E2, E3>(\n    val e1: E1,\n    val e2: E2,\n    val e3: E3,\n) {\n    /**\n     * Lazily converts the elements of this tuple to a list.\n     *\n     * The resulting list will contain the elements in the same order as they appear in the tuple.\n     */\n    val asList by lazy { listOf(e1, e2, e3) }\n\n    /**\n     * Adds an element to the current tuple, creating a new tuple with an additional element.\n     *\n     * @param x The element to be added to the tuple.\n     *\n     * @return A new tuple containing the original element and the additional element.\n     */\n    operator fun <X> plus(x: X): Tuple4<E1, E2, E3, X> = tuple(e1, e2, e3, x)\n\n    /**\n     * Appends an element to the current tuple, creating a new tuple with an additional element.\n     *\n     * @param x The element to be appended to the tuple.\n     *\n     * @return A new tuple containing the original elements and the additional element.\n     */\n    fun <X> append(x: X): Tuple4<E1, E2, E3, X> = this + x\n}\n\n/**\n * Represents a tuple containing four elements.\n */\ndata class Tuple4<E1, E2, E3, E4>(\n    val e1: E1,\n    val e2: E2,\n    val e3: E3,\n    val e4: E4,\n) {\n    /**\n     * Lazily converts the elements of this tuple to a list.\n     *\n     * The resulting list will contain the elements in the same order as they appear in the tuple.\n     */\n    val asList by lazy { listOf(e1, e2, e3, e4) }\n\n    /**\n     * Adds an element to the current tuple, creating a new tuple with an additional element.\n     *\n     * @param x The element to be added to the tuple.\n     *\n     * @return A new tuple containing the original element and the additional element.\n     */\n    operator fun <X> plus(x: X): Tuple5<E1, E2, E3, E4, X> = tuple(e1, e2, e3, e4, x)\n\n    /**\n     * Appends an element to the current tuple, creating a new tuple with an additional element.\n     *\n     * @param x The element to be appended to the tuple.\n     *\n     * @return A new tuple containing the original elements and the additional element.\n     */\n    fun <X> append(x: X): Tuple5<E1, E2, E3, E4, X> = this + x\n}\n\n/**\n * Represents a tuple containing five elements.\n */\ndata class Tuple5<E1, E2, E3, E4, E5>(\n    val e1: E1,\n    val e2: E2,\n    val e3: E3,\n    val e4: E4,\n    val e5: E5,\n) {\n    /**\n     * Lazily converts the elements of this tuple to a list.\n     *\n     * The resulting list will contain the elements in the same order as they appear in the tuple.\n     */\n    val asList by lazy { listOf(e1, e2, e3, e4, e5) }\n\n    /**\n     * Adds an element to the current tuple, creating a new tuple with an additional element.\n     *\n     * @param x The element to be added to the tuple.\n     *\n     * @return A new tuple containing the original element and the additional element.\n     */\n    operator fun <X> plus(x: X): Tuple6<E1, E2, E3, E4, E5, X> = tuple(e1, e2, e3, e4, e5, x)\n\n    /**\n     * Appends an element to the current tuple, creating a new tuple with an additional element.\n     *\n     * @param x The element to be appended to the tuple.\n     *\n     * @return A new tuple containing the original elements and the additional element.\n     */\n    fun <X> append(x: X): Tuple6<E1, E2, E3, E4, E5, X> = this + x\n}\n\n/**\n * Represents a tuple containing six elements.\n */\ndata class Tuple6<E1, E2, E3, E4, E5, E6>(\n    val e1: E1,\n    val e2: E2,\n    val e3: E3,\n    val e4: E4,\n    val e5: E5,\n    val e6: E6,\n) {\n    /**\n     * Lazily converts the elements of this tuple to a list.\n     *\n     * The resulting list will contain the elements in the same order as they appear in the tuple.\n     */\n    val asList by lazy { listOf(e1, e2, e3, e4, e5, e6) }\n\n    /**\n     * Adds an element to the current tuple, creating a new tuple with an additional element.\n     *\n     * @param x The element to be added to the tuple.\n     *\n     * @return A new tuple containing the original element and the additional element.\n     */\n    operator fun <X> plus(x: X): Tuple7<E1, E2, E3, E4, E5, E6, X> = tuple(e1, e2, e3, e4, e5, e6, x)\n\n    /**\n     * Appends an element to the current tuple, creating a new tuple with an additional element.\n     *\n     * @param x The element to be appended to the tuple.\n     *\n     * @return A new tuple containing the original elements and the additional element.\n     */\n    fun <X> append(x: X): Tuple7<E1, E2, E3, E4, E5, E6, X> = this + x\n}\n\n/**\n * Represents a tuple containing seven elements.\n */\ndata class Tuple7<E1, E2, E3, E4, E5, E6, E7>(\n    val e1: E1,\n    val e2: E2,\n    val e3: E3,\n    val e4: E4,\n    val e5: E5,\n    val e6: E6,\n    val e7: E7,\n) {\n    /**\n     * Lazily converts the elements of this tuple to a list.\n     *\n     * The resulting list will contain the elements in the same order as they appear in the tuple.\n     */\n    val asList by lazy { listOf(e1, e2, e3, e4, e5, e6, e7) }\n\n    /**\n     * Adds an element to the current tuple, creating a new tuple with an additional element.\n     *\n     * @param x The element to be added to the tuple.\n     *\n     * @return A new tuple containing the original element and the additional element.\n     */\n    operator fun <X> plus(x: X): Tuple8<E1, E2, E3, E4, E5, E6, E7, X> = tuple(e1, e2, e3, e4, e5, e6, e7, x)\n\n    /**\n     * Appends an element to the current tuple, creating a new tuple with an additional element.\n     *\n     * @param x The element to be appended to the tuple.\n     *\n     * @return A new tuple containing the original elements and the additional element.\n     */\n    fun <X> append(x: X): Tuple8<E1, E2, E3, E4, E5, E6, E7, X> = this + x\n}\n\n/**\n * Represents a tuple containing eight elements.\n */\ndata class Tuple8<E1, E2, E3, E4, E5, E6, E7, E8>(\n    val e1: E1,\n    val e2: E2,\n    val e3: E3,\n    val e4: E4,\n    val e5: E5,\n    val e6: E6,\n    val e7: E7,\n    val e8: E8,\n) {\n    /**\n     * Lazily converts the elements of this tuple to a list.\n     *\n     * The resulting list will contain the elements in the same order as they appear in the tuple.\n     */\n    val asList by lazy { listOf(e1, e2, e3, e4, e5, e6, e7, e8) }\n\n    /**\n     * Adds an element to the current tuple, creating a new tuple with an additional element.\n     *\n     * @param x The element to be added to the tuple.\n     *\n     * @return A new tuple containing the original element and the additional element.\n     */\n    operator fun <X> plus(x: X): Tuple9<E1, E2, E3, E4, E5, E6, E7, E8, X> = tuple(e1, e2, e3, e4, e5, e6, e7, e8, x)\n\n    /**\n     * Appends an element to the current tuple, creating a new tuple with an additional element.\n     *\n     * @param x The element to be appended to the tuple.\n     *\n     * @return A new tuple containing the original elements and the additional element.\n     */\n    fun <X> append(x: X): Tuple9<E1, E2, E3, E4, E5, E6, E7, E8, X> = this + x\n}\n\n/**\n * Represents a tuple containing nine elements.\n */\ndata class Tuple9<E1, E2, E3, E4, E5, E6, E7, E8, E9>(\n    val e1: E1,\n    val e2: E2,\n    val e3: E3,\n    val e4: E4,\n    val e5: E5,\n    val e6: E6,\n    val e7: E7,\n    val e8: E8,\n    val e9: E9,\n) {\n    /**\n     * Lazily converts the elements of this tuple to a list.\n     *\n     * The resulting list will contain the elements in the same order as they appear in the tuple.\n     */\n    val asList by lazy { listOf(e1, e2, e3, e4, e5, e6, e7, e8, e9) }\n\n    /**\n     * Adds an element to the current tuple, creating a new tuple with an additional element.\n     *\n     * @param x The element to be added to the tuple.\n     *\n     * @return A new tuple containing the original element and the additional element.\n     */\n    operator fun <X> plus(x: X): Tuple10<E1, E2, E3, E4, E5, E6, E7, E8, E9, X> =\n        tuple(e1, e2, e3, e4, e5, e6, e7, e8, e9, x)\n\n    /**\n     * Appends an element to the current tuple, creating a new tuple with an additional element.\n     *\n     * @param x The element to be appended to the tuple.\n     *\n     * @return A new tuple containing the original elements and the additional element.\n     */\n    fun <X> append(x: X): Tuple10<E1, E2, E3, E4, E5, E6, E7, E8, E9, X> = this + x\n}\n\n/**\n * Represents a tuple containing ten elements.\n */\ndata class Tuple10<E1, E2, E3, E4, E5, E6, E7, E8, E9, E10>(\n    val e1: E1,\n    val e2: E2,\n    val e3: E3,\n    val e4: E4,\n    val e5: E5,\n    val e6: E6,\n    val e7: E7,\n    val e8: E8,\n    val e9: E9,\n    val e10: E10,\n) {\n    /**\n     * Lazily converts the elements of this tuple to a list.\n     *\n     * The resulting list will contain the elements in the same order as they appear in the tuple.\n     */\n    val asList by lazy { listOf(e1, e2, e3, e4, e5, e6, e7, e8, e9, e10) }\n}\n","package de.peekandpoke.ultra.common\n\n@Suppress(\"EXPECT_ACTUAL_CLASSIFIERS_ARE_IN_BETA_WARNING\")\nactual object RunSync {\n    actual operator fun <R> invoke(lock: Any, block: () -> R): R = block()\n}\n","package de.peekandpoke.ultra.common.datetime.kotlinx\n\n@JsModule(\"@js-joda/timezone\")\n@JsNonModule\nexternal object JsJodaTimeZoneModule\n\n@Suppress(\"unused\")\ninternal val jsJodaTz = JsJodaTimeZoneModule\n\nfun initializeJsJodaTimezones(): JsJodaTimeZoneModule {\n    return jsJodaTz\n}\n","package de.peekandpoke.ultra.common\n\n/**\n * Returns a new List with all occurrences of [old] replaced with [new].\n *\n * The comparison between the elements is done non strict '=='\n */\nfun <E> List<E>.replace(old: E, new: E): List<E> = map { if (it == old) new else it }\n\n/**\n * Returns a new List with all occurrences of [old] replaced with [new].\n *\n * The comparison between the elements is done strict '==='\n */\nfun <E> List<E>.replaceStrict(old: E, new: E): List<E> = map { if (it === old) new else it }\n\n/**\n * Returns a new List with the element at [idx] replaced by [element].\n *\n * If the index is out of bounds an [IndexOutOfBoundsException] is thrown.\n */\nfun <E> List<E>.replaceAt(idx: Int, element: E): List<E> = toMutableList().apply { set(idx, element) }.toList()\n\n/**\n * Returns a new List with all occurrences of [element] removed.\n *\n * The comparison between the elements is done non strict '=='\n */\nfun <E> List<E>.remove(element: E): List<E> = filter { it != element }\n\n/**\n * Returns a new List with all occurrences of [element] removed.\n *\n * The comparison between the elements is done strict '==='\n */\nfun <E> List<E>.removeStrict(element: E): List<E> = filter { it !== element }\n\n/**\n * Removes the element at [idx] by creating a new list without the element.\n */\nfun <E> List<E>.removeAt(idx: Int) = toMutableList().apply { removeAt(idx) }.toList()\n\n/**\n * Adds the [element] at [idx] by creating a new list with the element added.\n */\nfun <E> List<E>.addAt(idx: Int, element: E) = toMutableList().apply { add(idx, element) }.toList()\n\n/**\n * Adds the [element] at the beginning by creating a new list with the element added.\n */\nfun <E> List<E>.prepend(element: E) = addAt(0, element)\n\n/**\n * Swaps the elements at [idx1] and [idx2] by creating a new list.\n *\n * If idx1 or idx2 is out of bounds, the list is returned as is.\n */\nfun <E> List<E>.swapAt(idx1: Int, idx2: Int): List<E> {\n\n    if (idx1 < 0 || idx1 >= size || idx2 < 0 || idx2 >= size || idx1 == idx2) {\n        return this\n    }\n\n    val mutable = toMutableList()\n\n    val tmp = mutable[idx1]\n    mutable[idx1] = mutable[idx2]\n    mutable[idx2] = tmp\n\n    return mutable.toList()\n}\n\n/**\n * Replaces the first item matched with [new] or adds it to the end of the list.\n *\n * All items are mapped by using [compareBy]. the comparison is done non-strict (==).\n */\nfun <T, X> List<T>.replaceFirstByOrAdd(new: T, compareBy: (T) -> X): List<T> {\n\n    val search = compareBy(new)\n\n    return when (val idx = indexOfFirst { compareBy(it) == search }) {\n        -1 -> plus(new)\n        else -> replaceAt(idx, new)\n    }\n}\n","package de.peekandpoke.ultra.common\n\nimport org.khronos.webgl.Uint8Array\n\n/**\n * Encodes an uri\n *\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent*\n */\nexternal fun encodeURIComponent(value: String): String\n\n/**\n * Decodes an uri\n *\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent\n */\nexternal fun decodeURIComponent(value: String): String\n\n/**\n * Decodes a base64 encoded string(\"atob\" should be read as \"ASCII to binary\").\n *\n * See https://developer.mozilla.org/en-US/docs/Glossary/Base64\n */\nexternal fun atob(value: String): Uint8Array\n\n/**\n * Encodes a base-64 encoded ASCII string from a \"string\" of binary data (\"btoa\" should be read as \"binary to ASCII\").\n *\n * See https://developer.mozilla.org/en-US/docs/Glossary/Base64\n */\nexternal fun btoa(value: Uint8Array): String\n\nactual fun String.encodeUriComponent(): String {\n    return encodeURIComponent(this)\n}\n\nactual fun String.decodeUriComponent(): String {\n    return decodeURIComponent(this)\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkfomanticui\"] = globalThis[\"webpackChunkfomanticui\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(517);\n"],"names":["root","factory","exports","module","define","amd","globalThis","leafPrototypes","getProto","inProgress","dataWebpackPrefix","createErrorType","name","init","superErrorClass","JsJodaException","message","Error","captureStackTrace","this","constructor","stack","apply","arguments","toString","prototype","Object","create","DateTimeException","cause","msg","DateTimeParseException","text","index","parsedString","errorIndex","UnsupportedTemporalTypeException","ArithmeticException","IllegalArgumentException","IllegalStateException","NullPointerException","assert","assertion","error","requireNonNull","value","parameterName","requireInstance","_class","abstractMethodFail","methodName","TypeError","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","MathUtil","intDiv","x","y","r","roundDown","safeZero","intMod","Math","ceil","floor","floorDiv","floorMod","safeAdd","verifyInt","safeToInt","safeSubtract","safeMultiply","parseInt","_parseInt","_x","isNaN","Number","isInteger","compareNumbers","a","b","smi","int","hash","number","Infinity","result","hashCode","_len","length","numbers","Array","_key","_i","_numbers","n","Enum","_name","_proto","equals","other","toJSON","TemporalAmount","get","unit","units","addTo","temporal","subtractFrom","Symbol","toPrimitive","hint","TemporalUnit","duration","isDurationEstimated","isDateBased","isTimeBased","isSupportedBy","dateTime","periodToAdd","between","temporal1","temporal2","Duration","_TemporalAmount","seconds","nanos","_this","call","_seconds","_nanos","_inheritsLoose","ofDays","days","_create","LocalTime","SECONDS_PER_DAY","ofHours","hours","SECONDS_PER_HOUR","ofMinutes","minutes","SECONDS_PER_MINUTE","ofSeconds","nanoAdjustment","secs","NANOS_PER_SECOND","nos","ofMillis","millis","mos","ofNanos","of","amount","ZERO","plus","from","forEach","startInclusive","endExclusive","until","ChronoUnit","SECONDS","isSupported","ChronoField","NANO_OF_SECOND","startNos","getLong","adjustedEnd","with","e","parse","matches","RegExp","exec","negate","dayMatch","hourMatch","minuteMatch","secondMatch","fractionMatch","daysAsSecs","_parseNumber","hoursAsSecs","minsAsSecs","negativeSecs","charAt","_parseFraction","ex","parsed","multiplier","errorText","substring","parseFloat","_createSecondsNanos","_createNegateDaysHoursMinutesSecondsNanos","negated","NANOS","isZero","isNegative","nano","withSeconds","withNanos","nanoOfSecond","checkValidIntValue","plusDuration","durationOrNumber","unitOrNumber","plusAmountUnit","plusSecondsNanos","amountToAdd","DAYS","plusNanos","MICROS","MILLIS","plusMillis","plusSeconds","multipliedBy","plusDays","daysToAdd","plusHours","hoursToAdd","plusMinutes","minutesToAdd","secondsToAdd","millisToAdd","nanosToAdd","epochSec","minus","minusDuration","minusAmountUnit","secsToSubtract","nanosToSubtract","amountToSubtract","minusDays","daysToSubtract","minusHours","hoursToSubtract","minusMinutes","minutesToSubtract","minusSeconds","secondsToSubtract","minusMillis","millisToSubtract","minusNanos","multiplicand","dividedBy","divisor","secsMod","abs","toDays","toHours","toMinutes","toMillis","round","toNanos","totalNanos","compareTo","otherDuration","cmp","nanoString","rval","slice","YearConstants","_TemporalUnit","estimatedDuration","_duration","FOREVER","e2","TemporalField","baseUnit","rangeUnit","range","rangeRefinedBy","getFrom","adjustInto","newValue","displayName","ValueRange","minSmallest","minLargest","maxSmallest","maxLargest","_minSmallest","_minLargest","_maxLargest","_maxSmallest","isFixed","minimum","largestMinimum","maximum","smallestMaximum","isValidValue","checkValidValue","field","isValidIntValue","isIntValue","str","_TemporalField","_baseUnit","_rangeUnit","_range","byName","fieldName","prop","DAY_OF_WEEK","ALIGNED_DAY_OF_WEEK_IN_MONTH","ALIGNED_DAY_OF_WEEK_IN_YEAR","DAY_OF_MONTH","DAY_OF_YEAR","EPOCH_DAY","ALIGNED_WEEK_OF_MONTH","ALIGNED_WEEK_OF_YEAR","MONTH_OF_YEAR","PROLEPTIC_MONTH","YEAR_OF_ERA","YEAR","ERA","NANO_OF_DAY","MICRO_OF_SECOND","MICRO_OF_DAY","MILLI_OF_SECOND","MILLI_OF_DAY","SECOND_OF_MINUTE","SECOND_OF_DAY","MINUTE_OF_HOUR","MINUTE_OF_DAY","HOUR_OF_AMPM","CLOCK_HOUR_OF_AMPM","HOUR_OF_DAY","CLOCK_HOUR_OF_DAY","AMPM_OF_DAY","TemporalQueries","zoneId","ZONE_ID","chronology","CHRONO","precision","PRECISION","zone","ZONE","offset","OFFSET","localDate","LOCAL_DATE","localTime","LOCAL_TIME","TemporalAccessor","query","queryFrom","TemporalQuery","_Enum","createTemporalQuery","queryFromFunction","ExtendedTemporalQuery","_TemporalQuery","DayOfWeek","ENUMS","MONTHS","_TemporalAccessor","ordinal","_ordinal","values","valueOf","dayOfWeek","style","locale","Month","_value","months","newMonthVal","leapYear","FEBRUARY","APRIL","JUNE","SEPTEMBER","NOVEMBER","minLength","maxLength","firstDayOfYear","leap","JANUARY","MARCH","MAY","JULY","AUGUST","OCTOBER","DECEMBER","firstMonthOfQuarter","IsoChronology","INSTANCE","month","PATTERN","Period","years","_years","_months","_days","_assertThisInitialized","ofYears","ofMonths","ofWeeks","weeks","i","unitAmount","YEARS","startDate","endDate","LocalDate","_parse","yearMatch","monthMatch","weekMatch","val","withYears","withMonths","withDays","plusYears","yearsToAdd","plusMonths","monthsToAdd","minusYears","yearsToSubtract","minusMonths","monthsToSubtract","scalar","normalized","totalMonths","toTotalMonths","splitYears","splitMonths","obj","buf","ParsePosition","_index","_errorIndex","getIndex","setIndex","getErrorIndex","setErrorIndex","EnumMap","_map","putAll","otherMap","key","containsKey","hasOwnProperty","undefined","put","set","retainAll","keyList","map","remove","keyName","keySet","clear","ResolverStyle","STRICT","SMART","LENIENT","Temporal","fieldOrUnit","_minusAmount","_minusUnit","_plusUnit","_plusAmount","endTemporal","adjusterOrField","_withAdjuster","_withField","adjuster","ChronoLocalDate","_Temporal","ofEpochDay","toEpochDay","format","formatter","DateTimeFormatter","StringUtil","startsWith","pattern","indexOf","len","charCodeAt","ZoneId","systemDefault","getAvailableZoneIds","ofOffset","prefix","id","rules","isFixedOffset","Instant","EPOCH","ZoneRules","Fixed","instantOrLocalDateTime","offsetOfInstant","offsetOfLocalDateTime","instant","offsetOfEpochMilli","epochMilli","localDateTime","validOffsets","transition","standardOffset","daylightSavings","isDaylightSavings","isValidOffset","nextTransition","previousTransition","transitions","transitionRules","_ZoneRules","_offset","_proto2","SECONDS_CACHE","ID_CACHE","ZoneOffset","_ZoneId","totalSeconds","_validateTotalSeconds","_totalSeconds","_rules","_id","_buildId","absTotalSeconds","absHours","absMinutes","MINUTES_PER_HOUR","absSeconds","MAX_SECONDS","_validate","offsetId","first","ofHoursMinutesSeconds","pos","precededByColon","ch1","ch2","ofHoursMinutes","ofTotalSeconds","ofTotalMinutes","totalMinutes","totalSecs","OFFSET_SECONDS","DateTimeBuilder","fieldValues","chrono","date","time","leapSecond","excessDays","dtb","_addFieldValue","getFieldValue0","old","_putFieldValue0","resolve","resolverStyle","resolverFields","_mergeDate","_mergeTime","_resolveTimeInferZeroes","_resolveInstant","_checkDate","resolveDate","_addObject","val1","val2","ch","ap","hap","nod","cod","lod","sod","mod","los","cos","hod","moh","som","hodVal","mohVal","somVal","nosVal","ofNanoOfDay","ofSecondOfDay","dateOrTime","offsetSecs","atTime","atZone","INSTANT_SECONDS","build","type","DateTimeParseContext","_constructorSelf","_constructorFormatter","_constructorParam","_caseSensitive","_strict","_parsed","Parsed","symbols","_locale","_symbols","_overrideChronology","decimalStyle","_overrideZone","copy","isStrict","setStrict","strict","setLocale","startOptional","push","currentParsed","endOptional","successful","splice","isCaseSensitive","setCaseSensitive","caseSensitive","subSequenceEquals","cs1","offset1","cs2","offset2","toLowerCase","charEquals","charEqualsIgnoreCase","c1","c2","setParsedField","errorPos","successPos","currentParsedFieldValues","setParsedZone","getParsed","toParsed","setParsedLeapSecond","getEffectiveChronology","dateTimeParseContext","cloned","toBuilder","builder","overrideZone","DateTimePrintContext","localeOrFormatter","_temporal","adjust","_optional","getValueQuery","getValue","setDateTime","IsoFields","QUARTER_DAYS","Field","_isIso","_getWeekRangeByLocalDate","wby","_getWeekBasedYear","_getWeekRangeByYear","THURSDAY","WEDNESDAY","isLeapYear","_getWeek","dow0","doy0","dayOfYear","doyThu0","firstMonDoy0","withDayOfYear","week","year","doy","dow","DAY_OF_QUARTER_FIELD","_Field","QUARTER_YEARS","qoy","QUARTER_OF_YEAR","moy","curValue","partialTemporal","yearLong","qoyLong","doq","DAY_OF_QUARTER","max","QUARTER_OF_YEAR_FIELD","_Field2","_proto3","WEEK_OF_WEEK_BASED_YEAR_FIELD","_Field3","_proto4","WEEKS","WEEK_BASED_YEARS","wbyLong","WEEK_BASED_YEAR","dowLong","wowby","WEEK_OF_WEEK_BASED_YEAR","plusWeeks","temp","WEEK_BASED_YEAR_FIELD","_Field4","_proto5","newWby","resolved","Unit","_proto6","added","DecimalStyle","zeroChar","positiveSignChar","negativeSignChar","decimalPointChar","_zeroDigit","_zeroDigitCharCode","_positiveSign","_negativeSign","_decimalSeparator","positiveSign","withPositiveSign","negativeSign","withNegativeSign","zeroDigit","withZeroDigit","decimalSeparator","withDecimalSeparator","convertToDigit","char","convertNumberToI18N","numericText","diff","convertedText","String","fromCharCode","availableLocales","STANDARD","SignStyle","positive","fixedWidth","NORMAL","ALWAYS","EXCEEDS_PAD","NEVER","NOT_NEGATIVE","TextStyle","isStandalone","FULL_STANDALONE","SHORT_STANDALONE","NARROW_STANDALONE","asStandalone","FULL","SHORT","NARROW","asNormal","CharLiteralPrinterParser","literal","_literal","print","context","append","position","CompositePrinterParser","printerParsers","optional","_printerParsers","withOptional","setLength","FractionPrinterParser","minWidth","maxWidth","decimalPoint","fraction","convertToFraction","outputScale","min","substr","effectiveMin","effectiveMax","minEndPos","maxEndPos","total","digit","moveLeft","scale","pow","convertFromFraction","_min","decimal","EXCEED_POINTS","NumberPrinterParser","signStyle","subsequentWidth","_field","_minWidth","_maxWidth","_signStyle","_subsequentWidth","withFixedWidth","withSubsequentWidth","_isFixedWidth","contextValue","_getValue","sign","negative","effMinWidth","effMaxWidth","pass","parseLen","_setValue","ReducedPrinterParser","_NumberPrinterParser","width","baseValue","baseDate","_baseValue","_baseDate","absValue","basePart","isFixedWidth","PATTERNS","OffsetIdPrinterParser","noOffsetText","_checkPattern","bufPos","output","appendChar","noOffsetLen","array","arrayIndex","parseText","required","converted","replace","INSTANCE_ID","PadPrinterParserDecorator","printerParser","padWidth","padChar","_printerParser","_padWidth","_padChar","preLen","insert","endPos","resultPos","SettingsParser","SENSITIVE","INSENSITIVE","PARSER","StringLiteralPrinterParser","ZoneRulesProvider","getRules","ZoneRegion","ofId","ZoneIdPrinterParser","description","nextChar","newContext","nextNextChar","_parsePrefixedOffset","UTC","availableZoneIds","zoneIdTree","size","ZoneIdTree","createTreeMap","maxParseLength","treeMap","parsedZoneId","parseLength","parsedSubZoneId","isLeaf","prefixPos","toUpperCase","sortedZoneIds","sort","ZoneIdTreeMap","add","_treeMap","idLength","subZoneId","subTreeMap","MAX_WIDTH","DateTimeFormatterBuilder","_active","_parent","_padNextWidth","_padNextChar","_valueParserIndex","_of","parent","dtFormatterBuilder","parseCaseSensitive","_appendInternalPrinterParser","parseCaseInsensitive","parseStrict","parseLenient","parseDefaulting","_appendInternal","DefaultingParser","appendValue","_appendValue1","_appendValue2","_appendValue4","_appendValuePrinterParser","pp","appendValueReduced","_appendValueReducedFieldWidthMaxWidthBaseDate","_appendValueReducedFieldWidthMaxWidthBaseValue","activeValueParser","basePP","appendFraction","appendInstant","fractionalDigits","InstantPrinterParser","appendOffsetId","appendOffset","appendZoneId","appendPattern","_parsePattern","appendZoneText","appendText","appendLocalizedOffset","appendWeekField","FIELD_MAP","cur","start","count","pad","padNext","_parseField","zero","appendLiteral","optionalStart","optionalEnd","BASE_DATE","_padNext1","_padNext2","cpp","_toPrinterParser","toFormatter","SECONDS_PER_10000_YEARS","SECONDS_0000_TO_1970","inSecs","inNanos","inSec","inNano","zeroSecs","hi","lo","ldt","LocalDateTime","ofEpochSecond","second","div","minDigits","maxDigits","ISO_LOCAL_DATE","instantSecs","yearParsed","day","hour","secVal","nanoVal","sec","toEpochSecond","StringBuilder","_str","end","_decimalStyle","_resolverStyle","_resolverFields","_chrono","_zone","parsedExcessDays","PARSED_EXCESS_DAYS","parsedLeapSecond","PARSED_LEAP_SECOND","ofPattern","withChronology","withLocale","withResolverStyle","_formatTo","appendable","parse1","parse2","_parseToBuilder","_createError","abbr","_parseUnresolved0","parseUnresolved","MonthDay","dayOfMonth","_month","_day","now","zoneIdOrClock","now0","nowZoneId","nowClock","Clock","systemDefaultZone","system","clock","monthOrNumber","ofMonthNumber","ofNumberNumber","parseString","parseStringFormatter","FROM","monthValue","isValidYear","Year","isLeap","withMonth","withDayOfMonth","atYear","isAfter","isBefore","YearMonth","_year","ofNumberMonth","isSupportedField","isSupportedUnit","DECADES","CENTURIES","MILLENNIA","ERAS","MAX_VALUE","_getProlepticMonth","isValidDay","lengthOfMonth","lengthOfYear","f","withYear","newYear","calcMonths","monthsUntil","atDay","atEndOfMonth","isoYear","parseTextFormatter","isValidMonthDay","monthDay","ofYearDay","atMonth","atMonthMonth","atMonthNumber","atMonthDay","yearsUntil","TemporalAdjuster","TemporalAdjusters","firstDayOfMonth","Impl","FIRST_DAY_OF_MONTH","lastDayOfMonth","LAST_DAY_OF_MONTH","firstDayOfNextMonth","FIRST_DAY_OF_NEXT_MONTH","FIRST_DAY_OF_YEAR","lastDayOfYear","LAST_DAY_OF_YEAR","firstDayOfNextYear","FIRST_DAY_OF_NEXT_YEAR","firstInMonth","DayOfWeekInMonth","lastInMonth","dayOfWeekInMonth","next","RelativeDayOfWeek","nextOrSame","previous","previousOrSame","_TemporalAdjuster","_TemporalAdjuster2","_this2","_dowValue","curDow","dowDiff","daysDiff","_TemporalAdjuster3","relative","_this3","_relative","calDow","prolepticYear","_updateResolveMap","current","prolepticMonth","yoeLong","era","dom","aw","ad","OffsetTime","_time","OffsetDateTime","toOffsetTime","clockOrZone","_now","ofInstant","ofTimeAndOffset","ofNumbers","minute","secsOfDay","epochSecond","ISO_OFFSET_TIME","toNanoOfDay","atDate","_toEpochNano","isEqual","_withLocalTimeOffset","toLocalTime","truncatedTo","nanosUntil","MINUTES","NANOS_PER_MINUTE","HOURS","NANOS_PER_HOUR","HALF_DAYS","withHour","withMinute","withSecond","withNano","withOffsetSameInstant","difference","withOffsetSameLocal","compare","ChronoZonedDateTime","toLocalDate","toInstant","toSecondOfDay","toLocalDateTime","thisEpochSec","otherEpochSec","ZonedDateTime","_ChronoZonedDateTime","_dateTime","of2","of3","of8","ofLocal","dt","preferredOffset","trans","offsetAfter","some","validOffset","ofInstant2","ofInstant3","ofStrict","isGap","ofLenient","zdt","_from","__from","ISO_ZONED_DATE_TIME","_resolveLocal","newDateTime","_resolveOffset","withEarlierOffsetAtOverlap","isOverlap","earlierOffset","offsetBefore","withLaterOffsetAtOverlap","laterOffset","withZoneSameLocal","withZoneSameInstant","withFixedOffsetZone","minusWeeks","toOffsetDateTime","_","ofDateTime","ofDateAndTime","ISO_OFFSET_DATE_TIME","atZoneSameInstant","atZoneSimilarLocal","toZonedDateTime","_withDateTimeOffset","DAYS_PER_CYCLE","DAYS_0000_TO_1970","_ChronoLocalDate","epochDay","adjustCycles","doyEst","yearEst","zeroDay","marchDoy0","marchMonth0","_resolvePreviousValid","_get0","_prolepticMonth","m","newMonth","weeksToAdd","mjDay","weeksToSubtract","p1","p2","until1","until2","daysUntil","_monthsUntil","packed1","packed2","calcDate","atTime1","atTime4","_atTimeOffsetTime","atStartOfDay","_atStartOfDayWithZone","MIDNIGHT","dateTimeAfter","_compareTo0","otherDate","yearValue","dayValue","ChronoLocalDateTime","_ChronoLocalDateTime","_date","_ofEpochMillis","localSecond","localEpochDay","ISO_LOCAL_DATE_TIME","_withDateTime","newDate","newTime","MICROS_PER_DAY","MILLIS_PER_DAY","_plusWithOverflow","totDays","NANOS_PER_DAY","MINUTES_PER_DAY","HOURS_PER_DAY","totNanos","curNoD","newNoD","timeUntil","endTime","atOffset","_hour","_minute","_second","_nanoOfSecond","_nano","secondOfDay","nanoOfDay","ISO_LOCAL_TIME","ham","unitDur","dur","mofd","newMofd","sofd","newSofd","nofd","newNofd","hourValue","minuteValue","secondValue","nanoValue","NANOS_PER_MILLI","systemUTC","ofEpochMilli","ofEpochMicro","epochMicro","ISO_INSTANT","MIN_SECONDS","nval","plusMicros","_plus","microsToAdd","minusMicros","microsToSubtract","_nanosUntil","_microsUntil","toEpochMilli","_secondsUntil","secsDiff","totalMicros","nanosDiff","otherInstant","SystemClock","fixed","fixedInstant","FixedClock","baseClock","OffsetClock","withZone","_Clock","Date","getTime","_Clock2","_instant","_zoneId","_Clock3","_baseClock","ZoneOffsetTransition","_transition","_offsetBefore","_offsetAfter","dateTimeBefore","durationSeconds","d","SystemDefaultZoneRules","offsetInMinutes","getTimezoneOffset","offsetInMinutesBeforePossibleTransition","offsetInMinutesAfterPossibleTransition","_throwNotSupported","SystemDefaultZoneId","ZoneIdFactory","SYSTEM_DEFAULT_ZONE_ID_INSTANCE","isInit","MIN_VALUE","MIN","MAX","NOON","LocalTimeInit","isoWeekOfWeekyear","isoWeekyear","MONDAY","TUESDAY","FRIDAY","SATURDAY","SUNDAY","EPOCH_0","SYSTEM","BASIC_ISO_DATE","ISO_OFFSET_DATE","ISO_ORDINAL_DATE","ISO_WEEK_DATE","ISO_DATE","ISO_TIME","ISO_DATE_TIME","ToNativeJsConverter","zonedDateTime","toDate","convert","nativeJs","jsJoda","used","jsJodaExports","use","fn","MomentZoneRules","TZDB_DATA","TZDB_VERSION","tzdbInfo","_tzdbInfo","_ldtUntils","LDTUntils","untils","offsets","mid","binarySearch","_offsetByIndexInSeconds","info","_offsetInfo","ldtBinarySearch","offsetIndex","ldtBefore","ldtAfter","offsetInSeconds","notSupported","o","_tzdbUntils","tzdbOffsets","_tzdbOffsets","_generateTupple","epochMillis","zone1","ldt1","nextIndex","zone2","ldt2","_getTupple","tzdbOffset","charCodeToInt","charCode","unpackBase60","string","parts","split","whole","fractional","out","arrayToInt","mapIndices","source","indices","AVAILABLE_ZONE_IDS","zones","links","MomentZoneRulesProvider","_ZoneRulesProvider","tzdbZoneInfo","getVersion","getTzdbData","loadTzdbData","packedJson","version","_step","_iterator","_createForOfIteratorHelperLoose","done","data","intToUntil","abbrs","population","_step2","_iterator2","link","resolvedZoneId","resolvedTimeZone","Intl","DateTimeFormat","resolvedOptions","timeZone","err","getResolvedZoneId","options","vnodeId","isValidElement","rerenderQueue","prevDebounce","defer","depthSort","CAPTURE_REGEX","eventClock","eventProxy","eventProxyCapture","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","isArray","assign","props","removeNode","node","parentNode","removeChild","createElement","children","ref","normalizedProps","defaultProps","createVNode","original","vnode","__k","__","__b","__e","__c","__v","__i","__u","createRef","Fragment","BaseComponent","getDomSibling","childIndex","sibling","updateParentDomPointers","child","base","enqueueRender","c","__d","process","__r","debounceRendering","component","newVNode","oldVNode","oldDom","commitQueue","refQueue","l","shift","__P","__n","namespaceURI","commitRoot","diffChildren","parentDom","renderResult","newParentVNode","oldParentVNode","globalContext","namespace","excessDomChildren","isHydrating","childVNode","newDom","firstChildDom","oldChildren","newChildrenLength","constructNewChildrenArray","applyRef","nextSibling","skewedIndex","matchingIndex","oldChildrenLength","remainingOldChildren","skew","findMatchingIndex","unmount","parentVNode","contains","insertBefore","nodeType","toChildArray","setStyle","setProperty","test","oldValue","useCapture","cssText","_attached","addEventListener","removeEventListener","removeAttribute","setAttribute","createEventProxy","eventHandler","_dispatched","event","tmp","isNew","oldProps","oldState","snapshot","clearProcessingException","newProps","isClassComponent","provider","componentContext","renderHook","newType","outer","render","contextType","__E","doRender","sub","state","__h","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","cloneNode","then","MODE_HYDRATE","diffElementNodes","diffed","cb","newHtml","oldHtml","newChildren","inputValue","checked","localName","document","createTextNode","createElementNS","is","__m","childNodes","attributes","__html","innerHTML","content","hasRefUnmount","skipRemove","componentWillUnmount","replaceNode","documentElement","firstChild","hydrate","cloneElement","createContext","defaultValue","Context","subs","ctx","Set","_props","delete","Provider","__l","Consumer","errorInfo","ctor","handled","getDerivedStateFromError","setState","componentDidCatch","update","callback","s","forceUpdate","Promise","bind","setTimeout","Prism","_self","lang","uniqueId","plainTextGrammar","manual","disableWorkerMessageHandler","util","encode","tokens","Token","alias","objId","defineProperty","clone","deepClone","visited","v","getLanguage","element","className","parentElement","setLanguage","language","classList","currentScript","src","scripts","getElementsByTagName","isActive","defaultActivation","no","languages","plain","plaintext","txt","extend","redef","inside","before","grammar","ret","token","newToken","DFS","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","querySelectorAll","highlightElement","nodeName","code","textContent","insertHighlightedCode","highlightedCode","hasAttribute","Worker","worker","filename","onmessage","evt","postMessage","JSON","stringify","immediateClose","highlight","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","list","tail","toArray","all","callbacks","matchedStr","matchPattern","lookbehind","lastIndex","match","lookbehindLength","startNode","startPos","rematch","patterns","j","patternObj","greedy","global","flags","currentNode","reach","removeCount","to","p","k","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","tag","classes","aliases","join","close","script","highlightAutomaticallyCallback","readyState","window","requestAnimationFrame","WorkerGlobalScope","self","g","markup","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","css","addInlined","addAttribute","clike","javascript","regex","js","Element","msMatchesSelector","webkitMatchesSelector","EXTENSIONS","STATUS_ATTR","STATUS_LOADING","STATUS_LOADED","SELECTOR","pre","appendChild","getAttribute","extension","autoloader","loadLanguages","success","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","comma","parseRange","lines","statusText","send","loadFile","fileHighlight","logged","console","warn","padding","otherFormats","mainFormat","item","others","main","onZero","nanoseconds","isoDayNumber","<init>","<this>","alternativeFormats","primaryFormat","monthNumber","isoDayOfWeek","actualBuilder","actualFormat","isYearOfEra","receiver","$this$build","$this$alternativeParsing","hourOfAmPm","amPm","nanosecond","zerosToAdd","ifZero","$this$optional","spacePadding","outputPlusOnExceededWidth","accessor","minValue","maxValue","formats","directive","$this","Accessor$getter$ref","Accessor$getter$ref$lambda","Truth$test$ref","Truth$test$ref$lambda","$this_buildList","expectedValue","getter","predicates","formatters","zeroPadding","setter","expected","whatThisExpects","conflicting","multiplyByMinus1","input","initialContainer","startIndex","errors","parseOptions","inputPosition","parserStructure","ix","commands","operations","followedBy","accumulator","iterator","unconditionalModifications","newOperations","currentNumberSpan","unconditionalModificationsForTails","op","simplified","mergedTails","firstOperation","it","withMinus","minNumberLength","maxNumberLength","maxPaddedNumberLength","accumulated","accumulatedWidth","prepadding","<get-whatThisExpects>","consumerLengths","$numberString","$i","$error","consumers","sum","$input","$startIndex","operation","$withMinus","$setter","$name","fractionalPart","digits","q","ab","ae","be","al","ah","bl","bh","w","y1","y2","z","r4","r3c","r3","r2c","r2","r1","abl","abh","bitNo","nextBit","minStringLengthAfterYear","yearEnd","leadingZeros","zoneOffset","DateTimeFormatException_init_$Init$","DateTimeArithmeticException_init_$Init$","IllegalTimeZoneException_init_$Init$","matched","<set-?>","block","structure","intermediate","Accessor$getterNotNull$ref","Accessor$getterNotNull$ref$lambda","plusOnExceedsWidth","parsers","suffix","default","Predicate$test$ref","predicate","Predicate$test$ref$lambda","storage","indexOfNextUnparsed","digitsInRow","$digitsInRow","numberString","newDigits","denominator","epochMilliseconds","epochSeconds","nanosecondAdjustment","newSeconds","newNanos","sanitizedInput","ofZone","thisZdt","unixMillis","acc","rm","remainder","unix","part","totalDays","day0","guess","leapCount","res","v400","r400","v100","r100","v4","delta","milliseconds","mode","isTime","dd","adjusted","index0","gender","index1","<get-chunks>","<get-regexChunks>","matchChunkToRegex","matchDateChunkToRegex","matchTimeChunkToRegex","tzNames","escapedChunk","Timezone_init_$Create$","long","Timezone_init_$Init$","tz","timeZones","answer","<get-deltaTotalMinutesAbs>","low","high","local","$dd","$locale","nlen","opens","closes","millisecond","rgb","addClass","indent","allowClasses","isHolder","isStyledComponent","delimiter","<get-stringDecl>","thisRef","multiRules","resolvedRules","foundRule","log","LN2","O","relativeStart","relativeEnd","finalValue","TypedArray","asUint","searchString","initial","separator","postfix","limit","truncated","transform","buffer","destination","last","minimumValue","maximumValue","dst","interfaces","maxSize","masks","currentSize","imask","iid","iidImask","numberIndex","intArray","numberWithSettledBit","activeBit","capacity","mask","initValue","arr","$array","endIndex","ia","descriptor","proto","obj1","obj2","typeOf","shiftNumber","MASK","bigNumber","signum","chunk","hashCodeMap","symbol","cachedHashCode","instance","constructorFunction","this_","thisNeg","otherNeg","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","b00","numBits","radix","radixLong","rem","digitsPerTime","radixToPower","remDiv","twoPwr32","kind","defaultConstructor","associatedObjectKey","associatedObjects","suspendArity","metadata","endInclusive","paramCount","superType","iface","possibleActiveBit","parentProto","propName","collection","expectedSize","pair","initialCapacity","pairs","destinationOffset","rangeSize","subrange","fromIndex","toIndex","newSize","ArrayList_init_$Init$","rangeCheck","comparator","median","left","right","target","leftIndex","rightIndex","leftValue","rightValue","internalMap","HashMap_init_$Init$","loadFactor","backing","$entryIterator","backingMap","HashSet_init_$Init$","computeHashSize","computeShift","hashSize","checkForComodification","InternalHashMap_init_$Init$","<get-capacity>","<get-hashSize>","registerModification","ensureExtraCapacity","shouldCompact","extraCapacity","spareCapacity","gaps","ensureCapacity","minCapacity","srcLen","dstLen","newHashSize","allocateValuesArray","curValuesArray","newValuesArray","compact","updateHashArray","valuesArray","rehash","putRehash","probesLeft","findKey","addKey","tentativeMaxProbeDistance","probeDistance","putIndex","removeEntryAt","removeHashAt","removedHash","hole","patchAttemptsLeft","putEntry","entry","keysArray","presenceArray","hashArray","maxProbeDistance","LinkedHashMap_init_$Init$","LinkedHashSet_init_$Init$","resultContinuation","completion","$receiver","$completion$1","$completion","Exception_init_$Init$","IllegalArgumentException_init_$Init$","IllegalStateException_init_$Init$","UnsupportedOperationException_init_$Init$","RuntimeException_init_$Init$","NoSuchElementException_init_$Init$","Error_init_$Init$","ConcurrentModificationException_init_$Init$","NullPointerException_init_$Init$","NoWhenBranchMatchedException_init_$Init$","ClassCastException_init_$Init$","jClass","givenSimpleName","isInstanceFunction","classifier","isMarkedNullable","jClasses","kClass","StringBuilder_init_$Init$","uppercase","needle","bottom","top","middle","initMatchesEntirePattern","ignoreCase","chars","prepend","nextPattern","$match","$range","$nextPattern","thisOffset","otherOffset","sourceUnit","targetUnit","sourceCompareTarget","implFindEntry","ArrayDeque_init_$Init$","copyElements","newCapacity","newElements","positiveMod","incremented","decremented","isVarargs","sequence","transformer","calcNext","getInitialValue","getNextValue","sendWhen","removed","interceptor","baseKey","safeCast","entries","step","initialValue","seed","seed1","seed2","addend","variance","thisUpper","otherUpper","line","firstChar","limitForMaxRadix","limitBeforeMul","sb","charAtIndex","getNextMatch","rawValue","<get-value>","isInNanos","isInMillis","normalValue","unitDiscriminator","addValuesMixedRanges","thisMillis","otherNanos","otherMillis","resultMillis","otherNanoRemainder","compareBits","<get-storageUnit>","hasDays","hasHours","hasMinutes","hasSeconds","components","fractionalSize","isoZeroes","fracString","nonZeroDigits","normalMillis","normalNanos","initializer","exception","that","CancellationException_init_$Init$","IndexOutOfBoundsException_init_$Init$","ArithmeticException_init_$Init$","AssertionError_init_$Init$","NumberFormatException_init_$Init$","UninitializedPropertyAccessException_init_$Init$","approx","approxDouble","approx2","log2","approxRes","approxRem","bitCount","modified","iter","insertionRangeCheck","increaseLength","findValue","putAllEntries","updated","contentEquals","currentResult","currentException","outcome","intercepted","classifierName","args","nullable","arity","$arity","stringCsq","lastStart","foundMatch","advanceToNextCharacter","code1","code2","oldCapacity","otherIterator","ourValue","internalLastIndex","internalIndex","decrementedInternalIndex","decrementedHead","copyCollectionElements","oldElement","reference","dest","collectionSize","newLeft","containsAll","t","v0","rangeStart","rangeEnd","_delimiterLength","_delimiterStartIndex","idx","firstIndex","option","resultSize","comparison","$comparator","wrappedCompletion","mutable","lambda","delimiters","currentOffset","isLimited","$delimitersList","$ignoreCase","$this$DelimitedRangesSequence","currentIndex","strings","single","newIndent","minCommonIndent","$indent","valueInNs","maxNsInUnit","suppressed","event1","event2","event3","event4","expect","trace","parentContext","initParentJob","active","handler","<get-parentHandle>","isReusable","callSegmentOnCancellation","segment","installParentHandle","handle","multipleHandlersError","dispatchResume","tryResume","delegate","undispatched","dispatcher","eventLoop","resumedState","proposedUpdate","resumeMode","onCancellation","idempotent","alreadyResumedError","detachChildIfNonReusable","cancelHandler","idempotentResume","cancelCause","continuation","reportException","originalException","thrownException","unconfined","invokeImmediately","JobNode$invoke$ref","JobNode$invoke$ref$lambda","<set-exceptionsHolder>","<get-exceptionsHolder>","allocateList","finalizeFinishingState","wasCancelling","proposedException","exceptions","finalCause","getFinalRootCause","addSuppressedExceptions","rootCause","seenExceptions","unwrappedCause","unwrapped","finalException","finalState","completeStateFinalization","notifyCancelling","cancelParent","isCancellation","promoteEmptyToNodeList","promoteSingleToNodeList","createCauseException","getOrPromoteCancellingList","tryMakeCancelling","cancelling","tryMakeCompleting","tryMakeCompletingSlowPath","notifyRootCause","finishing","anotherChild","tryFinalizeSimpleState","tryWaitForChild","stateString","isCompleting","childJob","handlesException","parentJob","$value","$action","$collector","$fromDownstream","runnable","job","timeMillis","forbiddenElementsBitmask","fatalCompletion","takenState","cancelLater","dispatched","trySuspend","cancellationCause","invokeOnCancellationImpl","dc","cont","actualCompletion","task","queue","eh","continueCompleting","lastChild","waitChild","waitChildAgain","startInternal","onCancelling","cancelMakeCompleting","makeCancelling","causeExceptionCache","causeException","addedBeforeCompletion","latestState","immediate","yieldContext","collector","coroutineContext","fromDownstream","reason","timeout","$continuation","permissionsBitmask","forbiddenElementsBit","cancellable","action","combined","coroutine","encoder","trueValue","falseValue","valuesMap","switchToMutable","initialValues","consumer","realValue","initialAttributes","inlineTag","emptyTag","attributeName","new","createContent","PrismJsDefinition","Component","launch","PrismJsInternals","loadStyle","href","integrity","crossOrigin","referrerPolicy","rel","loadStyle$default","loadJava","load","loadJson","loadJson5","loadJsonp","loadKotlin","loadLess","loadPhp","loadRegex","loadRuby","loadRust","loadSass","loadScss","loadTypescript","promise","plugin","isLoading","load$default","pluginName","styles","StylesLoader","LanguageLoader","PluginsLoader","PrismPlugin","softWrap","Options","delay","CopyToClipboard","LineNumbers","ShowLanguage","dataset","whiteSpace","OptionsBuilder","Props","disabled","focus","iconFn","semantic","$iconFn","$it","$this$invoke","onClick","hiddenIcon","visibleIcon","$hiddenIcon","$visibleIcon","$type","host","VDom","$builder","$this$render","RouteBase","Match","emptyMap","route","routeParams","queryParams","Static","numParams","toList","Pattern","stopPropagation","cleanup","payload","possibleTargets","payloadType","<get-hostComponentElement>","<get-handleParentElement>","<get-onMouseDown>","<get-onMouseUpOnBody>","<get-onMouseMoveOnBody>","body","scrollPosition","Vector2D","scrollLeft","scrollTop","absolutePosition","offsetX","offsetY","zIndex","overflowX","overflowY","clientY","clientX","$this$lifecycle","$this$css","lazy","accepts","onDrop","onMouseOver","onMouseOut","onDragStart","onDragEnd","backgroundColor","DndDropTargetComponent","TypedKey","settings","stopEvents","FormController$lambda","sendMessage","FormFieldMountedMessage","FormFieldInputChanged","FormFieldUnmountedMessage","emptyList","<set-_value>","<get-_value>","GenericFormField$renderLabel$lambda","$onClick","$this$Label","GenericFormField$renderLabel$lambda$lambda","items","onChange","renderItem","renderAdd","modify","swapWith","keySuffix","<set-reorderCounter>","<get-reorderCounter>","ListFieldComponent$render$lambda","$new","toMutableList","replaceAt","modifier","idx1","idx2","copied","addAt","ListFieldComponent","MessageBase","checkFn","messageFn","uri","matchedRoute","mountedRoute","$this$MountedRoute","MountedRoute","middlewares","view","router","mountedRoutes","enabled","Router$windowListener$ref","ActiveRoute","History","Router$windowListener$ref$lambda","windowListener","preventDefault","<get-current>","<get-currentUri>","scrollTo","StreamDistinctOperator","distinct","StreamMapper","RouterComponent","on","off","$this$getOrDefault","$this$given","$this$checkbox","applyName","GenericFormField","UiCheckBoxComponent","toStr","fromStr","<set-userInput>","<get-userInput>","valueAsString","onInput","elem","userMapped","$this$field","wrap","$this$then","renderField","renderErrors","stringToLocalDateTime$ref$lambda","stringToLocalDateTimeOrNull$ref$lambda","$timezone","stringToZonedDateTime","stringToZonedDateTimeOrNull","stringToDate$ref$lambda","stringToDateOrNull$ref$lambda","stringToLocalTime$ref$lambda","UiInputFieldComponent","UiTextAreaComponent","flow","renderErrors$lambda","$this$label","t1","t2","config","formValue","display","$formValue","<get-ctrl>","<set-selectedOption>","<get-selectedOption>","<set-autoSuggestOptions>","<get-autoSuggestOptions>","<set-search>","<get-search>","<set-isSearchFocused>","<get-isSearchFocused>","onDocumentMouseDown","searchableBy","autoSuggest","renderSearchableField","$options","$this$dropdown","SelectFieldComponent$renderDefaultField$lambda$lambda","$this$text","renderOptions","chooseOption","renderDefaultField","onMouseDown","stopImmediatePropagation","onKeyUp","onFocus","onBlur","flowContent","$this$flowContent","SelectFieldComponent$renderSearchableField$lambda$lambda$lambda","valueDisplay","onSelect","$onSelect","$this$menu","onAnimationEnd","isSelected","$this$stream","StreamDebounceOperator","delayFirstMs","$newSearch","newSearch","SelectFieldComponent$search$delegate$lambda$slambda","SelectFieldComponent$onDocumentMouseDown$ref","SelectFieldComponent$onDocumentMouseDown$ref$lambda","SelectFieldComponent$renderOptions$lambda$lambda","$this$item","blur","FormFieldComponent","SelectFieldController","SelectFieldComponent","$this$style","$this$rightIcon","$this$semantic","$this$wrapFieldWith","$handler","Hook","NextPropsHook","_setDom","$onNext","$first","$configured","LifeCycle","engine","PureComponent","ObservableProperty","stream","FunctionalComponentStateProperty$getValue$slambda$slambda","$this$catch","$thisRef","$property","sender","MessagesHandler","wrapped","mapper","$mapper","$wrapped","StreamWrapperBase","delayMs","StreamWrapper","DebouncingTimer","Ticker$handler$ref","counter","intervalMs","StreamSourceImpl","schedule","$block","timerId","clearTimeout","timeMs","Breakpoints","tablet","desktop","windowSize","displayType","createState","clientWidth","clientHeight","onWindowResize","$this$modify","breakpoints","ResponsiveController$onWindowResize$ref","ResponsiveController$onWindowResize$ref$lambda","$this$launch","asCoroutineDispatcher","SupervisorJob","bounds","getBoundingClientRect","isBlank","toInt","toDouble","zonedDateTimeToYmdHms","debugMode","componentCtx","creatorFn","cls","PreactComponentRef","events","PreactLLC","$this$jsObject","getDom","__ctor","__ctx","__ref","RootElement","mutableListOf","queryIdx","drop","decodeUriComponent","toMap","zip","equalsIdx","Pair","placeholder","encodeUriComponent","Ctx","CurrentDrag","payloadClass","addAll","label","$label","nextProps","cssSelector","querySelector","focusCssSelector","simpleName$factory","ItemCtx","AddCtx","title","location","removePrefix","mounted","RouterMiddlewareContext","redirect","$uri","asSequence","firstOrNull","filterNotNull","Router","KMutableProperty0$set$ref","KMutableProperty0$set$ref$lambda","UiCheckboxField","listOf","setValue","track","applyFormatValue","applyPlaceholder","applyStep","applyType","applyRequired","stringToString$ref$lambda","UiInputField","numberToString$ref$lambda","stringToInt$ref$lambda","$this$UiInputField","stringToFloat$ref$lambda","stringToDouble$ref$lambda","localDateTimeToYmdHms$ref$lambda","timezone","zonedDateTimeToYmdHms$ref$lambda","dateToYmd$ref$lambda","$onChange","timeToHms$ref$lambda","textarea","height","scrollHeight","rendered","suggest","Option","$this$option","currentOption","allOptions","ComponentStateProperty","onNext","$stream","ComponentStreamProperty","newCtx","onNextProps","previousProps","getPropertyKey","initializeJsJodaTimezones","Kraft","$sub","accept","setInterval","clearInterval","h","$allUnsafe","attrs","allUnsafe","joinToString","dangerouslySetInnerHTML","childArr","PreactLLC$Companion$getLowLevelComponentCtor$Impl$<init>$ref$lambda","prevProps","prevState","nextState","ComponentElement","attribute","ContentElement","removeLast","TagElement","PreactVDomEngine","$view","lowLevelRoot","PreactTagConsumer","Access","$field","labelFn","$current","$wrap","responsive","DndDropTargetBuilder","customize","PropsBuilder","GenericRule","$message","compareWith","$compareWith","FormController","$title","RouterBuilder","configure","Config","UiCheckboxFieldRenderer","UiDateFieldRenderer","UiDateTimeFieldRenderer","UiInputFieldRenderer","UiPasswordFieldRenderer","UiTimeFieldRenderer","func","$func","FuncComp2","FuncComp0","FuncComp1","Ticker","percent","$percent","$this$A","$this$header","percentLabel","todoLabel","example","ContentAndCode","direction","$this$PrismKotlin","$this$grid","$this$column","trimIndent","url","$url","$this$message","kotlin","$kotlin","$html","$this$segment","$this$Img","$this$PrismHtml","$this$divider","$this$listOf","PropRenderer","draft","properties","$properties","$state","$draft","$this$Table","renderCell","$prop","$obj","$this$list","$this$router","routes","mount","$this$catchAll","NotFoundPage","$this$PreactVDomEngine","App","Routes","ResponsiveController","$this$H1","readTheFomanticUiDocs","$this$H2","renderColumns","renderRows","renderGutters","renderNegativeMargins","renderPageGrids","renderAutomaticFlow","renderColumnContent","renderColumnWidths","renderRowGrouping","renderRowClearingContent","renderRowSpecialGrids","renderNestingGrids","renderColored","renderAutomaticColumnCount","renderCenteringContent","renderResponsiveContainers","renderResponsiveStackable","renderResponsiveReverseOrder","renderResponsiveDoubling","renderResponsiveManualTweaks","$this$example","HorizontalContentAndCode","$this$H3","$this$HorizontalContentAndCode","$this$with","$this$row","$this$button","Color","VerticalContentAndCode","$this$VerticalContentAndCode","$this$container","renderListMessage","renderIconMessage","renderHiddenState","renderVisibleState","renderCenterAligned","renderRightAligned","renderFloating","renderCompact","renderAttached","renderWarning","renderInfo","renderPositiveOrSuccess","renderNegativeOrError","renderSize","$this$Ul","$this$content","mediaParagraphWireFrame","renderDefinition","renderStructured","renderPositiveOrNegative","renderError","renderActive","renderDisabled","renderColoredCells","renderMarked","$this$H4","<set-buttonState>","<get-buttonState>","renderStandardButton","renderTertiaryButton","renderBasicButton","renderStatesOfButton","renderAnimatedButton","renderIconButton","renderLabeledButton","renderInvertedButton","renderButtonGroup","renderSocialButtons","renderSizedButtons","renderFloatedButtons","renderFluidButtons","renderCompactButtons","renderCircularButtons","$this$buttons","renderVertical","renderHorizontal","renderHorizontalAlignment","renderInverted","renderFitted","renderHidden","renderSection","renderClearing","shortParagraphWireFrame","FlagExamples","FlagSearch","$this$form","search$factory","FlagSearch$render$lambda$lambda$lambda","<get-filtered>","<set-size>","<get-size>","renderCustomHeaders","renderIconHeaders","renderSubHeaders","renderImageHeaders","renderIconContentHeaders","renderSubHeaderContentHeaders","renderDisabledHeaders","renderDividingHeaders","renderBlockHeaders","renderAttachedHeaders","renderFloatingHeaders","renderTextAlignmentHeaders","renderColoredHeaders","renderInvertedHeaders","$this$H5","$this$H6","$this$I","IconExamples","IconSearch","IconSearch$render$lambda$lambda$lambda","renderLinkImage","renderHiddenImage","renderDisabledImage","renderAvatarImage","renderBorderedImage","renderFluidImage","renderRoundedImage","renderCircularImage","renderVerticalAlignmentImage","renderCenteredImage","renderSpacedImage","renderFloatedImage","renderSizedGroupsOfImages","$this$images","renderImageLabel","renderPointingLabel","renderCornerLabel","renderTagLabel","renderRibbonLabel","renderAttachedLabel","renderHorizontalLabel","renderFloatingLabel","renderDetailContentLabel","renderIconContentLabel","renderImageContentLabel","renderLinkContentLabel","renderCircularLabel","renderBasicLabel","renderColoredLabel","renderSizedLabel","renderGroupSize","renderColoredGroup","renderBasicGroup","renderTagGroup","renderCircularGroup","renderInvertedVariants","$this$detail","$this$image","$this$labels","renderBulletedList","renderOrderedList","renderLinkList","renderImageContent","renderHeaderContent","renderDescriptionContent","renderHorizontalList","renderInvertedList","renderSelectionList","renderAnimatedList","renderRelaxedList","renderDividedList","renderCelledList","renderSizedList","renderVerticalAlignment","renderFloatedContent","$this$description","$this$Ol","ListPage$renderSizedList$lambda$lambda$lambda","renderTextLoader","renderIntermediateLoader","renderActiveLoader","renderDisabledLoader","renderInlineLoader","renderInlineCenteredLoader","renderSpeedLoader","renderColorsLoader","renderSizedLoader","renderInvertedLoader","renderStylesLoader","$this$dimmer","$this$loader","renderLines","renderHeader","renderImage","renderLineLength","renderFluid","$this$placeholder","$this$paragraph","$this$cards","$this$card","renderMove","renderRotate","renderInstant","$this$reveal","renderPlaceholderSegment","renderRaisedSegment","renderStackedSegment","renderVerticalSegment","renderSegmentsGroup","renderNestedSegments","renderHorizontalSegments","renderHorizontalEqualWidthSegments","renderHorizontalStackableSegments","renderRaisedSegments","renderStackedSegments","renderPiledSegments","renderDisabledSegment","renderLoadingSegment","renderInvertedSegment","renderAttachedSegment","renderPaddedSegment","renderFittedSegment","renderCompactSegment","renderColoredSegment","renderEmphasisSegment","renderCircularSegment","renderClearingSegment","renderFloatedSegment","renderTextAlignmentSegment","renderBasicSegment","$this$inline","$this$search","$this$input","$this$segments","$this$Span","renderDslIntro","kotlinToHtml","DraggableNumberComponent","DropZoneComponent","$this$link","$this$DndDropTarget","greenHighlights","DndDropTarget","texts","<set-data>","<get-data>","ListField","$this$ListField","$this$renderItem","$ctx","UiTextArea","$this_segment","$this$UiTextArea","upRemoveDownButtons","$this$modifier","$this$renderAdd","Data","FormWithPrimitives","FormWithNullablePrimitives","FormWithCheckboxes","FormWithTestArea","FormWithPasswords","FormWithDates","FormWithNullableDates","FormWithDateTimes","FormWithNullableDateTimes","FormWithTimes","FormWithColors","FormWithDisabledFields","boolean","Obj","<set-state>","<get-state>","<set-draft>","<get-draft>","$this$UiCheckboxField","$this$fields","$canSubmit","canSubmit","renderStateAndDraftTable","State","formController","color","nullableColor","$this$nullable","$this$UiDateTimeField","$this$UiDateField","checkbox","select","$this$SelectField","SelectField","nonNull","textInput","intInput","floatInput","doubleInput","greaterThan","lessThan","renderDataTable","password","repeat","reveal","$this$UiPasswordField","equalTo","<set-disableFields>","<get-disableFields>","<get-responsive>","disableFields$factory","$this$leftIcon","notBlank","leftIcon","$this$rightLabel","$this$leftLabel","rightLabel","leftLabel","datetime","$this$UiTimeField","propsComponentsExample","functionalPureComponentsExample","functionalPropsComponentsExample","PureExampleComponent","PropsExampleComponent","KraftComponentsPage","byValueExample","bySubscribingToExample","functionalByValueExample","functionalBySubscribingToExample","CounterComponent","TickerComponent","<set-counter>","<get-counter>","$this$component","$start","FunctionalComponentStateProperty","$counter$delegate","counter$delegate$stub","$stream$delegate","$delay","ticker","FunctionalComponentStreamProperty","renderCardGroup","renderLoadingCards","renderFluidCards","renderCenteredCard","renderHorizontalCards","renderRaisedCards","renderTextAlignment","renderInvertedCards","renderColoredCards","renderColumnCountCards","renderStackableCards","renderDoublingCards","$this$meta","$this$floated","renderAvatar","renderMetadata","renderActions","renderReplyForm","renderCollapsed","renderThreaded","renderMinimal","$this$comments","$this$comment","$this$metadata","$this$actions","renderContentImage","renderContentContent","renderContentHeader","renderContentMetadata","renderContentLink","renderContentDescription","renderContentExtra","renderVariationsStacking","renderVariationsDivided","renderVariationsRelaxed","renderVariationsLinkItem","renderVariationsVerticalAlignment","renderVariationsFloated","renderVariationsInverted","$this$items","$this$extra","renderStatisticGroup","renderContentValue","renderVariationsHorizontal","renderVariationsColored","renderVariationsStackable","renderVariationsEvenlyDivided","renderVariationsSize","$this$statistic","$this$value","$this$statistics","$this$mount","HomePage","KraftGettingStartedPage","KraftComponentBasicsPage","KraftComponentStatePage","FormDemosPage","DragAndDropPage","ListFieldPage","ButtonPage","ContainerPage","DividerPage","EmojiPage","FlagPage","HeaderPage","IconPage","ImagePage","InputPage","LabelPage","ListPage","LoaderPage","PlaceholderPage","RailPage","RevealPage","SegmentPage","StepPage","TextPage","BreadcrumbPage","FormPage","GridPage","MenuPage","MessagePage","TablePage","AdvertisementPage","CardPage","CommentPage","FeedPage","ItemPage","StatisticPage","AppMenu","PageTitle","renderSizes","renderColors","renderFeatures","renderIconGroupsAndCorners","renderSimpleExample","flowOf","getElementById","mountPoint","attributesMapOf","cssClasses","visitNoInline","I","H1","H2","H3","H4","H5","H6","A","DIV","IMG","LABEL","OL","SPAN","TABLE","UL","condition","CssBuilder","SemanticFlag","SemanticIcon","SemanticTag","toMutableMap","TypedAttributes","MpZonedDateTimeRange","maxOf","minOf","MpClosedLocalDateRange","MpLocalDateRange","MpDatePeriod","isoString","dropLast","MpLocalDateTime","MpInstant","parseInternal","MpLocalDate","$days","$years","$months","milliSeconds","setOf","padStart","Random","e1","Tuple2","JsJodaTimeZoneModule","MutableTypedAttributes","$key","produce","$produce","fromHour","toHour","fromTime","toTime","UsingClock","period","formatString","klock","atStartOfDayIn","DateTimeRangeConverter","milliSecond","toIntOrNull","lastPart","getOrNull","tuple","millisPart","padEnd","milliSecondsOfDay","MpLocalTime","MpTimezone","MpZonedDateTime","ts","offsetMillisAt","tzId","words","LoremIpsum$getWordAt$ref","LoremIpsum$getWordAt$ref$lambda","getWordAt","lock","decodeURIComponent","encodeURIComponent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getPrototypeOf","__esModule","ns","getOwnPropertyNames","definition","enumerable","chunkId","keys","reduce","promises","u","Function","needAttach","charset","nc","onScriptComplete","onerror","onload","doneFns","toStringTag","scriptUrl","importScripts","installedChunks","installedChunkData","reject","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","chunkLoadingGlobal"],"sourceRoot":""}