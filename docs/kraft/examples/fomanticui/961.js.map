{"version":3,"file":"961.js","mappings":"iGAAC,WAEA,GAAqB,oBAAVA,OAA6C,oBAAbC,SAA3C,CAIA,IAAIC,EAAY,GACZC,EAAM,CAAC,EACPC,EAAO,WAAa,EAExBJ,MAAMK,QAAQC,QAAU,CAAC,EAgBzB,IAAIC,EAAiBP,MAAMK,QAAQC,QAAQC,eAAiB,SAAUC,EAAKC,GAC1E,IAAIC,EAGHA,EADmB,mBAATD,EACCA,EAEA,SAAUE,GACpB,IAAIC,EAqBJ,MAnB4B,mBAAjBH,EAAKI,UACfD,EAAUX,SAASa,cAAc,WACzBC,KAAO,SACfH,EAAQI,iBAAiB,SAAS,WACjCP,EAAKI,QAAQI,KAAKC,KAAMP,EACzB,KAC8B,iBAAbF,EAAKU,KACtBP,EAAUX,SAASa,cAAc,MACzBM,KAAOX,EAAKU,IAEpBP,EAAUX,SAASa,cAAc,QAG9BL,EAAKY,WACRT,EAAQU,UAAUC,IAAId,EAAKY,WAG5BT,EAAQY,YAAcf,EAAKgB,KAEpBb,CACR,EAGGJ,KAAOL,EACVuB,QAAQC,KAAK,mCAAqCnB,EAAM,yBAIzDN,EAAU0B,KAAKzB,EAAIK,GAAOE,EAC3B,EA4BImB,EAAO7B,MAAMK,QAAQC,QAAQuB,KAAO,SAAUlB,GAEjD,IAAImB,EAAMnB,EAAIC,QAAQmB,WACtB,GAAKD,GAAQ,OAAOE,KAAKF,EAAIG,YAKzBH,EAAIC,WAAWT,UAAUY,SAAS,gBAAtC,CAKA,IAAIC,EAAUlC,SAASa,cAAc,OACrCqB,EAAQb,UAAUC,IAAI,gBACtBO,EAAIC,WAAWK,aAAaD,EAASL,GACrCK,EAAQE,YAAYP,GAGpB,IAAIxB,EAAUL,SAASa,cAAc,OACrCR,EAAQgB,UAAUC,IAAI,WAGtB,IAAIe,EAAmBpC,EACnBqC,EA5CL,SAAkB3B,GACjB,KAAOA,GAAS,CACf,IAAI2B,EAAQ3B,EAAQ4B,aAAa,sBACjC,GAAa,MAATD,EAEH,OADAA,EAAQA,EAAME,QACJC,OACFH,EAAMI,MAAM,YAEZ,GAGT/B,EAAUA,EAAQgC,aACnB,CACD,CA+BaC,CAASlC,EAAIC,SACrB2B,IACHD,EAAmBC,EAAMpC,KAAI,SAAUK,GACtC,OAAOL,EAAIK,IAAQJ,CACpB,KAGDkC,EAAiBQ,SAAQ,SAAUpC,GAClC,IAAIE,EAAUF,EAASC,GAEvB,GAAKC,EAAL,CAIA,IAAImC,EAAO9C,SAASa,cAAc,OAClCiC,EAAKzB,UAAUC,IAAI,gBAEnBwB,EAAKV,YAAYzB,GACjBN,EAAQ+B,YAAYU,EANpB,CAOD,IAGAZ,EAAQE,YAAY/B,EApCpB,CAqCD,EAEAC,EAAe,SAAS,SAAUI,GACjC,IAAImB,EAAMnB,EAAIC,QAAQmB,WACtB,GAAKD,GAAQ,OAAOE,KAAKF,EAAIG,WAIxBH,EAAIkB,aAAa,cAAtB,CAIA,IAAIpC,EAAaqC,EACbxB,EAAOK,EAAIU,aAAa,cAC5B,IAECS,EAAWhD,SAASiD,cAAc,YAAczB,EACjD,CAAE,MAAO0B,GAAgB,CAezB,OAbIF,EACHrC,EAAUqC,EAASG,SAEftB,EAAIkB,aAAa,aACpBpC,EAAUX,SAASa,cAAc,MACzBM,KAAOU,EAAIU,aAAa,YAEhC5B,EAAUX,SAASa,cAAc,QAGlCF,EAAQY,YAAcC,GAGhBb,CAtBP,CAuBD,IAKAZ,MAAMqD,MAAM9B,IAAI,WAAYM,EA7K5B,CA8KD,CAlLA,E","sources":["webpack://fomanticui/../../node_modules/prismjs/plugins/toolbar/prism-toolbar.js"],"sourcesContent":["(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\tvar callbacks = [];\n\tvar map = {};\n\tvar noop = function () {};\n\n\tPrism.plugins.toolbar = {};\n\n\t/**\n\t * @typedef ButtonOptions\n\t * @property {string} text The text displayed.\n\t * @property {string} [url] The URL of the link which will be created.\n\t * @property {Function} [onClick] The event listener for the `click` event of the created button.\n\t * @property {string} [className] The class attribute to include with element.\n\t */\n\n\t/**\n\t * Register a button callback with the toolbar.\n\t *\n\t * @param {string} key\n\t * @param {ButtonOptions|Function} opts\n\t */\n\tvar registerButton = Prism.plugins.toolbar.registerButton = function (key, opts) {\n\t\tvar callback;\n\n\t\tif (typeof opts === 'function') {\n\t\t\tcallback = opts;\n\t\t} else {\n\t\t\tcallback = function (env) {\n\t\t\t\tvar element;\n\n\t\t\t\tif (typeof opts.onClick === 'function') {\n\t\t\t\t\telement = document.createElement('button');\n\t\t\t\t\telement.type = 'button';\n\t\t\t\t\telement.addEventListener('click', function () {\n\t\t\t\t\t\topts.onClick.call(this, env);\n\t\t\t\t\t});\n\t\t\t\t} else if (typeof opts.url === 'string') {\n\t\t\t\t\telement = document.createElement('a');\n\t\t\t\t\telement.href = opts.url;\n\t\t\t\t} else {\n\t\t\t\t\telement = document.createElement('span');\n\t\t\t\t}\n\n\t\t\t\tif (opts.className) {\n\t\t\t\t\telement.classList.add(opts.className);\n\t\t\t\t}\n\n\t\t\t\telement.textContent = opts.text;\n\n\t\t\t\treturn element;\n\t\t\t};\n\t\t}\n\n\t\tif (key in map) {\n\t\t\tconsole.warn('There is a button with the key \"' + key + '\" registered already.');\n\t\t\treturn;\n\t\t}\n\n\t\tcallbacks.push(map[key] = callback);\n\t};\n\n\t/**\n\t * Returns the callback order of the given element.\n\t *\n\t * @param {HTMLElement} element\n\t * @returns {string[] | undefined}\n\t */\n\tfunction getOrder(element) {\n\t\twhile (element) {\n\t\t\tvar order = element.getAttribute('data-toolbar-order');\n\t\t\tif (order != null) {\n\t\t\t\torder = order.trim();\n\t\t\t\tif (order.length) {\n\t\t\t\t\treturn order.split(/\\s*,\\s*/g);\n\t\t\t\t} else {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t}\n\t\t\telement = element.parentElement;\n\t\t}\n\t}\n\n\t/**\n\t * Post-highlight Prism hook callback.\n\t *\n\t * @param env\n\t */\n\tvar hook = Prism.plugins.toolbar.hook = function (env) {\n\t\t// Check if inline or actual code block (credit to line-numbers plugin)\n\t\tvar pre = env.element.parentNode;\n\t\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Autoloader rehighlights, so only do this once.\n\t\tif (pre.parentNode.classList.contains('code-toolbar')) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Create wrapper for <pre> to prevent scrolling toolbar with content\n\t\tvar wrapper = document.createElement('div');\n\t\twrapper.classList.add('code-toolbar');\n\t\tpre.parentNode.insertBefore(wrapper, pre);\n\t\twrapper.appendChild(pre);\n\n\t\t// Setup the toolbar\n\t\tvar toolbar = document.createElement('div');\n\t\ttoolbar.classList.add('toolbar');\n\n\t\t// order callbacks\n\t\tvar elementCallbacks = callbacks;\n\t\tvar order = getOrder(env.element);\n\t\tif (order) {\n\t\t\telementCallbacks = order.map(function (key) {\n\t\t\t\treturn map[key] || noop;\n\t\t\t});\n\t\t}\n\n\t\telementCallbacks.forEach(function (callback) {\n\t\t\tvar element = callback(env);\n\n\t\t\tif (!element) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar item = document.createElement('div');\n\t\t\titem.classList.add('toolbar-item');\n\n\t\t\titem.appendChild(element);\n\t\t\ttoolbar.appendChild(item);\n\t\t});\n\n\t\t// Add our toolbar to the currently created wrapper of <pre> tag\n\t\twrapper.appendChild(toolbar);\n\t};\n\n\tregisterButton('label', function (env) {\n\t\tvar pre = env.element.parentNode;\n\t\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!pre.hasAttribute('data-label')) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar element; var template;\n\t\tvar text = pre.getAttribute('data-label');\n\t\ttry {\n\t\t\t// Any normal text will blow up this selector.\n\t\t\ttemplate = document.querySelector('template#' + text);\n\t\t} catch (e) { /* noop */ }\n\n\t\tif (template) {\n\t\t\telement = template.content;\n\t\t} else {\n\t\t\tif (pre.hasAttribute('data-url')) {\n\t\t\t\telement = document.createElement('a');\n\t\t\t\telement.href = pre.getAttribute('data-url');\n\t\t\t} else {\n\t\t\t\telement = document.createElement('span');\n\t\t\t}\n\n\t\t\telement.textContent = text;\n\t\t}\n\n\t\treturn element;\n\t});\n\n\t/**\n\t * Register the toolbar with Prism.\n\t */\n\tPrism.hooks.add('complete', hook);\n}());\n"],"names":["Prism","document","callbacks","map","noop","plugins","toolbar","registerButton","key","opts","callback","env","element","onClick","createElement","type","addEventListener","call","this","url","href","className","classList","add","textContent","text","console","warn","push","hook","pre","parentNode","test","nodeName","contains","wrapper","insertBefore","appendChild","elementCallbacks","order","getAttribute","trim","length","split","parentElement","getOrder","forEach","item","hasAttribute","template","querySelector","e","content","hooks"],"sourceRoot":""}