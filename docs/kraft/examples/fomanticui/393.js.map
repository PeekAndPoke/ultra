{"version":3,"file":"393.js","mappings":"iGAAC,WAgCA,SAASA,EAA4BC,GACpC,IAAIC,EAAWC,SAASC,cAAc,YACtCF,EAASG,MAAQJ,EAASK,UAG1BJ,EAASK,MAAMC,IAAM,IACrBN,EAASK,MAAME,KAAO,IACtBP,EAASK,MAAMG,SAAW,QAE1BP,SAASQ,KAAKC,YAAYV,GAC1BA,EAASW,QACTX,EAASY,SAET,IACC,IAAIC,EAAaZ,SAASa,YAAY,QACtCC,YAAW,WACNF,EACHd,EAASiB,UAETjB,EAASkB,OAEX,GAAG,EACJ,CAAE,MAAOC,GACRH,YAAW,WACVhB,EAASkB,MAAMC,EAChB,GAAG,EACJ,CAEAjB,SAASQ,KAAKU,YAAYnB,EAC3B,CA3DqB,oBAAVoB,OAA6C,oBAAbnB,WAItCmB,MAAMC,QAAQC,QA4GnBF,MAAMC,QAAQC,QAAQC,eAAe,qBAAqB,SAAUC,GACnE,IAAIC,EAAUD,EAAIC,QAEdC,EA1BL,SAAqBC,GAEpB,IAAID,EAAW,CACd,KAAQ,OACR,aAAc,uBACd,eAAgB,UAChB,eAAgB,KAIjB,IAAK,IAAIE,KAAOF,EAAU,CAGzB,IAFA,IAAIG,EAFQ,gBAEQD,EAChBH,EAAUE,EACPF,IAAYA,EAAQK,aAAaD,IACvCJ,EAAUA,EAAQM,cAEfN,IACHC,EAASE,GAAOH,EAAQO,aAAaH,GAEvC,CACA,OAAOH,CACR,CAKgBO,CAAYR,GAEvBS,EAAWjC,SAASC,cAAc,UACtCgC,EAASC,UAAY,2BACrBD,EAASE,aAAa,OAAQ,UAC9B,IAAIC,EAAWpC,SAASC,cAAc,QAyBtC,OAxBAgC,EAASxB,YAAY2B,GAErBC,EAAS,QAtGV,SAA2Bb,EAAS1B,GACnC0B,EAAQc,iBAAiB,SAAS,YAuCnC,SAA6BxC,GACxByC,UAAUC,UACbD,UAAUC,UAAUC,UAAU3C,EAASK,WAAWuC,KAAK5C,EAASiB,SAAS,WAExElB,EAA4BC,EAC7B,IAEAD,EAA4BC,EAE9B,CA/CE6C,CAAoB7C,EACrB,GACD,CAoGC8C,CAAkBX,EAAU,CAC3B9B,QAAS,WACR,OAAOqB,EAAQqB,WAChB,EACA9B,QAAS,WACRsB,EAAS,gBAETS,GACD,EACA9B,MAAO,WACNqB,EAAS,cAETvB,YAAW,YA5Dd,SAA2BU,GAE1BuB,OAAOC,eAAeC,kBAAkBzB,EACzC,CA0DI0B,CAAkB1B,EACnB,GAAG,GAEHsB,GACD,IAGMb,EAEP,SAASa,IACRhC,YAAW,WAAcuB,EAAS,OAAS,GAAGZ,EAAS,gBACxD,CAGA,SAASY,EAASc,GACjBf,EAASS,YAAcpB,EAAS0B,GAChClB,EAASE,aAAa,kBAAmBgB,EAC1C,CACD,IAvJCC,QAAQC,KAAK,0DAwJf,CA/JA,E","sources":["webpack://fomanticui/../../node_modules/prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard.js"],"sourcesContent":["(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\tif (!Prism.plugins.toolbar) {\n\t\tconsole.warn('Copy to Clipboard plugin loaded before Toolbar plugin.');\n\n\t\treturn;\n\t}\n\n\t/**\n\t * When the given elements is clicked by the user, the given text will be copied to clipboard.\n\t *\n\t * @param {HTMLElement} element\n\t * @param {CopyInfo} copyInfo\n\t *\n\t * @typedef CopyInfo\n\t * @property {() => string} getText\n\t * @property {() => void} success\n\t * @property {(reason: unknown) => void} error\n\t */\n\tfunction registerClipboard(element, copyInfo) {\n\t\telement.addEventListener('click', function () {\n\t\t\tcopyTextToClipboard(copyInfo);\n\t\t});\n\t}\n\n\t// https://stackoverflow.com/a/30810322/7595472\n\n\t/** @param {CopyInfo} copyInfo */\n\tfunction fallbackCopyTextToClipboard(copyInfo) {\n\t\tvar textArea = document.createElement('textarea');\n\t\ttextArea.value = copyInfo.getText();\n\n\t\t// Avoid scrolling to bottom\n\t\ttextArea.style.top = '0';\n\t\ttextArea.style.left = '0';\n\t\ttextArea.style.position = 'fixed';\n\n\t\tdocument.body.appendChild(textArea);\n\t\ttextArea.focus();\n\t\ttextArea.select();\n\n\t\ttry {\n\t\t\tvar successful = document.execCommand('copy');\n\t\t\tsetTimeout(function () {\n\t\t\t\tif (successful) {\n\t\t\t\t\tcopyInfo.success();\n\t\t\t\t} else {\n\t\t\t\t\tcopyInfo.error();\n\t\t\t\t}\n\t\t\t}, 1);\n\t\t} catch (err) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tcopyInfo.error(err);\n\t\t\t}, 1);\n\t\t}\n\n\t\tdocument.body.removeChild(textArea);\n\t}\n\t/** @param {CopyInfo} copyInfo */\n\tfunction copyTextToClipboard(copyInfo) {\n\t\tif (navigator.clipboard) {\n\t\t\tnavigator.clipboard.writeText(copyInfo.getText()).then(copyInfo.success, function () {\n\t\t\t\t// try the fallback in case `writeText` didn't work\n\t\t\t\tfallbackCopyTextToClipboard(copyInfo);\n\t\t\t});\n\t\t} else {\n\t\t\tfallbackCopyTextToClipboard(copyInfo);\n\t\t}\n\t}\n\n\t/**\n\t * Selects the text content of the given element.\n\t *\n\t * @param {Element} element\n\t */\n\tfunction selectElementText(element) {\n\t\t// https://stackoverflow.com/a/20079910/7595472\n\t\twindow.getSelection().selectAllChildren(element);\n\t}\n\n\t/**\n\t * Traverses up the DOM tree to find data attributes that override the default plugin settings.\n\t *\n\t * @param {Element} startElement An element to start from.\n\t * @returns {Settings} The plugin settings.\n\t * @typedef {Record<\"copy\" | \"copy-error\" | \"copy-success\" | \"copy-timeout\", string | number>} Settings\n\t */\n\tfunction getSettings(startElement) {\n\t\t/** @type {Settings} */\n\t\tvar settings = {\n\t\t\t'copy': 'Copy',\n\t\t\t'copy-error': 'Press Ctrl+C to copy',\n\t\t\t'copy-success': 'Copied!',\n\t\t\t'copy-timeout': 5000\n\t\t};\n\n\t\tvar prefix = 'data-prismjs-';\n\t\tfor (var key in settings) {\n\t\t\tvar attr = prefix + key;\n\t\t\tvar element = startElement;\n\t\t\twhile (element && !element.hasAttribute(attr)) {\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\tif (element) {\n\t\t\t\tsettings[key] = element.getAttribute(attr);\n\t\t\t}\n\t\t}\n\t\treturn settings;\n\t}\n\n\tPrism.plugins.toolbar.registerButton('copy-to-clipboard', function (env) {\n\t\tvar element = env.element;\n\n\t\tvar settings = getSettings(element);\n\n\t\tvar linkCopy = document.createElement('button');\n\t\tlinkCopy.className = 'copy-to-clipboard-button';\n\t\tlinkCopy.setAttribute('type', 'button');\n\t\tvar linkSpan = document.createElement('span');\n\t\tlinkCopy.appendChild(linkSpan);\n\n\t\tsetState('copy');\n\n\t\tregisterClipboard(linkCopy, {\n\t\t\tgetText: function () {\n\t\t\t\treturn element.textContent;\n\t\t\t},\n\t\t\tsuccess: function () {\n\t\t\t\tsetState('copy-success');\n\n\t\t\t\tresetText();\n\t\t\t},\n\t\t\terror: function () {\n\t\t\t\tsetState('copy-error');\n\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tselectElementText(element);\n\t\t\t\t}, 1);\n\n\t\t\t\tresetText();\n\t\t\t}\n\t\t});\n\n\t\treturn linkCopy;\n\n\t\tfunction resetText() {\n\t\t\tsetTimeout(function () { setState('copy'); }, settings['copy-timeout']);\n\t\t}\n\n\t\t/** @param {\"copy\" | \"copy-error\" | \"copy-success\"} state */\n\t\tfunction setState(state) {\n\t\t\tlinkSpan.textContent = settings[state];\n\t\t\tlinkCopy.setAttribute('data-copy-state', state);\n\t\t}\n\t});\n}());\n"],"names":["fallbackCopyTextToClipboard","copyInfo","textArea","document","createElement","value","getText","style","top","left","position","body","appendChild","focus","select","successful","execCommand","setTimeout","success","error","err","removeChild","Prism","plugins","toolbar","registerButton","env","element","settings","startElement","key","attr","hasAttribute","parentElement","getAttribute","getSettings","linkCopy","className","setAttribute","linkSpan","setState","addEventListener","navigator","clipboard","writeText","then","copyTextToClipboard","registerClipboard","textContent","resetText","window","getSelection","selectAllChildren","selectElementText","state","console","warn"],"sourceRoot":""}